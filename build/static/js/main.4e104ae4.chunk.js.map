{"version":3,"sources":["Components/Images/logo.svg","Components/Images/google-play-badge.png","Components/Images/logo300.svg","Themes/SigninPageStyles.js","Components/copyright.js","Pages/signin.js","Themes/SignupPageStyles.js","Pages/signup.js","Pages/ForgotPassword.js","Auth.js","Pages/otpverification.js","Pages/UserInfo.js","Themes/MainHomeStyles.js","Components/EventShareDialog.js","Components/AboutEventPanel.js","Components/EventTimeLinePanel.js","Components/EventsAnnouncementsPanel.js","Components/ChatMessage.js","AuthContext.js","Components/ChatTextField.js","Components/EventsChatPanel.js","Components/EventsDialog.js","EventsContext.js","Components/NotficationsDialog.js","Pages/NavigationBar.js","ActiveEventsContext.js","Pages/Layout.js","Pages/CalenderPanel.js","Components/EventReportDialog.js","Components/EventCard.js","Components/SortLeftPanel.js","Components/MobileSortPanel.js","Components/ImageDialog.js","Components/GridListEvents.js","Components/FeedBackDialog.js","Pages/EventsTabpanel.js","Components/ProfileEventCard.js","Components/ProfilePostedEventsTabPanel.js","Components/ProfileAboutDataBox.js","Components/ProfileAboutTabPanel.js","Components/MainProfileCard.js","Components/UpdateInfoTabPanel.js","Components/UpdatePasswordTabPanel.js","Components/UpdateProfileDialog.js","Pages/ProfileTabpanel.js","Components/EventPostDetails1.js","Components/EventPostDetails2.js","Components/AddFieldDialog.js","Components/EventPostDetails3.js","Pages/EventPostForm.js","Components/EventDetailsNavigationBar.js","Components/AddAnnouncementForm.js","Components/SendEmailForm.js","Components/DashboardPanel.js","Components/EventDetailsChatPanel.js","Pages/EventEdit.js","Pages/EventDetails.js","Pages/EventRegistrationform.js","Pages/ExplorePanel.js","Pages/UnregisteredPage.js","App.js","NetworkDetector.js","Components/theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","height","wrapper","margin","spacing","position","paperRight","flexDirection","alignItems","backgroundColor","palette","secondary","main","padding","paddingBottom","borderRadius","breakpoints","down","paperLeft","up","paperimage","avatar","marginTop","primary","form","width","submit","iPhoneImage","title","fontFamily","color","dark","fontWeight","hidden","image","maxHeight","maxWidth","Copyright","Typography","variant","align","Link","href","Date","getFullYear","Alert","props","elevation","withRouter","history","classes","React","useState","open","vertical","horizontal","message","type","autoHide","state","setState","loading","setLoading","token","setToken","isUserVerified","setIsUserVerified","email","setEmail","abortController","AbortController","handleClose","event","reason","a","localStorage","setItem","eventId","getItem","abort","push","FormData","payload2","data2","JSON","stringify","fetch","process","signal","headers","method","body","then","result","json","res","error","preventDefault","target","elements","password","payload","value","data","response","status","isVerified","useremail","to","Grid","container","component","className","CssBaseline","Snackbar","anchorOrigin","autoHideDuration","onClose","key","severity","item","xs","sm","md","Box","justifyContent","m","p","src","PhoneImage","alt","rel","GoogleBadge","Avatar","onSubmit","TextField","name","required","fullWidth","id","label","autoComplete","autoFocus","Button","disabled","CircularProgress","size","paper","closeButton","right","top","nameError","setNameError","usernameError","setUserNameError","signupButtonDisabled","setSignupButtonDisabled","replace","fullName","username","terms","checked","val","tok","Container","inputProps","pattern","onInvalid","helperText","onInput","onChange","FormControlLabel","control","Checkbox","justify","mt","otp","setOtp","setPassword","loading2","setLoading2","console","log","nPassword","e","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","useEffect","Provider","textArea","imageUrl","setImageurl","setImage","colleges","setColleges","gender","designation","collegeId","bio","college_id","append","accept","files","url","URL","createObjectURL","style","Badge","overlap","badgeContent","htmlFor","IconButton","aria-label","sizes","multiline","rows","placeholder","FormControl","InputLabel","Select","native","map","coll","index","_id","outline","marginBottom","flexGrow","background","grow","mobileTitle","titleButton","mobileTitleButton","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","borderBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","tabs","mobiletab","tabPanel","flex_section","flex_col_scroll","overflow","rpaper","textAlign","text","light","postButton","EventShareDialog","useTheme","setTitle","copyToClipBoard","copyMe","navigator","clipboard","writeText","Dialog","PaperProps","boxShadow","aria-labelledby","DialogTitle","DialogContent","onClick","DialogActions","alignContent","media","buttonDiv","button","large","tab","AboutEventPanel","other","tags","timeLabel","setTimeLabel","calculateTimeLeft","difference","registration_end_time","timeLeft","start_time","finish_time","days","Math","floor","hours","minutes","seconds","setTimeLeft","x","setTimeout","getTimeLabel","cleanup","clearTimeout","timerComponents","Object","keys","forEach","interval","role","lg","poster_url","description","length","Chip","event_type","fee_type","event_mode","Array","join","secondaryTail","startDate","endDate","regEndDate","Timeline","TimelineItem","TimelineOppositeContent","toDateString","toLocaleTimeString","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","timiline","root3","root5","CustomizedTimeline","announcements","setAnnouncements","date","time","root2","whiteSpace","pos","inline","ChatMessage","userType","setUserType","adminId","ListItem","ListItemAvatar","ListItemText","Fragment","user_name","componentDecorator","decoratedHref","decoratedText","timeStyle","bottomBar","bottom","left","close","JustifyContent","sendButtonDisabled","setSendButtonDisabled","newmessage","setNewMessage","cl","setCl","undefined","clsx","rowsMax","onKeyUp","keyCode","shiftKey","handleSend","sendIcon","textDecorationColor","minWidth","root6","topBar","root4","progress","user","useContext","dialogOpen","setDialogOpen","reference","setReferenece","chatMessages","setChatMessages","counterDate","webSocket","setWebSocket","webConnect","ws","WebSocket","onopen","onmessage","mes","parse","cMes","msg","event_id","onclose","check","scrollIntoView","behavior","readyState","Fade","in","unmountOnExit","List","currentDate","messageDate","user_id","userName","user_pic","float","clear","ref","el","d","send","action","now","profile_pic","toISOString","a11yProps","icons","bottomTags","dialog","minHeight","field","dialogContent","EventsDialog","t","setValue","shareDialogOpen","setShareDialogOpen","scroll","aria-describedby","fontSize","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","dividers","registered","regMode","reg_mode","handleReg","reg_link","textDecoration","EventsContext","FormDialog","notificationms","setNotifications","Divider","n","anchorEl","setAnchorEl","darkThemeSelected","setDarkThemeSelected","searchedEvent","setSearchedEvent","notificationsCount","setNotificationCount","isMenuOpen","Boolean","setOpen","notificationsOpen","setNotificationsOpen","allEvents","tabIndex","parseInt","handleChange","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","Switch","window","location","reload","removeItem","handleeventClick","handleHomeClick","handleProfileClick","handleExploreClick","handleTitleButtonClick","AppBar","Toolbar","Logo","noWrap","Autocomplete","freeSolo","options","getOptionLabel","option","renderInput","params","square","icon","edge","aria-controls","aria-haspopup","currentTarget","ActiveEventsContext","backdrop","zIndex","drawer","Layout","setAllEvents","activeEvents","setActiveEvents","authorized","setAuthorized","userDetailsDone","setUserDetailsDone","college_name","sort","b","filter","Backdrop","subRpaper","fab","sideList","CalenderPanel","events","setEvents","selectedEvent","setSelectedEvent","registeredEvents","setRegisteredEvents","y","start","end","handlePostButtonClick","handleRegisterdEventClick","eventBackgroundColor","eventBorderColor","eventClick","info","defaultView","plugins","dayGridPlugin","buttonIcons","Fab","EventReportDialog","desc","setDesc","morePopup","Eventcard","anchorRef","useRef","imageLoaded","setImageLoaded","reportDialogOpen","setReportDialogOpen","current","contains","handleListKeyDown","prevOpen","handleReportClick","handleShareClick","focus","Card","CardHeader","onLoad","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","subheader","CardContent","CardActions","disableSpacing","click","filterTextField","filterButton","SortLeftPanel","handleModeToggle","currentIndex","modeChecked","indexOf","newChecked","splice","setModeChecked","handleFeeToggle","feeChecked","setFeeChecked","utils","DateFnsUtils","DatePicker","format","sortStartDate","handleSortDateChange","sortEndDate","handleEndSortDateChange","paddingTop","labelId","dense","ListItemIcon","disableRipple","RadioGroup","defaultValue","handleSortCollegeChange","Radio","handleSortApplyButton","handlesortDiscardButton","MobileSortPanel","KeyboardButtonProps","collegeName","ImageDialog","flexWrap","gridList","transform","titleBar","img","GridListEvents","collegeEvents","handleMoreButtonClick","GridList","cols","GridListTile","GridListTileBar","actionIcon","leftSubPaper","mobileFilterButton","skeleton","feedBackButton","imageDialogOpen","setImageDialogOpen","setSortStartDate","setSortEndDate","sortCollegeType","setSortCollegeType","sortedEventsArray","setSortedEventsArray","isFiltered","setIsFiltered","feeSortChecked","setFeeSortChecked","modeSortChecked","setModeSortChecked","filterDialogOpen","setFilterDialogOpen","selectedImage","setSelectedImage","registerdEvents","feedBackOpen","setFeedBackOpen","handleClick","dateRangeSortedEvents","sortByDateRange","sortByMode","typeSortedEvents","feeSortedEvents","sortByCost","collegeSortedEvents","sortByCollege","sortByDate","dateSortedEvents","date1","date2","sEvents","sortedEvents","sEvent","getTime","tEvents","sDEvents","sevent","getDate","getMonth","includes","college","handleImageDialogOpen","handleRegistrationButton","Skeleton","animation","EventCard","startTime","endTime","eventMode","eventType","regEndTime","registrationEndTime","feeType","feesType","imageDialog","ImgMediaCard","CardMedia","gutterBottom","handleViewClick","pathname","ProfilePostsTabPanel","postedEvents","setSellectedEvent","mode","content","ProfileDataBox","setIcon","editIcon","handleEditButton","ProfileAboutDataBox","ProfilePostedEventsTabPanel","UpdateInfoTabPanel","setName","setUserName","setBio","setGender","setDesignation","setCollegeName","setCollegeId","collegesName","setCollegesName","imageUpdated","setImageUpdated","v","collegesNames","c","UpdatePasswordTabPanel","cPassword","setCPassword","setNPassword","UpdateProfile","accordion","EventsTabPanel","eOpen","setEOpen","ActiveEvents","UpdateProfileDialog","buttons","AddressForm","startDateError","setStartDateError","endDateError","setEndDateError","regEndDateError","setRegEndDateError","handleNext","DateTimePicker","minDate","setStartDate","setEndDate","setRegEndDate","setEventMode","setEventType","registrationMode","setSteps","steps","setRegistrationMode","FormLabel","setFeeType","imageName","setImageName","setAbout","about","multiple","eventThemes","values","setThemes","renderTags","getTagProps","setPoster","fileName","InputProps","endAdornment","InputAdornment","regLink","setRegLink","regFees","setFees","requirements","setRequirements","setParticipantsType","aria-disabled","evemt","setAddressType","setBuilding","building","venueCollege","setVenueCollege","handleBack","setType","selectedOptions","setSelectedOptions","handleAdd","formControl","formgroup","listStyle","chip","fields","selectedFields","setSelectedFields","sName","setFields","handlePost","addingField","fName","FormGroup","onDelete","chipToDelete","appBar","layout","stepper","Checkout","activeStep","setActiveStep","eventName","setEventName","shortDesc","setShortDesc","setendDate","fees","setEventThemes","selectedrequirements","setSelectedRequirements","addressType","setBuildingAdress","organizer","setOrganizer","participantsType","platformDetails","setPlatformDetails","handleEventPost","allFields","oAllowed","fee","venue_type","venue","reg_fields","o_allowed","platform_details","setRegFields","f","handlePostwithoutregFileds","goBack","Stepper","Step","StepLabel","step","eventPoster","Error","getStepContent","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","toolbar","mixins","MiniDrawer","setUser","handleSignout","dOpen","setDOpen","AnnouncementForm","visibility","setVisibility","visible_all","SendEmailForm","setContent","emails","buttonsPaper","fixedHeightPaper","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setHeaders","rowValues","setRowValues","selected","setSelected","announcementDialog","setAnnouncementDialog","sendEmailDialog","setSendEmailDialog","firstdata","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","newSelecteds","Email","indeterminate","column","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","textField","setRegFees","setRegMode","participantType","setVenue","eventTypes","venue_college","novalidate","flexShrink","drawerOpen","drawerClose","overflowX","match","setDrawerOpen","setEvent","adminAccess","setAdminAccess","infoSelected","dashBoardSelected","timilineSelected","announcementSelected","settingsSelected","editEventSelected","chatSelected","Drawer","direction","chat","formValues","setFormValues","normalFields","setNormalFields","dropDownFields","setDropDownFields","checkboxFields","setCheckBoxFields","radioFields","setRadioFields","dateFields","setDateFields","longDescFields","setLongDescFields","linkFields","setLinkFields","backDropOpen","setBackDropOpen","checkedValues","setCheckedValues","handleLondDescChange","handleradioChange","class","array","i","ExplorePanel","regEvents","pastEvents","handleEventClick","appbar","UnregisteredPage","DialogContentText","NetworkDetector","ComposedComponent","exact","path","Login","SignUp","ForgotPassword","UserInfo","OTPVer","EventDetails","EventPostForm","ProfileTabPanel","EventRegisterForm","isDisconnected","handleConnectionChange","onLine","webPing","setInterval","clearInterval","catch","this","addEventListener","removeEventListener","Component","darkTheme","createMuiTheme","default","lightTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4e104ae4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.50ff3dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-play-badge.1a0c1f51.png\";","module.exports = __webpack_public_path__ + \"static/media/logo300.a7187bbb.svg\";","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        height: '100vh',\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n      },\n    paperRight: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(0),\n        paddingBottom: theme.spacing(4),\n        borderRadius: 30,\n        height: '80vh',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(0, 1),\n            paddingBottom: theme.spacing(2),\n          },\n    },\n    paperLeft: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(3, 1),\n          },\n          [theme.breakpoints.up('md')]: {\n            height: '80vh',\n          },\n          \n    },\n    paperimage: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(),\n        marginTop: theme.spacing(8),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '90%', \n        margin: theme.spacing(5),\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(2),\n          },\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    iPhoneImage: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n    },\n    title: {\n        \n        fontFamily: 'Gugi',\n        // marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n      },\n      hidden:{\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n      },\n      image: {\n        maxHeight: \"600px\",\n        maxWidth: '600px',\n        [theme.breakpoints.down('sm')]: {\n          display: 'none'\n        },\n      }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n          ellipseapp.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default Copyright;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../Themes/SigninPageStyles'\n// import AppleBadge from '../Components/Images/AppleBadge.png';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n// import iPhone from '../Components/Images/iPhone 11 Pro Max@2x.png';\nimport Copyright from \"../Components/copyright\";\nimport { withRouter, Redirect } from \"react-router\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PhoneImage from '../Components/Images/logo300.svg';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\n\n\n\nconst Signin = ({ history }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [user,setUser] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  const [isUserVerified, setIsUserVerified] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const abortController = new AbortController();\n  \n\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Signedin successfully\") {\n      localStorage.setItem('token', token);\n      if (isUserVerified) {\n        localStorage.setItem('token', token);\n        const eventId = localStorage.getItem('eventid');\n        if (eventId) {\n          abortController.abort()\n          history.push(`/event/${eventId}`)\n        }\n        else {\n          abortController.abort()\n          history.push('/home');\n        }\n\n      }\n      else {\n        try {\n          var data2 = new FormData();\n          const payload2 = {\n            email: email\n          };\n          data2 = JSON.stringify(payload2)\n          fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n            signal: abortController.signal,\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data2\n          }).then((result) => {\n            // console.log(result);\n            result.json().then((res) => {\n              if (res.message === \"success\") {\n                abortController.abort()\n                localStorage.setItem('token', token);\n                history.push('/otpverification')\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Signedin successfully',\n                  type: \"success\",\n                  autoHide: 300\n                });\n              }\n            })\n\n          })\n        } catch (error) {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: error.message,\n            type: \"error\",\n            autoHide: 3000\n          })\n        }\n\n      }\n\n    }\n    setState({ ...state, open: false });\n  };\n  async function handleSignin(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { email, password } = event.target.elements;\n    try {\n      var data = new FormData()\n      const payload = {\n        email: email.value,\n        password: password.value\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/users/login', {\n        signal: abortController.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then((response) => {\n        // console.log(response);\n        if (response.status === 200) {\n          // console.log\n          response.json().then((value) => {\n            setToken(value.token);\n            setIsUserVerified(value.isVerified);\n            setEmail(value.useremail);\n            // setUser(JSON.stringify(value.userDetails));\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Signedin successfully',\n              type: \"success\",\n              autoHide: 200\n            });\n          })\n        }\n        else {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: \"invalid credentials\",\n            type: \"error\", autoHide: 6000\n          })\n        }\n\n      })\n    } catch (error) {\n\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n    }\n  }\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} sm={12} md={7} elevation={6} >\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" m={1} p={1} className={classes.paperLeft}>\n        <img  src={PhoneImage} alt=\"logo\" height=\"500px\" width=\"500px\" className={classes.image}></img>\n          <Typography className={classes.title} component=\"h1\" variant=\"h2\">\n            Ellipse\n          </Typography>\n          <Typography component=\"h1\" variant=\"h6\">\n            Kill time for what matters\n          </Typography><br></br>\n          <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.guna0027.ellipse\" target=\"_blank\">\n          <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n          </a>\n          \n        </Box>\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={5} elevation={6}>\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1} className={classes.paperRight}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={handleSignin}>\n            <TextField\n              name=\"email\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              name=\"password\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <div className={classes.wrapper}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={loading}\n                className={classes.submit}>\n                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign In\"}\n\n              </Button>\n            </div>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"/forgotpassword\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-end\">\n            <Copyright></Copyright>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\nexport default withRouter(Signin);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // backgroundColor: theme.palette.secondary.main,\n      padding: theme.spacing(3),\n      borderRadius: 30,\n  \n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(7),\n      [theme.breakpoints.down('md')]: {\n        top: theme.spacing(12),\n      }\n    }\n  }));\n\n  export default useStyles;","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = ({ history }) => {\n  const classes = useStyles();\n  const [token, setToken] = React.useState(\"\");\n  // const [currentUser, setCurrentUser] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUserNameError] = React.useState(false);\n  const [signupButtonDisabled, setSignupButtonDisabled] = React.useState(false);\n  const handleClose = async (event, reason) => {\n\n    if (message === \"Signedup successfully\") {\n      localStorage.setItem('token', token);\n      history.replace(\"/otpverification\")\n    }\n\n    setState({ ...state, open: false });\n  };\n  async function handleSignUp(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { fullName, email, password, username, terms } = event.target.elements;\n    try {\n      if (terms.checked) {\n        var data = new FormData()\n        const payload = {\n          name: fullName.value,\n          email: email.value,\n          password: password.value,\n          username: username.value\n        };\n        data = JSON.stringify(payload);\n        fetch(process.env.REACT_APP_API_URL + '/api/users/signup', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then((result) => {\n          if (result.status === 200) {\n            result.json().then((val) => {\n              setToken(val.token);\n              var data2 = new FormData();\n              const payload2 = {\n                email: val.useremail\n              };\n              data2 = JSON.stringify(payload2)\n              // console.log(token);\n              const tok = val.token;\n              fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                headers: {\n                  'Authorization': `Bearer ${tok}`,\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n              }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                  if (res.message === \"success\") {\n                    setState({\n                      open: true,\n                      vertical: 'top',\n                      horizontal: 'center',\n                      message: 'Signedup successfully',\n                      type: \"success\",\n                      autoHide: 300\n                    });\n                  }\n                })\n\n              })\n\n            })\n          }\n          else if (result.status === 401) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Email already registered',\n              type: \"error\",\n              autoHide: 3000\n            });\n          }\n        })\n      }\n\n      else {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please agress the terms and condiitons',\n          type: \"error\"\n        });\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleUsernameChange(event) {\n    const username = event.target.value;\n    var data = new FormData();\n    const payload = {\n      username: username\n    };\n    data = JSON.stringify(payload);\n    setUserNameError(false);\n    setSignupButtonDisabled(false)\n    fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((result) => {\n      result.json().then(value => {\n        if (value.message === \"user already exists\") {\n          setUserNameError(true);\n          setSignupButtonDisabled(true);\n        }\n      })\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fullName\"\n                name=\"fullName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                inputProps={{ pattern: \"[a-zA-Z ]+\" }}\n                onInvalid={() => { setNameError(true) }}\n                helperText={nameError && \"Name should only contain alphabet and spaces\"}\n                onInput={() => { setNameError(false) }}\n                error={nameError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"User Name\"\n                onChange={handleUsernameChange}\n                name=\"username\"\n                error={usernameError}\n                helperText={usernameError && \"username already exists\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" name=\"terms\" />}\n                label=\"I accept the terms and conditions\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || signupButtonDisabled}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign Up\"}\n          </Button>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n\n\n","import React from \"react\";\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst ForgotPassword = ({ history }) => {\n  const classes = useStyles();\n  // const token = localStorage.getItem('token');\n  const [email, setEmail] = React.useState(null);\n  const [otp, setOtp] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [loading2, setLoading2] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n\n  async function handlePasswordReset(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/sendverificationemail', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading(false)\n            // history.push('/resetforgotpassword')\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Check your email for OTP and enter below',\n              type: \"success\",\n              autoHide: 2000\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  async function handleForgotPassword(event) {\n    event.preventDefault();\n    setLoading2(true);\n    // const { email,} = event.target.elements;\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email,\n        otp: otp,\n        nPassword: password\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/forgotpassword', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n\n            // history.push('/resetforgotpassword')\n            setLoading2(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Succesfull Login to continue',\n              type: \"success\",\n              autoHide: 300\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading2(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  function handleClose() {\n    if (message === \"Succesfull Login to continue\") {\n      history.replace(\"/\");\n    }\n  }\n\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter your email to receive OTP\n        </Typography>\n        <form className={classes.form} onSubmit={handlePasswordReset}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}>\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send OTP\"}\n          </Button>\n        </form>\n        <form className={classes.form} onSubmit={handleForgotPassword}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"otp\"\n                label=\"OTP\"\n                name=\"otp\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"New Password\"\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading2}\n            className={classes.submit}>\n            {loading2 ? <CircularProgress color=\"primary\" size={24} /> : \"Reset Password\"}\n          </Button>\n\n\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Link href=\"/\" variant=\"body2\">\n              Instead? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(ForgotPassword);\n\n\n","import React, { useEffect, useState } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [token,setToken] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    // function storeUser(user){\n    //   setCurrentUser(user);\n    //   setPending(false)\n    // }\n    // console.log(localStorage.getItem('user'))\n    setCurrentUser(localStorage.getItem('user'));\n    setPending(false);\n\n    // app.auth().onAuthStateChanged((user) => {\n    //   setCurrentUser(user)\n    //   setPending(false)\n    // });\n  }, []);\n  // function add\n\n  if (pending) {\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OTPver = ({ history }) => {\n    const classes = useStyles();\n    // const [token, setToken] = React.useState(\"\");\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide} = state;\n\n    function handleClose() {\n        // console.log(\"message\")\n        if (message === \"verified\") {\n            history.replace(\"/userinfo\")\n        }\n    }\n\n    function handleVerification(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { otp } = event.target.elements;\n        try {\n            var data = new FormData();\n            const payload = {\n                otp: otp.value\n            };\n            // data.append(JSON.stringify(payload));\n            data = JSON.stringify(payload);\n            const token = localStorage.getItem(\"token\");\n            fetch(process.env.REACT_APP_API_URL+'/api/users/verifyotp', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n\n            }\n            ).then((result) => {\n                result.json().then(val => {\n                    // console.log(val.message);\n                    if (val.message === \"verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"verified\",\n                            type: 'success',\n                            autoHide: 300\n                        })\n\n                    }\n                    else if (val.message === \"Not verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"incorrect otp\",\n                            type: 'error',\n                            autoHide: 3000\n                        })\n                    }\n                    else {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Something went wrong try again\",\n                            type: 'error',\n                            autoHide: 3000\n                        })\n                    }\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n\n\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Email Verification\n                </Typography>\n                <form className={classes.form} onSubmit={handleVerification}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"otp\"\n                            label=\"Enter OTP\"\n                            name=\"otp\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(OTPver);\n\n\n","import React from 'react';\nimport Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textArea: {\n        width: theme.spacing(58),\n        margin: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.dark,\n    },\n\n}));\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UserInfo = ({ history }) => {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [currentUser, setCurrentUser] = React.useState(null);\n    const [imageUrl, setImageurl] = React.useState(\"\");\n    const [image, setImage] = React.useState(null);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide } = state;\n    const [colleges,setColleges] = React.useState([]);\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            const eventId = localStorage.getItem('eventid');\n        if(eventId){\n          history.push(`/event/${eventId}`)\n        }\n        else{\n            history.replace(\"/home\")\n        }\n            \n        }\n\n        setState({ ...state, open: false });\n    };\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'GET',\n                }).then(response =>{\n                  // console.log(response);\n                  response.json().then(value =>{\n                    // console.log(value);\n                    setColleges(value);\n                  })\n                })\n      },[token])\n  \n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            // setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            // const fileType = event.target.files[0].type;\n            setImageurl(url);\n            // setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    async function handleSignUp(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { gender, designation, collegeId, bio } = event.target.elements;\n\n        try {\n            var data = new FormData()\n            const payload = {\n                gender: gender.value,\n                designation: designation.value,\n                college_id: collegeId.value,\n                bio: bio.value,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/userdetails', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (image != null) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Welcome\n                </Typography>\n                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    badgeContent={<label htmlFor=\"contained-button-file\">\n                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <EditIcon></EditIcon>\n                        </IconButton>\n                    </label>}>\n                    <Avatar className={classes.avatar} sizes=\"100\" alt=\"\" src={imageUrl}></Avatar>\n                </Badge>\n\n                <form className={classes.form} onSubmit={handleSignUp}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                            // onChange={handleAboutChange}\n                            // value={props.about}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"WorkingProfessional\">Working Professional</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                        \n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Your College</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"College\"\n                                    inputProps={{\n                                        name: 'collegeId',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    {colleges.map((coll,index) =>{\n                                        return <option key={index} value={coll._id}>{coll.name}</option>\n                                    })}\n                                    \n                                    {/* <option value=\"GITAM University\">GITAM University</option>\n                                    <option value=\"SRM University\">SRM University</option> */}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(UserInfo);\n\n\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.5em',\n      height: '0.5em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 1px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: '#ad9d9d',\n      outline: '1px solid slategrey'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n    marginBottom: theme.spacing(5)\n\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n    alignItems: 'center',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  mobileTitle:{\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    \n  },\n  titleButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n    textTransform: 'none'\n  },\n  mobileTitleButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      width: 'fit-content'\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    width: '230px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    borderBottom: 'none',\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  sectionDesktop: {\n    \n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  tabs: {\n    \n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginLeft: theme.spacing(15),\n    },\n  },\n  mobiletab: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  tabPanel: {\n    marginBottom: theme.spacing(3),\n  },\n  flex_section: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    // minHeight: 0\n  },\n  \n  flex_col_scroll: {\n    flexGrow: 1,\n    overflow: 'auto',\n    // minHeight: '100vh'\n  },\n  rpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    margin: theme.spacing(2),\n    // borderRadius: theme.spacing(50)\n  },\n  postButton: {\n    borderRadius: theme.spacing(50)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        setTitle(`https://ellipseapp.com/un/event/${event._id}`)\n    }, [event._id])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { cleanup } from '@testing-library/react';\n\n//Materail imports\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\n// import AuthContext from '../AuthContext';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    }\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    const event = props.event;\n    const tags = event.tags;\n    const [timeLabel, setTimeLabel] = React.useState(\"Registration Ends in\")\n    const calculateTimeLeft = () => {\n\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let timeLeft = {};\n        if (difference < 0) {\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        if (difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const getTimeLabel = () => {\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let label = \"Registration ends in\"\n        if (difference < 0) {\n            label = \"Starts in\"\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            label = \"Ends in\"\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        return label;\n    }\n\n    const [timeLeft, setTimeLeft] = React.useState(calculateTimeLeft());\n\n    React.useEffect(() => {\n        const x = setTimeout(() => {\n            setTimeLabel(getTimeLabel());\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n\n        return () => {\n            cleanup();\n            clearTimeout(x);\n        }\n    });\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach(interval => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span key={interval}>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Grid container component=\"main\">\n                        <Grid item xs={12} sm={12} md={4} lg={4} >\n                            <img style={{ maxWidth: '250px' }} alt=\"event poster\" src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}  ></img>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <Typography>{event.description} This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.</Typography>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }}>{timeLabel}</Typography>\n                            <Typography variant=\"h5\">{timerComponents.length ? timerComponents : <span>Time's up!</span>}</Typography>\n                            {/* <Typography>Starts at {event.start_time}</Typography>\n                        <Typography>Ends at {event.finish_time}</Typography> */}\n                            <div style={{ marginTop: '10px' }}>\n                                <Chip variant=\"outlined\" color=\"inherit\" label={event.event_type}></Chip>\n\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.fee_type}></Chip>\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.event_mode}></Chip>\n                                {tags != null && tags.map(val => {\n                                    return <Chip key={val} style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                })}\n                            </div>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h4\">About</Typography>\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                {[...new Array(5)]\n                                    .map(\n                                        () => `Cras mattis consectetur purus sit amet fermentum. \n                                    Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n                                    Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                                    Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n                                    )\n                                    .join('\\n')}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                        </Grid>\n                        <Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport TimerIcon from '@material-ui/icons/Timer';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  large: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  tab: {\n    flexGrow: 1,\n    // maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const token = localStorage.getItem('token');\n  const event = props.event;\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  \n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Timeline align=\"alternate\">\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {regEndDate.toDateString()}{\" \"+regEndDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              \n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Registration Ends\n                  </Typography>\n                  <Typography>Your oppurtunity to participate came to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {startDate.toDateString()}{\" \"+startDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\" variant=\"outlined\"> \n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Starts\n                  </Typography>\n                  <Typography>Party begins</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n            <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {endDate.toDateString()}{\" \"+endDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector className={classes.secondaryTail} />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Ends\n                  </Typography>\n                  <Typography>Chill,event came to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            {/* <TimelineItem>\n              <TimelineSeparator>\n                <TimelineDot color=\"secondary\">\n                  <RepeatIcon />\n                </TimelineDot>\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Repeat\n            </Typography>\n                  <Typography>Because this is the life you love!</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem> */}\n          </Timeline>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setAnnouncements(value);\n      })\n    })\n  }, [token, event._id])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useEffect } from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { ListItemAvatar } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Linkify from 'react-linkify';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    useEffect(() => {\n        if (props.adminId === message.id) {\n            setUserType('Admin')\n        }\n    }, [props.adminId, message.id])\n\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar style={{ display: 'none' }} ><InfoIcon></InfoIcon></ListItemAvatar>\n            <ListItemText\n                primary={\n                    <React.Fragment>\n                        <Typography component=\"h6\" variant=\"body2\">\n                            {message.user_name}\n                        </Typography>\n\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                            {userType}\n                        </Typography>\n                    </React.Fragment>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" variant=\"body1\" color=\"textPrimary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{color:'red',fontWeight: 'bold'}} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                            {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                        </Typography>\n                        <Box>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                className={classes.date}\n                            >\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </React.Fragment>}\n            />\n        </ListItem>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n \nconst AuthContext = React.createContext(null);\n \nexport default AuthContext;","import React from 'react';\nimport clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        position: 'absolute',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    open: {\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(34),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    close: {\n        // width: '85%',\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(13),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    const [cl, setCl] = React.useState(classes.bottomBar);\n    React.useEffect(() => {\n        if (props.open !== undefined) {\n            setCl(clsx({\n                [classes.open]: props.open,\n                [classes.close]: !props.open,\n            }))\n        }\n        // eslint-disable-next-line\n    }, [props.open])\n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        if (newmessage !== null && newmessage !== \"\") {\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={cl} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport EventShareDialog from './EventShareDialog';\nimport AboutEventPanel from '../Components/AboutEventPanel';\nimport EventsTimeLinePanel from '../Components/EventTimeLinePanel';\nimport EvenstAnnouncementsPanel from '../Components/EventsAnnouncementsPanel';\nimport ChatPanel from '../Components/EventsChatPanel';\nimport { Typography } from '@material-ui/core';\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    }\n}));\n\nfunction EventsDialog(props) {\n    const event = props.event;\n    const t = localStorage.getItem('theme');\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    // const token = localStorage.getItem('token');\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleClose() {\n        props.handleClose();\n\n    }\n\n    function handleRegClick() {\n        props.handleReg(event);\n\n    }\n\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                {event.name}\n                <div className={classes.icons}>\n                    {/* <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                        <MailIcon></MailIcon>\n                    </IconButton> */}\n                    <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <Paper className={classes.root2}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"About\" {...a11yProps(0)} />\n                            <Tab label=\"Schedule\" {...a11yProps(1)} />\n                            <Tab label=\"Announcements\" {...a11yProps(2)} />\n                            <Tab label=\"Chat\" {...a11yProps(3)} />\n\n                        </Tabs>\n                    </Paper>\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent} dividers={true} >\n                <EventShareDialog\n                    event={event}\n                    open={shareDialogOpen}\n                    handleClose={handleShareClose}></EventShareDialog>\n                <AboutEventPanel\n                    value={value}\n                    index={0}\n                    event={props.event}></AboutEventPanel>\n                <EventsTimeLinePanel value={value} index={1} event={props.event}></EventsTimeLinePanel>\n                <EvenstAnnouncementsPanel value={value} index={2} event={props.event}></EvenstAnnouncementsPanel>\n                {value === 3 && (event.registered || event.regMode !== \"form\") && <ChatPanel value={value} index={3} event={props.event}></ChatPanel>}\n                {value === 3 && event.reg_mode === \"form\" && event.registered !== true && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n            </DialogContent>\n            <DialogActions className={classes.action}>\n                <Box className={classes.bottomBar} display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\" hidden={value !== 3}>\n                </Box>\n                <div\n                    role=\"tabpanel\"\n                    hidden={value === 3}>\n                    {value !== 3 && (\n                        <div className={classes.buttonDiv}>\n\n                            {\n                                event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                                    {event.registered ? \"Registered\" : \"Register\"}\n                                </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                                    </Button>\n                            }\n\n                        </div>\n                    )}\n                </div>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default EventsDialog;","import React from 'react';\n \nconst EventsContext = React.createContext(null);\n \nexport default EventsContext;","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// import CardContent from '@material-ui/core/CardContent';\n// import Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root3: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2)\n    },\n    root5:{\n        display: \"flex\",\n            justifyContent: \"flex-end\",\n      },\n      secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n      },\n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [notificationms,setNotifications] = React.useState([]);\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/get_notifications', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value)\n                    setNotifications(value);\n                })\n            }\n        })\n    }, [token])\n\n\n\n    return (\n        <div>\n            <Dialog scroll=\"paper\" open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.dialog }}>\n                <DialogTitle id=\"form-dialog-title\">Notifications</DialogTitle>\n                <Divider></Divider>\n                <DialogContent>\n                {\n                    notificationms.map((n,index)=>{\n                        const date = new Date(n.time)\n                       return <Box m={1} p={1} className={classes.root3}>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Typography className={classes.title}>\n                                {n.title}\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                {n.description}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.root5}>\n                            <Typography variant=\"body2\" >\n                                {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    })\n                }\n                    \n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EventIcon from '@material-ui/icons/Event';\nimport useStyles from '../Themes/MainHomeStyles';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport { Button } from '@material-ui/core';\nimport Logo from '../Components/Images/logo.svg';\n// import DarkLogo from '../Components/Images/dark_theme_logo.png';\n// import LightLogo from '../Components/Images/light_theme_logo.png';\n// import CuboidLogo from '../Components/Images/Cuboid logo.png'\n\n\n\n\n\n\nconst NavigationBar = function ({ history }) {\n\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const t = localStorage.getItem('theme');\n  const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n  // const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n  // const [allEvents, setAllEvents] = React.useState([]);\n  const [searchedEvent, setSearchedEvent] = React.useState([]);\n  const [notificationsCount,setNotificationCount] = React.useState(0);\n\n  const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  // const [calenderValue, setCalenderValue] = useState(new Date());\n  // const [loading, setLoading] = React.useState(false);\n  // const eventypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [open, setOpen] = React.useState(false);\n  const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n  const allEvents = React.useContext(EventsContext);\n  useEffect(() => {\n    if (localStorage.getItem('tabIndex') != null) {\n      const tabIndex = parseInt(localStorage.getItem('tabIndex'));\n      if (tabIndex != null) {\n        setValue(tabIndex);\n      }\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/get_unseen_notifications_count', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        // console.log(data);\n        setNotificationCount(data);\n      })\n    })\n  }, [token])\n\n\n  // function handleMorebuttonClick(event) {\n  //   event.preventDefault();\n  //   // history.push(\"/event/1\")\n  // }\n  function handleSearchChange(event, value) {\n    if (value) {\n      // console.log(value);\n      setSearchedEvent(value);\n      setOpen(true);\n    }\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('tabIndex', newValue);\n  };\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    // setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  \n  if (!token) {\n    history.replace('/');\n  }\n\n  function handleThemeChange(event) {\n    // console.log(event.target.checked);\n    setDarkThemeSelected(event.target.checked);\n    if (event.target.checked) {\n      localStorage.setItem('theme', 'dark');\n      window.location.reload(false);\n    }\n    else {\n      localStorage.setItem('theme', 'light');\n      window.location.reload(false);\n    }\n  }\n\n\n\n  function handleSignout(event) {\n\n    fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then((result) => {\n      result.json().then((data) => {\n        if (data.message === \"success\") {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tabIndex');\n          history.replace(\"/\")\n        }\n      })\n    })\n\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\n      {/* <MenuItem onClick={handleMenuClose}>My account</MenuItem> */}\n      <MenuItem> Dark Theme <Switch\n        checked={darkThemeSelected}\n        onChange={handleThemeChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      /></MenuItem>\n      <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n    </Menu>\n  );\n\n  function handleeventClick(event) {\n    event.preventDefault();\n    history.push(\"/events\")\n    // localStorage.setItem('tabIndex',1);\n  }\n  function handleHomeClick() {\n    history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n  function handleProfileClick() {\n    history.push(\"/profile\")\n  }\n  function handleExploreClick() {\n    history.push(\"/yourevents\")\n  }\n  // function handleChatClick() {\n  //   history.push('/chat')\n  // }\n  const handleClose = () => {\n    setOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  function handleRegistrationButton(event) {\n    setOpen(false);\n    // setSelectedEvent(event);\n    // history.push('/event/register/' + event._id);\n  }\n\n  function handleNotificationClick() {\n    fetch(process.env.REACT_APP_API_URL + '/api/update_notification_status', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(0);\n      })\n    })\n    setNotificationsOpen(true);\n  }\n  function handleTitleButtonClick() {\n    localStorage.setItem('tabIndex', 0)\n    setValue(0)\n    history.push('/home')\n  }\n\n  return (\n    <div className={classes.grow}>\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Toolbar>\n            <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n            <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                options={allEvents}\n                getOptionLabel={(option) => option.name}\n                onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              />\n            </div>\n            <div className={classes.tabs}>\n              <Paper square className={classes.root}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  variant=\"fullWidth\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  aria-label=\"icon\"\n\n                >\n                  <Tab onClick={handleHomeClick} icon={<HomeIcon />} aria-label=\"home\" />\n                  <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                  {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"favorite\" /> */}\n                  <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"person\" />\n                  <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n                </Tabs>\n              </Paper>\n            </div>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                <Badge badgeContent={notificationsCount} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\">\n                <SettingsIcon></SettingsIcon>\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <div className={classes.mobiletab}>\n\n            <Paper square className={classes.root} position=\"sticky\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              // aria-label=\"icon tabs example\"\n              >\n                <Tab onClick={handleHomeClick} icon={< HomeIcon />} aria-label=\"home\" />\n                <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"messages\" /> */}\n                <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"explore\" />\n                <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n              </Tabs>\n            </Paper>\n          </div>\n        </AppBar>\n        <div>\n          {open && <EventsDialog\n            open={open}\n            event={searchedEvent}\n            handleReg={handleRegistrationButton}\n            handleClose={handleClose}>\n          </EventsDialog>}\n          <NotificationsDialog open={notificationsOpen} handleClose={handleClose}></NotificationsDialog>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default withRouter(NavigationBar);\n\n","import React from 'react';\n \nconst ActiveEventsContext = React.createContext(null);\n \nexport default ActiveEventsContext;","import React from 'react';\nimport { Redirect } from 'react-router';\n\n//Material Imports\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Components impoprts\nimport NavigationBar from './NavigationBar';\nimport EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n// import dot from 'dote'\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    root: {\n        background: 'white',\n        position: 'sticky',\n        top: 0,\n        bottom: 0,\n        zIndex: 5,\n    },\n}));\n\nfunction Layout(props) {\n\n\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [allEvents, setAllEvents] = React.useState([]);\n    const [activeEvents,setActiveEvents] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [open, setOpen] = React.useState(true);\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    \n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setCurrentUser(value[0]);\n                    if (value[0].college_name === null) {\n                        setUserDetailsDone(false);\n                    }\n                    setOpen(false);\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL+'/api/events', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setAllEvents(value);\n                    setActiveEvents(value.filter(e =>{\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate\n                    }))\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n\n        })\n\n    }, [token])\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        return <Redirect to=\"/userinfo\"></Redirect>\n    }\n\n    return (\n        <AuthContext.Provider value={currentUser}>\n            <EventsContext.Provider value={allEvents}>\n            <ActiveEventsContext.Provider value={activeEvents}>\n                {\n                    currentUser != null  && <div>\n                        <Paper className={classes.root}>\n                            <NavigationBar></NavigationBar>\n                        </Paper>\n                        <div>\n                            {props.children}\n                        </div>\n                    </div>\n                }\n                {\n                    currentUser == null && <Backdrop className={classes.backdrop} open={open}>\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n                }\n                </ActiveEventsContext.Provider>\n            </EventsContext.Provider>\n        </AuthContext.Provider>\n\n\n    );\n}\nexport default Layout;\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n// import { Typography } from '@material-ui/core';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport '../Themes/main.scss'\nimport EventsDialog from '../Components/EventsDialog';\n// import EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction CalenderPanel({history}) {\n    localStorage.setItem('tabIndex',1)\n    // const { children, value, url, index, ...other } = props;\n    // const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [events, setEvents] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const [registeredEvents,setRegisteredEvents] = React.useState([]);\n    // const [image, setImage] = React.useState(null);\n    const allEvents = React.useContext(ActiveEventsContext);\n\n    useEffect(() => {\n        allEvents.forEach(y => {\n            // console.log(y.start_time);\n            setEvents(events =>\n                [...events, { id: JSON.stringify(y), title: y.name, start: y.start_time, end: y.finish_time }]\n            )\n        })\n        setRegisteredEvents(allEvents.filter((value) => value.registered === true))\n\n    }, [allEvents])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n    \n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    function handleRegistrationButton(event) {\n        setOpen(false);\n        // setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n\n    function handleEventClick(info) {\n        setSelectedEvent(JSON.parse(info.event.id))\n        setOpen(true);\n    }\n    return (\n        <div>\n            {/* {value === index && ( */}\n            <div className={classes.root}>\n                <Grid container component=\"main\" >\n\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                        {/* <Typography index={0}>Filters</Typography> */}\n                        {/* <Calendar onChange={setCalenderValue} value={calenderValue} ></Calendar> */}\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8} >\n                        <FullCalendar\n                            eventBackgroundColor=\"#1C1C1E\"\n                            eventBorderColor=\"#00bdaa\"\n                            events={events}\n                            eventClick={handleEventClick}\n                            defaultView='dayGridMonth' plugins={[dayGridPlugin]} backgroundColor=\"black\" \n                            buttonIcons={false}></FullCalendar>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={false} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                        </Button>\n                            <List className={classes.sideList}>\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registeredEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        handleReg={handleRegistrationButton}\n                        ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CalenderPanel;\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const event = props.event;\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                event_id: event._id,\n                title: title,\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Report({event.name})</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\n\nimport EventReportDialog from './EventReportDialog';\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [reportDialogOpen, setReportDialogOpen] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n  function handleImageClick() {\n  }\n  function handleRegClick() {\n    props.handleReg(props.eventId);\n\n  }\n  function handleMoreButtonClick() {\n    props.click(props.eventId);\n  }\n  function handleReportClick() {\n    setReportDialogOpen(true);\n  }\n  function handleReportClose() {\n    setReportDialogOpen(false);\n  }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {props.name}\n          </Typography>\n        }\n        subheader={\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n            This impressive paella is a perfect party dish and a fun meal to cook together with your\n            guests. Add 1 cup of frozen peas along with the mussels, if you like.\n        </Typography>\n        }\n      />\n      <CardContent>\n        <EventReportDialog\n          event={event}\n          open={reportDialogOpen}\n          handleClose={handleReportClose}>\n\n        </EventReportDialog>\n        <EventShareDialog\n          event={event}\n          open={shareDialogOpen}\n          handleClose={handleShareClose}></EventShareDialog>\n        {/* <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n          Details\n        </Typography> */}\n        <Chip variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends at \" + regEndDate.toDateString()}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts at \" + startDate.toDateString()}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends at  \" + endDate.toDateString()}></Chip>\n        {/* <Grid container component=\"main\">\n          <Grid item xs={6} sm={6} md={6}>\n            <Typography variant=\"h6\" component=\"p\">\n            <PublicIcon></PublicIcon> {props.eventMode} \n            </Typography>\n            <Typography variant=\"h6\" component=\"p\">\n            <PublicIcon></PublicIcon> {props.eventType} \n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Last Date for Registration:\n            </Typography>\n            <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n              {startDate.toDateString()}\n            </Typography>\n\n          </Grid>\n          <Grid item xs={6} sm={6} md={6}>\n            <Timeline align='alternate'>\n            <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{startDate.toDateString()}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Starts</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{startDate.toDateString()}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Ends</Typography>\n          </TimelineContent>\n        </TimelineItem>\n            </Timeline>\n          </Grid>\n        </Grid> */}\n\n      </CardContent>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <MailIcon></MailIcon>\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={handleMoreButtonClick}>\n            See More\n        </Button>\n          {\n            event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> : \n                <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n          }\n\n        </div>\n\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(10),\n        zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        // top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n            // top: theme.spacing(20)\n        },\n    \n    },\n    root2: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        borderRadius: theme.spacing(2)\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50),\n        backgroundColor: theme.palette.primary.main\n    },\n\n}));\n\nfunction SortLeftPanel(props) {\n    const classes = useStyles();\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        // defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        // defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List className={classes.root}>\n                    {[\"Online\", \"Offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${user.college_name}`].map((value) => {\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default SortLeftPanel;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n\n    root: {\n        background: theme.palette.secondary.main,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none',\n        // },\n    },\n    \n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n\n}));\n\nfunction MobileSortPanel(props) {\n    const classes = useStyles();\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List >\n                    {[\"online\", \"offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${user.collegeName}`].map((value) => {\n                           \n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default MobileSortPanel;\n\n ","import React from 'react';\n\n// import { makeStyles } from '@material-ui/core/styles';\nimport { DialogContent, DialogTitle } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\n\n// const useStyles = makeStyles((theme) => ({\n  \n// }));\n\n\n\n\nfunction ImageDialog(props) {\n  // const classes = useStyles();\n\n  function handleClose() {\n    props.handleClose();\n\n}\n\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"#1C1C1E\",\n                    boxShadow: 'none',\n                },\n            }}>\n            <DialogTitle>Hello</DialogTitle>\n              <DialogContent>\n                <img src={props.image} alt=\"profile pic\"></img>\n              </DialogContent>\n            </Dialog>\n      </div>\n   );\n}\n\nexport default ImageDialog;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\n// import StarBorderIcon from '@material-ui/icons/StarBorder';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'auto',\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(2),\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    color: theme.palette.background.paper,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n    // height: theme.spacing\n  },\n  title: {\n    color: theme.palette.primary.main,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  img: {\n    height: 355,\n    maxWidth: 400,\n    overflow: 'hidden',\n    display: 'block',\n    width: '100%',\n  },\n}));\n\nexport default function GridListEvents(props) {\n\n\n  const collegeEvents = props.events;\n  const classes = useStyles();\n  // console.log(collegeEvents);\n\n  // const tileData = [\n  //   {\n  //     img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQkdYZmP_DK3N6RjjWwVGagR2BjlZCe0c2jTg&usqp=CAU\",\n  //     title: 'Image',\n  //     author: 'author',\n  //   },\n  //   {\n  //     img: \"https://firebasestorage.googleapis.com/v0/b/campusthreadflutter.appspot.com/o/ProfilePics%2FJYU8h8QvNjUPQQvPlsNUbx9BJtm2.jpeg?alt=media&token=0b0701ce-03bc-4246-9b1f-be1d604d807a\",\n  //     title: 'Image',\n  //     author: 'author',\n  //   },\n  //   {\n  //     img: \"https://firebasestorage.googleapis.com/v0/b/campusthreadflutter.appspot.com/o/ProfilePics%2FJYU8h8QvNjUPQQvPlsNUbx9BJtm2.jpeg?alt=media&token=0b0701ce-03bc-4246-9b1f-be1d604d807a\",\n  //     title: 'Image',\n  //     author: 'author',\n  //   },\n  // ];\n\n\n  const handleMoreButtonClick = (event) => () => {\n    // console.log(\"button clicked\");\n    props.click(event, \"\");\n  }\n\n  \n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5} >\n        {collegeEvents.map((event) => (\n          \n          <GridListTile key={event._id} rows={1}>\n            <img src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`} alt={event.name} className={classes.img} />\n            <GridListTileBar\n              title={event.name}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${event.name}`} onClick={handleMoreButtonClick(event)}>\n                  <InfoIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    // const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    \n\n    // function handleTitleChange(event) {\n    //     setTitle(event.target.value);\n    // }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/send_feedback', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack)</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport EventCard from '../Components/EventCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withRouter} from \"react-router\";\nimport List from '@material-ui/core/List';\nimport EventsDialog from '../Components/EventsDialog';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SortLeftPanel from '../Components/SortLeftPanel';\nimport MobileSortPanel from '../Components/MobileSortPanel';\nimport ImageDialog from '../Components/ImageDialog';\n// import EventsContext from '../EventsContext';\nimport Skeleton from '@material-ui/lab/Skeleton';\n// import { Link } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\nimport GridListEvents from '../Components/GridListEvents';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\nimport FeedBackDialog from '../Components/FeedBackDialog';\n// function a11yProps(index) {\n//     return {\n//         id: `scrollable-auto-tab-${index}`,\n//         'aria-controls': `scrollable-auto-tabpanel-${index}`,\n//     };\n// }\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '89vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        // color: theme.palette.primary.main\n        backgroundColor: theme.palette.primary.main\n    },\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        // height: '89vh',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        // bottom: 0,\n        // zIndex: 3,\n    },\n    leftSubPaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n        [theme.breakpoints.down('md')]: {\n            maxHeight: '78vh',\n        },\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    mobileFilterButton: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    skeleton: {\n        textDecorationColor: theme.palette.primary.dark,\n    },\n    feedBackButton: {\n        borderRadius: theme.spacing(50),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        paddingBottom: theme.spacing(1)\n    }\n\n}));\n\nfunction EventsTabPanel({ history }) {\n    localStorage.setItem('tabIndex',0);\n    // const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [selectedEvent, setSelectedEvent] = React.useState(\"\");\n    const [sortStartDate, setSortStartDate] = React.useState(null);\n    const [sortEndDate, setSortEndDate] = React.useState(null);\n    // const [sortType, setSortType] = React.useState(null);\n    // const [sortEventMode, setSortEventMode] = React.useState(null);\n    const [sortCollegeType, setSortCollegeType] = React.useState(\"\");\n    const [sortedEventsArray, setSortedEventsArray] = React.useState([]);\n    const [isFiltered, setIsFiltered] = React.useState(false);\n    const [feeSortChecked, setFeeSortChecked] = React.useState([0]);\n    const [modeSortChecked, setModeSortChecked] = React.useState([0]);\n    const [filterDialogOpen, setFilterDialogOpen] = React.useState(false);\n    const [selectedImage, setSelectedImage] = React.useState(null);\n    const allEvents = React.useContext(ActiveEventsContext);\n    const [registerdEvents, setRegisteredEvents] = React.useState([]);\n    const [feedBackOpen,setFeedBackOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        // console.log(allEvents);\n        setRegisteredEvents(allEvents.filter((value) => value.registered === true))\n    }, [allEvents])\n    // console.log(registerdEvents);\n    if (!token) {\n        // return <Redirect to=\"/\" />;\n        history.replace(\"/\")\n    }\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClick = function (event, image) {\n        // console.log(id);\n        setSelectedEvent(event);\n        setSelectedImage(image);\n        setOpen(true);\n        // history.push('eventdetails')\n    }\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleSortDateChange = (date) => {\n        console.log(date);\n        setSortStartDate(date);\n    };\n    const handleEndSortDateChange = (date) => {\n        setSortEndDate(date);\n    }\n\n    const handleFeedBackButtonClick = () =>{\n        setFeedBackOpen(true);\n    }\n\n    const closeFeedBckDialog = () =>{\n        setFeedBackOpen(false);\n    }\n\n    // function handleSortEventModeChamge(event, value) {\n    //     console.log(event);\n    //     console.log(value);\n    // }\n    // console.log(allEvents);\n    function handleSortCollegeChange(event, value) {\n        setSortCollegeType(value);\n    }\n    async function handleSortApplyButton() {\n        // console.log(sortStartDate);\n        // console.log(modeSortChecked);\n        // console.log(sortCollegeType);\n        setFilterDialogOpen(false);\n        if (sortStartDate != null && sortEndDate != null) {\n            const dateRangeSortedEvents = sortByDateRange(sortStartDate, sortEndDate, allEvents);\n            setSortedEventsArray(dateRangeSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateRangeSortedEvents));\n                const typeSortedEvents = sortByMode(dateRangeSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(typeSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.college_name) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateRangeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.college_name) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateRangeSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (sortStartDate != null) {\n            const dateSortedEvents = await sortByDate(sortStartDate, allEvents)\n            setSortedEventsArray(dateSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateSortedEvents));\n                const typeSortedEvents = sortByMode(dateSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(dateSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.collegeName) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.collegeName) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (modeSortChecked.length > 1) {\n            const typeSortedEvents = sortByMode(allEvents);\n            console.log(sortByMode(allEvents));\n\n            setSortedEventsArray(typeSortedEvents);\n            setIsFiltered(true);\n            if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(typeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (feeSortChecked.length > 1) {\n            const feeSortedEvents = sortByCost(allEvents);\n            setSortedEventsArray(feeSortedEvents);\n            setIsFiltered(true);\n        }\n        else if (sortCollegeType === user.collegeName) {\n            const collegeSortedEvents = sortByCollege(allEvents);\n            setSortedEventsArray(collegeSortedEvents);\n            setIsFiltered(true);\n        }\n    }\n\n    function sortByDateRange(date1, date2, sEvents) {\n        var sortedEvents = [];\n        // console.log(typeof (date1));\n        // console.log(typeof (date1));\n        sEvents.forEach(sEvent => {\n            const d = new Date(sEvent.start_time);\n            if (date1.getTime() <= d.getTime() && d.getTime() <= date2.getTime()) {\n                sortedEvents.push(sEvent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByDate(date, tEvents) {\n        var sDEvents = [];\n        tEvents.forEach(async sevent => {\n            const x = `${date.getDate()}` + date.getMonth() + date.getFullYear();\n            const d = new Date(sevent.start_time);\n            const y = `${d.getDate()}` + d.getMonth() + d.getFullYear();\n            console.log(y);\n            if (x === y) {\n                console.log(sevent);\n                sDEvents.push(sevent);\n            }\n            console.log(sortedEventsArray);\n        })\n        console.log(sDEvents);\n        return sDEvents;\n    }\n    function sortByMode(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (modeSortChecked.includes(sevent.event_mode)) {\n                console.log(\"ddd\");\n                sortedEvents.push(sevent);\n            }\n        })\n        console.log(sortedEvents);\n        return sortedEvents;\n    }\n\n    function sortByCost(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (feeSortChecked.includes(sevent.fee_type)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCollege(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (user.collegeName === sevent.college) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function handlesortDiscardButton() {\n        setModeSortChecked([0])\n        setFeeSortChecked([0])\n        setSortedEventsArray([]);\n        setSortStartDate(null);\n        setSortEndDate(null);\n        setIsFiltered(false);\n        setFilterDialogOpen(false)\n        // setChecked(null);\n    }\n    function handlefilterButtonClicked() {\n        setFilterDialogOpen(true);\n    }\n    function handleFilterClose() {\n        setFilterDialogOpen(false);\n    }\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(image) {\n        // console.log(image);\n        // setSelectedImage(image);\n        // setImageDialogOpen(true);\n    }\n\n    function handleRegistrationButton(event) {\n        setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    return (\n        <div>\n            <Grid container component=\"main\" >\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} >\n                    <Paper className={classes.root}>\n                        <Paper className={classes.leftSubPaper}>\n                            <SortLeftPanel\n                                handleSortDateChange={handleSortDateChange}\n                                sortStartDate={sortStartDate}\n                                handleEndSortDateChange={handleEndSortDateChange}\n                                sortEndDate={sortEndDate}\n                                handleSortCollegeChange={handleSortCollegeChange}\n                                feeChecked={feeSortChecked}\n                                modeChecked={modeSortChecked}\n                                setFeeChecked={setFeeSortChecked}\n                                setModeChecked={setModeSortChecked}\n                                handleSortApplyButton={handleSortApplyButton}\n                                handlesortDiscardButton={handlesortDiscardButton}>\n                            </SortLeftPanel>\n                        </Paper>\n                    </Paper>\n                    <Button className={classes.mobileFilterButton} variant=\"outlined\" onClick={handlefilterButtonClicked} >Filters</Button>\n\n                </Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px' }}>\n                        Your College Events\n                    </Typography>\n                    <GridListEvents click={handleClick} events={allEvents.filter((event) => event.college_name === user.college_name)} ></GridListEvents>\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px',paddingBottom: '7px' }}>\n                        Active Events\n                    </Typography>\n\n                    {allEvents.length === 0 && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>}\n                    {\n                        isFiltered ? sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    eventId={event}\n                                >\n\n                                </EventCard>)\n                        }) : allEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                </Grid>\n                <Grid item xs={12} sm={12} md={4} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                            </Button>\n                            <List className={classes.root2}>\n                                \n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registerdEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                            <Button\n                                onClick={handleFeedBackButtonClick}\n                                variant=\"outlined\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.feedBackButton}\n                                 >\n                                Report Bug/Feedback\n                            </Button>\n                           \n\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n            </Grid>\n            <div>\n            <FeedBackDialog open={feedBackOpen} handleClose={closeFeedBckDialog}></FeedBackDialog>\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    imageUrl={selectedImage}\n                    handleClose={handleClose}\n                    handleReg={handleRegistrationButton}\n                >\n                    imageDialog={handleImageDialogOpen}\n                </EventsDialog>\n                <ImageDialog\n                    image={selectedImage}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose} url={user.imageUrl}>\n                </ImageDialog>\n                <Dialog\n                    open={filterDialogOpen}\n                    onClose={handleFilterClose}\n                    fullWidth={true}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                    maxWidth=\"sm\" PaperProps={{\n                        style: {\n                            backgroundColor: \"#1C1C1E\",\n                            boxShadow: 'none',\n                        },\n                    }}>\n                    <DialogTitle>Filters</DialogTitle>\n                    <DialogContent>\n                        <MobileSortPanel\n                            handleSortDateChange={handleSortDateChange}\n                            sortStartDate={sortStartDate}\n                            handleEndSortDateChange={handleEndSortDateChange}\n                            sortEndDate={sortEndDate}\n                            handleSortCollegeChange={handleSortCollegeChange}\n                            feeChecked={feeSortChecked}\n                            modeChecked={modeSortChecked}\n                            setFeeChecked={setFeeSortChecked}\n                            setModeChecked={setModeSortChecked}\n                            handleSortApplyButton={handleSortApplyButton}\n                            handlesortDiscardButton={handlesortDiscardButton}>\n                        </MobileSortPanel>\n                    </DialogContent>\n\n                </Dialog>\n\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default withRouter(EventsTabPanel);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport EventShareDialog from '../Components/EventShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n  }\n}));\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const [image, setImage] = React.useState(null);\n  // const token = localStorage.getItem('token');\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  function handleViewButtonClick() {\n    props.handleViewClick(props.event);\n  }\n\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n      <CardMedia\n        component=\"img\"\n        height=\"180\"\n        image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleShareClick}>\n          Share\n        </Button>\n        <Button onClick={handleViewButtonClick} size=\"small\" color=\"primary\">\n          {t === 'light' ? <Link target=\"_blank\" to={{ pathname: `/event/${event._id}`, state: { event: props.event } }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link> :\n            <Link target='_blank' to={{ pathname: `/event/${event._id}`, state: { event: props.event } }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link>}\n        </Button>\n      </CardActions>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n    </Card>\n  );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\n\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const [open, setOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const allEvents = React.useContext(EventsContext);\n    \n    const postedEvents = allEvents.filter((val)=>{\n        return val.user_id === user.user_id;\n    });\n\n    const [selectedEvent,setSellectedEvent] = React.useState(\"\");\n    function handleViewClick(event){\n        setSellectedEvent(event);\n        // setOpen(true);\n    } \n\n    function handleClose(){\n        setOpen(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {postedEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={4} key={index}>\n                    <ProfileEventCard event={event} handleViewClick={handleViewClick} name={event.name} image={url}></ProfileEventCard>\n                    </Grid>) \n                })}\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    handleClose={handleClose}\n                    name={selectedEvent.name}\n                    startTime={selectedEvent.start_time}\n                    endTime={selectedEvent.finish_time}\n                    regEndTime={selectedEvent.registrationEndTime}\n                    type={selectedEvent.eventType}\n                    tags={selectedEvent.tags}\n                    mode={selectedEvent.eventMode}\n                    feeType={selectedEvent.feesType}\n                    url={user.imageUrl}>\n                    {/* imageDialog={handleImageDialogOpen} */}\n                </EventsDialog>\n                    \n                </Grid>\n                \n                {/* <ProfileEventCard></ProfileEventCard> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WcIcon from '@material-ui/icons/Wc';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        paddingLeft: theme.spacing(4),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1.5),\n        padding: theme.spacing(1)\n    }\n\n}));\n\nfunction ProfileDataBox(props) {\n    const classes = useStyles();\n    const [icon,setIcon] = React.useState(<EmailIcon></EmailIcon>)\n    React.useEffect(()=>{\n        switch(props.name){\n            case 'Username':\n                setIcon(<PersonPinCircleIcon></PersonPinCircleIcon>)\n                break;\n            case 'Name':\n                setIcon(<PersonIcon></PersonIcon>)\n                break;\n            case 'College':\n                setIcon(<SchoolIcon></SchoolIcon>)\n                break;\n            case 'Gender':\n                setIcon(<WcIcon></WcIcon>)\n                break;\n            case 'Bio':\n                setIcon(<InfoIcon></InfoIcon>)\n                break;\n            case 'Designation':\n                setIcon(<WorkIcon></WorkIcon>)\n                break;\n            case 'Email':\n                setIcon(<EmailIcon></EmailIcon>)\n                break;\n            default:\n                setIcon(<InfoIcon></InfoIcon>)\n        }\n    },[props.name])\n\n    return (\n        <Box className={classes.root3}>\n            <Box className={classes.avatar}>\n                <Avatar>\n                    {icon}\n                </Avatar>\n            </Box>\n            <Box className={classes.content}>\n                <Box><Typography>{props.name}</Typography></Box>\n                <Box><Typography variant=\"body2\" color=\"textSecondary\">{props.value}</Typography></Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ProfileDataBox;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthContext from '../AuthContext';\nimport Box from '@material-ui/core/Box';\nimport ProfileAboutDataBox from './ProfileAboutDataBox';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    editIcon: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n}));\n\nfunction ProfilePostsTabPanel(props) {\n    const classes = useStyles()\n    const { children, value, url, index, ...other } = props;\n    const user = React.useContext(AuthContext);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Box>\n                        <Box className={classes.editIcon}>\n                            <IconButton onClick={props.handleEditButton}><EditIcon></EditIcon></IconButton>\n                        </Box>\n                        <ProfileAboutDataBox name=\"Name\" value={user.name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Email\" value={user.email}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Username\" value={user.username}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"College\" value={user.college_name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Designation\" value={user.designation}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Gender\" value={user.gender}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Bio\" value={user.bio}></ProfileAboutDataBox>\n                    </Box>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import ProfileEventsTabPanel from './ProfileRegEventsTabPanel';\nimport ProfilePostedEventsTabPanel from './ProfilePostedEventsTabPanel';\nimport AboutProfileTabPanel from './ProfileAboutTabPanel';\nimport AuthContext from '../AuthContext';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        borderRadius: theme.spacing(3)\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    }\n}));\n\n\n\n\nfunction Eventcard(props) {\n    localStorage.setItem('tabIndex', 3)\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <Grid container component=\"main\">\n                <CssBaseline />\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.large}\n                                sizes=\"100\" alt=\"\"\n                                src={process.env.REACT_APP_API_URL + `/api/image?id=${user.profile_pic}`}>\n                                <PersonIcon></PersonIcon>\n                            </Avatar>\n                        }\n                        action={\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={props.handleEditButton}>\n                                Edit Profile\n                            </Button>\n                        }\n                        title={\n                            <Typography variant=\"h4\">{user.name}</Typography>\n                        }\n                        subheader={user.bio}\n                    ></CardHeader>\n                </Grid>\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n            </Grid>\n\n            <CardContent>\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"About\" />\n                        {/* <Tab label=\"Registered Events\" /> */}\n                        <Tab label=\"Posted Events\" />\n                    </Tabs>\n                </Paper>\n                <div>\n                    <AboutProfileTabPanel handleEditButton={props.handleEditButton} value={value} index={0}></AboutProfileTabPanel>\n                    {/* <ProfileEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfileEventsTabPanel> */}\n                    <ProfilePostedEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfilePostedEventsTabPanel>\n                </div>\n            </CardContent>\n        </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { Grid, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from '../AuthContext';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n   \n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n}));\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateInfoTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const user = React.useContext(AuthContext);\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const [colleges, setColleges] = React.useState([]);\n    const [image, setImage] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [userName, setUserName] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [designation, setDesignation] = React.useState(null);\n    const [collegeName, setCollegeName] = React.useState(null);\n    const [collegeId,setCollegeId] = React.useState(null);\n    const [collegesName,setCollegesName] = React.useState([]);\n    const [imageUrl,setImageurl] = React.useState(null);\n    const [imageUpdated,setImageUpdated] = React.useState(false);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n\n    React.useEffect(() => {\n        setEmail(user.email);\n        setName(user.name);\n        setUserName(user.username);\n        setDesignation(user.designation);\n        setCollegeName(user.college_name);\n        setCollegeId(user.college_id);\n        setBio(user.bio);\n        setGender(user.gender);\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setColleges(value);\n                value.forEach((v)=>{\n                    setCollegesName((collegesNames)=>[...collegesNames,v.name])\n                  })\n                // setCollegeNames()\n            })\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // console.log(user.college_name);\n\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            // history.replace(\"/home\")\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n          setImage(event.target.files[0]);\n        //   setImageAsFile(imageFile => (image))\n          const url = URL.createObjectURL(event.target.files[0]);\n        //   const fileType = event.target.files[0].type;\n          setImageurl(url)\n          setImageUpdated(true);\n        //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    function handleName(event,value){\n        setName(event.target.value);\n    }\n    function handleEmail(event,value){\n        setEmail(value);\n    }\n    function handleGender(event,value){\n        console.log(event.target.value);\n        setGender(event.target.value);\n    }\n    function handleDesig(event,value){\n        setDesignation(event.target.value);\n    }\n    function handleCollege(event,value){\n        setCollegeName(value);\n        colleges.forEach(c=>{\n            if(c.name === value){\n            //   props.collegeId(c._id)\n            setCollegeId(c._id);\n            }\n          })\n        \n    }\n    function handleUserName(event,value){\n        setUserName(event.target.value);\n    }\n    function handleBio(event,value){\n        setBio(value);\n    }\n\n    function handleUpdateButton(event){\n        event.preventDefault();\n        setLoading(true);\n        // console.log(name);\n        // console.log(userName)\n\n        try {\n            var data = new FormData()\n            const payload = {\n                name: name,\n                email: email,\n                username: userName,\n                // college_name: collegeName,\n                college_id: collegeId,\n                designation : designation,\n                gender: gender,\n                // college_id: collegeId.value,\n                bio: bio,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/updateprofile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (imageUpdated) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n                    <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={12} alignContent=\"center\" alignItems=\"center\">\n                            <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                                <Badge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    badgeContent={<label htmlFor=\"contained-button-file\">\n                                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                            <EditIcon></EditIcon>\n                                        </IconButton>\n                                    </label>}>\n                                    <Avatar className={classes.large} sizes=\"100\" alt=\"\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL+`/api/image?id=${user.profile_pic}`}></Avatar>\n                                </Badge>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                autoComplete=\"fullName\"\n                                name=\"fullName\"\n                                value={name || \"\"}\n                                onChange={handleName}\n                                id=\"fullName\"\n                                label=\"Full Name\"\n                                autoFocus\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                            disabled\n                                id=\"email\"\n                                value={email}\n                                onChange={handleEmail}\n                                fullWidth\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                // variant=\"outlined\"\n                                fullWidth\n                                required\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                value={userName}\n                                onChange={handleUserName}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Autocomplete\n                                fullWidth\n                                id=\"college\"\n                                options={collegesName}\n                                getOptionLabel={(option) => option}\n                                // onChange={handleChange}\n                                value={collegeName}\n                                onChange={handleCollege}\n                                renderInput={(params) => <TextField name=\"college\" fullWidth required {...params} label=\"College\" />}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                                value={bio}\n                                onChange={handleBio}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    value={gender}\n                                    onChange={handleGender}\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    value={designation}\n                                    onChange={handleDesig}\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"WorkingProfessional\">Working Professional</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        className={classes.button}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpdateButton}\n                        disabled={loading}\n                    // className={classes.submit}\n                    >{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Profile\"}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UpdateInfoTabPanel;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthContext from '../AuthContext';\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const user = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error'\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [cPassword,setCPassword] = React.useState(null);\n    const [nPassword,setNPassword] = React.useState(null);\n\n\n    const handleClose = async (event, reason) => {\n        setCPassword(null);\n        setNPassword(null);\n\n        setState({ ...state, open: false });\n    };\n\n    function handleCurrentPasswordChange(event){\n        setCPassword(event.target.value);\n    }\n    function handleNewPasswordChange(event){\n        setNPassword(event.target.value);\n    }\n\n    function handleUpdatePassword(event) {\n        setLoading(true);\n        event.preventDefault();\n        // const { cPassword, nPassword } = event.target.elements;\n        // console.log(cPassword);\n        // console.log(nPassword);\n        try{\n            var data = new FormData()\n        const payload = {\n          email: user.email,\n          cPassword: cPassword,\n          nPassword: nPassword\n        };\n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL+'/api/users/updatepassword', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then(response =>{\n            if (response.status === 200){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: result.message,\n                        type: \"success\"\n                      })\n                })\n            }\n            else if (response.status === 401){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message:result.error,\n                        type: \"error\"\n                      })\n                })\n                \n            }\n           \n        })\n\n\n\n            \n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: error.message,\n              type: \"error\"\n            })\n          }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={2000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    ><Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    \n                    <div className={classes.paper}>\n                        <form className={classes.form} onSubmit={handleUpdatePassword}>\n                            <Grid container spacing={2} justify=\"center\" >\n                            \n\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"cPassword\"\n                                        label=\"Current Password\"\n                                        type=\"password\"\n                                        id=\"cPassword\"\n                                        value={cPassword}\n                                        onChange={handleCurrentPasswordChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"nPassword\"\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        id=\"nPassword\"\n                                        value={nPassword}\n                                        onChange={handleNewPasswordChange}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                            // className={classes.submit}\n                            >\n                                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Password\"}\n                            </Button>\n                        </form>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport UpdateInfoTabPanel from './UpdateInfoTabPanel';\nimport UpdatePasswordTabPanel from './UpdatePasswordTabPanel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    \n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n        flexGrow: 1,\n        // width: '100%',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n}));\n\nfunction UpdateProfile(props) {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function handleClose() {\n        props.handleClose();\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            style={{ minHeight: \"400px\" }}\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle id=\"scroll-dialog-title\">\n                <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <AppBar style={{ alignItems: 'center' }} position=\"static\" color=\"secondary\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\">\n                            <Tab label=\"Update info\" {...a11yProps(0)} />\n                            <Tab label=\"Change Password\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                <UpdateInfoTabPanel value={value} index={0}></UpdateInfoTabPanel>\n                <UpdatePasswordTabPanel value={value} index={1}></UpdatePasswordTabPanel>\n            </DialogContent>\n            <DialogActions alignItems=\"center\">\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default UpdateProfile;","import React from 'react';\nimport ProfileCard from '../Components/MainProfileCard';\nimport { Grid } from '@material-ui/core';\nimport UpdateProfileDialog from '../Components/UpdateProfileDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventsDialog from '../Components/EventsDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\n\nfunction EventsTabPanel(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [eOpen, setEOpen] = React.useState(false);\n    const activeEvents = React.useContext(ActiveEvents);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    function handleEditButton() {\n        setOpen(true);\n    }\n    function handleClose() {\n        setOpen(false);\n        setEOpen(false)\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setEOpen(true);\n\n    }\n    return (\n        <div>\n            <div>\n                <Grid container component=\"main\" >\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8}>\n                        <ProfileCard handleEditButton={handleEditButton}></ProfileCard>\n                        <UpdateProfileDialog open={open} handleClose={handleClose}></UpdateProfileDialog>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>\n                                        })\n                                    }\n                                </List>\n\n\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={eOpen}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EventsTabPanel;","import React from 'react';\n\n\n//MaterialUI imports\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const classes = useStyles();\n  const [startDateError,setStartDateError] = React.useState(false);\n  const [endDateError,setEndDateError] = React.useState(false);\n  const [regEndDateError,setRegEndDateError] = React.useState(false);\n  const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n\n  function handleEventNameChange(event) {\n    props.setName(event.target.value)\n  }\n\n  function handleDescChange(event) {\n    props.setDesc(event.target.value);\n  }\n\n  const handleStartDateChange = (date) => {\n    setStartDateError(false);\n    props.setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setEndDateError(false);\n    props.setEndDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDateError(false);\n    props.setRegEndDate(date);\n  };\n\n  function handleEventModeChange(event) {\n    props.setEventMode(event.target.value);\n  }\n  function handleeventTypsChange(event, value) {\n    props.setEventType(value);\n  }\n\n\n  function handleNext(event) {\n    event.preventDefault();\n    if(props.startDate === null){\n      setStartDateError(true)\n    }\n    else if(props.endDate === null){\n      setEndDateError(true);\n    }\n    else if(props.regEndDate === null){\n      setRegEndDateError(true)\n    }\n    else{\n      props.handleNext();\n    }\n    \n  }\n  function handleFeeTypeChange(event, value) {\n    props.setFeeType(value)\n  }\n  function handleRegistrationModeChange(event) {\n    if (event.target.value === \"form\") {\n      props.setSteps((steps) => [...steps, \"Registration Form\"])\n    }\n    else if (event.target.value === \"link\") {\n      props.setSteps(['About', 'More Details']);\n    }\n    props.setRegistrationMode(event.target.value);\n  }\n\n\n  return (\n    <form className={classes.form} onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventName\"\n            name=\"eventName\"\n            label=\"Name\"\n            fullWidth\n            value={props.name || \"\"}\n            onChange={handleEventNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"shortdesc\"\n            name=\"shortdesc\"\n            label=\"Short Description\"\n            fullWidth\n            value={props.desc || \"\"}\n            onChange={handleDescChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n            <DateTimePicker\n            inputProps={{required: true}}            \n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"startDate\"\n              label=\"Start Date\"\n              name=\"startDate\"\n              value={props.startDate}\n              onChange={handleStartDateChange}\n              error={startDateError}\n              helperText={startDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"endDate\"\n              label=\"End Date\"\n              name=\"endDate\"\n              value={props.endDate}\n              onChange={handleendDateChange}\n              error={endDateError}\n              helperText={endDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={12}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"regEndDate\"\n              label=\"Registration End Date\"\n              name=\"regEndDate\"\n              value={props.regEndDate}\n              onChange={handleRegEndDateChange}\n              error={regEndDateError}\n              helperText={regEndDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Mode</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Mode\"\n              inputProps={{\n                name: 'eventMode',\n                id: 'eventMode',\n              }}\n              value={props.eventMode || \"\"}\n              onChange={handleEventModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            fullWidth\n            id=\"combo-box-demo\"\n            options={eventTypes}\n            getOptionLabel={(option) => option}\n            onChange={handleeventTypsChange}\n            value={props.eventType}\n            renderInput={(params) => <TextField fullWidth required {...params} label=\"Type\" />}\n          />\n        </Grid>\n\n\n        <Grid item xs={12}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Registration\"\n              inputProps={{\n                name: 'registrationMode',\n                id: 'registaration mode',\n              }}\n              value={props.registrationMode || \"\"}\n              onChange={handleRegistrationModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"form\">Our Platform(Ellipse)</option>\n              <option value=\"link\">Other</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormLabel component=\"legend\">Entry Fee</FormLabel>\n          <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"Free\" onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n            <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n            <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      <div className={classes.buttons}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >Next\n        </Button>\n      </div>\n    </form>\n  );\n}","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [imageName, setImageName] = React.useState(\"\");\n  const eventThemes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n  // const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n  }, [token])\n\n\n  function handleeventTagsChange(event, values) {\n    props.setThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    props.setRequirements(values);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      props.setPoster(event.target.files[0]);\n      const fileName = event.target.files[0].name;\n      setImageName(fileName);\n    }\n  }\n  function handleAddressTypeChange(evemt, value) {\n    props.setAddressType(value);\n  }\n\n  function handleRegLinkChange(event) {\n    props.setRegLink(event.target.value);\n  }\n\n  function handleRegFees(event) {\n    props.setFees(event.target.value);\n  }\n\n  function handleCollegeChange(event, value) {\n    console.log(value);\n    props.setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        props.collegeId(c._id)\n      }\n    })\n  }\n  function handleVenueCollegeChange(event, value) {\n    props.setVenueCollege(value);\n  }\n\n  function handleAboutChange(event) {\n    props.setAbout(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    props.setParticipantsType(value)\n  }\n  function handleBuildingChange(event) {\n    props.setBuilding(event.target.value);\n  }\n  // function handlePlatformChange(event){\n  //   props.setPlatformDetails(event.target.value)\n  // }\n  function handleNext(event) {\n    event.preventDefault();\n    props.handleNext();\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} onSubmit={handleNext}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter everything about your event in detail\"\n              autoComplete='off'\n              required\n              id=\"about\"\n              name=\"about\"\n              label=\"About\"\n              fullWidth\n              onChange={handleAboutChange}\n              value={props.about || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Autocomplete\n              multiple\n              id=\"themes\"\n              options={eventThemes.map((option) => option)}\n              freeSolo\n              value={props.eventThemes || []}\n              onChange={handleeventTagsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Event Tags\" placeholder=\"Event Tags\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <input\n              id=\"contained-button-file\"\n              required\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleChange}\n              style={{ display: \"none\" }}>\n\n            </input>\n\n            <TextField\n              autoComplete='off'\n              required\n              id=\"eventposter\"\n              name=\"eventposter\"\n              label=\"Event Poster\"\n              component=\"span\"\n              value={imageName}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <label htmlFor=\"contained-button-file\">\n                      <IconButton component=\"span\" >\n                        <CameraAltIcon></CameraAltIcon>\n                      </IconButton>\n                    </label>\n\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </Grid>\n          {props.registrationMode !== \"form\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regLink\"\n              name=\"regLink\"\n              label=\"Registration Link\"\n              fullWidth\n              value={props.regLink || \"\"}\n              onChange={handleRegLinkChange}\n            />\n          </Grid>}\n\n          {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regFees\"\n              name=\"regFees\"\n              label=\"Registration Fees\"\n              fullWidth\n              value={props.regFees || \"\"}\n              onChange={handleRegFees}\n            />\n          </Grid>}\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={requirements.map((option) => option)}\n              freeSolo\n              value={props.requirements || []}\n              onChange={handleRequirementsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              fullWidth\n              id=\"combo-box-demo\"\n              options={collegesNames}\n              value={props.college || []}\n              getOptionLabel={(option) => option}\n              onChange={handleCollegeChange}\n              renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component=\"legend\">Participation</FormLabel>\n            <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"open\" onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n              <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${props.college}`} />\n            </RadioGroup>\n          </Grid>\n          {/* {props.eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={props.platformDetails || \"\"}\n            />\n          </Grid>} */}\n          {props.eventMode === \"Offline\" && <React.Fragment>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup aria-label=\"address\" aria-disabled name=\"address\" defaultValue=\"college\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"college\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Room No & Building\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                getOptionLabel={(option) => option}\n                value={props.venueCollege}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>\n\n          </React.Fragment>}\n          {props.registrationMode !== \"form\" && <Grid item xs={12}>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" name=\"terms\" />}\n              label=\"I accept the terms and conditions\"\n            />\n          </Grid>\n          }\n\n        </Grid>\n        <div className={classes.buttons}>\n          <Button onClick={props.handleBack} className={classes.button}>\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >{props.registrationMode !== \"form\" ? \"POST\" : \"NEXT\"}\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}","import React from 'react';\n\n//Materail impports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid } from '@material-ui/core';\nimport {useTheme } from '@material-ui/core/styles';\n\n\n\n\n\nexport default function FormDialog(props) {\n  const theme = useTheme();\n  const [name, setName] = React.useState(null);\n  const [type, setType] = React.useState(null);\n  const fieldOptions = [];\n  const [selectedOptions, setSelectedOptions] = React.useState(['option1', 'option2']);\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n  function handleTypeChange(event) {\n    setType(event.target.value);\n  }\n  function handleOptionsChange(event, values) {\n    setSelectedOptions(values);\n  }\n  function handleAddButton() {\n    if (type !== \"radiobuttons\" && type !== \"checkboxes\" && type !== \"dropdown\") {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': [] } }, name);\n    }\n    else {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': selectedOptions } }, name);\n    }\n    props.handleClose()\n\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n          boxShadow: 'none',\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Field</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Field Name\"\n                name=\"name\"\n                fullWidth\n                value={name}\n                required\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'outlined-age-native-simple',\n                  }}\n                  value={props.eventMode}\n                  onChange={handleTypeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"short_text\">Short Text</option>\n                  <option value=\"paragraph\">Long Description</option>\n                  <option value=\"dropdown\">Drop Down</option>\n                  <option value=\"date\">Date & Time</option>\n                  <option value=\"radiobuttons\">Radio Button</option>\n                  <option value=\"checkboxes\">Check Box</option>\n                  <option value=\"link\">Link</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {(type === \"radiobuttons\" || type === \"checkboxes\" || type === \"dropdown\") &&\n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"tags-filled\"\n                  options={fieldOptions.map((option) => option)}\n                  freeSolo\n                  value={selectedOptions || []}\n                  onChange={handleOptionsChange}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Options\" placeholder=\"Options\" helperText=\"you can choose multiple options for your checkboxes or radio buttons enter one option and press enter\" />\n                  )}\n                />\n              </Grid>\n            }\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(0),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    formControl: {\n        // marginTop: theme.spacing(3),\n    },\n    formgroup: {\n        marginTop: theme.spacing(1),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function AddressForm(props) {\n\n\n    const classes = useStyles();\n    // const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const fields = {\n        name: {\n            'title': 'Name',\n            'field': 'short_text',\n            'options': []\n        },\n        email: {\n            'title': 'Email',\n            'field': 'short_text',\n            'options': []\n        },\n        college: {\n            'title': 'College',\n            'field': 'short_text',\n            'options': []\n        },\n\n    }\n    const [selectedFields, setSelectedFields] = React.useState([]);\n    const [state, setState] = React.useState({\n        name: false,\n        email: false,\n        college: false,\n    });\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        const sName = event.target.name;\n        if (event.target.checked) {\n            setSelectedFields(selectedFields => [...selectedFields, fields[sName]]);\n        }\n        else if (!event.target.checked) {\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== sName));\n        }\n\n    };\n    const { name, email, college } = state;\n    // console.log(selectedFields);\n    function handleAddMoreButton() {\n        setOpen(true);\n    }\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n    const handleDelete = (chipToDelete) => () => {\n        setState({ ...state, [chipToDelete.name]: false })\n        setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    };\n\n    async function handlePostButton(e) {\n        e.preventDefault();\n        await props.setFields(selectedFields);\n        props.handlePost(selectedFields);\n    }\n\n    return (\n        <React.Fragment>\n\n            <form className={classes.form} onSubmit={handlePostButton}>\n                <Grid container spacing={3}>\n                    <AddFieldDialog\n                        open={open}\n                        handleClose={handleClose}\n                        handleAdd={handleFieldAddButton}></AddFieldDialog>\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Fields for your Registration Form</FormLabel>\n                            <FormGroup className={classes.formgroup}>\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={name} onChange={handleChange} name=\"name\" />}\n                                    label=\"Name\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={email} onChange={handleChange} name=\"email\" />}\n                                    label=\"Email\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={college} onChange={handleChange} name=\"college\" />}\n                                    label=\"College\"\n                                />\n                                {/* <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={phno} onChange={handleChange} name=\"phno\" />}\n                                    label=\"Phone No\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={github} onChange={handleChange} name=\"github\" />}\n                                    label=\"Github\"\n                                /> */}\n                            </FormGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={handleAddMoreButton}\n                        >\n                            Add More\n                        </Button>\n                    </Grid>\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {selectedFields.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n\n                                            label={data.title}\n                                            onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={<Checkbox color=\"primary\" name=\"terms\" />}\n                            label=\"I accept the terms and conditions\"\n                        />\n                    </Grid>\n                </Grid>\n                <div className={classes.buttons}>\n                    <Button onClick={props.handleBack} className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                    >Post\n                    </Button>\n                </div>\n            </form>\n        </React.Fragment>\n    );\n}","import React from 'react';\n\n//Material UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n//Components imports\nimport EventPostDetails1 from '../Components/EventPostDetails1';\nimport EventPostDetails2 from '../Components/EventPostDetails2';\nimport EventPostDetails3 from '../Components/EventPostDetails3';\nimport AuthContext from '../AuthContext';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//function for copy right\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3),\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  stepper: {\n    padding: theme.spacing(3, 8, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(12),\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\n\nexport default function Checkout({ history }) {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const user = React.useContext(AuthContext);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(['About', 'More Details']);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const [eventName, setEventName] = React.useState(null);\n  const [shortDesc, setShortDesc] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [registrationMode, setRegistrationMode] = React.useState(null);\n\n\n\n  const [regLink, setRegLink] = React.useState(null);\n  const [fees, setFees] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState(null);\n  const [image, setImage] = React.useState(null);\n  const [addressType, setAddressType] = React.useState(null);\n  const [collegeName, setCollegeName] = React.useState(user.college_name);\n  const [collegeId, setCollegeId] = React.useState(user.college_id)\n  const [building, setBuildingAdress] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(user.name + \",\" + user.college_name);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const [participantsType, setParticipantsType] = React.useState(\"open\");\n  const [fields, setFields] = React.useState([]);\n  const [platformDetails,setPlatformDetails] = React.useState(null);\n\n\n\n\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <EventPostDetails1\n            name={eventName}\n            desc={shortDesc}\n            startDate={startDate}\n            endDate={endDate}\n            regEndDate={regEndDate}\n            eventMode={eventMode}\n            eventType={eventType}\n            about={about}\n            feeType={feeType}\n            registrationMode={registrationMode}\n            setName={setEventName}\n            setDesc={setShortDesc}\n            setStartDate={setStartDate}\n            setEndDate={setendDate}\n            setRegEndDate={setRegEndDate}\n            setEventMode={setEventMode}\n            setEventType={setEventType}\n            setRegistrationMode={setRegistrationMode}\n            setAbout={setAbout}\n            handleNext={handleNext}\n            setFeeType={setFeeType}\n            steps={steps}\n            setSteps={setSteps} />);\n      case 1:\n        return (\n          <EventPostDetails2\n            handleBack={handleBack}\n            handleEventPost={handleEventPost}\n            eventMode={eventMode}\n            feeType={feeType}\n            eventThemes={eventThemes}\n            eventPoster={image}\n            regLink={regLink}\n            regFees={fees}\n            about={about}\n            requirements={selectedrequirements}\n            college={collegeName}\n            building={building}\n            organizer={organizer}\n            registrationMode={registrationMode}\n            venueCollege={venueCollege}\n            participantsType={participantsType}\n            platformDetails={platformDetails}\n            setPlatformDetails={setPlatformDetails}\n            setThemes={setEventThemes}\n            setPoster={setImage}\n            setRegLink={setRegLink}\n            setFees={setFees}\n            setRequirements={setSelectedRequirements}\n            setOrganizer={setOrganizer}\n            setAddressType={setAddressType}\n            setCollegeName={setCollegeName}\n            setCollegeId={setCollegeId}\n            setBuilding={setBuildingAdress}\n            setVenueCollege={setVenueCollege}\n            setAbout={setAbout}\n            setParticipantsType={setParticipantsType}\n            handleNext={registrationMode === \"form\" ? handleNext : handlePostwithoutregFileds} />\n        );\n      case 2:\n        return (\n          <EventPostDetails3\n            handleBack={handleBack}\n            fields={fields}\n            setFields={setRegFields} handlePost={handleEventPost}>\n          </EventPostDetails3>);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n\n  const handleEventPost = (allFields) => {\n    var oAllowed = false;\n    if (participantsType === \"open\") {\n      oAllowed = true\n    }\n    setLoading(true);\n    try {\n      var data = new FormData();\n      const payload = {\n        user_id: user.user_id,\n        name: eventName,\n        description: shortDesc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: fees,\n        about: about,\n        // organizer: organizer,\n        fee_type: feeType,\n        requirements: selectedrequirements,\n        college_name: collegeName,\n        college_id: collegeId,\n        venue_type: addressType,\n        venue: building,\n        reg_fields: allFields,\n        reg_mode: registrationMode,\n        o_allowed: oAllowed,\n        platform_details: platformDetails\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL+'/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data,\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            var data2 = new FormData();\n            data2.append(\"image\", image);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/uploadimage?id=${value.eventId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data2,\n            }).then(response => {\n              if (response.status === 200) {\n                response.json().then(val => {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"Event Added Successfully\",\n                    type: \"success\",\n                    autoHide: \"4000\"\n                  })\n                })\n              }\n            })\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n          })\n        }\n      })\n\n\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: '5000',\n      })\n    }\n  }\n\n  function setRegFields(f) {\n    setFields(f);\n  }\n\n  function handlePostwithoutregFileds() {\n    handleEventPost(null);\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function handleCloseButton() {\n    history.goBack();\n  }\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Event Added Successfully\") {\n      history.replace(\"/home\");\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      {<Backdrop open={loading} className={classes.backdrop}><CircularProgress></CircularProgress></Backdrop>}\n      <main className={classes.layout}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleCloseButton}>\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Post your Event\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you.\n                </Typography>\n              </React.Fragment>\n            ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                </React.Fragment>\n              )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport Logo from '../Components/Images/logo.svg';\nimport { Button } from '@material-ui/core';\n\n\nimport { Redirect } from 'react-router';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    \n    grow: {\n        flexGrow: 1,\n        alignItems: 'center',\n    },\n    sectionDesktop: {\n\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    tabs: {\n        display: 'none',\n        [theme.breakpoints.up('lg')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginLeft: theme.spacing(4),\n        },\n    },\n    mobiletab: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    tabPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    flex_section: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'row',\n        // minHeight: 0\n    },\n\n    flex_col_scroll: {\n        flexGrow: 1,\n        overflow: 'auto',\n        // minHeight: '100vh'\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n        fontFamily: 'Gugi',\n        marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n      },\n    '@global': {\n        '*::-webkit-scrollbar': {\n          width: '0.5em',\n          height: '0.5em'\n        },\n        '*::-webkit-scrollbar-track': {\n          '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '*::-webkit-scrollbar-thumb': {\n          backgroundColor: '#ad9d9d',\n          outline: '1px solid slategrey'\n        }\n      },\n      mobileTitle:{\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n        \n      },\n      titleButton: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'inline-block',\n        },\n        margin: theme.spacing(0),\n        padding: theme.spacing(0),\n        textTransform: 'none'\n      },\n}));\n\nexport default function MiniDrawer(props) {\n    const classes = useStyles();\n    // const theme = useTheme();\n    const t = localStorage.getItem('theme');\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n    // const [value, setValue] = React.useState(0);\n    // const [searchedEvent, setSearchedEvent] = React.useState([]);\n\n    const isMenuOpen = Boolean(anchorEl);\n    // const [open, setOpen] = React.useState(false);\n    const token = localStorage.getItem('token');\n\n    const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n    // const [currentUser, setCurrentUser] = React.useState({});\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    \n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // setCurrentUser(value[0]);\n                    props.setUser(value[0])\n                    if (value[0].college_name === null) {\n                        setUserDetailsDone(false);\n                    }\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n\n// eslint-disable-next-line\n    }, [token])\n\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        return <Redirect to=\"/userinfo\"></Redirect>\n    }\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        // setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n\n\n    function handleThemeChange(event) {\n        // console.log(event.target.checked);\n        setDarkThemeSelected(event.target.checked);\n        if (event.target.checked) {\n            localStorage.setItem('theme', 'dark');\n            window.location.reload(false);\n        }\n        else {\n            localStorage.setItem('theme', 'light');\n            window.location.reload(false);\n        }\n    }\n\n\n\n    function handleSignout(event) {\n\n        fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then((result) => {\n            result.json().then((data) => {\n                if (data.message === \"success\") {\n                    localStorage.removeItem('token');\n                    localStorage.removeItem('tabIndex');\n                    props.handleSignout()\n                }\n            })\n        })\n\n    }\n    function handleHomeClick() {\n        props.handleHomeClick()\n        // props.history.push(\"/home\")\n        // localStorage.setItem('tabIndex',2);\n      }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}>\n            <MenuItem> Dark Theme <Switch\n                checked={darkThemeSelected}\n                onChange={handleThemeChange}\n                color=\"primary\"\n                name=\"checkedB\"\n                inputProps={{ 'aria-label': 'dark mode checkbox' }}\n            /></MenuItem>\n            <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n        </Menu>\n    );\n\n\n\n\n    const handleClose = () => {\n        setNotificationsOpen(false);\n    };\n\n    \n\n    function handleNotificationClick() {\n        setNotificationsOpen(true);\n    }\n\n\n    const handleDrawerOpen = () => {\n        props.setDOpen(true);\n    };\n\n    function handleTitleButtonClick() {\n        localStorage.setItem('tabIndex', 0)\n        props.handleHomeClick()\n      }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                color=\"secondary\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: props.dOpen,\n                })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: props.dOpen,\n                        })}>\n                        <MenuIcon color=\"primary\" />\n                    </IconButton>\n                    <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n                    <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n                    <div className={classes.grow} />\n                    <Typography variant=\"h5\" noWrap>{props.event.name}</Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton onClick={handleHomeClick}><HomeIcon></HomeIcon></IconButton>\n                        <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                            <Badge badgeContent={0} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\">\n                            <SettingsIcon></SettingsIcon>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMenu}\n            <NotificationsDialog open={notificationsOpen} handleClose={handleClose}></NotificationsDialog>\n        </div>\n    );\n}\n\n\n\n\n\n","import React from 'react';\n\n\n//Materail imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function AnnouncementForm(props) {\n  const theme = useTheme()\n  const token = localStorage.getItem('token');\n  const [title, setTitle] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [visibility, setVisibility] = React.useState(\"All\");\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleDescChange(event) {\n    setDesc(event.target.value);\n  }\n\n\n  function handleVisibilityChange(event, value) {\n    console.log(value);\n    setVisibility(value);\n  }\n  function handleAddButton() {\n    console.log(visibility);\n    var visible_all = true;\n    if (visibility !== \"All\") {\n      visible_all = false;\n    }\n    try {\n      var data = new FormData();\n      const d = { event_id: props.id, title: title, description: desc, visible_all: visible_all }\n      data = JSON.stringify(d);\n      console.log(data);\n      fetch(process.env.REACT_APP_API_URL+`/api/event/add_announcement`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        console.log(response);\n        response.json().then(value => {\n          console.log(value);\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Added successfully',\n            type: \"success\",\n            autoHide: 2000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n    props.handleClose()\n\n  }\n  const handleClose = async (event, reason) => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Announcement</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                fullWidth\n                value={title}\n                required\n                onChange={handleTitleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                fullWidth\n                value={desc}\n                required\n                onChange={handleDescChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Announcement visibility</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={visibility} onChange={handleVisibilityChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"All\" control={<Radio color=\"default\" />} label=\"All\" />\n                <FormControlLabel value=\"Registered Users\" control={<Radio color=\"default\" />} label=\"Registered Users\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Add\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {  useTheme } from '@material-ui/core/styles';\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SendEmailForm(props) {\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const [content, setContent] = React.useState(null);\n\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleContentChange(event) {\n        setContent(event.target.value);\n    }\n\n    function handleAddButton() {\n        try {\n            var data = new FormData();\n            const d = { \n                event_id: props.id, \n                title: title, \n                content: content,\n                emails: props.emails}\n            data = JSON.stringify(d);\n            console.log(data);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/sendemail`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                response.json().then(value => {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Added successfully',\n                        type: \"success\",\n                        autoHide: 2000\n                    });\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n        props.handleClose()\n\n    }\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    // boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Content for your Email</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Enter everything about your event in detail\"\n                                autoComplete='off'\n                                required\n                                id=\"content\"\n                                name=\"content\"\n                                label=\"Content\"\n                                fullWidth\n                                onChange={handleContentChange}\n                                value={content || \"\"}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AddAnnouncementForm from './AddAnnouncementForm';\nimport SendEmailForm from './SendEmailForm';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [announcementDialog, setAnnouncementDialog] = React.useState(false);\n  const [sendEmailDialog, setSendEmailDialog] = React.useState(false);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            setRowValues(rowValues => [...rowValues, d.data])\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  function handleAddAnnouncement() {\n    setAnnouncementDialog(true);\n  }\n\n  function handleAnnoucementClose() {\n    setAnnouncementDialog(false);\n  }\n\n  function handleSendEmail() {\n    console.log(selected);\n    setSendEmailDialog(true);\n  }\n  function handleSendEmailClose() {\n    setSendEmailDialog(false);\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <SendEmailForm open={sendEmailDialog} emails={selected} handleClose={handleSendEmailClose}></SendEmailForm>\n      <AddAnnouncementForm open={announcementDialog} id={event._id} handleClose={handleAnnoucementClose}></AddAnnouncementForm>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button variant=\"outlined\" onClick={handleAddAnnouncement} className={classes.button}>Add Announcement</Button>\n          <Button variant=\"contained\" onClick={handleSendEmail} className={classes.button}>Send Emails to Selected</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3} >\n\n        <Paper className={classes.fixedHeightPaper}>\n          <Typography>Total Registrations</Typography>\n          <Typography component=\"p\" variant=\"h4\">\n            {rowValues.length}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\n// import AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { TextField } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0.5)\n    },\n    root5: {\n        marginLeft: theme.spacing(0.5),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textField: {\n        zIndex: '100',\n        position: 'fixed',\n        bottom: '0px'\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    // console.log(event)\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                console.log(value);\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div className={classes.textField}>\n                            {/* <TextField\n                                // disabled={props.loading}\n                                fullWidth\n                                placeholder=\"Type your message\"\n                                multiline\n                                // onChange={handleNewMessage}\n                                // value={newmessage || \"\"}\n                                rowsMax=\"3\"\n                            // onKeyUp={handleKeyPress}\n                            >\n\n                            </TextField> */}\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    // padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    // margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst EventEdit = (props) => {\n  var event = props.event;\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error'\n  });\n\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [regLink, setRegLink] = React.useState(null);\n  const [regFees, setRegFees] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  // const [image, setImage] = React.useState(null);\n  // const [imageName, setImageName] = React.useState(\"\");\n  // const [addressType,setAddressType] = React.useState(\"\");\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [regMode, setRegMode] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(null);\n  const [participantType, setParticipantsType] = React.useState(\"open\");\n  const [image, setImage] = React.useState(null);\n  const [imageUrl, setImageurl] = React.useState(null);\n  const [imageUpdated, setImageUpdated] = React.useState(false);\n  const [venue, setVenue] = React.useState(null);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const { vertical, horizontal, open, message, type } = state;\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n\n  const token = localStorage.getItem('token');\n\n\n  const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  // const colleges = [\"VIT University\", \"GITAM University\", \"SRM University\"];\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n  }, [token])\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setendDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDate(date)\n  };\n  React.useEffect(() => {\n    setEventThemes(event.tags);\n    setEventType(event.event_type);\n    setName(event.name);\n    setDesc(event.description);\n    setStartDate(event.start_time);\n    setendDate(event.finish_time);\n    setRegEndDate(event.registration_end_time);\n    setEventMode(event.event_mode);\n    setRegLink(event.reg_link);\n    setAbout(event.about);\n    setRegFees(event.fees);\n    setSelectedRequirements(event.requirements);\n    setFeeType(event.fee_type);\n    setCollegeName(event.college_name);\n    setRegMode(event.reg_mode);\n    setOrganizer(event.organizer);\n    setVenue(event.venue);\n    setVenueCollege(event.venue_college);\n    // setParticipantsType(event.o_allowed)\n    if (event.o_allowed === true) {\n      setParticipantsType(\"open\")\n    }\n    else {\n      setParticipantsType(\"onlycollege\")\n    }\n\n  }, [token, event])\n\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Saved changes successfully\") {\n      // history.replace()\n      // history.replace(\"/otpverification\")\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  };\n\n  async function handleEventPost(e) {\n    e.preventDefault();\n    setLoading(true);\n    var oAllowed = false;\n    if (participantType === \"open\") {\n      oAllowed = true\n    }\n    // console\n    try {\n      // console.log(\"started\");\n      // getBase64(image, (result) => {\n      var data = new FormData();\n      const payload = {\n        eventId: event._id,\n        name: name,\n        description: desc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        // poster: result,\n        reg_link: regLink,\n        fee: regFees,\n        about: about,\n        fee_type: feeType,\n        college: collegeName,\n        organizer: organizer,\n        requirements: selectedrequirements,\n        o_allowed: oAllowed,\n        reg_mode: regMode,\n        venue: venue,\n        venue_college: venueCollege\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/updateevent', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            // console.log(value);\n            event = value.event;\n            if (imageUpdated) {\n              var data2 = new FormData()\n              data2.append(\"image\", image);\n              fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${event._id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: data2\n              }).then(res => {\n                if (res.status === 200) {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"successful\",\n                    type: \"success\",\n                    autoHide: 300\n                  })\n                }\n              })\n            }\n            else {\n              setLoading(false);\n              setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"Saved changes successfully\",\n                type: \"success\"\n              })\n            }\n            // history.replace(\"/home\")\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: value,\n              type: \"error\"\n            })\n          })\n        }\n      })\n\n      // })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleeventTypsChange(event, value) {\n    setEventType(value);\n  }\n\n  function handleeventTagsChange(event, values) {\n    setEventThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    setSelectedRequirements(values);\n  }\n\n  // function handleChange(event) {\n  //   if (event.target.files[0]) {\n  //     setImage(event.target.files[0]);\n  //     const fileName = event.target.files[0].name;\n  //     setImageName(fileName);\n  //   }\n\n  // }\n\n  function handleAddressTypeChange(evemt, value) {\n    // setAddressType(value);\n  }\n  function handleName(event) {\n    setName(event.target.value)\n  }\n  function handleDesc(event) {\n    setDesc(event.target.value);\n  }\n  function handleFeeTypeChange(event, value) {\n    // props.setFeeType(value)\n    setFeeType(value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // props.setCollegeName(value);\n    setCollegeName(value);\n  }\n  function handleEventMode(event) {\n    setEventMode(event.target.value);\n  }\n\n  function handleRegLink(event) {\n    setRegLink(event.target.value);\n  }\n  function handleFees(event) {\n    setRegFees(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    setParticipantsType(value)\n  }\n  function handleVenue(event) {\n    setVenue(event.target.value);\n  }\n  function handleVenueCollegeChange(event, value) {\n    setVenueCollege(value);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n      //   setImageAsFile(imageFile => (image))\n      const url = URL.createObjectURL(event.target.files[0]);\n      //   const fileType = event.target.files[0].type;\n      setImageurl(url)\n      setImageUpdated(true);\n      //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n    }\n\n  }\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <form className={classes.form} novalidate onSubmit={handleEventPost}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} >\n              <input id=\"contained-button-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n              <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                badgeContent={<label htmlFor=\"contained-button-file\">\n                  <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <EditIcon></EditIcon>\n                  </IconButton>\n                </label>}>\n                <img height=\"160\" width=\"150\" alt=\"poster\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`} ></img>\n              </Badge>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventName\"\n                name=\"eventName\"\n                label=\"Event name\"\n                value={name || \"\"}\n                onChange={handleName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"shortdesc\"\n                name=\"shortdesc\"\n                label=\"Short Description\"\n                fullWidth\n                value={desc || \"\"}\n                onChange={handleDesc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"startDate\"\n                  label=\"Event Start Date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"endDate\"\n                  label=\"Event End Date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={handleendDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"regEndDate\"\n                  label=\"Registration End Date\"\n                  name=\"regEndDate\"\n                  value={regEndDate}\n                  onChange={handleRegEndDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Event Mode</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Event Mode\"\n                  value={eventMode || \"\"}\n                  onChange={handleEventMode}\n                  inputProps={{\n                    name: 'eventMode',\n                    id: 'outlined-age-native-simple',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Online\">Online</option>\n                  <option value=\"Offline\">Offline</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={eventTypes}\n                getOptionLabel={(option) => option}\n                value={eventType || \"\"}\n                onChange={handleeventTypsChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Event Type\" />}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"tags-filled\"\n                options={eventTypes.map((option) => option)}\n                // defaultValue={[eventTypes[1]]}\n                freeSolo\n                value={eventThemes || []}\n                onChange={handleeventTagsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Event Themes\" placeholder=\"Event Themes\" />\n                )}\n              />\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <input\n                id=\"contained-button-file\"\n                required\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n                style={{ display: \"none\" }}>\n\n              </input>\n\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventposter\"\n                name=\"eventposter\"\n                label=\"Event Poster\"\n                component=\"span\"\n                value={imageName}\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"start\">\n                      <label htmlFor=\"contained-button-file\">\n                        <IconButton component=\"span\" >\n                          <CameraAltIcon></CameraAltIcon>\n                        </IconButton>\n                      </label>\n\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            </Grid> */}\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Entry Fee</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={feeType || \"\"} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n                <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n              </RadioGroup>\n            </Grid>\n            {regMode !== \"form\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  id=\"regLink\"\n                  name=\"regLink\"\n                  label=\"Registration Link\"\n                  fullWidth\n                  value={regLink || \"\"}\n                  onChange={handleRegLink}\n                />\n              </Grid>}\n            {feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"regFees\"\n                name=\"regFees\"\n                value={regFees || \"\"}\n                label=\"Registration Fees\"\n                onChange={handleFees}\n                fullWidth\n              // helperText={\"Enter 0 if your event is free\"}\n              />\n            </Grid>}\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                disabled\n                id=\"combo-box-demo\"\n                options={colleges}\n                getOptionLabel={(option) => option}\n                value={collegeName || \"\"}\n                onChange={handleCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth >\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  disabled\n                  label=\"Registration\"\n                  inputProps={{\n                    name: 'registrationMode',\n                    id: 'outlined-age-native-simple',\n                  }}\n                  value={regMode || \"\"}\n                // onChange={handleRegistrationModeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"form\">Our Platform(Ellipse)</option>\n                  <option value=\"link\">Other</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                id=\"organizer\"\n                name=\"organizer\"\n                label=\"Organizer\"\n                fullWidth\n                value={organizer || \"\"}\n              />\n            </Grid> */}\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"tags-filled\"\n                options={requirements.map((option) => option)}\n                freeSolo\n                value={selectedrequirements}\n                onChange={handleRequirementsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Participation</FormLabel>\n              <RadioGroup name=\"participanttype\" value={participantType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n                <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${collegeName}`} />\n              </RadioGroup>\n            </Grid>\n            {eventMode === \"Offline\" && <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup disabled aria-label=\"address\" name=\"address\" defaultValue=\"College/University\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel disabled value=\"College/University\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>}\n            {eventMode === \"Offline\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  value={venue || \"\"}\n                  onChange={handleVenue}\n                  id=\"building\"\n                  name=\"building\"\n                  label=\"Room No & Building\"\n                  fullWidth\n                />\n              </Grid>\n            }\n            {eventMode === \"Offline\" && <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                value={venueCollege}\n                getOptionLabel={(option) => option}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter everything about your event in detail\"\n                autoComplete='off'\n                // required\n                value={about || \"\"}\n                id=\"about\"\n                name=\"about\"\n                label=\"About\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save Changes\"}\n          </Button>\n        </form>\n      </div>\n\n      {/* </Grid> */}\n      {/* <Box mt={2}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}\n\nexport default withRouter(EventEdit);\n\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\n\n\nimport EventDetailsNavigationBar from '../Components/EventDetailsNavigationBar';\nimport AnnouncementPanel from '../Components/EventsAnnouncementsPanel';\nimport AboutPanel from '../Components/AboutEventPanel';\nimport TimeLinePanel from '../Components/EventTimeLinePanel';\nimport DashboardPanel from '../Components/DashboardPanel';\nimport ChatPanel from '../Components/EventDetailsChatPanel';\nimport EventPost from './EventEdit';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  \n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3),\n    },\n  },\n\n}));\n\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const token = localStorage.getItem('token');\n  const id = props.match.params.eventId;\n\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [event, setEvent] = React.useState({});\n  const [adminAccess, setAdminAccess] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [selected, setSelected] = React.useState({\n    infoSelected: true,\n    dashBoardSelected: false,\n    timilineSelected: false,\n    announcementSelected: false,\n    settingsSelected: false,\n    editEventSelected: false,\n    chatSelected: false\n  })\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(val => {\n        setEvent(val.event);\n        \n      })\n    })\n    \n  }, [token,id])\n\n  console.log(adminAccess)\n  React.useEffect(()=>{\n    if( event.user_id !== undefined && currentUser.user_id !== undefined){\n      if (event.user_id === currentUser.user_id) {\n        // console.log(event);\n        // console.log(currentUser)\n        setAdminAccess(true);\n      }\n    }\n    \n  },[currentUser,event])\n\n\n\n  // const handleDrawerOpen = () => {\n  //   setDrawerOpen(true);\n  // };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  function handleHomeClick() {\n    props.history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n\n\n\n  function infoClicked() {\n    setSelected({\n      infoSelected: true,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n\n  function dashBoardClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: true,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n  function timelineClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: true,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n  function announcementsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: true,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n  function settingsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: true,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n  function editEventClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: true,\n      chatSelected: false\n    })\n  }\n  function chatClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: true\n    })\n  }\n  const {\n    infoSelected,\n    dashBoardSelected,\n    timilineSelected,\n    announcementSelected,\n    settingsSelected,\n    editEventSelected, chatSelected } = selected;\n\n    function handleSignout(){\n      props.history.replace('/');\n    }\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <EventDetailsNavigationBar event={event} handleSignout={handleSignout} handleHomeClick={handleHomeClick} setUser={setCurrentUser}  dOpen={drawerOpen} setDOpen={setDrawerOpen}></EventDetailsNavigationBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: drawerOpen,\n          [classes.drawerClose]: !drawerOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: drawerOpen,\n            [classes.drawerClose]: !drawerOpen,\n          }),\n        }}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon color=\"primary\"/> : <ChevronLeftIcon color=\"primary\"/>}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={infoClicked} selected={infoSelected}>\n            <ListItemIcon >\n              <InfoIcon color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n          <ListItem button onClick={timelineClicked} selected={timilineSelected}>\n            <ListItemIcon>\n              <TimelineIcon color=\"primary\"></TimelineIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Schedule\" />\n          </ListItem>\n          <ListItem button onClick={announcementsClicked} selected={announcementSelected}>\n            <ListItemIcon>\n              <AnnouncementIcon color=\"primary\"></AnnouncementIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Announcements\" />\n          </ListItem>\n          <ListItem button onClick={chatClicked} selected={chatSelected}>\n            <ListItemIcon>\n              <TelegramIcon color=\"primary\"></TelegramIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Chat\" />\n          </ListItem>\n        </List>\n        <Divider />\n        {\n          adminAccess && <List>\n            <ListItem button onClick={dashBoardClicked} selected={dashBoardSelected}>\n              <ListItemIcon >\n                <DashboardIcon color=\"primary\"/>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n            <ListItem button onClick={editEventClicked} selected={editEventSelected}>\n              <ListItemIcon>\n                <EditIcon color=\"primary\"></EditIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Edit Event\" />\n            </ListItem>\n            <ListItem button onClick={settingsClicked} selected={settingsSelected}>\n              <ListItemIcon>\n                <SettingsIcon color=\"primary\"></SettingsIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n          </List>\n        }\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* <Typography align='center' variant=\"h4\" style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>{event.name}</Typography> */}\n        {\n          infoSelected && event != null && <AboutPanel event={event}></AboutPanel>\n        }\n        {\n          editEventSelected && event != null && <EventPost event={event} ></EventPost>\n        }\n        {\n          timilineSelected && event != null && <TimeLinePanel event={event}></TimeLinePanel>\n        }\n        {\n          dashBoardSelected && event != null && <DashboardPanel event={event}></DashboardPanel>\n        }\n        {\n          chatSelected && event != null && <div className={classes.chat} ><ChatPanel user={currentUser} open={drawerOpen} event={event}></ChatPanel></div>\n        }\n        {\n          announcementSelected && event != null && <AnnouncementPanel event={event}></AnnouncementPanel>\n        }\n      </main>\n    </div>\n  );\n}\n\n\n\n\n\n","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n// import axios from 'axios';\n\n//MaterialUI imports\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// import { set } from 'date-fns';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const user = React.useContext(AuthContext);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n  const [formValues, setFormValues] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  // const [fields, setFields] = React.useState([]);\n  const [normalFields, setNormalFields] = React.useState([]);\n  const [dropDownFields, setDropDownFields] = React.useState([]);\n  const [checkboxFields, setCheckBoxFields] = React.useState([]);\n  const [radioFields, setRadioFields] = React.useState([]);\n  const [dateFields, setDateFields] = React.useState([]);\n  const [longDescFields, setLongDescFields] = React.useState([]);\n  // const [dateFields,setDateFields] = React.useState([]);\n  const [linkFields, setLinkFields] = React.useState([]);\n\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const id = props.match.params.eventId;\n  const [backDropOpen, setBackDropOpen] = React.useState(true);\n  const [event, setEvent] = React.useState(null);\n  const [checkedValues, setCheckedValues] = React.useState([]);\n  const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      console.log(response);\n      response.json().then(value => {\n        setEvent(value.event);\n        // setFields(value.event.regFields);\n        const allFields = value.event.reg_fields;\n        console.log(allFields);\n        if (allFields != null) {\n          allFields.forEach(f => {\n            if (f.title === \"Name\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.name }))\n            }\n            else if (f.title === \"Email\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.email }));\n            }\n            else if (f.title === \"College\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.college_name }));\n            }\n            else {\n              setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n            }\n            if (f.field === \"checkbox\") {\n\n            }\n\n          })\n          // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n          setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n          setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n          setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n          setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n          setDateFields(allFields.filter((f) => f.field === \"date\"));\n          // setLongDescFields(allFields.filter((f) => f.field === \"long_desc\"));\n          setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n          setLinkFields(allFields.filter(f => f.field === \"link\"));\n        \n        }\n        setBackDropOpen(false);\n      })\n    })\n  }, [token, id,user])\n\n  function handleClose() {\n    if (message === \"Registered successfully\") {\n      props.history.push('/home')\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  }\n\n  function handleChange(event) {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  }\n  const handleChange2 = (name) => (event, values) => {\n    setFormValues({ ...formValues, [name]: values });\n\n  }\n  const handleChange3 = (name) => (event) => {\n    if (event.target.checked) {\n      setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n      const array = [];\n      checkedValues.forEach((v, i) => {\n        if (v[name]) {\n          array.push(v[name])\n        }\n      });\n      array.push(event.target.name);\n      setFormValues({ ...formValues, [name]: array });\n    }\n  }\n\n  const handleDateChange = (name) => (date) => {\n    // console.log(name);\n    // console.log(date);\n    setFormValues({ ...formValues, [name]: date })\n  };\n\n  const handleLondDescChange = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value })\n  }\n\n  function handleradioChange(event, value) {\n    // console.log(event.target.name);\n    // console.log(value);\n    setFormValues({ ...formValues, [event.target.name]: value });\n    // props.setFeeType(value)\n  }\n\n  function handleEventRegistration(e) {\n    e.preventDefault();\n    // setLoading(true);\n    // console.log(checkedValues);\n    console.log(formValues);\n    const formkeys = Object.keys(formValues);\n    formkeys.forEach(v =>{\n      if(formValues[v] === null){\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please fill in all fields',\n          type: \"error\",\n          autoHide: 4000\n        });\n      }\n    })\n    try {\n      var data = new FormData();\n      const d = { data: formValues }\n      data = JSON.stringify(d);\n      fetch(process.env.REACT_APP_API_URL+`/api/event/register?id=${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        console.log(response);\n        response.json().then(value => {\n          console.log(value);\n          \n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Registered successfully',\n            type: \"success\",\n            autoHide: 200\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n\n  }\n\n  function handleBack() {\n    props.history.goBack();\n  }\n\n\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Backdrop className={classes.backdrop} open={backDropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleBack}>\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      {event != null &&\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Registration for \" + event.name}\n          </Typography>\n          <form className={classes.form} onSubmit={handleEventRegistration}>\n\n            <Grid container spacing={2}>\n              {normalFields.map((field, index) => {\n                if (field.title === \"College\") {\n                  return (\n                    <Grid item xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        id={field.title}\n                        options={colleges}\n                        getOptionLabel={(option) => option}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        disabled\n                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                      />\n                    </Grid>)\n                }\n                else if (field.title === \"Email\") {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        disabled\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n                else {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n\n              })}\n              {checkboxFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                      <FormLabel component=\"legend\">{field.title}</FormLabel>\n                      <FormGroup class={classes.formgroup}>\n                        {field.options.map((option) => {\n                          return <FormControlLabel\n                            control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                            label={option}\n                          />\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                    {/* <Autocomplete\n                      id={field.name}\n                      multiple\n                      // value={}\n                      onChange={handleChange2(field.name)}\n                      options={field.options.map((option) => option)}\n                      getOptionLabel={(option) => option}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.name} placeholder={field.name} />\n                      )}\n                    /> */}\n                  </Grid>\n                )\n              })}\n              {dropDownFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id={field.title}\n                      options={field.options.map((option) => option)}\n                      // freeSolo\n                      // onChange={handleeventTagsChange}\n                      onChange={handleChange2(field.title)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.title} placeholder={field.name} />\n                      )}\n                    />\n                  </Grid>\n                )\n              })}\n              {radioFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormLabel required component=\"legend\">{field.title}</FormLabel>\n                    <RadioGroup required aria-label=\"address\" name={field.title} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                    {field.options.map((option)=>{\n                      return <FormControlLabel value={option} control={<Radio color=\"default\" />} label={option} />\n                    })}\n                      \n                      {/* <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" /> */}\n                    </RadioGroup>\n                  </Grid>\n                )\n              })}\n              {\n                dateFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                          // minDate={Date.now()}\n                          fullWidth\n                          required\n                          variant=\"inline\"\n                          format=\"dd MMM yyyy hh:mm a zzz\"\n                          margin=\"normal\"\n                          id=\"startDate\"\n                          label=\"Start Date\"\n                          name=\"startDate\"\n                          value={formValues[field.title]}\n                          onChange={handleDateChange(field.title)}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n\n                    </Grid>\n                  )\n                })\n              }\n              {\n                longDescFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        multiline={true}\n                        rows=\"5\"\n                        variant='outlined'\n                        placeholder={field.title}\n                        autoComplete='off'\n                        required\n                        id={field.title}\n                        name={field.title}\n                        label={field.title}\n                        fullWidth\n                        onChange={handleLondDescChange}\n                      // value={props.about}\n                      />\n                    </Grid>\n                  )\n                })\n              }\n              {\n                linkFields.map((field,index)=>{\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                })\n              }\n\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox color=\"primary\" name=\"terms\" />}\n                  label=\"I accept the terms and conditions\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n              {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Register\"}\n            </Button>\n          </form>\n        </div>\n      }\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 2)\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const allEvents = React.useContext(EventsContext);\n    const activeEvents = React.useContext(ActiveEvents);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const postedEvents = allEvents.filter((val) => {\n    //     return val.user_id === user.user_id;\n    // });\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n    }\n\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\">\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={8} lg={8} >\n                        {/* <div className={classes.root2}> */}\n                        <Paper className={classes.root2}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"on\">\n                                <Tab label=\"Registered Events\" />\n                                <Tab label=\"Past Events\" />\n                            </Tabs>\n                        </Paper>\n                        <div className={classes.content}>\n                            {value === 0 && <Grid container component=\"main\" alignItems=\"center\" spacing={0}>\n                                {regEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n\n                            </Grid>}\n                            {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={0}>\n                                {pastEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n                            </Grid>}\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AboutEventsPanel from '../Components/AboutEventPanel';\nimport { Dialog } from '@material-ui/core';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const id = props.match.params.eventId;\n    const [event, setEvent] = React.useState({});\n    const [open, setOpen] = React.useState(false);\n    if(token){\n        \n        props.history.replace(`/event/${id}`)\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+`/api/event?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setEvent(value.event);\n            })\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <Typography\n                    align='center'\n                    variant=\"h4\"\n                    style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>\n                    {event.name + \"(Login to Register and Know More Info)\"}\n                </Typography>\n                <AboutEventsPanel event={event}></AboutEventsPanel>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Register</Button>\n            </div>\n            <Dialog\n                open={open}\n                maxWidth=\"md\"\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Login to Register for the Event/Contest\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './Pages/signin';\nimport SignUp from './Pages/signup';\nimport ForgotPassword from './Pages/ForgotPassword';\nimport { AuthProvider } from \"./Auth\";\nimport OTPVer from './Pages/otpverification';\nimport UserInfo from './Pages/UserInfo';\nimport Layout from './Pages/Layout';\nimport CalenderPanel from './Pages/CalenderPanel';\nimport EventsTabPanel from './Pages/EventsTabpanel';\nimport ProfileTabPanel from './Pages/ProfileTabpanel';\nimport EventPostForm from './Pages/EventPostForm';\n// import ChatPage from './Pages/ChatPage';\nimport EventDetails from './Pages/EventDetails';\nimport EventRegisterForm from './Pages/EventRegistrationform';\nimport ExplorePanel from './Pages/ExplorePanel';\nimport UnregisteredPage from './Pages/UnregisteredPage';\nimport NetworkDetector from './NetworkDetector';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/signin\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route exact path=\"/userinfo\" component={UserInfo}></Route>\n            <Route exact path=\"/otpverification\" component={OTPVer}></Route>\n            <Route exact path=\"/un/event/:eventId\" component={UnregisteredPage}></Route>\n            {/* <Route exact path=\"/resetforgotpassword\" component ={ForgotPassword2}></Route> */}\n            <Route exact path=\"/event/:eventId\" component={EventDetails} />\n            <Layout>\n              <Route path=\"/home\" component={EventsTabPanel}></Route>\n              <Route exact path=\"/events\" component={CalenderPanel}></Route>\n              <Route exact path=\"/post\" component={EventPostForm}></Route>\n              <Route exact path=\"/profile\" component={ProfileTabPanel}></Route>\n              {/* <Route exact path=\"/chat\" component={ChatPage}></Route> */}\n\n              <Route exact path=\"/event/register/:eventId\" component={EventRegisterForm} />\n              <Route exact path=\"/yourevents\" component={ExplorePanel}></Route>\n            </Layout>\n          </Switch>\n\n\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\nexport default NetworkDetector(App);\n","import React, { Component } from 'react';\n\nexport default function (ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      if (condition === 'online') {\n        const webPing = setInterval(\n          () => {\n            fetch('//google.com', {\n              mode: 'no-cors',\n              })\n            .then(() => {\n              this.setState({ isDisconnected: false }, () => {\n                return clearInterval(webPing)\n              });\n            }).catch(() => this.setState({ isDisconnected: true }) )\n          }, 2000);\n        return;\n      }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div>\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n      type: \"dark\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#000000'\n      },\n      secondary: {\n        main: '#1C1C1E',\n      },\n      background:{\n        default: \"#000000\"\n      }\n    },\n    \n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n      type: \"light\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#ffffff'\n      },\n      secondary: {\n        main: '#e5e5e5'\n      },\n      background:{\n        default: \"#ffffff\"\n      }\n    },\n    \n    \n});\n\nexport {lightTheme,darkTheme};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {lightTheme,darkTheme} from './Components/theme'\nimport { CssBaseline } from '@material-ui/core';\nconst t = localStorage.getItem('theme');\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={t === 'light' ? lightTheme: darkTheme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}