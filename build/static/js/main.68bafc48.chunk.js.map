{"version":3,"sources":["Themes/SigninPageStyles.js","Components/Images/google-play-badge.png","Components/copyright.js","Components/Images/logo300.svg","Components/SupportDialog.js","Pages/signin.js","Themes/SignupPageStyles.js","Pages/signup.js","Pages/ForgotPassword.js","Auth.js","Pages/otpverification.js","Pages/UpdateUserInfo.js","Themes/MainHomeStyles.js","AuthContext.js","Components/EventShareDialog.js","Components/ImageDialog.js","Components/AboutEventPanel.js","Components/EventTimeLinePanel.js","Components/EventsAnnouncementsPanel.js","Components/ChatTextField.js","WebSocketContext.js","WebSocketDataContext.js","Components/MessageBox1.js","Components/MessageBox2.js","Components/MessageDeleteDialog.js","Components/EventsChatPanel.js","Components/EventsDialog.js","EventsContext.js","Components/NotficationsDialog.js","Components/Images/logo.svg","Pages/NavigationBar.js","ActiveEventsContext.js","Pages/Layout.js","Pages/CalenderPanel.js","Components/SortLeftPanel.js","Components/MobileSortPanel.js","Components/FeedBackDialog.js","Components/ProfileEventCard.js","Components/EventReportDialog.js","Components/EventCard.js","Components/EventsMainTabPanel.js","Pages/EventsTabpanel.js","Components/ProfilePostedEventsTabPanel.js","Components/ProfileAboutDataBox.js","Components/ProfileAboutTabPanel.js","Components/CertificateCard.js","Components/ProfileCertificateTabPanel.js","Components/MainProfileCard.js","Components/UpdateInfoTabPanel.js","Components/UpdatePasswordTabPanel.js","Components/MoreSettingsTabPanel.js","Components/UpdateProfileDialog.js","Pages/ProfileTabpanel.js","Components/EventPostDetails1.js","Components/EventPostDetails2.js","Components/AddFieldDialog.js","Components/AddRoundsDialog.js","Components/EventPostTermsandConditions.js","Components/EventPostDetails3.js","Components/SuccessPanel.js","Pages/EventPostForm.js","Components/MessageBox3.js","Components/MessageBox4.js","Components/MessageBox5.js","Components/MessageReplyDialog.js","Components/MainChatTextField.js","Components/MainChatPanel.js","Pages/ChatContactsPanel.js","Pages/ChatPage.js","Components/EventRegisterTermsandConditions.js","Pages/EventRegistrationform.js","Pages/ExplorePanel.js","Components/LoadingIndicator.js","Pages/UnregisteredPage.js","Pages/VerifyCertificate.js","Components/Images/un5.svg","Components/Images/un6.svg","Components/Images/un7.svg","Pages/HomePageCarousel.js","Components/HomePageEventCard.js","Pages/HomePage.js","Components/AnnouncementsEditPanel.js","Components/AddAnnouncementForm.js","Components/SendEmailForm.js","Components/DashboardPanel.js","Components/EventDetailsChatPanel.js","Components/EditRoundDialog.js","Pages/EventEdit.js","Components/AdminCertificateDashboad1.js","Components/AdminCertificateDashboard2.js","Components/Images/certificate_sample.png","Components/AdminCertificateDashboard3.js","Components/AdminCertificateDashboard.js","Components/SubmissionForm.js","Components/EventSubmissionPanel.js","Components/TeamMemberListItem.js","Components/TeamMemberRequestListItem.js","Components/EditTeamDialog.js","Components/EventsTeamSubPanel1.js","Components/EventsTeamSubPanel2.js","Components/EventsTeamSubPanel3.js","Components/EventsTeamChatPanel.js","Components/EventsTeamPanel.js","Components/EventDetailsTeamPanel.js","Components/CircularLoading.js","Components/EventSubmissionDialog.js","Components/SubmissionShareDialog.js","Components/EventAdminSubmissionPanel.js","Components/ModeratorListItem.js","Components/AdminSettingsPanel.js","Pages/EventDetails.js","Pages/ViewSubmission.js","App.js","NetworkDetector.js","Components/theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","height","wrapper","margin","spacing","position","paperRight","flexDirection","alignItems","backgroundColor","palette","secondary","main","padding","paddingBottom","borderRadius","minHeight","breakpoints","down","paperLeft","up","paperimage","avatar","marginTop","primary","form","width","submit","iPhoneImage","title","fontFamily","color","dark","fontWeight","hidden","image","maxHeight","maxWidth","footer","Copyright","Typography","variant","align","Link","href","Date","getFullYear","EventReportDialog","props","useTheme","React","useState","setTitle","desc","setDesc","Dialog","open","fullWidth","PaperProps","style","boxShadow","onClose","handleClose","aria-labelledby","DialogTitle","id","DialogContent","Grid","container","item","xs","TextField","label","name","value","onChange","event","target","DialogActions","Button","onClick","rel","Alert","elevation","withRouter","history","classes","vertical","horizontal","message","type","autoHide","state","setState","loading","setLoading","token","setToken","isUserVerified","setIsUserVerified","email","setEmail","abortController","AbortController","browser","detect","supportOpen","setSupportOpen","timeout","ms","promise","Promise","resolve","reject","timer","setTimeout","Error","then","clearTimeout","catch","reason","a","localStorage","setItem","eventId","getItem","abort","push","FormData","payload2","data2","JSON","stringify","fetch","process","signal","headers","method","body","result","json","res","error","preventDefault","elements","password","payload","browser_name","device_os","os","data","response","status","isVerified","useremail","to","Fragment","component","className","CssBaseline","Snackbar","anchorOrigin","autoHideDuration","key","severity","sm","md","Box","justifyContent","m","p","src","PhoneImage","alt","GoogleBadge","Avatar","onSubmit","required","autoComplete","autoFocus","disabled","CircularProgress","size","paper","closeButton","right","top","nameError","setNameError","usernameError","setUserNameError","passwordError","setPasswordError","colleges","setColleges","collegeName","setCollegeName","collegeId","setCollegeId","collegesName","setCollegesName","signupButtonDisabled","setSignupButtonDisabled","useEffect","forEach","v","collegesNames","url","callback","isScriptExist","document","getElementById","script","createElement","onload","appendChild","loadScriptByURL","window","grecaptcha","ready","execute","action","recaptcha_token","success","score","replace","fullName","designation","username","terms","checked","college_id","val","tok","Container","inputProps","pattern","onInvalid","helperText","onInput","FormControl","InputLabel","htmlFor","Select","native","aria-label","Autocomplete","options","getOptionLabel","option","c","_id","renderInput","params","FormControlLabel","control","Checkbox","justify","mt","otp","setOtp","setPassword","loading2","setLoading2","nPassword","e","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","Provider","seconds","setSeconds","resendEnabled","setresetEnabled","removeItem","textArea","imageUrl","setImageurl","setImage","gender","bio","append","accept","files","URL","createObjectURL","Badge","overlap","badgeContent","IconButton","sizes","multiline","rows","placeholder","outline","marginBottom","flexGrow","background","grow","mobileTitle","titleButton","mobileTitleButton","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","borderBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","tabs","mobiletab","tabPanel","flex_section","flex_col_scroll","overflow","rpaper","textAlign","text","light","postButton","EventShareDialog","share_link","copyToClipBoard","copyMe","navigator","clipboard","writeText","imageBox","dialog","icons","ImageDialog","scroll","aria-describedby","fontSize","poster_url","alignContent","adminDetails","boxItem","minWidth","gridMain","border","gridItem","divider","opacity","overFlowText","textOverflow","AboutEventPanel","index","other","tags","requirements","setRequirements","timeLabel","setTimeLabel","setAdminDetails","imageDialogOpen","setImageDialogOpen","notRegistered","setNotRegistered","rulesHeight","setRulesHeight","themesHeight","setThemesHeight","undefined","user_id","calculateTimeLeft","difference","registration_end_time","timeLeft","start_time","finish_time","days","Math","floor","hours","minutes","setTimeLeft","x","getTimeLabel","cleanup","timerComponents","Object","keys","interval","role","lg","description","length","Chip","event_type","fee_type","event_mode","isTeamed","team_size","min_team_size","max_team_size","map","about","Divider","flexItem","venue","venue_college","fee","platform_details","itam","rounds","orientation","prizes","flexWrap","prize","themes","whiteSpace","split","rules","profile_pic","college_name","media","buttonDiv","button","large","tab","secondaryTail","startDate","endDate","regEndDate","Timeline","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","toDateString","toLocaleTimeString","sDate","start_date","eDate","end_date","timiline","root3","root5","CustomizedTimeline","announcements","setAnnouncements","registered","ann","visible_all","date","time","root2","pos","bottomBar","bottom","left","close","JustifyContent","sendButtonDisabled","setSendButtonDisabled","newmessage","setNewMessage","cl","setCl","clsx","rowsMax","onKeyUp","keyCode","shiftKey","handleSend","sendIcon","WebSocketContext","webSocketContext","setWebSocketContext","WebSocketDataContext","eventChatMessages","setEventChatMessages","teamChatMessages","setTeamChatMessages","teamUpdateStatus","setTeamUpdateStatus","deletedEventChatMessages","setDeletedEventChatMessages","deletedTeamChatMessages","setDeletedTeamChatMessages","inline","root6","textDecorationColor","ChatMessage","userType","setUserType","useContext","adminId","paddingTop","paddingRight","currentDate","messageDate","userName","user_pic","user_name","timeStyle","handleMessageDeleteButton","componentDecorator","decoratedHref","decoratedText","AlertDialog","setOpen","handleDeleteConfirmation","topBar","root4","progress","message2","message3","reference","setReferenece","chatMessages","setChatMessages","counterDate","openDeleteDialog","setOpenDeleteDialog","messageToBeDeleted","setMessageToBeDeleted","closeWebSocket","send","event_id","msg","onbeforeunload","mes","cMes","filter","scrollIntoView","behavior","Fade","in","unmountOnExit","MessageBox1","MessageBox2","d","now","toISOString","float","clear","ref","el","a11yProps","bottomTags","field","dialogContent","mobileHead","desktopHead","EventsDialog","t","setValue","shareDialogOpen","setShareDialogOpen","chatAcess","setChatAcess","subIndexValue","setSubIndexValue","handleShareClick","reg_mode","openTeams","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","dividers","handleReg","reg_link","textDecoration","EventsContext","allEvents","setAllEvents","FormDialog","notificationms","setNotifications","handleNotificationClick","n","handleClick","anchorEl","setAnchorEl","darkThemeSelected","setDarkThemeSelected","searchedEvent","setSearchedEvent","notificationsCount","setNotificationCount","isMenuOpen","Boolean","notificationsOpen","setNotificationsOpen","tabIndex","parseInt","handleChange","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","Switch","location","reload","handleeventClick","handleHomeClick","handleProfileClick","handleChatClick","handleTitleButtonClick","AppBar","Toolbar","Logo","noWrap","freeSolo","square","Tooltip","icon","edge","aria-controls","aria-haspopup","currentTarget","ActiveEventsContext","activeEvents","setActiveEvents","contextLoading","setContextLoading","backdrop","zIndex","drawer","authorized","setAuthorized","userDetailsDone","setUserDetailsDone","allEventsValue","activeEventsValue","webSocketValue","webSocketDataContextValue","webConnect","ws","WebSocket","onopen","onmessage","parse","onclose","check","readyState","verified","sort","b","Backdrop","subRpaper","fab","sideList","CalenderPanel","events","setEvents","selectedEvent","setSelectedEvent","registeredEvents","setRegisteredEvents","y","start","end","handlePostButtonClick","handleRegisterdEventClick","eventBackgroundColor","eventBorderColor","eventClick","info","defaultView","plugins","dayGridPlugin","buttonIcons","Fab","List","ListItem","ListItemAvatar","ListItemText","filterTextField","filterButton","SortLeftPanel","handleModeToggle","currentIndex","modeChecked","indexOf","newChecked","splice","setModeChecked","handleFeeToggle","feeChecked","setFeeChecked","utils","DateFnsUtils","DatePicker","format","sortStartDate","handleSortDateChange","InputProps","endAdornment","InputAdornment","sortEndDate","handleEndSortDateChange","labelId","dense","ListItemIcon","disableRipple","RadioGroup","sortCollgeType","handleSortCollegeChange","wrap","Radio","handleSortApplyButton","handlesortDiscardButton","MobileSortPanel","defaultValue","KeyboardButtonProps","ImgMediaCard","Card","CardMedia","CardContent","gutterBottom","CardActions","pathname","toUpperCase","morePopup","Eventcard","anchorRef","useRef","imageLoaded","setImageLoaded","reportDialogOpen","setReportDialogOpen","CardHeader","imageDialog","onLoad","subheader","disableSpacing","click","accordion","content","mainGrid","ExplorePanel","ActiveEvents","upComingEvents","onGoingEvents","cDate","regEvents","pastEvents","handleEventClick","Skeleton","animation","isFiltered","sortedEventsArray","EventCard","startTime","endTime","eventMode","eventType","regEndTime","registrationEndTime","feeType","feesType","handleImageDialogOpen","handleRegistrationButton","handleViewClick","mode","leftSubPaper","mobileFilterButton","skeleton","feedBackButton","setSortStartDate","setSortEndDate","sortCollegeType","setSortCollegeType","setSortedEventsArray","setIsFiltered","feeSortChecked","setFeeSortChecked","modeSortChecked","setModeSortChecked","filterDialogOpen","setFilterDialogOpen","registerdEvents","feedBackOpen","setFeedBackOpen","dateRangeSortedEvents","sortByDateRange","typeSortedEvents","sortByMode","feeSortedEvents","sortByCost","collegeSortedEvents","sortByCollege","sortByDate","dateSortedEvents","date1","date2","sEvents","sortedEvents","sEvent","getTime","tEvents","sDEvents","sevent","getDate","getMonth","includes","ProfilePostsTabPanel","postedEvents","setSellectedEvent","ProfileDataBox","setIcon","editIcon","handleEditButton","ProfileAboutDataBox","eventName","setEventName","certificate_status","download","certificate_url","iconlarge","ProfilePostedEventsTabPanel","UpdateInfoTabPanel","setName","setUserName","setBio","setGender","setDesignation","imageUpdated","setImageUpdated","updateButtonDisabled","setUpdateButtonDisabled","UpdatePasswordTabPanel","cPassword","setCPassword","setNPassword","UpdateProfile","MoreSettingsTabPanel","EventsTabPanel","eOpen","setEOpen","UpdateProfileDialog","buttons","AddressForm","startDateError","setStartDateError","endDateError","setEndDateError","regEndDateError","setRegEndDateError","eventTypes","setEventTypes","handleNext","setPoster","setImageUrl","fileName","setImageName","imageName","DateTimePicker","minDate","setStartDate","setEndDate","setRegEndDate","setEventMode","setEventType","FormLabel","setFeeType","regFees","setFees","eventTags","setEventTags","r","setAbout","multiple","eventThemes","values","setThemes","renderTags","getTagProps","college","participantsType","setParticipantsType","isTeam","setIsTeam","minTeamSize","setMinTeamSize","maxTeamSize","setMaxTeamSize","setPlatformDetails","platformDetails","aria-disabled","evemt","setAddressType","setBuilding","building","handleBack","setType","setRequired","selectedOptions","setSelectedOptions","handleAdd","req","listStyle","chip","linkField","setLinkField","selectedFields","setSelectedFields","alertopen","link","setChecked","roundsCount","FormGroup","onDelete","chipToDelete","fields","addingField","fName","DialogContentText","formgroup","EventPostForm","roundsDialogOpen","setRoundsDialogOpen","tandcOpen","setTandcOpen","prizeTitle","setPrizeTitle","prizeDesc","setPrizeDesc","setPrize","setPrizes","sName","handlePostButton","regMode","setFields","handlePost","handlePrizeDeleteButton","currentPrizes","handlePrizeFieldChange","setRounds","setRules","formControl","setRegMode","regLink","setRegLink","toLowercase","uR","fR","rou","SuccessPanel","showSuccessPanel","handleHomeScreenButton","handleEventScreenButton","appBar","layout","stepper","Checkout","activeStep","setActiveStep","steps","setSteps","shortDesc","setShortDesc","setendDate","registrationMode","setRegistrationMode","fees","setEventThemes","selectedrequirements","setSelectedRequirements","addressType","setBuildingAdress","organizer","setOrganizer","venueCollege","setVenueCollege","setShowSuccessPanel","handleEventPost","allFields","oAllowed","venue_type","reg_fields","o_allowed","setRegFields","f","goBack","Stepper","Step","StepLabel","step","poster","eventPoster","getStepContent","avatarLetterStyle","repliedMessage","reply","setReply","ev","handleReplyConfirmation","textField","header","user","team","openReplyDialog","setOpenReplyDialog","messageToBeReplied","setMessagesToBeReplied","chatType","team_id","handleReplyButton","handleInfoButton","mobile","setSelectedChat","openDialog","team_name","message_type","MessageBox3","replied_to","MessageBox5","MessageBox4","subRoot","ChatContactsPanel","teams","setTeams","chatValue","setChatValue","handleToggle","userid","setChatType","setChatId","setAdminId","innerWidth","handleToggle2","handleChatChange","selected","ChatPage","selectedChat","mobileChat","setMobileChat","canRegister","setCanRegister","userMessage","setUserMessage","formValues","setFormValues","uploadFiles","setUploadFiles","normalFields","setNormalFields","dropDownFields","setDropDownFields","checkboxFields","setCheckBoxFields","radioFields","setRadioFields","dateFields","setDateFields","longDescFields","setLongDescFields","linkFields","setLinkFields","fileUploadFields","setFileUploadFields","match","backDropOpen","setBackDropOpen","setEvent","checkedValues","setCheckedValues","handleLondDescChange","handleradioChange","handleFileSelect","uploadedFilesIds","formkeys","fileFormKeys","count","cField","finalValues","data1","file_name","class","array","i","LoadingIndicator","appbar","UnregisteredPage","found","setFound","menuButton","details","setDetails","userFound","setUserFound","setDate","participantname","participant_college","event_name","AutoPlaySwipeableViews","autoPlay","SwipeableViews","tutorialSteps","imgPath","DeviceDesign","DeviceDesign2","DeviceDesign3","img","carouselCaption","SwipeableTextMobileStepper","maxSteps","axis","direction","onChangeIndex","enableMouseEvents","abs","handleSignin","MobileStepper","nextButton","prevActiveStep","backButton","current","contains","handleListKeyDown","prevOpen","focus","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","handleSigninClick","HomePageEventCard","handleDeleteButton","AnnouncementForm","visibility","setVisibility","SendEmailForm","setContent","emails","table","buttonsPaper","fixedHeightPaper","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setHeaders","rowValues","setRowValues","setSelected","announcementDialog","setAnnouncementDialog","sendEmailDialog","setSendEmailDialog","fileColumns","setFileColumns","firstdata","TableContainer","filename","Table","stickyHeader","TableHead","TableRow","TableCell","newSelecteds","Email","indeterminate","column","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","substr","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","chat_blocked_users","EditDialog","roundData","updatedRounds","setRegFees","participantType","setVenue","setIsTeamed","teamSize","setTeamSize","selectedEditRound","setSelectedEditRound","handleRoundEditButton","novalidate","getParticipantsList","participants","certificate","maxLength","CertificateSample","SubmissionForm","access","setAccess","editAccess","setEditAccess","currentRound","round","roundStartDate","roundEndDate","fetchAll","individual","members","submissions","is_submitted","submission_form","sub","registration","handleEventRegistration","reg_id","submission","is_teamed","event_round","root0","grid","setRegistration","teamDetails","setTeamDetails","getData","console","log","Accordion","AccordionSummary","expandIcon","heading","AccordionDetails","memberDetails","setMemberDetails","admin","ListItemSecondaryAction","users","updated_user_id","setAdmin","editDialogOpen","setEditDialogOpen","TeamMemberListItem","received_requests","TeamMemberRequestListItem","root1","avatar2","sortedTeams","setSortedTeams","sentRequests","setSentRequests","showMembers","setShowMembers","teamIndex","setTeamIndex","sent_requests","handleRequestButton","handleViewMembersClick","searchedTeam","find","teamedUp","setTeamedUp","teamed_up","EventDetailsTeamPanel","CircularLoading","ScrollDialog","setSubmission","setKeys","currentRoundFields","setCurrentRoundFields","SubmissionShareDialog","reg","handleDialogClose","roundButton","EventAdminSubmissionPanel","registrations","setRegistrations","viewSubmissionDialog","setViewSubmissionDialog","selectedSubmission","setSelectedSubmission","selectedTeam","setSelectedTeam","getTeamData","getIndividualsData","handleRoundClickButton","handleAccessButton","round_title","handleRemoveAccessButton","handleShareButtonClick","submission_access","Name","ModeratorListItem","moderator_id","blocked_user_id","AdminSettingsPanel","allUsers","setAllUsers","selectedUser","setSelectedUser","selecteedBlockUser","setSelectedBlockUser","registeredUsers","setRegisteredUsers","moderators","m_id","drawerWidth","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","hide","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","PersistentDrawerLeft","drawerOpen","setDrawerOpen","adminAccess","setAdminAccess","moderatorAccess","setModeratorAcces","teamAccess","setTeamAccess","infoSelected","dashBoardSelected","timilineSelected","announcementSelected","settingsSelected","editEventSelected","chatSelected","certificateSelected","submissionSelected","participationSelected","teamsSelected","handleAnyClick","selectedOption","defaultValues","Drawer","anchor","chat","EventsTeamPanel","EventSubmissionPanel","ViewSubmissionPage","sub_id","setUsers","roundInfo","setRoundInfo","setReg","rounds_info","ks","NetworkDetector","ComposedComponent","exact","path","NewHomePage","Login","SignUp","ForgotPassword","UserInfo","OTPVer","VerifyCertificate","ProfileTabPanel","EventRegisterForm","EventDetails","isDisconnected","handleConnectionChange","onLine","webPing","setInterval","clearInterval","this","addEventListener","removeEventListener","Component","darkTheme","createMuiTheme","default","lightTheme","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.68bafc48.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  paperRight: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    paddingBottom: theme.spacing(4),\n    borderRadius: 30,\n    // height: '80vh',\n    minHeight: '80vh',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(0, 1),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  paperLeft: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(3, 1),\n    },\n    [theme.breakpoints.up('md')]: {\n      height: '80vh',\n    },\n\n  },\n  paperimage: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(),\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '90%',\n    margin: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(2),\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  iPhoneImage: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  title: {\n\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  hidden: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  image: {\n    maxHeight: \"600px\",\n    maxWidth: '600px',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  footer: {\n    backgroundColor: theme.palette.secondary.main,\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport default useStyles;","export default __webpack_public_path__ + \"static/media/google-play-badge.561e4a2c.png\";","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n          ellipseapp.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default Copyright;","export default __webpack_public_path__ + \"static/media/logo300.123db6fb.svg\";","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n\n\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n    // console.log(title);\n    // console.log(desc);\n\n    return (\n        <div>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Support</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Full Name\"\n                                name=\"name\"\n                                fullWidth\n                                value={title || \"\"}\n                                // required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                // required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Link href={`mailto:support@ellipseapp.com?subject=${title}&body=${desc}`} target=\"_blank\" rel=\"noopener noreferrer\" variant=\"body2\">\n                        SEND\n                    </Link>\n                    \n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../Themes/SigninPageStyles'\n// import AppleBadge from '../Components/Images/AppleBadge.png';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n// import iPhone from '../Components/Images/iPhone 11 Pro Max@2x.png';\nimport Copyright from \"../Components/copyright\";\nimport { withRouter, Redirect } from \"react-router\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PhoneImage from '../Components/Images/logo300.svg';\n// import HomePageCarousel from '../Components/HomePageCarousel';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\nimport { detect } from 'detect-browser';\nimport SupportDialog from '../Components/SupportDialog';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nconst Signin = ({ history }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [user,setUser] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  const [isUserVerified, setIsUserVerified] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const abortController = new AbortController();\n  const browser = detect();\n  const [supportOpen,setSupportOpen] = React.useState(false);\n\n  //timeout function\n  function timeout(ms, promise) {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        reject(new Error('TIMEOUT'))\n      }, ms)\n\n      promise\n        .then(value => {\n          clearTimeout(timer)\n          resolve(value)\n        })\n        .catch(reason => {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Something went wrong Try Again',\n            type: \"error\",\n            autoHide: 4000\n          });\n          clearTimeout(timer)\n          reject(reason)\n        })\n    })\n  }\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Signedin successfully\") {\n      localStorage.setItem('token', token);\n      if (isUserVerified) {\n        localStorage.setItem('token', token);\n        const eventId = localStorage.getItem('eventid');\n        if (eventId) {\n          abortController.abort()\n          history.push(`/event/${eventId}`)\n        }\n        else {\n          abortController.abort()\n          history.push('/home');\n        }\n\n      }\n      else {\n        try {\n          var data2 = new FormData();\n          const payload2 = {\n            email: email\n          };\n          data2 = JSON.stringify(payload2)\n          fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n            signal: abortController.signal,\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data2\n          }).then((result) => {\n            // console.log(result);\n            result.json().then((res) => {\n              if (res.message === \"success\") {\n                abortController.abort()\n                localStorage.setItem('token', token);\n                history.push('/otpverification')\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Signedin successfully',\n                  type: \"success\",\n                  autoHide: 300\n                });\n              }\n            })\n\n          })\n        } catch (error) {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: error.message,\n            type: \"error\",\n            autoHide: 3000\n          })\n        }\n\n      }\n\n    }\n    setState({ ...state, open: false });\n  };\n  async function handleSignin(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { email, password } = event.target.elements;\n    try {\n      var data = new FormData()\n      const payload = {\n        email: email.value,\n        password: password.value,\n        type: 'browser',\n        browser_name: browser.name,\n        device_os: browser.os,\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      timeout(25000, fetch(process.env.REACT_APP_API_URL + '/api/users/login', {\n        signal: abortController.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      })).then((response) => {\n        // console.log(response);\n        if (response.status === 200) {\n          // console.log\n          response.json().then((value) => {\n            setToken(value.token);\n            setIsUserVerified(value.isVerified);\n            setEmail(value.useremail);\n            // setUser(JSON.stringify(value.userDetails));\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Signedin successfully',\n              type: \"success\",\n              autoHide: 200\n            });\n          })\n        }\n        else {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: \"invalid credentials\",\n            type: \"error\", autoHide: 6000\n          })\n        }\n\n      })\n    } catch (error) {\n\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n    }\n  }\n\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  const handleSupportButton = ()=>{\n    setSupportOpen(true);\n  }\n  const handleSupportClose = () =>{\n    setSupportOpen(false);\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          autoHideDuration={autoHide}\n          onClose={handleClose}\n          key={vertical + horizontal}>\n          <Alert onClose={handleClose} severity={type}>{message}</Alert>\n        </Snackbar>\n        <Grid item xs={12} sm={12} md={7} elevation={6} >\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" m={1} p={1} className={classes.paperLeft}>\n            <img src={PhoneImage} alt=\"logo\" height=\"500px\" width=\"500px\" className={classes.image}></img>\n            <Typography className={classes.title} component=\"h1\" variant=\"h2\">\n              Ellipse\n          </Typography>\n            <Typography component=\"h1\" variant=\"h6\">\n              Kill time for what matters\n          </Typography><br></br>\n            <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n              <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n            </a>\n\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={5} elevation={6}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1} className={classes.paperRight}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n          </Typography>\n            <form className={classes.form} onSubmit={handleSignin}>\n              <TextField\n                name=\"email\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                name=\"password\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n              <div className={classes.wrapper}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  className={classes.submit}>\n                  {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign In\"}\n\n                </Button>\n              </div>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"/forgotpassword\" variant=\"body2\">\n                    Forgot password?\n                </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/signup\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs>\n                  {/* <Link href=\"/forgotpassword\" variant=\"body2\">\n                    Forgot password?\n                </Link> */}\n                </Grid>\n                <Grid item>\n                  <Link onClick={handleSupportButton} variant=\"body2\">\n                    {\"Get Support\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-end\">\n              <Copyright></Copyright>\n            </Box>\n          </Box>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <HomePageCarousel></HomePageCarousel>\n            </Box>\n          </Box>\n          <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Made with <FavoriteIcon fontSize=\"inherit\" color=\"primary\"></FavoriteIcon> for Students and Organizations</Typography><br></br>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                {\"support@ellipseapp.com\"}\n              </Link></Typography>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Copyright></Copyright>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                {\"Privacy Policy\"}\n              </Link>\n            </Box>\n          </Box>\n        </Grid> */}\n        <SupportDialog open={supportOpen} handleClose={handleSupportClose}></SupportDialog>\n      </Grid>\n\n    </React.Fragment>\n  );\n}\nexport default withRouter(Signin);","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // backgroundColor: theme.palette.secondary.main,\n      padding: theme.spacing(3),\n      borderRadius: 30,\n  \n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(7),\n      [theme.breakpoints.down('md')]: {\n        top: theme.spacing(12),\n      }\n    },\n    hidden: {\n      display: 'none'\n    }\n  }));\n\n  export default useStyles;","import React from 'react';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\nimport { detect } from 'detect-browser';\n\n//MaterialUI imports\nimport Select from '@material-ui/core/Select';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport SupportDialog from '../Components/SupportDialog';\nimport Copyright from '../Components/copyright';\n// import { ReCaptcha } from 'react-recaptcha-google';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = ({ history }) => {\n  const classes = useStyles();\n  const [token, setToken] = React.useState(\"\");\n  // const [currentUser, setCurrentUser] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUserNameError] = React.useState(false);\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [colleges, setColleges] = React.useState([]);\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [collegeId, setCollegeId] = React.useState(null);\n  const [collegesName, setCollegesName] = React.useState([]);\n  const [signupButtonDisabled, setSignupButtonDisabled] = React.useState(false);\n  const browser = detect();\n  const [supportOpen, setSupportOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n  }, [])\n\n\n  React.useEffect(() => {\n    const loadScriptByURL = (id, url, callback) => {\n      const isScriptExist = document.getElementById(id);\n\n      if (!isScriptExist) {\n        var script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = url;\n        script.id = id;\n        script.onload = function () {\n          if (callback) callback();\n        };\n        document.body.appendChild(script);\n      }\n\n      if (isScriptExist && callback) callback();\n    }\n\n    // load the script by passing the URL\n    loadScriptByURL(\"recaptcha-key\", `https://www.google.com/recaptcha/api.js?render=${process.env.REACT_APP_SITE_KEY}`, function () {\n      window.grecaptcha.ready(function () {\n        window.grecaptcha.execute('6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P', { action: 'submit' }).then(recaptcha_token => {\n          fetch(process.env.REACT_APP_API_URL + '/api/verify_recaptcha', {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              // \"name\": name,\n              // \"email\": email,\n              \"recaptcha_token\": recaptcha_token\n            })\n          }).then(res => {\n            if (res.status === 200) {\n              res.json().then(result => {\n                if (result.success) {\n                  if (result.score < 0.5) {\n                    setSignupButtonDisabled(true)\n                  }\n                }\n              })\n            }\n\n          });\n        });\n      });\n    });\n  }, []);\n\n  //timeout function\n  function timeout(ms, promise) {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        reject(new Error('TIMEOUT'))\n      }, ms)\n\n      promise\n        .then(value => {\n          clearTimeout(timer)\n          resolve(value)\n        })\n        .catch(reason => {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Something went wrong Try Again',\n            type: \"error\",\n            autoHide: 4000\n          });\n          clearTimeout(timer)\n          reject(reason)\n        })\n    })\n  }\n  const handleClose = async (event, reason) => {\n\n    if (message === \"Signedup successfully\") {\n      localStorage.setItem('token', token);\n      history.replace(\"/otpverification\")\n    }\n\n    setState({ ...state, open: false });\n  };\n\n\n  function handleCollege(event, value) {\n    setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        //   props.collegeId(c._id)\n        setCollegeId(c._id);\n      }\n    })\n  }\n\n\n  async function handleSignUp(event) {\n    // grecaptcha.ready(function() {\n    //   grecaptcha.execute('reCAPTCHA_site_key', {action: 'submit'}).then(function(token) {\n    //       // Add your logic to submit to your backend server here.\n    //       console.log(token);\n    //       // fetch()\n    //   });\n    // });\n    event.preventDefault();\n    setLoading(true);\n    const { fullName, email, designation, password, username, terms } = event.target.elements;\n    try {\n      if (terms.checked) {\n        var data = new FormData()\n        const payload = {\n          name: fullName.value,\n          email: email.value,\n          designation: designation.value,\n          college_id: collegeId,\n          password: password.value,\n          username: username.value,\n          type: 'browser',\n          browser_name: browser.name,\n          device_os: browser.os,\n        };\n        data = JSON.stringify(payload);\n        timeout(25000, fetch(process.env.REACT_APP_API_URL + '/api/users/signup', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        })).then((result) => {\n          // console.log(result);\n          if (result.status === 200) {\n            result.json().then((val) => {\n              setToken(val.token);\n              var data2 = new FormData();\n              const payload2 = {\n                email: val.useremail\n              };\n              data2 = JSON.stringify(payload2)\n              // console.log(token);\n              const tok = val.token;\n              fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                headers: {\n                  'Authorization': `Bearer ${tok}`,\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n              }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                  if (res.message === \"success\") {\n                    setState({\n                      open: true,\n                      vertical: 'top',\n                      horizontal: 'center',\n                      message: 'Signedup successfully',\n                      type: \"success\",\n                      autoHide: 300\n                    });\n                  }\n                })\n              })\n            })\n          }\n          else if (result.status === 401) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Email already registered',\n              type: \"error\",\n              autoHide: 3000\n            });\n          }\n          else {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Something went wrong Try Again',\n              type: \"error\",\n              autoHide: 4000\n            });\n          }\n        })\n      }\n\n      else {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please agree to the terms and conditions',\n          type: \"error\"\n        });\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleUsernameChange(event) {\n    const username = event.target.value;\n    var data = new FormData();\n    const payload = {\n      username: username\n    };\n    data = JSON.stringify(payload);\n    setUserNameError(false);\n    setSignupButtonDisabled(false)\n    fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((result) => {\n      result.json().then(value => {\n        if (value.message === \"user already exists\") {\n          setUserNameError(true);\n          setSignupButtonDisabled(true);\n        }\n      })\n    })\n  }\n\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  const handleSupportButton = () => {\n    setSupportOpen(true);\n  }\n  const handleSupportClose = () => {\n    setSupportOpen(false);\n  }\n\n  // const onLoadRecaptcha = () => {\n\n  // }\n\n  // const verifyCallback = () => {\n\n  // }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        {/* <ReCaptcha\n            // ref={(el) => {setCDemo(el)}}\n            size=\"invisible\"\n            render=\"explicit\"\n            sitekey=\"6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P\"\n            onloadCallback={onLoadRecaptcha}\n            verifyCallback={verifyCallback}\n        /> */}\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fullName\"\n                name=\"fullName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                inputProps={{ pattern: \"[a-zA-Z ]+\" }}\n                onInvalid={() => { setNameError(true) }}\n                helperText={nameError && \"Name should only contain alphabet and spaces\"}\n                onInput={() => { setNameError(false) }}\n                error={nameError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"User Name\"\n                onChange={handleUsernameChange}\n                name=\"username\"\n                error={usernameError}\n                helperText={usernameError && \"username already exists\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" fullWidth required>\n                <InputLabel htmlFor=\"designation\">You are</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"You are\"\n                  inputProps={{\n                    name: 'designation',\n                    id: 'designation',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Student\">Student</option>\n                  <option value=\"Faculty\">Faculty</option>\n                  <option value=\"Club/Organisation\">Club/Organisation</option>\n                  <option value=\"Institution\">Institution</option>\n                  <option value=\"Others\">Others</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Autocomplete\n                fullWidth\n                id=\"college\"\n                options={collegesName}\n                getOptionLabel={(option) => option}\n                value={collegeName}\n                onChange={handleCollege}\n                renderInput={(params) => <TextField name=\"college\" variant=\"outlined\" fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                inputProps={{ pattern: \"^.{6,}$\" }}\n                onInvalid={() => { setPasswordError(true) }}\n                helperText={passwordError && \"Password should atleast be 6 characters\"}\n                onInput={() => { setPasswordError(false) }}\n                error={passwordError}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" name=\"terms\" checked disabled />}\n                label={<Typography>By signing up I accept the <Link href='/Privacy_Policy.pdf'>Pivacy Policy and Terms of Service</Link></Typography>}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || signupButtonDisabled}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign Up\"}\n          </Button>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n\n            <Grid item>\n              <Link onClick={handleSupportButton} variant=\"body2\">\n                {\"Get Support\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n      <SupportDialog open={supportOpen} handleClose={handleSupportClose}></SupportDialog>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n","import React from \"react\";\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst ForgotPassword = ({ history }) => {\n  const classes = useStyles();\n  const [email, setEmail] = React.useState(null);\n  const [otp, setOtp] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [loading2, setLoading2] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n\n  async function handlePasswordReset(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading(false)\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Enter the OTP sent to your registered email address',\n              type: \"success\",\n              autoHide: 2000\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  async function handleForgotPassword(event) {\n    event.preventDefault();\n    setLoading2(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email,\n        otp: otp,\n        nPassword: password\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL + '/api/users/forgotpassword', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading2(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Succesful! Login to continue',\n              type: \"success\",\n              autoHide: 300\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading2(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  function handleClose() {\n    if (message === \"Succesful! Login to continue\") {\n      history.replace(\"/\");\n    }\n    setState({ ...state, open: false });\n  }\n\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter your email to receive OTP\n        </Typography>\n        <form className={classes.form} onSubmit={handlePasswordReset}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}>\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send OTP\"}\n          </Button>\n        </form>\n        <form className={classes.form} onSubmit={handleForgotPassword}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"otp\"\n                label=\"OTP\"\n                name=\"otp\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"New Password\"\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading2}\n            className={classes.submit}>\n            {loading2 ? <CircularProgress color=\"primary\" size={24} /> : \"Reset Password\"}\n          </Button>\n\n\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Link href=\"/\" variant=\"body2\">\n              Instead? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(ForgotPassword);\n","import React, { useEffect, useState } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [token,setToken] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    // function storeUser(user){\n    //   setCurrentUser(user);\n    //   setPending(false)\n    // }\n    // console.log(localStorage.getItem('user'))\n    setCurrentUser(localStorage.getItem('user'));\n    setPending(false);\n\n    // app.auth().onAuthStateChanged((user) => {\n    //   setCurrentUser(user)\n    //   setPending(false)\n    // });\n  }, []);\n  // function add\n\n  if (pending) {\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OTPver = ({ history }) => {\n    const classes = useStyles();\n    const token = localStorage.getItem(\"token\");\n    // const [token, setToken] = React.useState(\"\");\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const [seconds, setSeconds] = React.useState(30);\n    const [resendEnabled, setresetEnabled] = React.useState(false)\n\n    React.useEffect(() => {\n        if (seconds > 0) {\n            setTimeout(() => setSeconds(seconds - 1), 1000);\n        } else {\n            setresetEnabled(true)\n        }\n        // eslint-disable-next-line\n    }, [seconds]);\n\n    function handleClose() {\n        // console.log(\"message\")\n        if (message === \"Success! redirecting to Ellipse Home\") {\n            history.replace(\"/home\")\n        }\n        setState({ ...state, open: false });\n    }\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    function handleVerification(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { otp } = event.target.elements;\n        try {\n            var data = new FormData();\n            const payload = {\n                otp: otp.value\n            };\n            // data.append(JSON.stringify(payload));\n            data = JSON.stringify(payload);\n\n            fetch(process.env.REACT_APP_API_URL + '/api/users/verifyotp', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n\n            }\n            ).then((result) => {\n                result.json().then(val => {\n                    // console.log(val.message);\n                    if (val.message === \"verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Success! redirecting to Ellipse Home\",\n                            type: 'success',\n                            autoHide: 300\n                        })\n\n                    }\n                    else if (val.message === \"Not verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Invalid OTP, please check and try again\",\n                            type: 'error',\n                            autoHide: 5000\n                        })\n                    }\n                    else {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Something went wrong try again\",\n                            type: 'error',\n                            autoHide: 5000\n                        })\n                    }\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n\n\n\n    }\n\n\n    function handleResendOTP() {\n        try {\n            var data2 = new FormData();\n            const payload2 = {\n                //   email: value[0].email\n            };\n            data2 = JSON.stringify(payload2)\n            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemailwithauth', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n            }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Password sent succcessfully\",\n                            type: 'success',\n                            autoHide: 300\n                        })\n                    }\n                })\n\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n    }\n\n    function handlesigninButton() {\n        history.push('/signin')\n        localStorage.removeItem('token');\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Email Verification\n                </Typography>\n                <form className={classes.form} onSubmit={handleVerification}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"otp\"\n                            label=\"Enter OTP\"\n                            name=\"otp\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                    <Grid container>\n\n                        <Grid item>\n                            <Button disabled={!resendEnabled} onClick={handleResendOTP}>Resend OTP in {seconds}</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button onClick={handlesigninButton}>Signin to Different account</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(OTPver);\n","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textArea: {\n        width: theme.spacing(58),\n        margin: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.dark,\n    },\n\n}));\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UserInfo = ({ history }) => {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [imageUrl, setImageurl] = React.useState(\"\");\n    const [image, setImage] = React.useState(null);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            const eventId = localStorage.getItem('eventid');\n            if (eventId) {\n                history.push(`/event/${eventId}`)\n            }\n            else {\n                history.replace(\"/home\")\n            }\n\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            const url = URL.createObjectURL(event.target.files[0]);\n            setImageurl(url);\n        }\n    }\n    async function handleSignUp(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { gender, collegeId, bio } = event.target.elements;\n\n        try {\n            var data = new FormData()\n            const payload = {\n                gender: gender.value,\n                college_id: collegeId.value,\n                bio: bio.value,\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL + '/api/users/userdetails', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        if (image != null) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Welcome\n                </Typography>\n                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    badgeContent={<label htmlFor=\"contained-button-file\">\n                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <EditIcon></EditIcon>\n                        </IconButton>\n                    </label>}>\n                    <Avatar className={classes.avatar} sizes=\"100\" alt=\"\" src={imageUrl}></Avatar>\n                </Badge>\n\n                <form className={classes.form} onSubmit={handleSignUp}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                </form>\n            </div>\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(UserInfo);\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.5em',\n      height: '0.5em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 1px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: '#ad9d9d',\n      outline: '1px solid slategrey'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n    marginBottom: theme.spacing(5)\n\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n    elevation: \"0\"\n  },\n  grow: {\n    flexGrow: 1,\n    alignItems: 'center',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  mobileTitle:{\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    \n  },\n  titleButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n    textTransform: 'none'\n  },\n  mobileTitleButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      width: 'fit-content'\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    width: '230px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    borderBottom: 'none',\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  sectionDesktop: {\n    \n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  tabs: {\n    \n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginLeft: theme.spacing(15),\n    },\n  },\n  mobiletab: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  tabPanel: {\n    marginBottom: theme.spacing(3),\n  },\n  flex_section: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    // minHeight: 0\n  },\n  \n  flex_col_scroll: {\n    flexGrow: 1,\n    overflow: 'auto',\n    // minHeight: '100vh'\n  },\n  rpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    margin: theme.spacing(2),\n    // borderRadius: theme.spacing(50)\n  },\n  postButton: {\n    borderRadius: theme.spacing(50)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\n \nconst AuthContext = React.createContext({\n    currentUser: null,\n    setCurrentUser: ()=>{}\n});\n \nexport default AuthContext;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        setTitle(event.share_link)\n    }, [event.share_link])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Share Link\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DialogContent, DialogTitle } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  imageBox:{\n    display: \"flex\",\n        justifyContent: \"center\",\n  },\n  dialog: {\n    // height: '800px',\n    minHeight: '90vh',\n    maxHeight: '90vh',\n},\n  image: {\n    maxWidth: \"100%\",\n  },\n  icons: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    // color: theme.palette.grey[500],\n\n},\ntitle:{\n  backgroundColor: theme.palette.secondary\n}\n}));\n\n\n\n\nfunction ImageDialog(props) {\n  const classes = useStyles();\n  const event = props.event;\n  function handleClose() {\n    props.handleClose();\n\n}\n\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"transparent\",\n                    boxShadow: 'none',\n                    \n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.title}>{event.name}\n            <div className={classes.icons}>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n            </div>\n            </DialogTitle>\n              <DialogContent>\n              <Box className={classes.imageBox}>\n              <img className={classes.image} src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  alt=\"profile pic\"></img>\n              </Box>\n                \n              </DialogContent>\n            </Dialog>\n      </div>\n   );\n}\n\nexport default ImageDialog;\n\n","import React from 'react';\nimport { cleanup } from '@testing-library/react';\n\n//Material ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Divider from '@material-ui/core/Divider';\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\nimport Button from '@material-ui/core/Button';\n\n//other component imports\nimport ImageDialog from '../Components/ImageDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginTop: theme.spacing(2)\n    },\n    boxItem: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        minWidth: \"20%\",\n\n    },\n    gridMain: {\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        marginTop: theme.spacing(1),\n        border: `2px solid #00bdaa1A`,\n        elevation: 5\n    },\n    gridItem: {\n        padding: theme.spacing(1),\n        elevation: \"5\"\n    },\n    divider: {\n        backgroundColor: theme.palette.primary.main,\n        height: \"1px\",\n        margin: theme.spacing(1),\n        opacity: \"0.2\"\n    },\n    overFlowText: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        maxHeight: \"100px\"\n    }\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const { children, value, url, index, ...other } = props;\n    const event = props.event;\n    const tags = event.tags;\n\n    const [requirements, setRequirements] = React.useState([])\n    const [timeLabel, setTimeLabel] = React.useState(\"Registration Ends in\");\n    const [adminDetails, setAdminDetails] = React.useState({});\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    const [notRegistered, setNotRegistered] = React.useState(false);\n    const [rulesHeight, setRulesHeight] = React.useState(true);\n    const [themesHeight, setThemesHeight] = React.useState(true);\n\n\n    React.useEffect(() => {\n        if (props.notRegistered) {\n            setNotRegistered(true)\n        }\n        else {\n            setNotRegistered(false)\n        }\n    }, [props])\n\n\n    React.useEffect(() => {\n        if (event.requirements !== undefined) {\n            setRequirements(event.requirements);\n        }\n        if (event._id !== undefined && event.user_id !== undefined) {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_organizer_details?eventId=${event._id}&userId=${event.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        setAdminDetails(value);\n                    })\n                }\n            })\n        }\n    }, [event, token])\n\n    // code for timer\n    const calculateTimeLeft = () => {\n\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let timeLeft = {};\n        if (difference < 0) {\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        if (difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const getTimeLabel = () => {\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let label = \"Registration ends in\"\n        if (difference < 0) {\n            label = \"Starts in\"\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            label = \"Ends in\"\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        return label;\n    }\n\n    const [timeLeft, setTimeLeft] = React.useState(calculateTimeLeft());\n\n    React.useEffect(() => {\n        const x = setTimeout(() => {\n            setTimeLabel(getTimeLabel());\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n\n        return () => {\n            cleanup();\n            clearTimeout(x);\n        }\n    });\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach(interval => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span key={interval}>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n\n    const handleImageDialogClose = () => {\n        setImageDialogOpen(false);\n    }\n    const handleImageDialogOpen = () => {\n        setImageDialogOpen(true);\n    }\n\n    const handleRulesViewMoreButton = () => {\n        setRulesHeight((height) => { return !height })\n    }\n\n    const handleThemesViewMoreButton = () => {\n        setThemesHeight((height) => { return !height })\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Grid container component=\"main\">\n                        <Grid item xs={12} sm={12} md={4} lg={4} >\n                            <img\n                                onClick={handleImageDialogOpen}\n                                style={{ width: '240px', height: '180px' }}\n                                alt=\"event poster\"\n                                src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}></img>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <Typography>{event.description} </Typography>\n                            <Typography\n                                style={{ marginTop: \"20px\", marginBottom: '20' }}>\n                                {timeLabel}\n                            </Typography>\n                            <Typography\n                                variant=\"h5\">\n                                {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n                            </Typography>\n                            <div style={{ marginTop: '10px' }}>\n                                <Chip\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.event_type}></Chip>\n                                <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.fee_type}></Chip>\n                                <Chip style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.event_mode}></Chip>\n                                {event.isTeamed && <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={<Box display=\"flex\">\n                                        <Box><GroupIcon></GroupIcon></Box>\n                                        <Box\n                                            marginTop={0.7}\n                                            marginLeft={0.5}>\n                                            {\"  \" + event.team_size.min_team_size + \"-\" + event.team_size.max_team_size}\n                                        </Box>\n                                    </Box>}></Chip>}\n                                {!event.isTeamed && <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={\n                                        <Box display=\"flex\">\n                                            <Box><PersonIcon></PersonIcon></Box>\n                                            <Box marginTop={0.7}>Individual</Box>\n                                        </Box>}></Chip>}\n                                {tags != null && tags.map(val => {\n                                    return <Chip\n                                        key={val}\n                                        style={{ marginLeft: '5px' }}\n                                        variant=\"outlined\"\n                                        color=\"inherit\"\n                                        label={val}></Chip>\n                                })}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Box>\n                                <Grid container component=\"main\" className={classes.gridMain}>\n                                    <Grid item xs={12} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h4\">About</Typography>\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            <Typography color=\"textSecondary\" variant=\"body1\">\n                                                {\n                                                    event.about\n                                                }\n                                            </Typography>\n                                        </Box>\n                                        <Divider flexItem className={classes.divider}></Divider>\n                                    </Grid>\n                                    {requirements !== null && requirements.length !== 0 && <Grid item xs={12} md={6} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            {requirements !== null && requirements.length !== 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Requirements</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {\n                                                requirements.length !== 0 && requirements.map(val => {\n                                                    return <Chip key={val} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                                })\n                                            }\n                                        </Box>\n                                    </Grid>}\n\n                                    {event.event_mode === \"Offline\" && <Grid item xs={12} md={6} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Offline\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Venue Details</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue}</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue_college}</Typography>}\n                                        </Box>\n                                    </Grid>}\n                                    {event.fee_type === \"Paid\" && <Grid item xs={12} md={6} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            {event.fee_type === \"Paid\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Fee Details</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {event.fee_type === \"Paid\" && <Typography color=\"textSecondary\" variant=\"body2\">{\"Rs \" + event.fee}</Typography>}\n                                        </Box>\n                                    </Grid>}\n                                    {event.event_mode === \"Online\" && event.platform_details !== null && event.platform_details !== \"\" && <Grid itam xs={12} md={6} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Platform Details</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"body2\">{event.platform_details}</Typography>}\n                                        </Box>\n                                    </Grid>}\n                                </Grid>\n\n\n                                {event.rounds !== undefined && event.rounds.length > 0 && <Grid container component=\"main\" className={classes.gridMain}>\n                                    <Grid item xs={12}>\n                                        <Box display=\"flex\" justifyContent=\"flex-start\">\n                                            <Box className={classes.boxItem} margin={2}>\n                                                {event.rounds !== undefined && event.rounds.length > 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Rounds Details</Typography>}\n                                            </Box>\n                                            <Box>\n                                                <Divider orientation=\"vertical\"></Divider>\n                                            </Box>\n                                            <Box flexGrow={1}></Box>\n                                            <Box className={classes.boxItem} margin={2}>\n                                                {event.rounds !== undefined && event.rounds.length > 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">\n                                                    {\n                                                        event.rounds.map((val, index) => {\n                                                            return <Typography>{val.title + \" - \" + val.description}</Typography>\n                                                        })\n                                                    }\n                                                </Typography>}\n                                            </Box>\n                                            <Box flexGrow={1}></Box>\n                                        </Box>\n\n                                    </Grid>\n                                </Grid>}\n\n\n                                {event.prizes !== undefined && event.prizes !== null && event.prizes.length > 0 && <Grid container component=\"main\" className={classes.gridMain}>\n                                    <Grid item xs={12}>\n                                        <Box display=\"flex\" justifyContent=\"flex-start\">\n                                            <Box style={{ marginLeft: \"30px\" }}>\n                                                {event.prizes !== undefined && event.prizes.length > 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Prizes</Typography>}\n                                            </Box>\n\n                                        </Box>\n                                        {event.prizes !== undefined && event.prizes.length > 0 && <Box display=\"flex\" justifyContent=\"center\" flexWrap=\"wrap\" style={{ marginTop: \"20px\", marginBottom: '20' }}>\n                                            {\n                                                event.prizes.map((val, index) => {\n                                                    return <Box padding={1} justifyContent=\"center\" style={{ maxWidth: \"500px\" }}>\n                                                        <Box display=\"flex\" justifyContent=\"center\"><EmojiEventsIcon fontSize=\"large\" color=\"primary\"></EmojiEventsIcon></Box>\n                                                        <Box display=\"flex\" justifyContent=\"center\"><Typography>{val.title}</Typography></Box>\n                                                        <Box display=\"flex\" justifyContent=\"center\"><Typography variant=\"h5\">{val.prize}</Typography></Box>\n                                                        <Box display=\"flex\" justifyContent=\"center\"><Typography color=\"textSecondary\">{val.desc}</Typography></Box>\n                                                    </Box>\n                                                })\n                                            }\n                                        </Box>}\n                                    </Grid>\n                                </Grid>}\n                                <Grid container component=\"main\" className={classes.gridMain} >\n\n\n                                    {event.themes !== undefined && event.themes !== null && event.themes !== \"\" &&\n                                        <Grid item xs={12} md={6} className={classes.gridItem}>\n                                            <Box style={{ marginLeft: \"30px\" }}>\n                                                <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Themes</Typography>\n                                            </Box>\n                                            <div className={themesHeight && classes.overFlowText} style={{ marginTop: \"5px\" }} whiteSpace=\"normal\">\n                                                {event.themes.split(\"\\n\").map((val, index) => {\n                                                    if (val === \"\") {\n                                                        return <br></br>\n                                                    }\n                                                    return <Box style={{ marginLeft: \"45px\" }} whiteSpace=\"normal\">\n                                                        <Typography color=\"textSecondary\" variant=\"body2\" whiteSpace=\"normal\">\n                                                            {val}\n                                                        </Typography>\n                                                    </Box>\n                                                })}\n                                            </div>\n                                            <Button onClick={handleThemesViewMoreButton} style={{ marginLeft: \"45px\" }} color=\"primary\">{themesHeight ? \"View More\" : \"hide\"}</Button>\n                                        </Grid>}\n                                    {event.rules !== undefined && event.rules !== null && event.rules !== \"\" &&\n                                        <Grid item xs={12} md={6} className={classes.gridItem} >\n                                            <Box style={{ marginLeft: \"30px\" }}>\n                                                <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Rules</Typography>\n                                            </Box>\n                                            <div className={rulesHeight && classes.overFlowText} style={{ marginTop: \"5px\" }} whiteSpace=\"normal\">\n                                                {event.rules.split(\"\\n\").map((val, index) => {\n                                                    if (val === \"\") {\n                                                        return <br></br>\n                                                    }\n                                                    return <Box style={{ marginLeft: \"45px\" }} whiteSpace=\"normal\">\n                                                        <Typography color=\"textSecondary\" variant=\"body2\" whiteSpace=\"normal\">\n                                                            {val}\n                                                        </Typography>\n                                                    </Box>\n                                                })}\n\n                                            </div>\n                                            <Button onClick={handleRulesViewMoreButton} style={{ marginLeft: \"45px\" }} color=\"primary\">{rulesHeight ? \"View More\" : \"hide\"}</Button>\n\n                                        </Grid>}\n                                </Grid>\n\n                                {!notRegistered && <Box className={classes.boxItem}>\n                                    <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Organised By</Typography>\n                                </Box>}\n                                {!notRegistered && <Box className={classes.boxItem}>\n                                    <Box className={classes.adminDetails}>\n                                        <Box>\n                                            <Avatar className={classes.avatar} alt={adminDetails.name} src={adminDetails.profile_pic !== null && process.env.REACT_APP_API_URL + `/api/image?id=${adminDetails.profile_pic}`} />\n                                        </Box>\n                                        <Box>\n                                            <Box>\n                                                <Typography variant=\"h5\">{adminDetails.name}</Typography>\n                                            </Box>\n                                            <Box>\n                                                <Typography color=\"textSecondary\" variant=\"body2\">{adminDetails.college_name}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>}\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <ImageDialog\n                        event={event}\n                        open={imageDialogOpen}\n                        handleClose={handleImageDialogClose}>\n                    </ImageDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n\n// This impressive paella is a perfect party dish and a fun meal\n//  to cook together with your guests. Add 1 cup of frozen peas along with \n// the mussels, if you like.","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\n// import TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport TimerIcon from '@material-ui/icons/Timer';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  large: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  tab: {\n    flexGrow: 1,\n    // maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  paper: {\n    padding: '6px 16px',\n    backgroundColor: theme.palette.secondary.main\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const token = localStorage.getItem('token');\n  const event = props.event;\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Timeline align=\"alternate\">\n            <TimelineItem>\n              {/* <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {regEndDate.toDateString()}{\" \" + regEndDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent> */}\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Registration Ends\n                  </Typography>\n                  <Typography>{regEndDate.toDateString()}{\" \" + regEndDate.toLocaleTimeString()}</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n\n            <TimelineItem>\n              {/* <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {startDate.toDateString()}{\" \" + startDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent> */}\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\" variant=\"outlined\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Starts\n                  </Typography>\n                  <Typography>{startDate.toDateString()}{\" \" + startDate.toLocaleTimeString()}</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            {\n              event.rounds.map((value, index) => {\n                const sDate = new Date(value.start_date);\n                const eDate = new Date(value.end_date);\n                return (\n                  <React.Fragment>\n                    <TimelineItem>\n                      {/* <TimelineOppositeContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {sDate.toDateString()}{\" \" + sDate.toLocaleTimeString()}\n                        </Typography>\n                      </TimelineOppositeContent> */}\n                      <TimelineSeparator>\n                        <TimelineDot color=\"primary\" variant=\"outlined\">\n                          <TimerIcon></TimerIcon>\n                        </TimelineDot>\n                        <TimelineConnector />\n                      </TimelineSeparator>\n\n                      <TimelineContent>\n                        <Paper elevation={3} className={classes.paper}>\n                          <Typography variant=\"h6\" component=\"h1\">\n                            {value.title + \" Starts\"}\n                          </Typography>\n                          <Typography>{sDate.toDateString()}{\" \" + sDate.toLocaleTimeString()}</Typography>\n                        </Paper>\n                      </TimelineContent>\n                    </TimelineItem>\n                    <TimelineItem>\n                      {/* <TimelineOppositeContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {eDate.toDateString()}{\" \" + eDate.toLocaleTimeString()}\n                        </Typography>\n                      </TimelineOppositeContent> */}\n                      <TimelineSeparator>\n                        <TimelineDot color=\"primary\" variant=\"outlined\">\n                          <TimerIcon></TimerIcon>\n                        </TimelineDot>\n                        <TimelineConnector />\n                      </TimelineSeparator>\n\n                      <TimelineContent>\n                        <Paper elevation={3} className={classes.paper}>\n                          <Typography variant=\"h6\" component=\"h1\">\n                            {value.title + \" Ends\"}\n                            \n                          </Typography>\n                          <Typography>{eDate.toDateString()}{\" \" + eDate.toLocaleTimeString()}</Typography>\n                        </Paper>\n                      </TimelineContent>\n                    </TimelineItem>\n                  </React.Fragment>\n                )\n              })\n            }\n            <TimelineItem>\n              {/* <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {endDate.toDateString()}{\" \" + endDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent> */}\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector className={classes.secondaryTail} />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Ends\n                  </Typography>\n                  <Typography>{endDate.toDateString()}{\" \" + endDate.toLocaleTimeString()}</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n          </Timeline>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if(event.registered){\n          setAnnouncements(value);\n        }\n        else{\n          value.forEach(ann => {\n            if(ann.visible_all){\n              setAnnouncements((announcements)=>[...announcements,ann])\n            }\n          });\n        }\n        \n      })\n    })\n  }, [token, event])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n        {\n                    announcements.length === 0 && <Typography>No Announcements</Typography>\n                }\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        position: 'absolute',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    open: {\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(34),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    close: {\n        // width: '85%',\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    const [cl, setCl] = React.useState(classes.bottomBar);\n    React.useEffect(() => {\n        if (props.open !== undefined) {\n            setCl(clsx({\n                [classes.open]: props.open,\n                [classes.close]: !props.open,\n            }))\n        }\n        // eslint-disable-next-line\n    }, [props.open])\n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        // console.log(newmessage);\n        if (newmessage.length > 1) {\n            // console.log(newmessage.length);\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={cl} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\n \nconst WebSocketContext = React.createContext({\n    webSocketContext: null,\n    setWebSocketContext: ()=>{}\n});\n \nexport default WebSocketContext;","import React from 'react';\n \nconst WebSocketDataContext = React.createContext({\n    eventChatMessages: null,\n    setEventChatMessages: ()=>{},\n    teamChatMessages: [],\n    setTeamChatMessages: ()=>{},\n    teamUpdateStatus: [],\n    setTeamUpdateStatus: ()=>{},\n    deletedEventChatMessages: [],\n    setDeletedEventChatMessages: ()=>{},\n    deletedTeamChatMessages: [],\n    setDeletedTeamChatMessages: ()=>{}\n\n});\n \nexport default WebSocketDataContext;","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import DeleteIcon from '@material-ui/icons/Delete';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    React.useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            <Box display=\"flex\">\n                <Box flexGrow={1} paddingTop={1} paddingRight={1}>\n                    <Divider></Divider>\n                </Box>\n                <Typography variant=\"body2\">{props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}</Typography>\n                <Box flexGrow={1} paddingTop={1} paddingLeft={1}>\n                    <Divider></Divider>\n                </Box>\n            </Box>\n\n            \n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{message.user_name + \"   \"+userType}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box>\n                            {/* <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton> */}\n                            {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                                <DeleteOutlinedIcon style={{ color: '#aaaaaa' }}></DeleteOutlinedIcon>\n                            </IconButton>}\n                        </Box>\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                            {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                        </Typography>\n                    </Box>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    React.useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n            <Box className={classes.root5}>\n                <Avatar alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n            </Box>\n            <Box className={classes.root2} whiteSpace=\"normal\">\n                <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                    <Box flexGrow={1} className={classes.message}>\n                        <Box>\n                            <Typography variant=\"body1\">{message.user_name + \"   \"+userType}</Typography>\n                        </Box>\n                        <Box style={{ marginLeft: \"7px\" }}>\n                            <Typography component=\"span\"\n                                variant=\"body2\"\n                                style={{ fontSize: \"0.9em\" }}\n                                color=\"textSecondary\">\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <Box>\n                        {/* <IconButton  style={{ padding: '0px', margin: '0px' }}>\n                            <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                        </IconButton> */}\n                        {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                        <DeleteOutlinedIcon style={{ color: '#aaaaaa' }}></DeleteOutlinedIcon>\n                        </IconButton>}\n                    </Box>\n                </Box>\n                <Box whiteSpace=\"normal\">\n                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                        <Linkify\n                            componentDecorator={(decoratedHref, decoratedText, key) => (\n                                <a target=\"blank\" style={{ color: 'red' }} href={decoratedHref} key={key}>\n                                    {decoratedText}\n                                </a>\n                            )}\n                        >{message.message}</Linkify>\n                        {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                    </Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog(props) {\n\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete this message?\"}</DialogTitle>\n        {/* <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent> */}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={props.handleDeleteConfirmation(props.message)} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n// import ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Avatar from '@material-ui/core/Avatar';\n// import { List } from '@material-ui/core';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Dialog from '@material-ui/core/Dialog';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageDeleteDialog from './MessageDeleteDialog';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    // const [showOptions, setShowOptiona] = React.useState(\"\");\n    const classes = useStyles();\n    var counterDate = null;\n    // const [webSocket, setWebSocket] = React.useState(null);\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { eventChatMessages } = React.useContext(WebSocketDataContext);\n    const { setEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedEventChatMessages, setDeletedEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n\n    const closeWebSocket = () => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"close_event_socket\",\n                event_id: event._id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n    }\n\n    window.onbeforeunload = () => {\n        closeWebSocket()\n    }\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"join_event_room\",\n                event_id: event._id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n\n        return ()=>{\n            closeWebSocket();\n        }\n        // eslint-disable-next-line\n    }, [webSocketContext, currentUser, event])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        eventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            //         // console.log(mes);\n            if (mes.event_id === event._id) {\n                // console.log(cMes);\n                setChatMessages(chatMessages => [...chatMessages, cMes]);\n                setEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        });\n        // eslint-disable-next-line\n    }, [eventChatMessages, event])\n\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                // webConnect();\n                setLoading(false);\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_event_message\",\n                event_id: event._id,\n                msg: {\n                    'id': currentUser.user_id + Date.now(),\n                    'user_id': currentUser.user_id,\n                    'user_name': currentUser.name,\n                    'user_pic': currentUser.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    React.useEffect(() => {\n        deletedEventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.event_id === event._id) {\n                setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                setDeletedEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        })\n\n        // eslint-disable-next-line\n    }, [deletedEventChatMessages])\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(mes);\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        webSocketContext.send(JSON.stringify({\n            action: \"delete_event_chat_message\",\n            event_id: event._id,\n            msg: mes\n        }));\n        setChatMessages(chatMessages.filter(m => { return m !== mes }))\n\n        setOpenDeleteDialog(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    return (\n                                        <MessageBox1 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox1>\n                                    );\n                                }\n                                return (\n                                    <MessageBox2 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n                    <div style={{ float: \"left\", clear: \"both\", marginBottom: '60px', }}\n                        ref={(el) => { setReferenece(el) }}>\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\n\n// if (messageDate.toDateString() !== counterDate) {\n//     counterDate = messageDate.toDateString();\n//     if (value.user_id === currentUser.user_id) {\n//         return (<React.Fragment key={index}>\n\n//             <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n\n//             <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n//                 <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n//                     <ChatMessage adminId={event.user_id} message={value} ></ChatMessage>\n//                 </Box>\n//                 <Box className={classes.root5}>\n//                     <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//                 </Box>\n//             </Box></React.Fragment>);\n\n//     }\n//     else {\n//         return (<React.Fragment>\n\n\n//             <Box m={1} p={1} key={index} className={classes.root6}>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n\n\n//             <Box m={1} key={index} className={classes.root}>\n//                 <Box className={classes.root4}>\n//                     <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//                 </Box>\n//                 <Box className={classes.root2} whiteSpace=\"normal\" >\n//                     <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//                 </Box>\n//             </Box></React.Fragment>);\n//     }\n\n\n// }\n\n// if (value.user_id === currentUser.user_id) {\n//     return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n//         <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n//             <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//         </Box>\n//         <Box className={classes.root5}>\n//             <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//     </Box>);\n\n// }\n// else {\n//     return (<Box m={1} key={index} className={classes.root}>\n//         <Box className={classes.root4}>\n//             <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//         <Box className={classes.root2} whiteSpace=\"normal\">\n//             <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//         </Box>\n//     </Box>);\n// }\n\n\n// const webConnect = () => {\n    //     const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n    //     ws.onopen = () => {\n    //         // console.log(\"connected\")\n    //         setWebSocket(ws);\n    //         ws.send(JSON.stringify({\n    //             action: \"join_event_room\",\n    //             event_id: event._id,\n    //             msg: {\n    //                 'user_id': currentUser.user_id,\n    //             }\n    //         }));\n    //         ws.onmessage = (message) => {\n    //             const mes = JSON.parse(message.data);\n    //             const cMes = mes.msg;\n    //             // console.log(mes);\n    //             if (mes.event_id === event._id) {\n    //                 // console.log(cMes);\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n    //         setLoading(false)\n    //     }\n    //     ws.onclose = () => {\n\n    //         check();\n    //         // console.log(\"closed\");\n    //     }\n    // }\n\n       // const check = () => {\n    //     if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n    //         // console.log(\"checking\");\n    //         webConnect();\n    //     }\n    // }","import React from 'react';\n\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport EventShareDialog from './EventShareDialog';\nimport AboutEventPanel from '../Components/AboutEventPanel';\nimport EventsTimeLinePanel from '../Components/EventTimeLinePanel';\nimport EvenstAnnouncementsPanel from '../Components/EventsAnnouncementsPanel';\nimport ChatPanel from '../Components/EventsChatPanel';\n// import EventsTeamPanel from '../Components/EventsTeamPanel';\n// import EventSubmissionPanel from '../Components/EventSubmissionPanel';\nimport { Divider, Typography } from '@material-ui/core';\nimport AuthContext from '../AuthContext';\n// import VerticalTabBar from './VerticalTabBar';\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n        },\n        // color: theme.palette.grey[500],\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    },\n    mobileHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    },\n    desktopHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    }\n}));\n\nfunction EventsDialog(props) {\n    const event = props.event;\n    const t = localStorage.getItem('theme');\n    const [value, setValue] = React.useState(0);\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    // const token = localStorage.getItem('token');\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n    const [chatAcess, setChatAcess] = React.useState(false);\n    // const [teamAccess, setTeamAccess] = React.useState(false);\n    // const [adminAccess, setAdminAccess] = React.useState(false);\n    const [subIndexValue, setSubIndexValue] = React.useState(0);\n    React.useEffect(() => {\n        // console.log(event.registered);\n        if (event.registered || event.reg_mode !== \"form\") {\n            setChatAcess(true);\n            // setTeamAccess(true);\n        } else if (event.user_id === currentUser.user_id) {\n            setChatAcess(true);\n            // setAdminAccess(true);\n        }\n        else {\n            setChatAcess(false)\n        }\n        if (props.openTeams) {\n            setValue(4);\n            setSubIndexValue(1);\n        }\n    }, [event, currentUser, props.openTeams])\n\n    // console.log(chatAcess);\n    const handleSubIndexChange = (event, newValue) => {\n        setSubIndexValue(newValue);\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleClose() {\n        props.handleClose();\n\n    }\n\n    function handleRegClick() {\n        props.handleReg(event);\n\n    }\n\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                <Box className={classes.mobileHead} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                    {/* <Box display=\"flex\" justifyContent=\"flex-start\">\n                        {event.name}\n                    </Box> */}\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                            <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon fontSize=\"large\" />\n                        </IconButton>\n                    </Box>\n                </Box>\n                {event.name}\n                {/* <Typography className={classes.mobileHead} style={{}} variant=\"h6\">{event.name}</Typography> */}\n\n                <div className={classes.icons}>\n                    {/* <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                        <MailIcon></MailIcon>\n                    </IconButton> */}\n                    <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n\n                <div className={classes.root}>\n                    <Paper className={classes.root2}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"About\" {...a11yProps(0)} />\n                            <Tab label=\"Schedule\" {...a11yProps(1)} />\n                            <Tab label=\"Announcements\" {...a11yProps(2)} />\n                            <Tab label=\"Chat\" {...a11yProps(3)} />\n                            {/* {!event.isTeamed && <Tab label=\"Submission\" {...a11yProps(4)}></Tab>} */}\n                            {/* {event.isTeamed && <Tab label=\"Participation\" {...a11yProps(4)}></Tab>} */}\n                            {/* <Tab label=\"Submission\"></Tab> */}\n                        </Tabs>\n                    </Paper>\n                    <Divider></Divider>\n                    {event.isTeamed && value === 4 && <Paper className={classes.root2}>\n                        <Tabs\n                            // style={{backgroundColor: \"#00bdaa\"}}\n                            value={subIndexValue}\n                            onChange={handleSubIndexChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"Submissions\" />\n                            <Tab label=\"Your Team\" />\n                            <Tab label=\"Team Chat\" />\n                            {/* <Tab label=\"Create Team\" />\n                            <Tab label=\"Join Team\" /> */}\n                        </Tabs>\n                    </Paper>}\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent} dividers={true} >\n                <EventShareDialog\n                    event={event}\n                    open={shareDialogOpen}\n                    handleClose={handleShareClose}></EventShareDialog>\n                <AboutEventPanel\n                    value={value}\n                    index={0}\n                    event={props.event}></AboutEventPanel>\n                {/* {value === 2 && <VerticalTabBar value={value} index={1} subIndexValue={subIndexValue}  event={props.event}></VerticalTabBar>} */}\n                <EventsTimeLinePanel value={value} index={1} event={props.event}></EventsTimeLinePanel>\n                <EvenstAnnouncementsPanel value={value} index={2} event={props.event}></EvenstAnnouncementsPanel>\n                {value === 3 && chatAcess && <ChatPanel value={value} index={3} event={props.event}></ChatPanel>}\n                {value === 3 && !chatAcess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n                {/* {teamAccess && event.isTeamed && !adminAccess && <EventsTeamPanel subIndexValue={subIndexValue} value={value} index={4} event={props.event}></EventsTeamPanel>}\n                {chatAcess && value === 4 && !event.isTeamed && !adminAccess && <EventSubmissionPanel individual={true} event={props.event}></EventSubmissionPanel>} */}\n                {/* {value === 4 && !teamAccess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>} */}\n            </DialogContent>\n            <DialogActions className={classes.action}>\n                <Box className={classes.bottomBar} display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\" hidden={value !== 3}>\n                </Box>\n                <div\n                    role=\"tabpanel\"\n                    hidden={value === 3}>\n                    {value !== 3 && (\n                        <div className={classes.buttonDiv}>\n                            {\n                                event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                                    {event.registered ? \"Registered\" : \"Register\"}\n                                </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                                        {t === 'light' ? <a rel=\"noopener noreferrer\" href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                                            <a rel=\"noopener noreferrer\" href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                                    </Button>\n                            }\n                        </div>\n                    )}\n\n                </div>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default EventsDialog;","import React from 'react';\n \nconst EventsContext = React.createContext({\n    allEvents: null,\n    setAllEvents: ()=>{}\n});\n \nexport default EventsContext;","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// import CardContent from '@material-ui/core/CardContent';\n// import Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n// import { Redirect } from 'react-router';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root3: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2)\n    },\n    root5:{\n        display: \"flex\",\n            justifyContent: \"flex-end\",\n      },\n      secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n      },\n      icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n    },\n      \n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [notificationms,setNotifications] = React.useState([]);\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/get_notifications_desc', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setNotifications(value);\n                })\n            }\n        })\n    }, [token])\n\n    const handleNotificationClick = (n) => () =>{\n        props.handleClick(n.event_id)\n    }\n\n    function handleClose() {\n        props.handleClose();\n    }\n\n\n    return (\n        <div>\n            <Dialog scroll=\"paper\" open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.dialog }}>\n                <DialogTitle id=\"form-dialog-title\">Notifications</DialogTitle>\n                <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                    </div>\n                <Divider></Divider>\n                <DialogContent>\n                {\n                    notificationms.map((n,index)=>{\n                        const date = new Date(n.time)\n                       return <Box onClick={handleNotificationClick(n)} m={1} p={1} className={classes.root3}>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Typography className={classes.title}>\n                                {n.title}\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                {n.description}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.root5}>\n                            <Typography variant=\"body2\" >\n                                {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    })\n                }  \n                {\n                    notificationms.length === 0 && <Typography>No Notifications</Typography>\n                }  \n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/logo.cc1ac587.svg\";","import React, { useEffect } from 'react';\nimport { withRouter } from \"react-router\";\n\n//materialui imports\nimport useStyles from '../Themes/MainHomeStyles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EventIcon from '@material-ui/icons/Event';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport AuthContext from '../AuthContext';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Logo from '../Components/Images/logo.svg';\n\n\n\n\n\n\nconst NavigationBar = function ({ history }) {\n\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const t = localStorage.getItem('theme');\n  const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n  const [value, setValue] = React.useState(0);\n  const [searchedEvent, setSearchedEvent] = React.useState([]);\n  const [notificationsCount, setNotificationCount] = React.useState(0);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const [open, setOpen] = React.useState(false);\n  const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n  var { allEvents } = React.useContext(EventsContext);\n  const { currentUser } = React.useContext(AuthContext);\n  allEvents = allEvents.filter(value => { return value.status !== \"pending\" || value.user_id === currentUser.user_id })\n\n  useEffect(() => {\n    if (localStorage.getItem('tabIndex') != null) {\n      const tabIndex = parseInt(localStorage.getItem('tabIndex'));\n      if (tabIndex != null) {\n        setValue(tabIndex);\n      }\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/get_unseen_notifications_count', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(data);\n      })\n    })\n  }, [token])\n\n\n  function handleSearchChange(event, value) {\n    if (value) {\n      if (value.registered || value.user_id === currentUser.user_id) {\n        history.push(`/event/${value._id}`)\n      } else {\n        setSearchedEvent(value);\n        setOpen(true);\n      }\n    }\n  }\n\n  const handleNotificationCardClick = (value) => {\n    if (value) {\n      allEvents.forEach(event => {\n        if (event._id === value) {\n          setSearchedEvent(event);\n          setOpen(true);\n        }\n      });\n    }\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('tabIndex', newValue);\n  };\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n\n  if (!token) {\n    history.replace('/');\n  }\n\n  function handleThemeChange(event) {\n    setDarkThemeSelected(event.target.checked);\n    if (event.target.checked) {\n      localStorage.setItem('theme', 'dark');\n      window.location.reload(false);\n    }\n    else {\n      localStorage.setItem('theme', 'light');\n      window.location.reload(false);\n    }\n  }\n\n\n\n  function handleSignout(event) {\n\n    fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then((result) => {\n      result.json().then((data) => {\n        if (data.message === \"success\") {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tabIndex');\n          history.replace(\"/\")\n        }\n      })\n    })\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem> Dark Theme <Switch\n        checked={darkThemeSelected}\n        onChange={handleThemeChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      /></MenuItem>\n      <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n    </Menu>\n  );\n\n  function handleeventClick(event) {\n    event.preventDefault();\n    history.push(\"/events\")\n  }\n  function handleHomeClick() {\n    history.push(\"/home\")\n  }\n  function handleProfileClick() {\n    history.push(\"/profile\")\n  }\n\n  function handleChatClick() {\n    history.push('/chat')\n  }\n  const handleClose = () => {\n    setOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  function handleRegistrationButton(event) {\n    setOpen(false);\n    // setSelectedEvent(event);\n    history.push('/event/register/' + event._id);\n  }\n\n  function handleNotificationClick() {\n    fetch(process.env.REACT_APP_API_URL + '/api/update_notification_status', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(0);\n      })\n    })\n    setNotificationsOpen(true);\n  }\n  function handleTitleButtonClick() {\n    localStorage.setItem('tabIndex', 0)\n    setValue(0)\n    history.push('/home')\n  }\n\n  return (\n    <div className={classes.grow}>\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Toolbar>\n            <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n            <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                options={allEvents}\n                getOptionLabel={(option) => option.name}\n                onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              />\n            </div>\n            <div className={classes.tabs}>\n              <Paper square className={classes.root} elevation={0}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  variant=\"fullWidth\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  aria-label=\"icon\"\n                >\n                  <Tooltip title=\"Home\"><Tab onClick={handleHomeClick} icon={<HomeIcon />} aria-label=\"home\" /></Tooltip>\n                  <Tooltip title=\"Calender View\"><Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" /></Tooltip>\n                  <Tooltip title=\"Chat\"><Tab onClick={handleChatClick} icon={<ChatOutlinedIcon />} aria-label=\"favorite\" /></Tooltip>\n                  <Tooltip title=\"Profile\"><Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" /></Tooltip>\n                </Tabs>\n              </Paper>\n            </div>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Tooltip title=\"Notifications\"><IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                <Badge badgeContent={notificationsCount} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton></Tooltip>\n              <Tooltip title=\"Settings\"><IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\">\n                <SettingsIcon></SettingsIcon>\n              </IconButton></Tooltip>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        <AppBar position=\"sticky\" color=\"secondary\" elevation={0}>\n          <div className={classes.mobiletab}>\n\n            <Paper square className={classes.root} position=\"sticky\" elevation={0}>\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              >\n                <Tooltip title=\"Notifications\"><Tab onClick={handleHomeClick} icon={< HomeIcon />} aria-label=\"home\" /></Tooltip>\n                <Tooltip title=\"Notifications\"><Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" /></Tooltip>\n                <Tooltip title=\"Notifications\"><Tab onClick={handleChatClick} icon={<ChatOutlinedIcon></ChatOutlinedIcon>} aria-label=\"favorite\" /></Tooltip>\n                <Tooltip title=\"Notifications\"><Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" /></Tooltip>\n              </Tabs>\n            </Paper>\n          </div>\n        </AppBar>\n        <div>\n          {open && <EventsDialog\n            open={open}\n            event={searchedEvent}\n            handleReg={handleRegistrationButton}\n            handleClose={handleClose}>\n          </EventsDialog>}\n          <NotificationsDialog open={notificationsOpen} handleClick={handleNotificationCardClick} handleClose={handleClose}></NotificationsDialog>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default withRouter(NavigationBar);\n\n","import React from 'react';\n \nconst ActiveEventsContext = React.createContext({\n    activeEvents: null,\n    setActiveEvents: ()=>{},\n    contextLoading: false,\n    setContextLoading: ()=>{}\n});\n \nexport default ActiveEventsContext;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\n\n//Material Imports\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Components imports\nimport NavigationBar from './NavigationBar';\nimport EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\n// import dot from 'dote'\n// import {detect}  from 'detect-browser';\n// import OS from 'os';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    root: {\n        background: 'white',\n        position: 'sticky',\n        top: 0,\n        bottom: 0,\n        zIndex: 5,\n    },\n}));\n\nfunction Layout(props) {\n\n\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [allEvents, setAllEvents] = React.useState([]);\n    const [activeEvents, setActiveEvents] = React.useState([]);\n    const [contextLoading,setContextLoading] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [open, setOpen] = React.useState(true);\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    const [webSocketContext, setWebSocketContext] = React.useState(null);\n    const [eventChatMessages, setEventChatMessages] = React.useState([]);\n    const [teamChatMessages, setTeamChatMessages] = React.useState([]);\n    const [teamUpdateStatus,setTeamUpdateStatus] = React.useState([]);\n    const [deletedEventChatMessages,setDeletedEventChatMessages] = React.useState([]);\n    const [deletedTeamChatMessages,setDeletedTeamChatMessages] = React.useState([]);\n\n    const value = { currentUser, setCurrentUser };\n    const allEventsValue = { allEvents, setAllEvents };\n    const activeEventsValue = { activeEvents, setActiveEvents,contextLoading,setContextLoading };\n    const webSocketValue = { webSocketContext, setWebSocketContext };\n    const webSocketDataContextValue = { \n        eventChatMessages, setEventChatMessages, \n        teamChatMessages, setTeamChatMessages, \n        teamUpdateStatus, setTeamUpdateStatus, \n        deletedEventChatMessages, setDeletedEventChatMessages, \n        deletedTeamChatMessages, setDeletedTeamChatMessages };\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            setWebSocketContext(ws);\n        }\n        ws.onmessage = (message) => {\n            const mes = JSON.parse(message.data);\n            if(mes.action === \"receive_event_chat_message\"){\n                setEventChatMessages(chatMessages => [...chatMessages, mes]);\n            }\n            else if(mes.action === \"receive_team_message\"){\n                setTeamChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"receive_team_update_message\"){\n                setTeamUpdateStatus(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"delete_event_chat_message\"){\n                setDeletedEventChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"delete_team_chat_message\"){\n                setDeletedTeamChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n        }\n        ws.onclose = () => {\n            check();\n        }\n    }\n\n    const check = () => {\n        if (!webSocketContext || webSocketContext.readyState === WebSocket.readyState) {\n            webConnect();\n        }\n    }\n\n    React.useEffect(() => {\n        setContextLoading(true);\n        webConnect()\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    if (value[0].verified === false) {\n                        try {\n                            var data2 = new FormData();\n                            const payload2 = {\n                                email: value[0].email\n                            };\n                            data2 = JSON.stringify(payload2)\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                    'Content-Type': 'application/json'\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then((result) => {\n                                if(result.status === 200){\n                                    result.json().then((res) => {\n                                        if (res.message === \"success\") {\n                                            setOpen(false);\n                                            props.history.push(\"/otpverification\")\n                                        }\n                                    })\n                                }\n                            })\n                        } catch (error) {\n\n                        }\n\n                    }\n                    else if (value[0].college_name === null) {\n                        setOpen(false);\n                        props.history.push(\"/userinfo\")\n                    }\n                    else {\n                        setUserDetailsDone(true);\n                        setCurrentUser(value[0]);\n                    }\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL + '/api/events', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setAllEvents(value);\n                    setActiveEvents(value.filter(e => {\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }));\n                    setContextLoading(false);\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n                setContextLoading(false);\n            }\n            else{\n                setContextLoading(false);\n            }\n\n        })\n        // eslint-disable-next-line\n    }, [token])\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    if (!userDetailsDone) {\n        if (currentUser.verified) {\n            return <Redirect to=\"/userinfo\"></Redirect>\n        } else {\n            try {\n                var data2 = new FormData();\n                const payload2 = {\n                    email: currentUser.email\n                };\n                data2 = JSON.stringify(payload2)\n                fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data2\n                }).then((result) => {\n                    result.json().then((res) => {\n                        if (res.message === \"success\") {\n                            return <Redirect to=\"/otpverification\"></Redirect>\n                        }\n                    })\n\n                })\n            } catch (error) {\n\n            }\n\n        }\n    }\n\n\n    return (\n        <AuthContext.Provider value={value}>\n            <WebSocketContext.Provider value={webSocketValue}>\n                <WebSocketDataContext.Provider value={webSocketDataContextValue}>\n                    <EventsContext.Provider value={allEventsValue}>\n                        <ActiveEventsContext.Provider value={activeEventsValue}>\n                            {\n                                currentUser != null && <div>\n                                    <Paper className={classes.root}>\n                                        <NavigationBar></NavigationBar>\n                                    </Paper>\n                                    <div>\n                                        {props.children}\n                                    </div>\n                                </div>\n                            }\n                            {\n                                currentUser == null && <Backdrop className={classes.backdrop} open={open}>\n                                    <CircularProgress color=\"inherit\" />\n                                </Backdrop>\n\n                            }\n                        </ActiveEventsContext.Provider>\n                    </EventsContext.Provider>\n                </WebSocketDataContext.Provider>\n            </WebSocketContext.Provider>\n        </AuthContext.Provider>\n\n\n    );\n}\nexport default withRouter(Layout);\n","import React from 'react';\n\n//calender view imports\nimport '../Themes/main.scss'\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n\n//materialui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\n\n//other componnets\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction CalenderPanel({ history }) {\n    localStorage.setItem('tabIndex', 1)\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [events, setEvents] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const [registeredEvents, setRegisteredEvents] = React.useState([]);\n    const { activeEvents } = React.useContext(ActiveEventsContext);\n\n    React.useEffect(() => {\n        activeEvents.forEach(y => {\n            setEvents(events =>\n                [...events, { id: JSON.stringify(y), title: y.name, start: y.start_time, end: y.finish_time }]\n            )\n        })\n        setRegisteredEvents(activeEvents.filter((value) => value.registered === true))\n    }, [activeEvents])\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        if (event.registered || event.user_id === currentUser.user_id) {\n            history.push(`/event/${event._id}`)\n        } else {\n            setSelectedEvent(event);\n            setOpen(true);\n        }\n    }\n\n    const handleRegistrationButton = (event) => {\n        setOpen(false);\n        history.push('/event/register/' + event._id);\n    }\n\n\n    const handleEventClick = (info) => {\n        if (JSON.parse(info.event.id).registered || JSON.parse(info.event.id).user_id === currentUser.user_id) {\n            history.push(`/event/${JSON.parse(info.event.id)._id}`)\n        } else {\n            setSelectedEvent(JSON.parse(info.event.id));\n            setOpen(true);\n        }\n    }\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\" >\n\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8} >\n                        <FullCalendar\n                            eventBackgroundColor=\"#1C1C1E\"\n                            eventBorderColor=\"#00bdaa\"\n                            events={events}\n                            eventClick={handleEventClick}\n                            defaultView='dayGridMonth' plugins={[dayGridPlugin]} backgroundColor=\"black\"\n                            buttonIcons={false}></FullCalendar>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={false} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n                                    <Typography variant=\"body2\">Registered Events</Typography>\n                                    {\n                                        registeredEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    {open && <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        handleReg={handleRegistrationButton}\n                    ></EventsDialog>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CalenderPanel;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TodayIcon from '@material-ui/icons/Today';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(10),\n        zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        // top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n            // top: theme.spacing(20)\n        },\n\n    },\n    root2: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        borderRadius: theme.spacing(2)\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50),\n        backgroundColor: theme.palette.primary.main\n    },\n\n}));\n\nfunction SortLeftPanel(props) {\n    const classes = useStyles();\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const { currentUser } = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper elevation=\"0\" className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        // defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton><TodayIcon></TodayIcon></IconButton>\n\n                                </InputAdornment>\n                            )\n                        }}\n\n                    // KeyboardButtonProps={{\n                    //     'aria-label': 'change date',\n                    // }}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        // defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton><TodayIcon></TodayIcon></IconButton>\n\n                                </InputAdornment>\n                            )\n                        }}\n                    // KeyboardButtonProps={{\n                    //     'aria-label': 'change date',\n                    // }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List className={classes.root}>\n                    {[\"Online\", \"Offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" value={props.sortCollgeType} onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${currentUser.college_name}`].map((value) => {\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button wrap>\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default SortLeftPanel;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n\n    root: {\n        background: theme.palette.secondary.main,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none',\n        // },\n    },\n    \n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n\n}));\n\nfunction MobileSortPanel(props) {\n    const classes = useStyles();\n    const {currentUser} = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List >\n                    {[\"online\", \"offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${currentUser.collegeName}`].map((value) => {\n                           \n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default MobileSortPanel;\n\n ","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    // const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    \n\n    // function handleTitleChange(event) {\n    //     setTitle(event.target.value);\n    // }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/send_feedback', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport EventShareDialog from '../Components/EventShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    height: \"100%\"\n  }\n}));\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const [image, setImage] = React.useState(null);\n  // const token = localStorage.getItem('token');\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  // function handleViewButtonClick() {\n  //   props.handleViewClick(props.event);\n  // }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n      <CardMedia\n        component=\"img\"\n        height=\"180\"\n        image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n      />\n      <CardContent style={{minHeight:\"100px\"}}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        \n      </CardContent>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleShareClick}>\n          Share\n        </Button>\n        <Button  size=\"small\" color=\"primary\">\n          {t === 'light' ? <Link to={{ pathname: `/event/${event._id}` }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link> :\n            <Link to={{ pathname: `/event/${event._id}`}} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link>}\n        </Button>\n        <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {event.status.toUpperCase()}\n        </Typography>\n      </CardActions>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n    </Card>\n  );\n}","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const event = props.event;\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                event_id: event._id,\n                title: title,\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Report({event.name})</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\n// import Paper from '@material-ui/core/Paper';\n// import Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuList from '@material-ui/core/MenuList';\n// import ClickAwayListener from '@material-ui/core/ClickAwayListener';\n// import Grow from '@material-ui/core/Grow';\nimport Menu from '@material-ui/core/Menu';\n\n\nimport EventReportDialog from './EventReportDialog';\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const theme = useTheme()\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  // const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [reportDialogOpen, setReportDialogOpen] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // const isMenuOpen = Boolean(anchorEl);\n  // const handleToggle = () => {\n  //   setOpen((prevOpen) => !prevOpen);\n  // };\n\n  // const handleClose = (event) => {\n  //   if (anchorRef.current && anchorRef.current.contains(event.target)) {\n  //     return;\n  //   }\n\n  //   // setOpen(false);\n  // };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // function handleListKeyDown(event) {\n  //   if (event.key === 'Tab') {\n  //     event.preventDefault();\n  //     setOpen(false);\n  //   }\n  // }\n\n  // const prevOpen = React.useRef(open);\n  // React.useEffect(() => {\n  //   if (prevOpen.current === true && open === false) {\n  //     anchorRef.current.focus();\n  //   }\n  //   prevOpen.current = open;\n  // }, [open]);\n  function handleImageClick() {\n    props.imageDialog(event)\n  }\n  function handleRegClick() {\n    props.handleReg(props.eventId);\n\n  }\n  function handleMoreButtonClick() {\n    props.click(props.eventId);\n  }\n  function handleReportClick() {\n    setReportDialogOpen(true);\n  }\n  function handleReportClose() {\n    setReportDialogOpen(false);\n  }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={Boolean(anchorEl) ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick}>\n              <MoreVertIcon />\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              id={'menu'}\n              keepMounted\n              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleShareClick}>Share</MenuItem>\n              <MenuItem onClick={handleReportClick}>Report</MenuItem>\n\n            </Menu>\n            {/* <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n                        \n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper> */}\n          </div>\n        }\n        title={\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {event.name}\n          </Typography>\n        }\n        subheader={\n          <React.Fragment>\n            <Typography style={{ textOverflow: \"ellipsis\", overflow: \"hidden\", height: \"50px\" }} variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {event.description}\n            </Typography>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n          </React.Fragment>\n        }\n      />\n      <EventReportDialog\n        event={event}\n        open={reportDialogOpen}\n        handleClose={handleReportClose}>\n      </EventReportDialog>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n      <CardActions disableSpacing>\n        <div className={classes.buttonDiv}>\n          {<Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={handleMoreButtonClick}>\n            See More\n        </Button>}\n          {\n            event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a rel=\"noopener noreferrer\" href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                  <a rel=\"noopener noreferrer\" href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n          }\n        </div>\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport Paper from '@material-ui/core/Paper';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport EventCard from '../Components/EventCard';\nimport AuthContext from '../AuthContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(8),\n        bottom: 0,\n        [theme.breakpoints.down('md')]: {\n            top: theme.spacing(13),\n        },\n        zIndex: 5,\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3),\n\n    },\n    mainGrid: {\n        padding: theme.spacing(0.5)\n    }\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 0)\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const { allEvents } = React.useContext(EventsContext);\n    const { activeEvents, contextLoading } = React.useContext(ActiveEvents);\n    const { currentUser } = React.useContext(AuthContext);\n\n    const upComingEvents = activeEvents.filter((e) => {\n        const cDate = new Date();\n        const sDate = new Date(e.start_time);\n        return cDate <= sDate && e.status !== \"pending\"\n    })\n\n    const onGoingEvents = activeEvents.filter((e) => {\n        const cDate = new Date();\n        const eDate = new Date(e.finish_time);\n        const sDate = new Date(e.start_time)\n        return cDate <= eDate && cDate >= sDate\n    })\n\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate && val.status !== \"pending\"\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n\n\n    return (\n        <div>\n            <Paper className={classes.root2}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\">\n                    <Tab label=\"Upcoming Events\" />\n                    <Tab label=\"Ongoing Events\" />\n                    <Tab label=\"Registered Events\" />\n                    <Tab label=\"Past Events\" />\n                </Tabs>\n            </Paper>\n            <div className={classes.content}>\n                {value === 0 && <React.Fragment>\n                    {\n                        !contextLoading && activeEvents !== null && activeEvents.length === 0 && <Typography align=\"center\">No events, check back later</Typography>\n                    }\n                    {contextLoading && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>}\n                    {upComingEvents !== null && <div>{\n                        props.isFiltered ? props.sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={props.handleClick}\n                                    url={currentUser.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={props.handleImageDialogOpen}\n                                    handleReg={props.handleRegistrationButton}\n                                    eventId={event}\n                                >\n                                </EventCard>)\n                        }) : upComingEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={props.handleClick}\n                                    url={currentUser.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={props.handleImageDialogOpen}\n                                    handleReg={props.handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                    </div>}\n                </React.Fragment>}\n                {value === 1 && <React.Fragment>\n                    {\n                        !contextLoading && activeEvents !== null && activeEvents.length === 0 && <Typography align=\"center\">No events, check back later</Typography>\n                    }\n                    {contextLoading && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>}\n                    {onGoingEvents !== null && <div>{\n                        props.isFiltered ? props.sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={props.handleClick}\n                                    url={currentUser.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={props.handleImageDialogOpen}\n                                    handleReg={props.handleRegistrationButton}\n                                    eventId={event}\n                                >\n                                </EventCard>)\n                        }) : onGoingEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={props.handleClick}\n                                    url={currentUser.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={props.handleImageDialogOpen}\n                                    handleReg={props.handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                    </div>}\n                </React.Fragment>}\n                {value === 2 && <Grid container component=\"main\" alignItems=\"center\">\n                    {\n                        regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                    }\n                    {regEvents.map((event, index) => {\n                        return (<Grid item xs={12} sm={12} md={4} key={index} className={classes.mainGrid}>\n\n                            <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                        </Grid>)\n                    })}\n\n                </Grid>}\n                {value === 3 && <Grid container component=\"main\" alignItems=\"center\">\n                    {\n                        pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                    }\n                    {pastEvents.map((event, index) => {\n                        return (<Grid item xs={12} sm={12} md={4} key={index} className={classes.mainGrid}>\n                            <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                        </Grid>)\n                    })}\n                </Grid>}\n\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport { withRouter } from \"react-router\";\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\n\n//component imports\nimport EventsDialog from '../Components/EventsDialog';\nimport SortLeftPanel from '../Components/SortLeftPanel';\nimport MobileSortPanel from '../Components/MobileSortPanel';\nimport ImageDialog from '../Components/ImageDialog';\nimport FeedBackDialog from '../Components/FeedBackDialog';\nimport ExplorePanel from '../Components/EventsMainTabPanel';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n    },\n\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '89vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main\n    },\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    leftSubPaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n        [theme.breakpoints.down('md')]: {\n            maxHeight: '78vh',\n        },\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    mobileFilterButton: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    skeleton: {\n        textDecorationColor: theme.palette.primary.dark,\n    },\n    feedBackButton: {\n        borderRadius: theme.spacing(50),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        paddingBottom: theme.spacing(1)\n    }\n\n}));\n\nfunction EventsTabPanel({ history }) {\n    localStorage.setItem('tabIndex', 0);\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState(\"\");\n    const [sortStartDate, setSortStartDate] = React.useState(null);\n    const [sortEndDate, setSortEndDate] = React.useState(null);\n    const [sortCollegeType, setSortCollegeType] = React.useState(\"All\");\n    const [sortedEventsArray, setSortedEventsArray] = React.useState([]);\n    const [isFiltered, setIsFiltered] = React.useState(false);\n    const [feeSortChecked, setFeeSortChecked] = React.useState([0]);\n    const [modeSortChecked, setModeSortChecked] = React.useState([0]);\n    const [filterDialogOpen, setFilterDialogOpen] = React.useState(false);\n    const { activeEvents } = React.useContext(ActiveEventsContext);\n    const [registerdEvents, setRegisteredEvents] = React.useState([]);\n    const [feedBackOpen, setFeedBackOpen] = React.useState(false);\n\n\n    React.useEffect(() => {\n        setRegisteredEvents(activeEvents.filter((value) => value.registered === true))\n    }, [activeEvents])\n\n    if (!token) {\n        history.replace(\"/\")\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClick = function (event) {\n        if (event.registered || event.user_id === currentUser.user_id) {\n            history.push(`/event/${event._id}`)\n        } else {\n            setSelectedEvent(event);\n            setOpen(true);\n        }\n    }\n\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleSortDateChange = (date) => {\n        setSortStartDate(date);\n    };\n    const handleEndSortDateChange = (date) => {\n        setSortEndDate(date);\n    }\n\n    const handleFeedBackButtonClick = () => {\n        setFeedBackOpen(true);\n    }\n\n    const closeFeedBckDialog = () => {\n        setFeedBackOpen(false);\n    }\n\n    function handleSortCollegeChange(event, value) {\n        setSortCollegeType(value);\n    }\n    async function handleSortApplyButton() {\n        setFilterDialogOpen(false);\n        if (sortStartDate != null && sortEndDate != null) {\n            const dateRangeSortedEvents = sortByDateRange(sortStartDate, sortEndDate, activeEvents);\n            setSortedEventsArray(dateRangeSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                const typeSortedEvents = sortByMode(dateRangeSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(typeSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === currentUser.college_name) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateRangeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === currentUser.college_name) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === currentUser.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateRangeSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (sortStartDate != null) {\n            const dateSortedEvents = await sortByDate(sortStartDate, activeEvents)\n            setSortedEventsArray(dateSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                const typeSortedEvents = sortByMode(dateSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(dateSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === currentUser.collegeName) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === currentUser.collegeName) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === currentUser.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (modeSortChecked.length > 1) {\n            const typeSortedEvents = sortByMode(activeEvents);\n            setSortedEventsArray(typeSortedEvents);\n            setIsFiltered(true);\n            if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(typeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (feeSortChecked.length > 1) {\n            const feeSortedEvents = sortByCost(activeEvents);\n            setSortedEventsArray(feeSortedEvents);\n            setIsFiltered(true);\n        }\n        else if (sortCollegeType === currentUser.college_name) {\n            const collegeSortedEvents = sortByCollege(activeEvents);\n            setSortedEventsArray(collegeSortedEvents);\n            setIsFiltered(true);\n        }\n    }\n\n    function sortByDateRange(date1, date2, sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sEvent => {\n            const d = new Date(sEvent.start_time);\n            if (date1.getTime() <= d.getTime() && d.getTime() <= date2.getTime()) {\n                sortedEvents.push(sEvent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByDate(date, tEvents) {\n        var sDEvents = [];\n        tEvents.forEach(async sevent => {\n            const x = `${date.getDate()}` + date.getMonth() + date.getFullYear();\n            const d = new Date(sevent.start_time);\n            const y = `${d.getDate()}` + d.getMonth() + d.getFullYear();\n            if (x === y) {\n                sDEvents.push(sevent);\n            }\n        })\n        return sDEvents;\n    }\n    function sortByMode(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (modeSortChecked.includes(sevent.event_mode)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCost(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (feeSortChecked.includes(sevent.fee_type)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCollege(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n\n            if (currentUser.college_name === sevent.college_name) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function handlesortDiscardButton() {\n        setModeSortChecked([0])\n        setFeeSortChecked([0])\n        setSortedEventsArray([]);\n        setSortStartDate(null);\n        setSortEndDate(null);\n        setIsFiltered(false);\n        setFilterDialogOpen(false);\n        setSortCollegeType(\"All\")\n    }\n    function handlefilterButtonClicked() {\n        setFilterDialogOpen(true);\n    }\n    function handleFilterClose() {\n        setFilterDialogOpen(false);\n    }\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n\n    function handleRegistrationButton(event) {\n        setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        if (event.registered || event.user_id === currentUser.user_id) {\n            history.push(`/event/${event._id}`)\n        } else {\n            setSelectedEvent(event);\n            setOpen(true);\n        }\n\n    }\n\n    return (\n        <div>\n            <Grid container component=\"main\" >\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} >\n                    <Paper className={classes.root} elevation=\"0\">\n                        <Paper className={classes.leftSubPaper} elevation=\"0\">\n                            <SortLeftPanel\n                                handleSortDateChange={handleSortDateChange}\n                                sortStartDate={sortStartDate}\n                                handleEndSortDateChange={handleEndSortDateChange}\n                                sortEndDate={sortEndDate}\n                                handleSortCollegeChange={handleSortCollegeChange}\n                                feeChecked={feeSortChecked}\n                                modeChecked={modeSortChecked}\n                                sortCollgeType={sortCollegeType}\n                                setFeeChecked={setFeeSortChecked}\n                                setModeChecked={setModeSortChecked}\n                                handleSortApplyButton={handleSortApplyButton}\n                                handlesortDiscardButton={handlesortDiscardButton}>\n                            </SortLeftPanel>\n                        </Paper>\n                    </Paper>\n                    <Button className={classes.mobileFilterButton} variant=\"outlined\" onClick={handlefilterButtonClicked} >Filters</Button>\n                </Grid>\n\n                <Grid item xs={12} sm={12} md={9} lg={8} style={{ marginBottom: \"50px\" }}>\n                    <ExplorePanel\n                        isFiltered={isFiltered}\n                        sortedEventsArray={sortedEventsArray}\n                        handleClick={handleClick}\n                        handleImageDialogOpen={handleImageDialogOpen}\n                        handleRegistrationButton={handleRegistrationButton}>\n                    </ExplorePanel>\n\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px', paddingBottom: '7px' }}>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} sm={12} md={4} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper} elevation={0}>\n                        <Paper className={classes.subRpaper} elevation={0}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                            </Button>\n                            <List className={classes.root2}>\n\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registerdEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                            <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                <ListItemAvatar>\n                                                    <Avatar variant=\"square\"\n                                                        alt={event.name}\n                                                        src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText primary={event.name} />\n\n                                            </ListItem>\n                                            <Divider /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                            <Button\n                                onClick={handleFeedBackButtonClick}\n                                variant=\"outlined\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.feedBackButton}>\n                                Report Bug/Feedback\n                            </Button>\n                        </Paper>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n            <div>\n                <FeedBackDialog open={feedBackOpen} handleClose={closeFeedBckDialog}></FeedBackDialog>\n                {open && <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    // imageUrl={selectedImage}\n                    handleClose={handleClose}\n                    handleReg={handleRegistrationButton}\n                    imageDialog={handleImageDialogOpen}\n                >\n                </EventsDialog>}\n                <ImageDialog\n                    event={selectedEvent}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose}>\n                </ImageDialog>\n                <Dialog\n                    open={filterDialogOpen}\n                    onClose={handleFilterClose}\n                    fullWidth={true}\n                    scroll=\"paper\"\n                    aria-labelledby=\"sort-dialog\"\n                    aria-describedby=\"sort-dialog\"\n                    maxWidth=\"sm\" PaperProps={{\n                        style: {\n                            backgroundColor: theme.palette.secondary.main,\n                            boxShadow: 'none',\n                        },\n                    }}>\n                    <DialogTitle>Filters</DialogTitle>\n                    <DialogContent>\n                        <MobileSortPanel\n                            handleSortDateChange={handleSortDateChange}\n                            sortStartDate={sortStartDate}\n                            handleEndSortDateChange={handleEndSortDateChange}\n                            sortEndDate={sortEndDate}\n                            handleSortCollegeChange={handleSortCollegeChange}\n                            feeChecked={feeSortChecked}\n                            modeChecked={modeSortChecked}\n                            setFeeChecked={setFeeSortChecked}\n                            setModeChecked={setModeSortChecked}\n                            handleSortApplyButton={handleSortApplyButton}\n                            handlesortDiscardButton={handlesortDiscardButton}>\n                        </MobileSortPanel>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(EventsTabPanel);","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\nimport { Typography } from '@material-ui/core';\n\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const [open, setOpen] = React.useState(false);\n    const {currentUser} = React.useContext(AuthContext);\n    const {allEvents} = React.useContext(EventsContext);\n    const postedEvents = allEvents.filter((val)=>{\n        return val.user_id === currentUser.user_id;\n    });\n\n    const [selectedEvent,setSellectedEvent] = React.useState(\"\");\n    function handleViewClick(event){\n        setSellectedEvent(event);\n        // setOpen(true);\n    } \n\n    function handleClose(){\n        setOpen(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    postedEvents.length === 0 && <Typography>No Posted Events</Typography>\n                }\n                {postedEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={4} key={index}>\n                    <ProfileEventCard event={event} handleViewClick={handleViewClick} name={event.name} image={url}></ProfileEventCard>\n                    </Grid>) \n                })}\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    handleClose={handleClose}\n                    name={selectedEvent.name}\n                    startTime={selectedEvent.start_time}\n                    endTime={selectedEvent.finish_time}\n                    regEndTime={selectedEvent.registrationEndTime}\n                    type={selectedEvent.eventType}\n                    tags={selectedEvent.tags}\n                    mode={selectedEvent.eventMode}\n                    feeType={selectedEvent.feesType}\n                    url={currentUser.imageUrl}>\n                    {/* imageDialog={handleImageDialogOpen} */}\n                </EventsDialog>\n                    \n                </Grid>\n                \n                {/* <ProfileEventCard></ProfileEventCard> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WcIcon from '@material-ui/icons/Wc';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        paddingLeft: theme.spacing(4),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1.5),\n        padding: theme.spacing(1)\n    }\n\n}));\n\nfunction ProfileDataBox(props) {\n    const classes = useStyles();\n    const [icon,setIcon] = React.useState(<EmailIcon></EmailIcon>)\n    React.useEffect(()=>{\n        switch(props.name){\n            case 'Username':\n                setIcon(<PersonPinCircleIcon></PersonPinCircleIcon>)\n                break;\n            case 'Name':\n                setIcon(<PersonIcon></PersonIcon>)\n                break;\n            case 'College':\n                setIcon(<SchoolIcon></SchoolIcon>)\n                break;\n            case 'Gender':\n                setIcon(<WcIcon></WcIcon>)\n                break;\n            case 'Bio':\n                setIcon(<InfoIcon></InfoIcon>)\n                break;\n            case 'Designation':\n                setIcon(<WorkIcon></WorkIcon>)\n                break;\n            case 'Email':\n                setIcon(<EmailIcon></EmailIcon>)\n                break;\n            default:\n                setIcon(<InfoIcon></InfoIcon>)\n        }\n    },[props.name])\n\n    return (\n        <Box className={classes.root3}>\n            <Box className={classes.avatar}>\n                <Avatar>\n                    {icon}\n                </Avatar>\n            </Box>\n            <Box className={classes.content}>\n                <Box><Typography>{props.name}</Typography></Box>\n                <Box><Typography variant=\"body2\" color=\"textSecondary\">{props.value}</Typography></Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ProfileDataBox;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthContext from '../AuthContext';\nimport Box from '@material-ui/core/Box';\nimport ProfileAboutDataBox from './ProfileAboutDataBox';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    editIcon: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n}));\n\nfunction ProfilePostsTabPanel(props) {\n    const classes = useStyles()\n    const { children, value, url, index, ...other } = props;\n    const {currentUser} = React.useContext(AuthContext);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Box>\n                        <Box className={classes.editIcon}>\n                            <IconButton onClick={props.handleEditButton}><EditIcon></EditIcon></IconButton>\n                        </Box>\n                        <ProfileAboutDataBox name=\"Name\" value={currentUser.name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Email\" value={currentUser.email}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Username\" value={currentUser.username}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"College\" value={currentUser.college_name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Designation\" value={currentUser.designation}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Gender\" value={currentUser.gender}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Bio\" value={currentUser.bio}></ProfileAboutDataBox>\n                    </Box>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main,\n    }\n}));\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const token = localStorage.getItem('token');\n    const [eventName,setEventName] = React.useState(\"\");\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/event/get_event_name?eventId=${event.event_id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n              setEventName(value)\n            })\n          })\n    },[event,token])\n\n    \n    function handleShareClick() {\n        \n    }\n\n    return (\n        <Card className={classes.root}>\n            {/* <CardActionArea> */}\n            {/* <CardMedia\n                component=\"img\"\n                height=\"180\"\n                image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n            /> */}\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {eventName}\n                </Typography>\n            </CardContent>\n\n            <CardActions>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    Download\n                </Button>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    View\n                </Button>\n                <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {event.certificate_status.toUpperCase()}\n                </Typography>\n            </CardActions>\n        </Card>\n    );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport CertificateCard from './CertificateCard';\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const token = localStorage.getItem('token');\n    \n    const [registerdEvents,setRegisteredEvents] = React.useState([]);\n\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/user/get_certificates`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n            //   console.log(value);\n              setRegisteredEvents(value);\n            })\n          })\n    },[token])\n\n    \n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    registerdEvents.length === 0 && <Typography>No Certificates Register for the event to get one</Typography>\n                }\n                {registerdEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={6} key={index}>\n                    <CertificateCard event={event}></CertificateCard>\n                    </Grid>) \n                })}\n                    \n                </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import ProfileEventsTabPanel from './ProfileRegEventsTabPanel';\nimport ProfilePostedEventsTabPanel from './ProfilePostedEventsTabPanel';\nimport AboutProfileTabPanel from './ProfileAboutTabPanel';\nimport AuthContext from '../AuthContext';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ProfileCertificatePanel from './ProfileCertificateTabPanel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        borderRadius: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          }\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n        [theme.breakpoints.down('md')]: {\n            width: theme.spacing(11),\n        height: theme.spacing(11),\n          }\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    iconlarge: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        [theme.breakpoints.down('md')]: {\n            width: theme.spacing(10),\n        height: theme.spacing(10),\n          }\n    },\n}));\n\n\n\n\nfunction Eventcard(props) {\n    localStorage.setItem('tabIndex', 3)\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const {currentUser} = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <Grid container component=\"main\">\n                <CssBaseline />\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.large}\n                                sizes=\"100\" alt=\"profile image\"\n                                src={currentUser.profile_pic !== null && process.env.REACT_APP_API_URL + `/api/image?id=${currentUser.profile_pic}`}\n                                >\n                                <PersonIcon className={classes.iconlarge} ></PersonIcon>\n                            </Avatar>\n                        }\n                        action={\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={props.handleEditButton}>\n                                Edit Profile\n                            </Button>\n                        }\n                        title={\n                            <Typography variant=\"h4\">{currentUser.name}</Typography>\n                        }\n                        subheader={currentUser.bio}\n                    ></CardHeader>\n                </Grid>\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n            </Grid>\n\n            <CardContent>\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"About\" />\n                        {/* <Tab label=\"Registered Events\" /> */}\n                        <Tab label=\"Posted Events\" />\n                        <Tab label=\"Certificates\"></Tab>\n                    </Tabs>\n                </Paper>\n                <div>\n                    <AboutProfileTabPanel handleEditButton={props.handleEditButton} value={value} index={0}></AboutProfileTabPanel>\n                    {/* <ProfileEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfileEventsTabPanel> */}\n                    <ProfilePostedEventsTabPanel  value={value} index={1}></ProfilePostedEventsTabPanel>\n                    <ProfileCertificatePanel value={value} index={2}></ProfileCertificatePanel>\n                </div>\n            </CardContent>\n        </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { Grid, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from '../AuthContext';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n}));\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateInfoTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const { currentUser, setCurrentUser } = React.useContext(AuthContext);\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const [colleges, setColleges] = React.useState([]);\n    const [image, setImage] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [userName, setUserName] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [designation, setDesignation] = React.useState(null);\n    const [collegeName, setCollegeName] = React.useState(null);\n    const [collegeId, setCollegeId] = React.useState(null);\n    const [collegesName, setCollegesName] = React.useState([]);\n    const [imageUrl, setImageurl] = React.useState(null);\n    const [imageUpdated, setImageUpdated] = React.useState(false);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [usernameError, setUserNameError] = React.useState(false);\n    const [updateButtonDisabled, setUpdateButtonDisabled] = React.useState(false);\n\n    React.useEffect(() => {\n        setEmail(currentUser.email);\n        setName(currentUser.name);\n        setUserName(currentUser.username);\n        setDesignation(currentUser.designation);\n        setCollegeName(currentUser.college_name);\n        setCollegeId(currentUser.college_id);\n        setBio(currentUser.bio);\n        setGender(currentUser.gender);\n        fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setColleges(value);\n                value.forEach((v) => {\n                    setCollegesName((collegesNames) => [...collegesNames, v.name])\n                })\n                // setCollegeNames()\n            })\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // console.log(user.college_name);\n\n    const handleClose = async (event, reason) => {\n\n        if (message === \"Updated Successfully\") {\n            // history.replace(\"/home\")\n            fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET'\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        setCurrentUser(value[0]);\n                    })\n                }\n            })\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            //   setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            //   const fileType = event.target.files[0].type;\n            setImageurl(url)\n            setImageUpdated(true);\n            //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    function handleName(event, value) {\n        setName(event.target.value);\n    }\n    function handleEmail(event, value) {\n        setEmail(value);\n    }\n    function handleGender(event, value) {\n        // console.log(event.target.value);\n        setGender(event.target.value);\n    }\n    function handleDesig(event, value) {\n        setDesignation(event.target.value);\n    }\n    function handleCollege(event, value) {\n        setCollegeName(value);\n        colleges.forEach(c => {\n            if (c.name === value) {\n                //   props.collegeId(c._id)\n                setCollegeId(c._id);\n            }\n        })\n\n    }\n    // function handleUserName(event,value){\n    //     setUserName(event.target.value);\n    // }\n    function handleBio(event, value) {\n        // console.log(event.target.value)\n        setBio(event.target.value);\n    }\n\n    function handleUpdateButton(event) {\n        event.preventDefault();\n        setLoading(true);\n        // console.log(bio);\n        // console.log(userName)\n\n        try {\n            var data = new FormData()\n            const payload = {\n                name: name,\n                email: email,\n                username: userName,\n                // college_name: collegeName,\n                college_id: collegeId,\n                designation: designation,\n                gender: gender,\n                // college_id: collegeId.value,\n                bio: bio,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL + '/api/users/updateprofile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (imageUpdated) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"Updated Successfully\",\n                                        type: \"success\",\n                                        autoHide: 1000\n                                    })\n                                }\n                                else {\n\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"Something went wrong try again\",\n                                        type: \"error\",\n                                        autoHide: 3000\n                                    })\n\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"Updated Successfully\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n                else {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: \"Something went wrong try again\",\n                        type: \"error\",\n                        autoHide: 3000\n                    })\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    function handleUsernameChange(event) {\n        setUserName(event.target.value);\n        const username = event.target.value;\n        var data = new FormData();\n        const payload = {\n            username: username\n        };\n        data = JSON.stringify(payload);\n        setUserNameError(false);\n        setUpdateButtonDisabled(false)\n        // setSignupButtonDisabled(false)\n        fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((result) => {\n            result.json().then(value => {\n                if (value.message === \"user already exists\") {\n                    setUserNameError(true);\n                    setUpdateButtonDisabled(true)\n                    //   setSignupButtonDisabled(true);\n                }\n            })\n        })\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={6000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    >\n                        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={12} alignContent=\"center\" alignItems=\"center\">\n                            <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                                <Badge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    badgeContent={<label htmlFor=\"contained-button-file\">\n                                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                            <EditIcon></EditIcon>\n                                        </IconButton>\n                                    </label>}>\n                                    <Avatar className={classes.large} sizes=\"100\" alt=\"\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${currentUser.profile_pic}`}></Avatar>\n                                </Badge>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                autoComplete=\"fullName\"\n                                name=\"fullName\"\n                                value={name || \"\"}\n                                onChange={handleName}\n                                id=\"fullName\"\n                                label=\"Full Name\"\n                                autoFocus\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                disabled\n                                id=\"email\"\n                                value={email}\n                                onChange={handleEmail}\n                                fullWidth\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                // variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"User Name\"\n                                value={userName}\n                                onChange={handleUsernameChange}\n                                name=\"username\"\n                                error={usernameError}\n                                helperText={usernameError && \"username already exists\"}\n                            />\n                            {/* <TextField\n                                // variant=\"outlined\"\n                                fullWidth\n                                required\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                value={userName}\n                                onChange={handleUserName}\n                            /> */}\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Autocomplete\n                                fullWidth\n                                id=\"college\"\n                                options={collegesName}\n                                getOptionLabel={(option) => option}\n                                // onChange={handleChange}\n                                value={collegeName}\n                                onChange={handleCollege}\n                                renderInput={(params) => <TextField name=\"college\" fullWidth required {...params} label=\"College\" />}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                                value={bio}\n                                onChange={handleBio}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n                                <Select\n                                    value={gender}\n                                    onChange={handleGender}\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'gender',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"designation\">You are</InputLabel>\n                                <Select\n                                    value={designation}\n                                    onChange={handleDesig}\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'designation',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        className={classes.button}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpdateButton}\n                        disabled={loading || updateButtonDisabled}\n                    // className={classes.submit}\n                    >{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Profile\"}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UpdateInfoTabPanel;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthContext from '../AuthContext';\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const {currentUser} = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error'\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [cPassword,setCPassword] = React.useState(null);\n    const [nPassword,setNPassword] = React.useState(null);\n\n\n    const handleClose = async (event, reason) => {\n        setCPassword(null);\n        setNPassword(null);\n\n        setState({ ...state, open: false });\n    };\n\n    function handleCurrentPasswordChange(event){\n        setCPassword(event.target.value);\n    }\n    function handleNewPasswordChange(event){\n        setNPassword(event.target.value);\n    }\n\n    function handleUpdatePassword(event) {\n        setLoading(true);\n        event.preventDefault();\n        // const { cPassword, nPassword } = event.target.elements;\n        // console.log(cPassword);\n        // console.log(nPassword);\n        try{\n            var data = new FormData()\n        const payload = {\n          email: currentUser.email,\n          cPassword: cPassword,\n          nPassword: nPassword\n        };\n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL+'/api/users/updatepassword', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then(response =>{\n            if (response.status === 200){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: result.message,\n                        type: \"success\"\n                      })\n                })\n            }\n            else if (response.status === 401){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message:result.error,\n                        type: \"error\"\n                      })\n                })\n                \n            }\n           \n        })\n\n\n\n            \n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: error.message,\n              type: \"error\"\n            })\n          }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={2000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    ><Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    \n                    <div className={classes.paper}>\n                        <form className={classes.form} onSubmit={handleUpdatePassword}>\n                            <Grid container spacing={2} justify=\"center\" >\n                            \n\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"cPassword\"\n                                        label=\"Current Password\"\n                                        type=\"password\"\n                                        id=\"cPassword\"\n                                        value={cPassword}\n                                        onChange={handleCurrentPasswordChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"nPassword\"\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        id=\"nPassword\"\n                                        value={nPassword}\n                                        onChange={handleNewPasswordChange}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                            // className={classes.submit}\n                            >\n                                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Password\"}\n                            </Button>\n                        </form>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\nimport { withRouter} from \"react-router\";\n// import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n// import TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import AuthContext from '../AuthContext';\n//function for alert\n// function Alert(props) {\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    // const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [loading, setLoading] = React.useState(false);\n\n\n\n\n    function handleLogoutAll(event) {\n        setLoading(true);\n        event.preventDefault();\n        try {\n            fetch(process.env.REACT_APP_API_URL + '/api/users/logoutall', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST'\n            }).then((result) => {\n                if (result.status === 200) {\n                    result.json().then((data) => {\n                        if (data.message === \"success\") {\n                            setLoading(false);\n                            localStorage.removeItem('token');\n                            localStorage.removeItem('tabIndex');\n                            props.history.replace(\"/\")\n                        }\n                    })\n                }\n                else {\n\n                }\n            })\n        }\n        catch (error) {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Button\n                            onClick={handleLogoutAll}\n                            className={classes.button}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                        >\n                            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Logout of All Devices\"}\n                        </Button>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(UpdatePasswordTabPanel);","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport UpdateInfoTabPanel from './UpdateInfoTabPanel';\nimport UpdatePasswordTabPanel from './UpdatePasswordTabPanel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreSettingsTabPanel from './MoreSettingsTabPanel';\nimport { Box } from '@material-ui/core';\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        // position: 'absolute',\n        // right: theme.spacing(1),\n        // top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n        alignContent:'right',\n        marginRight:theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n        // width: '100%',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n}));\n\nfunction UpdateProfile(props) {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function handleClose() {\n        props.handleClose();\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            style={{ minHeight: \"400px\" }}\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle id=\"scroll-dialog-title\">\n                {/* <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div> */}\n                <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                    </Box>\n                </Box>\n                <div className={classes.root}>\n                    <AppBar style={{ alignItems: 'center' }} position=\"static\" color=\"secondary\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\">\n                            <Tab label=\"Update info\" {...a11yProps(0)} />\n                            <Tab label=\"Change Password\" {...a11yProps(1)} />\n                            <Tab label=\"More Settings\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                <UpdateInfoTabPanel value={value} index={0}></UpdateInfoTabPanel>\n                <UpdatePasswordTabPanel value={value} index={1}></UpdatePasswordTabPanel>\n                <MoreSettingsTabPanel value={value} index={2}></MoreSettingsTabPanel>\n            </DialogContent>\n            <DialogActions alignItems=\"center\">\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default UpdateProfile;","import React from 'react';\nimport ProfileCard from '../Components/MainProfileCard';\nimport { Grid } from '@material-ui/core';\nimport UpdateProfileDialog from '../Components/UpdateProfileDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventsDialog from '../Components/EventsDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\n\nfunction EventsTabPanel(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [eOpen, setEOpen] = React.useState(false);\n    const {activeEvents} = React.useContext(ActiveEvents);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    function handleEditButton() {\n        setOpen(true);\n    }\n    function handleClose() {\n        setOpen(false);\n        setEOpen(false)\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setEOpen(true);\n\n    }\n    return (\n        <div>\n            <div>\n                <Grid container component=\"main\" >\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8}>\n                        <ProfileCard handleEditButton={handleEditButton}></ProfileCard>\n                        <UpdateProfileDialog open={open} handleClose={handleClose}></UpdateProfileDialog>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>\n                                        })\n                                    }\n                                </List>\n\n\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={eOpen}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EventsTabPanel;","import React from 'react';\n\n\n//MaterialUI imports\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [startDateError, setStartDateError] = React.useState(false);\n  const [endDateError, setEndDateError] = React.useState(false);\n  const [regEndDateError, setRegEndDateError] = React.useState(false);\n  const [eventTypes, setEventTypes] = React.useState([]);\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/event/get_event_types', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        value.forEach((v) => {\n          setEventTypes((eventTypes) => [...eventTypes, v.title]);\n        })\n      })\n    })\n  }, [token])\n\n  const handleChange = (event) => {\n    if (event.target.files[0]) {\n      props.setPoster(event.target.files[0]);\n      const url = URL.createObjectURL(event.target.files[0]);\n      props.setImageUrl(url)\n      const fileName = event.target.files[0].name;\n      props.setImageName(fileName);\n    }\n  }\n\n  const handleEventNameChange = (event) => {\n    props.setName(event.target.value)\n  }\n\n  const handleDescChange = (event) => {\n    props.setDesc(event.target.value);\n  }\n\n  const handleStartDateChange = (date) => {\n    setStartDateError(false);\n    props.setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setEndDateError(false);\n    props.setEndDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDateError(false);\n    props.setRegEndDate(date);\n  };\n\n  const handleEventModeChange = (event) => {\n    props.setEventMode(event.target.value);\n  }\n  const handleeventTypsChange = (event, value) => {\n    props.setEventType(value);\n  }\n\n  const handleNext = (event) => {\n    event.preventDefault();\n    if (props.startDate === null) {\n      setStartDateError(true)\n    }\n    else if (props.endDate === null) {\n      setEndDateError(true);\n    }\n    else if (props.regEndDate === null) {\n      setRegEndDateError(true)\n    }\n    else {\n      props.handleNext();\n    }\n  }\n  const handleFeeTypeChange = (event, value) => {\n    props.setFeeType(value)\n  }\n\n  const handleRegFees = (event) => {\n    props.setFees(event.target.value);\n  }\n\n  return (\n    <form className={classes.form} onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} >\n          <input id=\"poster-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n          <Badge\n            overlap=\"circle\"\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            badgeContent={<label htmlFor=\"poster-file\">\n              <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                <EditIcon></EditIcon>\n              </IconButton>\n            </label>}>\n            <img height=\"140\" width=\"150\" alt=\"poster\" src={props.imageUrl} ></img>\n\n          </Badge>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventposter\"\n            name=\"eventposter\"\n            label=\"Event Poster\"\n            component=\"span\"\n            value={props.imageName || ''}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"start\">\n                  <label htmlFor=\"poster-file\">\n                    <IconButton component=\"span\" >\n                      <CameraAltIcon></CameraAltIcon>\n                    </IconButton>\n                  </label>\n\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventName\"\n            name=\"eventName\"\n            label=\"Name\"\n            fullWidth\n            value={props.name || \"\"}\n            onChange={handleEventNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"shortdesc\"\n            name=\"shortdesc\"\n            label=\"Short Description\"\n            fullWidth\n            value={props.desc || \"\"}\n            onChange={handleDescChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n            <DateTimePicker\n              inputProps={{ required: true }}\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"startDate\"\n              label=\"Start Date\"\n              name=\"startDate\"\n              value={props.startDate}\n              onChange={handleStartDateChange}\n              error={startDateError}\n              helperText={startDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"endDate\"\n              label=\"End Date\"\n              name=\"endDate\"\n              value={props.endDate}\n              onChange={handleendDateChange}\n              error={endDateError}\n              helperText={endDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={12}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"regEndDate\"\n              label=\"Registration End Date\"\n              name=\"regEndDate\"\n              value={props.regEndDate}\n              onChange={handleRegEndDateChange}\n              error={regEndDateError}\n              helperText={regEndDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Mode</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Mode\"\n              inputProps={{\n                name: 'eventMode',\n                id: 'eventMode',\n              }}\n              value={props.eventMode || \"\"}\n              onChange={handleEventModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            fullWidth\n            id=\"combo-box-demo\"\n            options={eventTypes}\n            getOptionLabel={(option) => option}\n            onChange={handleeventTypsChange}\n            value={props.eventType}\n            renderInput={(params) => <TextField fullWidth required {...params} label=\"Type\" />}\n          />\n        </Grid>\n        {/* <Grid item xs={12}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Registration\"\n              inputProps={{\n                name: 'registrationMode',\n                id: 'registaration mode',\n              }}\n              value={props.registrationMode || \"\"}\n              onChange={handleRegistrationModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"form\">Our Platform(Ellipse)</option>\n              <option value=\"link\">Other</option>\n            </Select>\n          </FormControl>\n        </Grid> */}\n        <Grid item xs={12}>\n          <FormLabel component=\"legend\">Entry Fee</FormLabel>\n          <RadioGroup aria-label=\"address\" name=\"address\" value={props.feeType} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n            <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n            <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n          </RadioGroup>\n        </Grid>\n        {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"regFees\"\n            name=\"regFees\"\n            label=\"Registration Fees\"\n            fullWidth\n            value={props.regFees || \"\"}\n            onChange={handleRegFees}\n          />\n        </Grid>}\n      </Grid>\n\n      <div className={classes.buttons}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >Next\n        </Button>\n      </div>\n    </form>\n  );\n}","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  // const [imageName, setImageName] = React.useState(\"\");\n  // const eventThemes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n  const [eventTags, setEventTags] = React.useState([]);\n  const [requirements, setRequirements] = React.useState([]);\n  // const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n    fetch(process.env.REACT_APP_API_URL + '/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if (v.type === \"EventTags\") {\n            setEventTags((eventTags) => [...eventTags, v.title]);\n          }\n          else if (v.type === \"EventRequirements\") {\n            setRequirements((r) => [...r, v.title]);\n          }\n        })\n      })\n    })\n  }, [token])\n\n\n  function handleeventTagsChange(event, values) {\n    props.setThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    props.setRequirements(values);\n  }\n\n  function handleAddressTypeChange(evemt, value) {\n    props.setAddressType(value);\n  }\n\n  \n\n  \n\n  function handleCollegeChange(event, value) {\n    props.setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        props.setCollegeId(c._id)\n      }\n    })\n  }\n  // function handleVenueCollegeChange(event, value) {\n  //   props.setVenueCollege(value);\n  // }\n\n  function handleAboutChange(event) {\n    props.setAbout(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    props.setParticipantsType(value)\n  }\n  function handleBuildingChange(event) {\n    props.setBuilding(event.target.value);\n  }\n  function handlePlatformChange(event) {\n    props.setPlatformDetails(event.target.value)\n  }\n  function handleNext(event) {\n    event.preventDefault();\n    props.handleNext();\n  }\n\n  function handleTeamChange(event, value) {\n    if (value === \"team\") {\n      props.setIsTeam(true);\n    }\n    else {\n      props.setIsTeam(false);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} onSubmit={handleNext}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter everything about your event in detail\"\n              autoComplete='off'\n              required\n              id=\"about\"\n              name=\"about\"\n              label=\"About\"\n              fullWidth\n              onChange={handleAboutChange}\n              value={props.about || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"themes\"\n              options={eventTags.map((option) => option)}\n              freeSolo\n              value={props.eventThemes || []}\n              onChange={handleeventTagsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Event Tags\" placeholder=\"Event Tags\" />\n              )}\n            />\n          </Grid>\n          {/* {props.registrationMode !== \"form\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regLink\"\n              name=\"regLink\"\n              label=\"Registration Link\"\n              fullWidth\n              value={props.regLink || \"\"}\n              onChange={handleRegLinkChange}\n            />\n          </Grid>} */}\n\n          {/* {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regFees\"\n              name=\"regFees\"\n              label=\"Registration Fees\"\n              fullWidth\n              value={props.regFees || \"\"}\n              onChange={handleRegFees}\n            />\n          </Grid>} */}\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={requirements.map((option) => option)}\n              freeSolo\n              value={props.requirements || []}\n              onChange={handleRequirementsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Prerequisites\" placeholder=\"Requirements\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              fullWidth\n              id=\"combo-box-demo\"\n              options={collegesNames}\n              value={props.college || []}\n              getOptionLabel={(option) => option}\n              onChange={handleCollegeChange}\n              renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component=\"legend\">Participation</FormLabel>\n            <RadioGroup aria-label=\"participation\" name=\"participation\" value={props.participantsType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n              <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${props.college}`} />\n            </RadioGroup>\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel required component=\"legend\">Participation Type</FormLabel>\n            <RadioGroup required aria-label=\"participation_type\" name=\"participation_type\" value={props.isTeam ? \"team\" : \"individual\"} onChange={handleTeamChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"individual\" control={<Radio color=\"default\" />} label=\"Individual\" />\n              <FormControlLabel value=\"team\" control={<Radio color=\"default\" />} label=\"Team\" />\n            </RadioGroup>\n          </Grid>\n          {props.isTeam && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              type=\"number\"\n              id=\"maxTeam\"\n              name=\"minTeam\"\n              label=\"Minimum Team Members\"\n              fullWidth\n              value={props.minTeamSize || \"\"}\n              onChange={(e) => { props.setMinTeamSize(e.target.value) }}\n            />\n          </Grid>}\n          {props.isTeam && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              type=\"number\"\n              id=\"maxTeam\"\n              name=\"maxTeam\"\n              label=\"Maximum Team Members\"\n              fullWidth\n              value={props.maxTeamSize || \"\"}\n              onChange={(e) => { props.setMaxTeamSize(e.target.value) }}\n            />\n          </Grid>}\n          {props.eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              helperText=\"Enter links of your and you can also add or edit later in event edit\"\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              // required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={props.platformDetails || \"\"}\n            />\n          </Grid>}\n          {props.eventMode === \"Offline\" && <React.Fragment>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Venue</FormLabel>\n              <RadioGroup aria-label=\"address\" aria-disabled name=\"address\" defaultValue=\"college\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"College\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                helperText=\"Enter links of your and you can also add or edit later in event edit\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Room No,Building,College,State,Pincode\"\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Venue\"\n                fullWidth\n              />\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Room No & Building\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                getOptionLabel={(option) => option}\n                value={props.venueCollege}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid> */}\n          </React.Fragment>}\n        </Grid>\n        <div className={classes.buttons}>\n          <Button onClick={props.handleBack} className={classes.button}>\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >{\"NEXT\"}\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}","import React from 'react';\n\n//Materail impports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\n\nexport default function FormDialog(props) {\n  const theme = useTheme();\n  const [name, setName] = React.useState(null);\n  const [type, setType] = React.useState(null);\n  const [required, setRequired] = React.useState(true);\n  const fieldOptions = [];\n  const [selectedOptions, setSelectedOptions] = React.useState(['option1', 'option2']);\n\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  }\n  const handleTypeChange = (event) => {\n    setType(event.target.value);\n  }\n  const handleOptionsChange = (event, values) => {\n    setSelectedOptions(values);\n  }\n\n  const handleAddButton = () => {\n    if (name != null && type != null) {\n      if (type !== \"radiobuttons\" && type !== \"checkboxes\" && type !== \"dropdown\") {\n        props.handleAdd({ [name]: { 'title': name, 'field': type, req: required, 'options': [] } }, name);\n      }\n      else {\n        props.handleAdd({ [name]: { 'title': name, 'field': type, req: required, 'options': selectedOptions } }, name);\n      }\n      setName(null);\n      setType(null);\n      setRequired(true);\n      setSelectedOptions(['option1', 'option2']);\n      props.handleClose()\n    }\n  }\n\n  const handleradioChange = (event, value) => {\n    if (value === \"required\") {\n      setRequired(true);\n    }\n    else {\n      setRequired(false);\n    }\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n          boxShadow: 'none',\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Field</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Field Name\"\n                name=\"name\"\n                fullWidth\n                value={name}\n                required\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"type\">Type</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'type',\n                  }}\n                  value={type}\n                  onChange={handleTypeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"short_text\">Short Text</option>\n                  <option value=\"paragraph\">Long Description</option>\n                  <option value=\"dropdown\">Drop Down</option>\n                  <option value=\"date\">Date & Time</option>\n                  <option value=\"radiobuttons\">Radio Button</option>\n                  <option value=\"checkboxes\">Check Box</option>\n                  <option value=\"link\">Link</option>\n                  <option value=\"file\">File Upload</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <RadioGroup required name=\"variant\" defaultValue=\"required\" onChange={handleradioChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"required\" control={<Radio color=\"default\" />} label=\"Required\" />\n                <FormControlLabel value=\"optional\" control={<Radio color=\"default\" />} label=\"Optional\" />\n              </RadioGroup>\n            </Grid>\n            {(type === \"radiobuttons\" || type === \"checkboxes\" || type === \"dropdown\") &&\n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"tags-filled\"\n                  options={fieldOptions.map((option) => option)}\n                  freeSolo\n                  value={selectedOptions || []}\n                  onChange={handleOptionsChange}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Options\" placeholder=\"Options\" helperText=\"you can choose multiple options for your checkboxes or radio buttons enter one option and press enter\" />\n                  )}\n                />\n              </Grid>\n            }\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n\n//Materialui impports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [desc, setDesc] = React.useState(null);\n    const [startDate, setStartDate] = React.useState(null);\n    const [endDate, setEndDate] = React.useState(null);\n    const [linkField, setLinkField] = React.useState('');\n    const [open, setOpen] = React.useState(false);\n    const [selectedFields, setSelectedFields] = React.useState([]);\n    const [state, setState] = React.useState({\n        alertopen: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, alertopen, message, type, autoHide } = state;\n\n    const [checked, setChecked] = React.useState({\n        form: true,\n        link: false,\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function handleAddButton() {\n        if (desc !== null && startDate !== null && endDate !== null) {\n            props.handleAdd({\n                title: `Round ${props.roundsCount + 1}`,\n                description: desc,\n                start_date: startDate,\n                end_date: endDate,\n                link: linkField,\n                fields: selectedFields\n            })\n            props.handleClose()\n            setDesc('');\n            setStartDate(null);\n            setEndDate(null);\n            setLinkField('');\n            setSelectedFields([]);\n        }\n        else {\n            setState({\n                alertopen: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"please fill in all fields\",\n                type: \"error\",\n                autoHide: '5000',\n            })\n        }\n\n\n    }\n\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n\n    const handleDelete = (chipToDelete) => () => {\n        setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    };\n\n    const handleChange = (event) => {\n        setChecked({ ...checked, [event.target.name]: event.target.checked });\n    };\n\n    const { form, link } = checked;\n\n    const handleAlertClose = () => {\n        setState({ ...state, alertopen: false });\n    }\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={alertopen}\n                autoHideDuration={autoHide}\n                onClose={handleAlertClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog\">\n                <DialogTitle id=\"form-dialog-title\">Add Rounds</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Name\"\n                                name=\"name\"\n                                fullWidth\n                                disabled\n                                value={`Round ${props.roundsCount + 1}`}\n                            // required\n                            // onChange={(e) => { setName(e.target.value) }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc}\n                                required\n                                onChange={(e) => { setDesc(e.target.value) }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n                                <DateTimePicker\n                                    inputProps={{ required: true }}\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"startDate\"\n                                    label=\"Start Date\"\n                                    name=\"startDate\"\n                                    value={startDate}\n                                    onChange={(date) => { setStartDate(date) }}\n                                //   error={startDateError}\n                                //   helperText={startDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DateTimePicker\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"endDate\"\n                                    label=\"End Date\"\n                                    name=\"endDate\"\n                                    value={endDate}\n                                    onChange={(date) => { setEndDate(date) }}\n                                //   error={endDateError}\n                                //   helperText={endDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormLabel component=\"legend\">Action</FormLabel>\n                            <FormGroup>\n                                <FormControlLabel\n                                    control={<Checkbox checked={form} color=\"default\" onChange={handleChange} name=\"form\" />}\n                                    label=\"Create Form\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={link} color=\"default\" onChange={handleChange} name=\"link\" />}\n                                    label=\"Link\"\n                                />\n                            </FormGroup>\n                            {/* <RadioGroup aria-label=\"address\" name=\"address\" value={action} onChange={handleActionChange} style={{ display: \"inline\" }}>\n                                <FormControlLabel value=\"form\" control={<Radio color=\"default\" />} label=\"Create Form\" />\n                                <FormControlLabel value=\"hackathon_template\" control={<Radio color=\"default\" />} label=\"Use Hackathon Template\" />\n                                <FormControlLabel value=\"link\" control={<Radio color=\"default\" />} label=\"Provide Link\" />\n                            </RadioGroup> */}\n                        </Grid>\n                        {link && <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"platform_link\"\n                                label=\"Platform Link\"\n                                name=\"platform_link\"\n                                fullWidth\n                                value={linkField}\n                                required\n                                onChange={(e) => { setLinkField(e.target.value) }}\n                            />\n                        </Grid>}\n                        {form && <Grid item xs={12}>\n                            <Typography>Fields</Typography>\n                            <Paper component=\"ul\" className={classes.root}>\n                                {selectedFields.map((data) => {\n                                    return (\n                                        <li key={data.key}>\n                                            <Chip\n                                                label={data.title}\n                                                onDelete={handleDelete(data)}\n                                                className={classes.chip}\n                                            />\n                                        </li>\n                                    );\n                                })}\n                            </Paper>\n                        </Grid>}\n                        {form && <Grid item xs={12}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                onClick={() => { setOpen(true) }}>\n                                Add Field\n                        </Button>\n                        </Grid>}\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <AddFieldDialog\n                open={open}\n                handleAdd={handleFieldAddButton}\n                handleClose={handleClose}>\n            </AddFieldDialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function AlertDialog(props) {\n\n    const theme = useTheme();\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            >\n                <DialogTitle id=\"title\">{\"Terms and Conditions\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ul>\n                            <li>The information you provided for the event is true and is appropriate.\n                                In case we notice any incorrect information, the event will be suspended and further\n                                action would be taken against you.</li>\n                            <li>The information of participants is only used for event purpose and not for any other purpose. Legal action will\n                             be taken if this information is used elsewhere.</li>\n                            <li>ellipseapp.com reserves the right to update and change these Terms of Service regularly\n                               without notice to you or acceptance by you. </li>\n                        </ul>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\n\n//other component imports\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport AddRoundsDialog from '../Components/AddRoundsDialog';\nimport TermsandConditions from '../Components/EventPostTermsandConditions';\n\n\n//css styles\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(0),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    formgroup: {\n        marginTop: theme.spacing(1),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n\nexport default function EventPostForm(props) {\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n    const [roundsDialogOpen, setRoundsDialogOpen] = React.useState(false);\n    const [tandcOpen, setTandcOpen] = React.useState(false);\n    const [prizeTitle, setPrizeTitle] = React.useState(null);\n    const [prizeDesc, setPrizeDesc] = React.useState(null);\n    const [prize, setPrize] = React.useState(null);\n    const [prizes, setPrizes] = React.useState([]);\n\n    React.useEffect(() => {\n        setPrizes(props.prizes);\n    }, [props.prizes])\n\n\n    const handleClose = () => {\n        setOpen(false);\n        setRoundsDialogOpen(false);\n    };\n\n    const fields = {\n        name: {\n            'title': 'Name',\n            'field': 'short_text',\n            'req': true,\n            'options': []\n        },\n        email: {\n            'title': 'Email',\n            'field': 'short_text',\n            'req': true,\n            'options': []\n        },\n        college: {\n            'title': 'College',\n            'field': 'short_text',\n            'req': true,\n            'options': []\n        },\n    }\n\n    const [selectedFields, setSelectedFields] = React.useState([fields['name'], fields['email']]);\n\n    const [state, setState] = React.useState({\n        name: true,\n        email: true,\n        college: false,\n    });\n\n    React.useEffect(() => {\n        if (props.fields.length > 2) {\n            const arr = props.fields.filter(val => { return val.title === \"College\" });\n            if (arr.length > 0) {\n                setState({ ...state, college: true })\n            }\n            setSelectedFields(props.fields);\n        }\n        // eslint-disable-next-line\n    }, [props.fields])\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        const sName = event.target.name;\n        if (event.target.checked) {\n            setSelectedFields(selectedFields => [...selectedFields, fields[sName]]);\n        }\n        else if (!event.target.checked) {\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== sName));\n        }\n    };\n\n    const { name, email, college } = state;\n\n    const handleAddMoreButton = () => {\n        setOpen(true);\n    }\n\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n    const handleDelete = (chipToDelete) => () => {\n        if (chipToDelete.title === 'College') {\n            setState({ ...state, college: false })\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n        }\n        else if (chipToDelete.title !== 'Name' && chipToDelete.title !== 'Email') {\n            setState({ ...state, [chipToDelete.title.toLowercase]: false })\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n        }\n    };\n\n    const handleRoundDelete = (chipToDelete) => () => {\n        const rr = props.rounds;\n        var uR = rr.filter((chip) => chip.title !== chipToDelete.title);\n        var fR = [];\n        uR.forEach((rou, index) => {\n            fR.push({\n                title: `Round ${index + 1}`,\n                description: rou.description,\n                start_date: rou.start_date,\n                end_date: rou.end_date,\n                link: rou.link,\n                fields: rou.fields\n            })\n        });\n        props.setRounds(fR);\n    }\n\n    const handlePostButton = async (e) => {\n        e.preventDefault();\n        if (props.regMode === \"form\") {\n            await props.setFields(selectedFields);\n            props.handlePost(selectedFields);\n        }\n        else {\n            props.handlePost(null);\n        }\n\n    }\n\n    const handleTermsClick = () => {\n        setTandcOpen(true);\n    }\n\n    const handleAddRounds = (r) => {\n        props.setRounds(rounds => [...rounds, r]);\n    }\n\n    const handlePrizeAddButton = () => {\n        props.setPrizes(prizes => [...prizes, { title: prizeTitle, prize: prize, desc: prizeDesc }]);\n        setPrizeTitle(null);\n        setPrizeDesc(null);\n        setPrize(null);\n    }\n\n    const handlePrizeDeleteButton = (index, data) => () => {\n        var currentPrizes = props.prizes;\n        currentPrizes.splice(index);\n        props.setPrizes(currentPrizes);\n    }\n\n    const handlePrizeFieldChange = (title) => (event) => {\n        if (title === \"title\") {\n            setPrizeTitle(event.target.value)\n        }\n        else if (title === \"desc\") {\n            setPrizeDesc(event.target.value);\n        }\n        else {\n            setPrize(event.target.value);\n        }\n    }\n\n    const handleBack = () => {\n        props.setFields(selectedFields);\n        props.handleBack()\n    }\n\n    const handleRegistrationModeChange = (event) => {\n        props.setRegMode(event.target.value);\n    }\n\n    function handleRegLinkChange(event) {\n        props.setRegLink(event.target.value);\n    }\n\n    return (\n        <React.Fragment>\n            <form className={classes.form} onSubmit={handlePostButton}>\n                <Grid container spacing={3}>\n\n                    <AddFieldDialog\n                        open={open}\n                        handleClose={handleClose}\n                        handleAdd={handleFieldAddButton}>\n                    </AddFieldDialog>\n\n                    <AddRoundsDialog\n                        roundsCount={props.rounds.length}\n                        open={roundsDialogOpen}\n                        handleClose={handleClose}\n                        handleAdd={handleAddRounds}>\n                    </AddRoundsDialog>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            multiline={true}\n                            helperText=\"Enter all rules and regulation including eligibility for participation\"\n                            rows=\"5\"\n                            variant='outlined'\n                            placeholder=\"Enter all rules and regulation including eligibility for participation\"\n                            autoComplete='off'\n                            onChange={(e) => { props.setRules(e.target.value) }}\n                            value={props.rules}\n                            id=\"rules\"\n                            name=\"rules\"\n                            label=\"Rules\"\n                            fullWidth\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            multiline={true}\n                            helperText=\"Enter your event themes like healthcare fintech\"\n                            rows=\"5\"\n                            variant='outlined'\n                            placeholder=\"Enter your event themes like healthcare fintech\"\n                            autoComplete='off'\n                            onChange={(e) => { props.setThemes(e.target.value) }}\n                            value={props.themes}\n                            id=\"themes\"\n                            name=\"themes\"\n                            label=\"Themes\"\n                            fullWidth\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Prizes</FormLabel>\n                            <Box display=\"flex\" style={{ marginTop: \"10px\" }}>\n                                <Box>\n                                    <TextField onChange={handlePrizeFieldChange(\"title\")} value={prizeTitle || \"\"} label=\"Prize Title\" variant=\"outlined\" style={{ marginRight: \"5px\" }}></TextField>\n                                </Box>\n                                <Box>\n                                    <TextField onChange={handlePrizeFieldChange(\"prize\")} value={prize || \"\"} label=\"Prize\" variant=\"outlined\"></TextField>\n                                </Box>\n                                <Box>\n                                    <TextField onChange={handlePrizeFieldChange(\"desc\")} value={prizeDesc || \"\"} label=\"Prize Description\" variant=\"outlined\"></TextField>\n                                </Box>\n                                <Box>\n                                    <IconButton onClick={handlePrizeAddButton}>Add</IconButton>\n                                </Box>\n                            </Box>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {prizes.map((data, index) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n                                            label={data.title}\n                                            onDelete={handlePrizeDeleteButton(index, data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl fullWidth required>\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Registration\"\n                                inputProps={{\n                                    name: 'registrationMode',\n                                    id: 'registaration mode',\n                                }}\n                                value={props.regMode || \"\"}\n                                onChange={handleRegistrationModeChange}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"form\">Our Platform(Ellipse)</option>\n                                <option value=\"link\">Other</option>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    {props.regMode === \"link\" && <Grid item xs={12}>\n                        <TextField\n                            autoComplete='off'\n                            required\n                            id=\"regLink\"\n                            name=\"regLink\"\n                            label=\"Registration Link\"\n                            fullWidth\n                            value={props.regLink || \"\"}\n                            onChange={handleRegLinkChange}\n                        />\n                    </Grid>}\n\n                    {props.regMode === \"form\" && <React.Fragment>\n                        <Grid item xs={12}>\n                            <FormControl component=\"fieldset\" className={classes.formControl}>\n                                <FormLabel component=\"legend\">Fields for your Registration Form</FormLabel>\n                                <FormGroup className={classes.formgroup}>\n                                    <FormControlLabel\n                                        control={<Checkbox disabled color=\"primary\" checked={name} onChange={handleChange} name=\"name\" />}\n                                        label=\"Name\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox disabled color=\"primary\" checked={email} onChange={handleChange} name=\"email\" />}\n                                        label=\"Email\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"primary\" checked={college} onChange={handleChange} name=\"college\" />}\n                                        label=\"College\"\n                                    />\n                                </FormGroup>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                onClick={handleAddMoreButton}>\n                                Add More\n                        </Button>\n                        </Grid>\n\n                        <Grid>\n                            <Paper component=\"ul\" className={classes.root}>\n                                {selectedFields.map((data) => {\n                                    return (\n                                        <li key={data.key}>\n                                            <Chip\n                                                label={data.title}\n                                                onDelete={handleDelete(data)}\n                                                className={classes.chip}\n                                            />\n                                        </li>\n                                    );\n                                })}\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl component=\"fieldset\" className={classes.formControl}>\n                                <FormLabel component=\"legend\">Rounds(Optional)</FormLabel>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                onClick={() => { setRoundsDialogOpen(true) }}>\n                                Add Rounds\n                        </Button>\n                        </Grid>\n\n                        <Grid>\n                            <Paper component=\"ul\" className={classes.root}>\n                                {props.rounds.map((data) => {\n                                    return (\n                                        <li key={data.key}>\n                                            <Chip\n                                                label={data.title}\n                                                onDelete={handleRoundDelete(data)}\n                                                className={classes.chip}\n                                            />\n                                        </li>\n                                    );\n                                })}\n                            </Paper>\n                        </Grid>\n                    </React.Fragment>}\n\n                    <Grid item xs={12}>\n                        <Typography>By posting the event.I accept the\n                        <Button color=\"primary\" onClick={handleTermsClick}>\n                                Terms and Conditions\n                        </Button>\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <div className={classes.buttons}>\n                    <Button onClick={handleBack} className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}>\n                        Post\n                    </Button>\n                </div>\n            </form>\n            <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    hidden: {\n        display: 'none'\n      }\n}));\n\nfunction SuccessPanel(props) {\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n\n    return (\n        <div className={props.showSuccessPanel === false && classes.hidden}>\n        <VerifiedUserIcon fontSize=\"large\"></VerifiedUserIcon>\n            {props.type === \"eventSuccess\" && <div className={classes.root}>\n            \n                <Typography variant=\"h5\">Your Event was added successfully</Typography> \n                <ul>\n                    <li><Typography>Visit your posted events in Profile page</Typography></li>\n                    <li><Typography >Post announcements in dashboard, chat with users, add Moderators and see registered participants data</Typography> </li>\n                </ul>\n                \n                \n            </div>}\n            {props.type === \"registrationSuccess\" && <div className={classes.root}>\n                <Typography>Thanks for registering to the event</Typography>\n                <ul>\n                    <li><Typography>Stay tuned with announcements and notifications</Typography></li>\n                    <li><Typography >Form Teams in Participation tab</Typography> </li>\n                    <li><Typography >Send your queries in event chat</Typography> </li>\n                </ul>  \n                <Button variant=\"outlined\" onClick={props.handleHomeScreenButton}>Home Screen</Button>\n                <Button variant=\"outlined\" style={{marginLeft:\"5px\"}} onClick={props.handleEventScreenButton}>Event Screen</Button>\n            </div>}\n        </div>\n    );\n}\n\nexport default SuccessPanel;\n","import React from 'react';\n\n//Material UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n//Components imports\nimport EventPostDetails1 from '../Components/EventPostDetails1';\nimport EventPostDetails2 from '../Components/EventPostDetails2';\nimport EventPostDetails3 from '../Components/EventPostDetails3';\nimport SuccessPanel from '../Components/SuccessPanel';\nimport AuthContext from '../AuthContext';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//function for copy right\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n        ellipseapp.com\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3),\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  stepper: {\n    padding: theme.spacing(3, 8, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(12),\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  hidden: {\n    display: 'none'\n  }\n}));\n\n\n\nexport default function Checkout({ history }) {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const { currentUser } = React.useContext(AuthContext);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(['About','Event Details', 'More Details']);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const [eventName, setEventName] = React.useState(null);\n  const [shortDesc, setShortDesc] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [registrationMode, setRegistrationMode] = React.useState(null);\n\n\n\n  const [regLink, setRegLink] = React.useState(null);\n  const [fees, setFees] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  const [image, setImage] = React.useState(null);\n  const [imageUrl,setImageUrl] = React.useState(null);\n  const [addressType, setAddressType] = React.useState(null);\n  const [collegeName, setCollegeName] = React.useState(currentUser.college_name);\n  const [collegeId, setCollegeId] = React.useState(currentUser.college_id)\n  const [building, setBuildingAdress] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(currentUser.name + \",\" + currentUser.college_name);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const [participantsType, setParticipantsType] = React.useState(\"open\");\n  const [fields, setFields] = React.useState([]);\n  const [platformDetails, setPlatformDetails] = React.useState('');\n  const [imageName, setImageName] = React.useState(null);\n  const [isTeam, setIsTeam] = React.useState(false);\n  const [minTeamSize, setMinTeamSize] = React.useState(1);\n  const [maxTeamSize, setMaxTeamSize] = React.useState(1);\n  const [rounds, setRounds] = React.useState([]);\n  const [rules, setRules] = React.useState(null);\n  const [prizes, setPrizes] = React.useState([]);\n  const [themes, setThemes] = React.useState(null);\n  const [showSuccessPanel, setShowSuccessPanel] = React.useState(false);\n\n\n\n\n\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <EventPostDetails1\n            name={eventName}\n            desc={shortDesc}\n            startDate={startDate}\n            endDate={endDate}\n            regEndDate={regEndDate}\n            eventMode={eventMode}\n            eventType={eventType}\n            about={about}\n            feeType={feeType}\n            registrationMode={registrationMode}\n            setName={setEventName}\n            setDesc={setShortDesc}\n            setStartDate={setStartDate}\n            setEndDate={setendDate}\n            setRegEndDate={setRegEndDate}\n            setEventMode={setEventMode}\n            setEventType={setEventType}\n            setRegistrationMode={setRegistrationMode}\n            setAbout={setAbout}\n            handleNext={handleNext}\n            setFeeType={setFeeType}\n            poster={image}\n            imageName={imageName}\n            setImageName={setImageName}\n            setPoster={setImage}\n            imageUrl = {imageUrl}\n            setImageUrl={setImageUrl}\n            regFees={fees}\n            setFees={setFees}\n            steps={steps}\n            setSteps={setSteps} />);\n      case 1:\n        return (\n          <EventPostDetails2\n            handleBack={handleBack}\n            handleEventPost={handleEventPost}\n            eventMode={eventMode}\n            feeType={feeType}\n            eventThemes={eventThemes}\n            eventPoster={image}\n            regLink={regLink}\n            regFees={fees}\n            about={about}\n            requirements={selectedrequirements}\n            college={collegeName}\n            building={building}\n            organizer={organizer}\n            registrationMode={registrationMode}\n            venueCollege={venueCollege}\n            participantsType={participantsType}\n            platformDetails={platformDetails}\n            poster={image}\n            isTeam={isTeam}\n            minTeamSize={minTeamSize}\n            maxTeamSize={maxTeamSize}\n            setIsTeam={setIsTeam}\n            setMinTeamSize={setMinTeamSize}\n            setMaxTeamSize={setMaxTeamSize}\n            imageName={imageName}\n            setImageName={setImageName}\n            setPlatformDetails={setPlatformDetails}\n            setThemes={setEventThemes}\n            setPoster={setImage}\n            setRegLink={setRegLink}\n            setFees={setFees}\n            setRequirements={setSelectedRequirements}\n            setOrganizer={setOrganizer}\n            setAddressType={setAddressType}\n            setCollegeName={setCollegeName}\n            setCollegeId={setCollegeId}\n            setBuilding={setBuildingAdress}\n            setVenueCollege={setVenueCollege}\n            setAbout={setAbout}\n            setParticipantsType={setParticipantsType}\n            handleNext={handleNext} />\n        );\n      case 2:\n        return (\n          <EventPostDetails3\n            handleBack={handleBack}\n            fields={fields}\n            setFields={setRegFields}\n            rounds={rounds}\n            setRounds={setRounds}\n            rules={rules}\n            setRules={setRules}\n            prizes={prizes}\n            setPrizes={setPrizes}\n            themes={themes}\n            setThemes={setThemes}\n            regMode={registrationMode}\n            setRegMode={setRegistrationMode}\n            setRegLink={setRegLink}\n            regLink={regLink}\n            handlePost={handleEventPost}>\n          </EventPostDetails3>);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  const handleEventPost = (allFields) => {\n    var oAllowed = false;\n    if (participantsType === \"open\") {\n      oAllowed = true\n    }\n    // console.log(themes)\n    setLoading(true);\n    try {\n      var data = new FormData();\n      const payload = {\n        user_id: currentUser.user_id,\n        name: eventName,\n        description: shortDesc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: fees,\n        about: about,\n        // organizer: organizer,\n        fee_type: feeType,\n        requirements: selectedrequirements,\n        college_name: collegeName,\n        college_id: collegeId,\n        venue_type: addressType,\n        venue: building,\n        reg_fields: allFields,\n        reg_mode: registrationMode,\n        o_allowed: oAllowed,\n        platform_details: platformDetails,\n        isTeamed: isTeam,\n        team_size: { min_team_size: minTeamSize, max_team_size: maxTeamSize },\n        rounds: rounds,\n        rules: rules,\n        prizes: prizes,\n        themes: themes\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL + '/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data,\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            var data2 = new FormData();\n            data2.append(\"image\", image);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${value.eventId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data2,\n            }).then(response => {\n              if (response.status === 200) {\n                response.json().then(val => {\n                  setLoading(false);\n                  setShowSuccessPanel(true)\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"Event added successfully.Manage your posted events from your profile page\",\n                    type: \"success\",\n                    autoHide: \"4000\"\n                  })\n                })\n              }\n              else {\n                setLoading(false);\n                setShowSuccessPanel(true);\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: \"Poster upload is not successfull try again in edit event in your events\",\n                  type: \"error\",\n                  autoHide: '3000',\n                })\n              }\n            })\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            setLoading(false);\n            // console.log(value);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: \"Something went wrong try again\",\n              type: \"errors\",\n              autoHide: \"4000\"\n            })\n          })\n        }\n      })\n\n\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: '5000',\n      })\n    }\n  }\n  // setLoading(false);\n  function setRegFields(f) {\n    setFields(f);\n  }\n\n  // function handlePostwithoutregFileds() {\n  //   handleEventPost(null);\n  // }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n    // setIsTeam(false)\n  };\n\n  function handleCloseButton() {\n    history.goBack();\n  }\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Event added successfully.Manage your posted events from your profile page\") {\n      history.replace(\"/home\");\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      {<Backdrop open={loading} className={classes.backdrop}><CircularProgress></CircularProgress></Backdrop>}\n      <main className={classes.layout}>\n\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleCloseButton}>\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n        <Paper className={classes.paper}>\n          <SuccessPanel type=\"eventSuccess\" showSuccessPanel={showSuccessPanel}></SuccessPanel>\n          <div className={showSuccessPanel && classes.hidden}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              Post your Event\n          </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Thank you.\n                </Typography>\n                </React.Fragment>\n              ) : (\n                  <React.Fragment>\n                    {getStepContent(activeStep)}\n                  </React.Fragment>\n                )}\n            </React.Fragment>\n          </div>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\n// import AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    avatarLetterStyle: {\n        fontFamily: 'Gugi',\n        fontWeight: 'bold',\n        fontSize: '1.3em',\n        marginTop: theme.spacing(0.5)\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            <Box display=\"flex\">\n                <Box flexGrow={1} paddingTop={1}>\n                    <Divider></Divider>\n                </Box>\n                <Typography\n                    variant=\"body2\">\n                    {props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}\n                </Typography>\n                <Box flexGrow={1} paddingTop={1}>\n                    <Divider></Divider>\n                </Box>\n\n            </Box>\n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar className={classes.avatar} color=\"primary\" alt={'EllipseBot'}>\n                        <Typography className={classes.avatarLetterStyle}>E</Typography>\n                    </Avatar>\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{\"EllipseBot  \"}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        {/* <Box>\n                            <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton>\n                            {currentUser.user_id === message.user_id && <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                            </IconButton>}\n                        </Box> */}\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                        </Typography>\n\n                    </Box>\n                    <Button onClick={props.handleViewClick} color=\"primary\">View Team</Button>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\n// import AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    avatarLetterStyle: {\n        fontFamily: 'Gugi',\n        fontWeight: 'bold',\n        fontSize: '1.3em',\n        marginTop: theme.spacing(0.5)\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n            <Box className={classes.root5}>\n                <Avatar className={classes.avatar} color=\"primary\" alt={'EllipseBot'}  >\n                    <Typography className={classes.avatarLetterStyle}>E</Typography>\n                </Avatar>\n            </Box>\n            <Box className={classes.root2} whiteSpace=\"normal\">\n                <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                    <Box flexGrow={1} className={classes.message}>\n                        <Box>\n                            <Typography variant=\"body1\">{\"EllipseBot  \"}</Typography>\n                        </Box>\n                        <Box style={{ marginLeft: \"7px\" }}>\n                            <Typography component=\"span\"\n                                variant=\"body2\"\n                                style={{ fontSize: \"0.9em\" }}\n                                color=\"textSecondary\">\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    {/* <Box>\n                        <IconButton style={{ padding: '0px', margin: '0px' }}>\n                            <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                        </IconButton>\n                        {currentUser.user_id === message.user_id && <IconButton style={{ padding: '0px', margin: '0px' }}>\n                            <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                        </IconButton>}\n                    </Box> */}\n                </Box>\n                <Box whiteSpace=\"normal\">\n                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                        <Linkify\n                            componentDecorator={(decoratedHref, decoratedText, key) => (\n                                <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                    {decoratedText}\n                                </a>\n                            )}\n                        >{message.message}</Linkify>\n                    </Typography>\n                </Box>\n                <Button onClick={props.handleViewClick} color=\"primary\">View Team</Button>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    // console.log(props.repliedMessage);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            {props.divider && <Divider></Divider>}\n            {props.divider && <Box m={1} p={1} key={props.index} position=\"sticky\" className={classes.root6}>\n                <Typography variant=\"body2\">{props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}</Typography>\n            </Box>}\n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar  alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{message.user_name + \"   \"}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box>\n                            {/* <IconButton onClick={props.handleReplyButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton> */}\n                            {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                            <DeleteOutlinedIcon style={{ color: '#aaaaaa' }}></DeleteOutlinedIcon>\n                            </IconButton>}\n                        </Box>\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                        </Typography>\n                    </Box>\n                    <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                        <Box className={classes.root5}>\n                            <Avatar variant=\"square\" alt={props.repliedMessage[0].userName} src={props.repliedMessage[0].user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${props.repliedMessage[0].user_pic}`} />\n                        </Box>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                <Box flexGrow={1} className={classes.message}>\n                                    <Box>\n                                        <Typography variant=\"body1\">{props.repliedMessage[0].user_name + \"   \"}</Typography>\n                                    </Box>\n                                    <Box style={{ marginLeft: \"7px\" }}>\n                                        <Typography component=\"span\"\n                                            variant=\"body2\"\n                                            style={{ fontSize: \"0.9em\" }}\n                                            color=\"textSecondary\">\n                                            {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                            </Box>\n                            <Box>\n                                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                                    <Linkify\n                                        componentDecorator={(decoratedHref, decoratedText, key) => (\n                                            <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                {decoratedText}\n                                            </a>\n                                        )}\n                                    >{props.repliedMessage[0].message}</Linkify>\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\n\nexport default function AlertDialog(props) {\n\n    const [reply,setReply] = React.useState(null);\n\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  const handleSendButton = () => {\n    props.handleReplyConfirmation(reply)\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Reply Message\"}</DialogTitle>\n        <DialogContent>\n          <TextField name=\"reply\" value={reply} onChange={(ev)=>{setReply(ev.target.value)}} >\n\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSendButton} color=\"primary\" autoFocus>\n            send\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n// import clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        // position: 'absolute',\n        // right: theme.spacing(4),\n        // bottom: theme.spacing(4),\n        // left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n        \n    },\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    \n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        // console.log(newmessage);\n        if (newmessage.length > 1) {\n            // console.log(newmessage.length);\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={classes.bottomBar} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\nimport { withRouter, } from \"react-router\";\n\n//Material Ui imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\n//other component imports\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageBox3 from './MessageBox3';\nimport MessageBox4 from './MessageBox4';\nimport MessageBox5 from './MessageBox5';\nimport MessageDeleteDialog from './MessageDeleteDialog';\nimport MessageReplyDialog from './MessageReplyDialog';\nimport AuthContext from '../AuthContext';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport ChatTextField from './MainChatTextField';\nimport { cleanup } from '@testing-library/react';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n        height: '100%'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    textField: {\n        textAlign: 'center',\n        position: 'fixed',\n        width: '75%',\n        bottom: 0,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        },\n    },\n    header: {\n        position: 'sticky',\n        top: 64,\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(2),\n        zIndex: 8,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n    }\n\n}));\n\nfunction MainChatPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const team = props.event;\n\n    const [loading, setLoading] = React.useState(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [openReplyDialog, setOpenReplyDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n    const [messageToBeReplied, setMessagesToBeReplied] = React.useState({});\n\n    const [reference, setReferenece] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { eventChatMessages } = React.useContext(WebSocketDataContext);\n    const { setEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { teamChatMessages } = React.useContext(WebSocketDataContext);\n    const { setTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedTeamChatMessages, setDeletedTeamChatMessages } = React.useContext(WebSocketDataContext);\n    const { deletedEventChatMessages, setDeletedEventChatMessages } = React.useContext(WebSocketDataContext);\n\n\n    React.useEffect(() => {\n    }, [])\n\n    const closeWebSocket = () => {\n        if (webSocketContext) {\n            if (props.chatType === \"event\") {\n                webSocketContext.send(JSON.stringify({\n                    action: \"close_event_socket\",\n                    event_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n            else {\n                webSocketContext.send(JSON.stringify({\n                    action: \"close_team_socket\",\n                    team_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n        }\n    }\n\n    window.onbeforeunload = () => {\n        closeWebSocket()\n\n    }\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            if (props.chatType === \"event\") {\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_event_room\",\n                    event_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n            else {\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_team_room\",\n                    team_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n        }\n        return () => {\n            closeWebSocket()\n        }\n        // eslint-disable-next-line\n    }, [webSocketContext, currentUser, event, props])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        if (props.chatType === \"event\") {\n            eventChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                    setEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n                }\n            });\n        }\n        else {\n            teamChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.team_id === event._id) {\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                    setTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n                }\n            });\n        }\n        // eslint-disable-next-line\n    }, [eventChatMessages, event, teamChatMessages])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        if (props.chatType === \"event\") {\n            deletedEventChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                    setDeletedEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n                }\n            })\n        }\n        else {\n            deletedTeamChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.team_id === event._id) {\n                    setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                    setDeletedTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n                }\n            })\n        }\n        // eslint-disable-next-line\n    }, [deletedEventChatMessages, deletedTeamChatMessages])\n\n\n    // if (webSocketContext) {\n    //     webSocketContext.onmessage = (message) => {\n    //         const mes = JSON.parse(message.data);\n    //         const cMes = mes.msg;\n    //         if (props.chatType === \"event\") {\n    //             if (mes.event_id === event._id) {\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n    //         else {\n    //             if (mes.team_id === event._id) {\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n\n    //     }\n    // }\n\n\n    React.useEffect(() => {\n        // console.log(props.chatType);\n        setLoading(true)\n        if (props.chatType === \"event\") {\n            fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setChatMessages(value);\n                    setLoading(false);\n                    // webConnect();\n                })\n            })\n        } else {\n            fetch(process.env.REACT_APP_API_URL + `/api/chat/load_team_chat_messages?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setChatMessages(value);\n                    setLoading(false);\n                    // webConnect();\n                })\n            })\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n\n\n    const handleSendClick = (message) => {\n        const d = new Date();\n        if (props.chatType === \"event\") {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_event_message\",\n                event_id: event._id,\n                msg: {\n                    'id': user.user_id + Date.now(),\n                    'user_id': user.user_id,\n                    'user_name': user.name,\n                    'user_pic': user.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n        else {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_team_message\",\n                team_id: event._id,\n                msg: {\n                    'id': user.user_id + Date.now(),\n                    'user_id': user.user_id,\n                    'user_name': user.name,\n                    'user_pic': user.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(mes);\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        if (props.chatType === \"event\") {\n            webSocketContext.send(JSON.stringify({\n                action: \"delete_event_chat_message\",\n                event_id: event._id,\n                msg: mes\n            }));\n            setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        }\n        else {\n            webSocketContext.send(JSON.stringify({\n                action: \"delete_team_chat_message\",\n                team_id: event._id,\n                msg: mes\n            }));\n            setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        }\n        setOpenDeleteDialog(false);\n    }\n\n    const handleReplyButton = (mes) => () => {\n        setMessagesToBeReplied(mes);\n        setOpenReplyDialog(true);\n    }\n\n    const handleReplyConfirmation = (mes) => {\n        const d = new Date();\n        webSocketContext.send(JSON.stringify({\n            action: \"send_event_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message_type': 'reply_text_message',\n                'message': mes,\n                'replied_to': messageToBeReplied.id,\n                'date': d.toISOString()\n            }\n        }));\n        setMessageToBeDeleted(\"\");\n        setOpenReplyDialog(false);\n    }\n\n    const handleInfoButton = (id) => () => {\n        props.history.push(`/event/${id}`)\n        // setSelectedEvent(allEvents.filter((e => { return e._id === id }))[0]);\n        // setOpen(true);\n    }\n\n    const handleBackButton = () => {\n        props.setSelectedChat(null);\n        props.openDialog(false)\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.header}>\n                        <Box display=\"flex\">\n                            <Box >\n                                {props.mobile && <IconButton style={{ marginTop: '0px', padding: '0px' }} onClick={handleBackButton}>\n                                    <ArrowBackIosIcon></ArrowBackIosIcon>\n                                </IconButton>}\n                            </Box>\n                            <Box flexGrow={1}>\n                                <Typography>{props.chatType === \"event\" ? event.name : team.team_name}</Typography>\n                            </Box>\n                            <Box>\n                                <IconButton style={{ marginTop: '0px', padding: '0px' }} onClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}>\n                                    <InfoIcon></InfoIcon>\n                                </IconButton>\n                            </Box>\n                        </Box>\n                    </div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.message_type === 'team_status_update_message') {\n                                        return (\n                                            <MessageBox3\n                                                handleViewClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                handleReplyButton={handleReplyButton}\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox3>\n                                        );\n                                    }\n                                    else if (value.message_type === 'reply_text_message') {\n                                        const repliedMessage = chatMessages.filter(m => { return m.id === value.replied_to })\n                                        return (\n                                            <MessageBox5\n                                                divider={true}\n                                                repliedMessage={repliedMessage}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                handleReplyButton={handleReplyButton}\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox5>\n                                        );\n                                    }\n                                    return (\n                                        <MessageBox1\n                                            adminId={props.chatType === \"event\" ? event.user_id : \"\"}\n                                            message={value}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox1>\n                                    );\n\n                                }\n                                if (value.message_type === 'team_status_update_message') {\n                                    return (\n                                        <MessageBox4\n                                            handleViewClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox4>\n                                    )\n                                }\n                                else if (value.message_type === 'reply_text_message') {\n                                    const repliedMessage = chatMessages.filter(m => { return m.id === value.replied_to })\n                                    return (\n                                        <MessageBox5\n                                            divider={false}\n                                            repliedMessage={repliedMessage}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox5>\n                                    );\n                                }\n                                return (\n                                    <MessageBox2\n                                        message={value}\n                                        adminId={props.chatType === \"event\" ? event.user_id : \"\"}\n                                        currentDate={currentDate}\n                                        handleReplyButton={handleReplyButton}\n                                        handleMessageDeleteButton={handleMessageDeleteButton}\n                                        messageDate={messageDate}\n                                        index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                    </Box>\n                    <div className={classes.textField}>\n                        <ChatTextField\n                            loading={loading}\n                            open={undefined}\n                            handleSend={handleSendClick}  ></ChatTextField>\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n\n                    <MessageReplyDialog\n                        open={openReplyDialog}\n                        message={messageToBeReplied}\n                        setOpen={setOpenReplyDialog}\n                        handleReplyConfirmation={handleReplyConfirmation}></MessageReplyDialog>\n\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(MainChatPanel);\n\n// return (\n//     <React.Fragment>\n//         {/* <Divider></Divider> */}\n//         <Box m={1} p={1} key={index} className={classes.root6}>\n//             <Box flexGrow={1} marginTop={1}>\n//                 <Divider></Divider>\n//             </Box>\n//             <Box>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n//             <Box flexGrow={1} marginTop={1}>\n//                 <Divider></Divider>\n//             </Box>\n//         </Box>\n//         <Box m={1} p={1} key={index + 1} className={classes.root3}>\n//             <Box className={classes.root5}>\n//                 <Avatar variant=\"square\" alt={value.userName} src={(value.user_pic !== null && value.user_pic !== \"\") && process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//             </Box>\n//             <Box className={classes.root2} whiteSpace=\"normal\">\n//                 <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n//                     <Box flexGrow={1} className={classes.message}>\n//                         <Box>\n//                             <Typography variant=\"body1\">{value.user_name + \"   \"}</Typography>\n//                         </Box>\n//                         <Box style={{ marginLeft: \"7px\" }}>\n//                             <Typography component=\"span\"\n//                                 variant=\"body2\"\n//                                 style={{ fontSize: \"0.9em\" }}\n//                                 color=\"textSecondary\">\n//                                 {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n//                             </Typography>\n//                         </Box>\n//                     </Box>\n//                     <Box>\n//                         <IconButton style={{ padding: '0px', margin: '0px' }}>\n//                             <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n//                         </IconButton>\n//                         {user.user_id === value.user_id && <IconButton onClick={handleMessageDeleteButton(value)} style={{ padding: '0px', margin: '0px' }}>\n//                             <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n//                         </IconButton>}\n//                     </Box>\n//                 </Box>\n\n//                 <Box>\n//                     <Typography variant=\"body2\"\n//                         style={{ fontSize: \"1.2em\" }}\n//                         color=\"textSecondary\">{value.message}</Typography>\n//                 </Box>\n//             </Box>\n//         </Box>\n//     </React.Fragment>\n// );\n\n\n// return (\n//     <Box m={1} p={1} key={index + 1} className={classes.root3}>\n//         <Box className={classes.root5}>\n//             <Avatar variant=\"square\" alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//         <Box className={classes.root2} whiteSpace=\"normal\">\n//             <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n//                 <Box flexGrow={1} className={classes.message}>\n//                     <Box>\n//                         <Typography variant=\"body1\">{value.user_name + \"   \"}</Typography>\n//                     </Box>\n//                     <Box style={{ marginLeft: \"7px\" }}>\n//                         <Typography component=\"span\"\n//                             variant=\"body2\"\n//                             style={{ fontSize: \"0.9em\" }}\n//                             color=\"textSecondary\">\n//                             {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n//                         </Typography>\n//                     </Box>\n//                 </Box>\n//                 <Box>\n//                     <IconButton style={{ padding: '0px', margin: '0px' }}>\n//                         <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n//                     </IconButton>\n//                     {user.user_id === value.user_id && <IconButton onClick={handleMessageDeleteButton(value)} style={{ padding: '0px', margin: '0px' }}>\n//                         <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n//                     </IconButton>}\n//                 </Box>\n//             </Box>\n//             <Box whiteSpace=\"normal\">\n//                 <Typography className={classes.inline} variant=\"body2\"\n//                     style={{ fontSize: \"1.2em\" }}\n//                     color=\"textSecondary\">{value.message}</Typography>\n//             </Box>\n//         </Box>\n//     </Box>\n// );\n\n\n\n// const webConnect = () => {\n//     const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n//     ws.onopen = () => {\n//         // console.log(\"connected\")\n//         setWebSocket(ws);\n//         if (props.chatType === \"event\") {\n//             ws.send(JSON.stringify({\n//                 action: \"join_event_room\",\n//                 event_id: event._id,\n//                 msg: {\n//                     'user_id': currentUser.user_id,\n//                 }\n//             }));\n//         }\n//         else {\n//             ws.send(JSON.stringify({\n//                 action: \"join_team_room\",\n//                 team_id: event._id,\n//                 msg: {\n//                     'user_id': currentUser.user_id,\n//                 }\n//             }));\n//         }\n\n//         ws.onmessage = (message) => {\n//             const mes = JSON.parse(message.data);\n//             const cMes = mes.msg;\n//             if (props.chatType === \"event\") {\n//                 if (mes.event_id === event._id) {\n//                     setChatMessages(chatMessages => [...chatMessages, cMes]);\n//                 }\n//             }\n//             else {\n//                 if (mes.team_id === event._id) {\n//                     setChatMessages(chatMessages => [...chatMessages, cMes]);\n//                 }\n//             }\n\n//         }\n//         setLoading(false)\n//     }\n//     ws.onclose = () => {\n//         check();\n//         console.log(\"closed\");\n//     }\n// }","import React from 'react';\n\n//materialui imports\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport IconButton from '@material-ui/core/IconButton';\nimport EventIcon from '@material-ui/icons/Event';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Typography from '@material-ui/core/Typography';\n\n//other component imports\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'fixed',\n        width: '25%',\n        height: '93%',\n        backgroundColor: theme.palette.secondary.main,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            height: '86%'\n        },\n    },\n    subRoot: {\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    divider: {\n        backgroundColor: theme.palette.primary.main,\n\n    }\n}));\n\nconst ChatContactsPanel = (props) => {\n    const token = localStorage.getItem('token');\n    const theme = useTheme();\n    const classes = useStyles();\n\n    const [teams, setTeams] = React.useState([]);\n    const [checked, setChecked] = React.useState([0]);\n    const [chatValue, setChatValue] = React.useState(0);\n\n    const { currentUser } = React.useContext(AuthContext);\n    const { allEvents } = React.useContext(EventsContext);\n\n\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true || val.user_id === currentUser.user_id;\n    });\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/user/get_all_teams', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setTeams(value);\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n            }\n        })\n    }, [token])\n\n    const handleToggle = (value, userid) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        props.setChatType('event')\n        props.setChatId(value);\n        props.setAdminId(userid);\n        if (theme.breakpoints.width('md') >= window.innerWidth) {\n            props.openDialog(true);\n        }\n        setChecked(newChecked);\n    };\n\n    const handleToggle2 = (value, userid) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        props.setChatType('team')\n        props.setChatId(value);\n        props.setAdminId(userid);\n        setChecked(newChecked);\n        if (theme.breakpoints.width('md') >= window.innerWidth) {\n            props.openDialog(true);\n        }\n    };\n\n    const handleChatChange = (value) => () => {\n        setChatValue(value)\n    }\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Paper className={classes.root}>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Box paddingRight={1} paddingLeft={1}>\n                            <IconButton onClick={handleChatChange(0)}>\n                                <Box style={{ width: \"100px\" }}>\n                                    <Box>\n                                        <EventIcon color={chatValue === 0 ? \"primary\" : \"default\"}></EventIcon>\n                                    </Box>\n                                    <Box >\n                                        <Divider className={chatValue === 0 && classes.divider}></Divider>\n                                    </Box>\n                                </Box>\n                            </IconButton>\n                        </Box>\n                        <Box paddingRight={1} paddingLeft={1}>\n                            <IconButton onClick={handleChatChange(1)}>\n                                <Box style={{ width: \"100px\" }}>\n                                    <Box>\n                                        <GroupIcon color={chatValue === 1 ? \"primary\" : \"default\"}></GroupIcon>\n                                    </Box>\n                                    <Box>\n                                        <Divider className={chatValue === 1 && classes.divider}></Divider>\n                                    </Box>\n                                </Box>\n                            </IconButton>\n                        </Box>\n                    </Box>\n                    <List className={classes.subRoot}>\n                        {chatValue === 0 && regEvents.map((value) => {\n                            const labelId = `checkbox-list-label-${value._id}`;\n                            return (\n                                <React.Fragment>\n                                    <ListItem key={value._id} role={undefined} dense button\n                                        selected={checked.indexOf(value) !== -1}\n                                        onClick={handleToggle(value, value.user_id)}>\n                                        <ListItemIcon>\n                                            <ListItemAvatar>\n                                                <Avatar\n                                                    alt={`user avatar n°${value + 1}`}\n                                                    src={process.env.REACT_APP_API_URL + `/api/image?id=${value.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={value.name} />\n                                        <ArrowForwardIosIcon></ArrowForwardIosIcon>\n                                    </ListItem>\n                                </React.Fragment>\n                            );\n                        })}\n                        {\n                            chatValue === 0 && regEvents.length === 0 && <Typography>No Events Found, Register or host event to join one</Typography>\n                        }\n                        {chatValue === 1 && teams.map((value) => {\n                            const labelId = `checkbox-list-label-${value._id}`;\n                            return (\n                                <React.Fragment>\n                                    <ListItem key={value._id} role={undefined} dense button\n                                        selected={checked.indexOf(value) !== -1}\n                                        onClick={handleToggle2(value, value.user_id)}>\n                                        <ListItemIcon>\n                                            <ListItemAvatar>\n                                                <Avatar\n                                                    alt={value.team_name}\n                                                    src=\"abc.jpg\"\n                                                />\n                                            </ListItemAvatar>\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={value.team_name} />\n                                        <ArrowForwardIosIcon></ArrowForwardIosIcon>\n                                    </ListItem>\n                                </React.Fragment>\n                            );\n                        })}\n                        {\n                            chatValue === 1 && teams.length === 0 && <Typography>No Teams found</Typography>\n                        }\n                    </List>\n                </Paper>\n            </div>\n        </div>\n    );\n}\n\nexport default ChatContactsPanel\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport ChatPanel from '../Components/MainChatPanel';\nimport ChatContactsPanel from '../Pages/ChatContactsPanel';\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    mobile: {\n        backgroundColor: theme.palette.primary.light\n    },\n}));\n\nfunction ChatPage({ history }) {\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [selectedChat, setSelectedChat] = React.useState(null);\n    const [adminId, setAdminId] = React.useState(null);\n    const [checked, setChecked] = React.useState([0]);\n    const [chatType, setChatType] = React.useState('');\n    const [mobileChat, setMobileChat] = React.useState(false);\n\n\n    return (\n        <div>\n            <div>\n                {!mobileChat && <Grid container >\n                    <Grid item xs={12} sm={12} md={3} lg={3}  >\n                        <ChatContactsPanel mobile={false} chatType={chatType} openDialog={setMobileChat} setChatType={setChatType} checked={checked} setChecked={setChecked} setAdminId={setAdminId} setChatId={setSelectedChat}></ChatContactsPanel>\n                    </Grid>\n                    <Grid item xs={9} sm={12} md={9} lg={9}>\n                        {selectedChat != null && <ChatPanel chatType={chatType} user={currentUser} adminId={adminId} event={selectedChat}></ChatPanel>}\n                    </Grid>\n                </Grid>}\n                {mobileChat && <Grid container>\n                    <Grid item xs={12}>\n                        <Paper className={classes.mobile}>\n                            {selectedChat != null && <ChatPanel setSelectedChat={setSelectedChat} mobile={true} openDialog={setMobileChat} chatType={chatType} user={currentUser} adminId={adminId} event={selectedChat}></ChatPanel>}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default ChatPage;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function AlertDialog(props) {\n\n    const theme = useTheme();\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            >\n                <DialogTitle id=\"title\">{\"Terms and Conditions\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ul>\n                            <li>Provided registration data and your profile will be shared with event admin</li> \n                        </ul>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Box from '@material-ui/core/Box';\n\n//other component imports\nimport TermsandConditions from '../Components/EventRegisterTermsandConditions';\nimport EventsContext from '../EventsContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport SuccessPanel from '../Components/SuccessPanel';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst EventRegistrationForm = (props) => {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n\n  const [canRegister, setCanRegister] = React.useState(true);\n  const [userMessage, setUserMessage] = React.useState(false);\n\n  const [formValues, setFormValues] = React.useState(null);\n  const [uploadFiles, setUploadFiles] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [normalFields, setNormalFields] = React.useState([]);\n  const [dropDownFields, setDropDownFields] = React.useState([]);\n  const [checkboxFields, setCheckBoxFields] = React.useState([]);\n  const [radioFields, setRadioFields] = React.useState([]);\n  const [dateFields, setDateFields] = React.useState([]);\n  const [longDescFields, setLongDescFields] = React.useState([]);\n  const [linkFields, setLinkFields] = React.useState([]);\n  const [fileUploadFields, setFileUploadFields] = React.useState([]);\n\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const id = props.match.params.eventId;\n  const [backDropOpen, setBackDropOpen] = React.useState(true);\n  const [event, setEvent] = React.useState({});\n  const [checkedValues, setCheckedValues] = React.useState([]);\n  const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  const [tandcOpen, setTandcOpen] = React.useState(false);\n  const [showSuccessPanel, setShowSuccessPanel] = React.useState(false);\n\n  const { currentUser } = React.useContext(AuthContext);\n  const { setAllEvents } = React.useContext(EventsContext);\n  const { setActiveEvents } = React.useContext(ActiveEventsContext);\n\n\n  function handleTermsClick() {\n    setTandcOpen(true);\n  }\n\n  React.useEffect(() => {\n    if (currentUser.designation === \"Student\" || currentUser.designation === \"Faculty\") {\n      // setUserType(true);\n    }\n    else {\n      setCanRegister(false);\n      setUserMessage(currentUser.designation + \" cannot register\")\n    }\n    if (event.status === 'pending') {\n      setCanRegister(false)\n      setUserMessage(\"Event is not accepted yet check back later\");\n    }\n    if (currentUser.user_id === event.user_id) {\n      setCanRegister(false)\n      setUserMessage(\"An event organizer cannot register\")\n    }\n    const cDate = new Date();\n    const eDate = new Date(event.registration_end_time);\n    if (cDate > eDate) {\n      setCanRegister(false)\n      setUserMessage(\"Registration is closed for this event\")\n    }\n\n    if (event.o_allowed !== undefined) {\n      if (!event.o_allowed) {\n        if (event.college_name === currentUser.college_name) {\n\n        } else {\n          setCanRegister(false)\n          setUserMessage(\"Only \" + event.college_name + \" can participate\")\n        }\n      }\n    }\n\n  }, [event, currentUser])\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setEvent(value.event);\n        const allFields = value.event.reg_fields;\n        if (allFields != null) {\n          allFields.forEach(f => {\n            if (f.title === \"Name\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.name }))\n            }\n            else if (f.title === \"Email\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.email }));\n            }\n            else if (f.title === \"College\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.college_name }));\n            }\n            else {\n              setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n            }\n            if (f.field === \"checkbox\") {\n\n            }\n\n          })\n          setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n          setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n          setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n          setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n          setDateFields(allFields.filter((f) => f.field === \"date\"));\n          setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n          setLinkFields(allFields.filter(f => f.field === \"link\"));\n          setFileUploadFields(allFields.filter(f => f.field === \"file\"));\n        }\n        setBackDropOpen(false);\n      })\n    })\n  }, [token, id, currentUser])\n\n  function handleClose() {\n    if (message === \"Registration successful.Stay tunned with notifications and announcements\") {\n      fetch(process.env.REACT_APP_API_URL + '/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET'\n      }).then(response => {\n        if (response.status === 200) {\n          response.json().then(value => {\n            value.sort((a, b) => {\n              return new Date(a.start_time) - new Date(b.start_time);\n            })\n            setAllEvents(value);\n            setActiveEvents(value.filter(e => {\n              const cDate = new Date();\n              const eDate = new Date(e.finish_time);\n              return cDate < eDate && e.status !== \"pending\"\n            }))\n          })\n        }\n        else if (response.status === 401) {\n          localStorage.removeItem('token');\n        }\n\n      })\n    }\n    setState({ ...state, open: false });\n  }\n\n  function handleChange(event) {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  }\n  const handleChange2 = (name) => (event, values) => {\n    setFormValues({ ...formValues, [name]: values });\n\n  }\n  const handleChange3 = (name) => (event) => {\n    if (event.target.checked) {\n      setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n      const array = [];\n      checkedValues.forEach((v, i) => {\n        if (v[name]) {\n          array.push(v[name])\n        }\n      });\n      array.push(event.target.name);\n      setFormValues({ ...formValues, [name]: array });\n    }\n  }\n\n  const handleDateChange = (name) => (date) => {\n    setFormValues({ ...formValues, [name]: date })\n  };\n\n  const handleLondDescChange = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value })\n  }\n\n  function handleradioChange(event, value) {\n    setFormValues({ ...formValues, [event.target.name]: value });\n  }\n\n  function handleEventRegistration(e) {\n    e.preventDefault();\n    var uploadedFilesIds = [];\n    const formkeys = Object.keys(formValues);\n    const fileFormKeys = Object.keys(uploadFiles);\n    var count = 0;\n    formkeys.forEach(v => {\n      const cField = event.reg_fields.filter((value) => { return value.title === v });\n      if (formValues[v] === null) {\n        if (v.includes(fileFormKeys)) {\n\n        } else {\n          if (cField[0].req) {\n            count = count + 1;\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Please fill in all required fields',\n              type: \"error\",\n              autoHide: 4000\n            });\n          }\n\n        }\n      }\n    })\n    if (fileFormKeys) {\n      fileFormKeys.forEach(f => {\n        const cField = event.reg_fields.filter((value) => { return value.title === f });\n        if (uploadFiles[f] === null) {\n          if (cField[0].req) {\n            count = count + 1;\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Please fill in all required fields',\n              type: \"error\",\n              autoHide: 4000\n            });\n          }\n\n        }\n      })\n    }\n\n    var finalValues = formValues;\n    if (count === 0) {\n      try {\n        if (fileFormKeys.length > 0) {\n          fileFormKeys.forEach((key, index) => {\n            var data1 = new FormData();\n            data1.append('uploaded_file', uploadFiles[key]);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/register/upload_file?id=${id}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data1\n            }).then((response) => {\n              if (response.status === 200) {\n                response.json().then(value => {\n                  setFormValues({ ...formValues, [key]: value.file_name })\n                  finalValues[key] = value.file_name\n                  uploadedFilesIds.push({ [key]: value.file_name });\n                  if (uploadedFilesIds.length === fileFormKeys.length) {\n                    var data = new FormData();\n                    const d = { data: finalValues }\n                    data = JSON.stringify(d);\n                    fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n                      headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                      },\n                      method: 'POST',\n                      body: data\n                    }).then(response => {\n                      if (response.status === 200) {\n                        response.json().then(value => {\n                          setLoading(false);\n                          setShowSuccessPanel(true);\n                          setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Registration successful.Stay tunned with notifications and announcements',\n                            type: \"success\",\n                            autoHide: 4000\n                          });\n                        })\n                      }\n                      else if (response.status === 201) {\n                        response.json().then(value => {\n                          setLoading(false);\n                          setShowSuccessPanel(true);\n                          setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Already Registered',\n                            type: \"error\",\n                            autoHide: 4000\n                          });\n                        })\n                      }\n\n                    })\n                  }\n                })\n              }\n            })\n          })\n        }\n        else {\n          var data = new FormData();\n          const d = { data: finalValues }\n          data = JSON.stringify(d);\n          fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n          }).then(response => {\n            if (response.status === 200) {\n              response.json().then(value => {\n                setLoading(false);\n                setShowSuccessPanel(true);\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Registration successful.Stay tunned with notifications and announcements',\n                  type: \"success\",\n                  autoHide: 4000\n                });\n              })\n            }\n            else if (response.status === 201) {\n              response.json().then(value => {\n                setLoading(false);\n                setShowSuccessPanel(true);\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Already Registered',\n                  type: \"error\",\n                  autoHide: 4000\n                });\n              })\n            }\n\n          })\n        }\n\n\n      }\n      catch (error) {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: error.message,\n          type: \"error\",\n          autoHide: 6000\n        })\n\n      }\n    }\n\n\n  }\n\n  function handleBack() {\n    props.history.goBack();\n  }\n\n  function handleFileSelect(event) {\n    if (event.target.files[0]) {\n      setUploadFiles({ ...uploadFiles, [event.target.name]: event.target.files[0] });\n    }\n\n  }\n\n  const handleEventScreenButton = () => {\n    props.history.push(`/event/${event._id}`)\n  }\n\n  const handleHomeScreenButton = () => {\n    props.history.push('/home')\n  }\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Backdrop className={classes.backdrop} open={backDropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleBack}>\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      <div className={showSuccessPanel ? classes.paper : classes.hidden}>\n        <SuccessPanel type=\"registrationSuccess\" showSuccessPanel={showSuccessPanel} handleHomeScreenButton={handleHomeScreenButton} handleEventScreenButton={handleEventScreenButton}></SuccessPanel>\n      </div>\n      {event != null &&\n        <div className={showSuccessPanel ? classes.hidden : classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Registration for \" + event.name}\n          </Typography>\n\n          <form className={classes.form} onSubmit={handleEventRegistration} >\n\n            <Grid container spacing={2} >\n              {normalFields.map((field, index) => {\n                if (field.title === \"College\") {\n                  return (\n                    <Grid item xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        id={field.title}\n                        options={colleges}\n                        getOptionLabel={(option) => option}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        disabled\n                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                      />\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                      </Box>\n                    </Grid>)\n                }\n                else if (field.title === \"Email\") {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        disabled\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                      />\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                      </Box>\n                    </Grid>)\n                }\n                else {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        required={field.req}\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                      />\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                      </Box>\n                    </Grid>)\n                }\n\n              })}\n              {checkboxFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                      <FormLabel component=\"legend\">{field.title}</FormLabel>\n                      <FormGroup class={classes.formgroup}>\n                        {field.options.map((option) => {\n                          return <FormControlLabel\n                            control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                            label={option}\n                          />\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                    </Box>\n                  </Grid>\n                )\n              })}\n              {dropDownFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id={field.title}\n                      options={field.options.map((option) => option)}\n                      onChange={handleChange2(field.title)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField required={field.req} {...params} name={field.name} label={field.title} placeholder={field.name} />\n                      )}\n                    />\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                    </Box>\n                  </Grid>\n                )\n              })}\n              {radioFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormLabel required={field.req} component=\"legend\">{field.title}</FormLabel>\n                    <RadioGroup required={field.req} aria-label=\"address\" name={field.title} defaultValue={field.options[0]} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                      {field.options.map((option) => {\n                        return <FormControlLabel required={field.req} value={option} control={<Radio color=\"default\" />} label={option} />\n                      })}\n                    </RadioGroup>\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                    </Box>\n                  </Grid>\n                )\n              })}\n              {\n                dateFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                          fullWidth\n                          required={field.req}\n                          variant=\"inline\"\n                          format=\"dd MMM yyyy hh:mm a zzz\"\n                          margin=\"normal\"\n                          id={field.title}\n                          label={field.title}\n                          name={field.title}\n                          value={formValues[field.title]}\n                          onChange={handleDateChange(field.title)}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                      </Box>\n                    </Grid>\n                  )\n                })\n              }\n              {\n                longDescFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        multiline={true}\n                        rows=\"5\"\n                        variant='outlined'\n                        placeholder={field.title}\n                        autoComplete='off'\n                        required={field.req}\n                        id={field.title}\n                        name={field.title}\n                        label={field.title}\n                        fullWidth\n                        onChange={handleLondDescChange}\n                      />\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                      </Box>\n                    </Grid>\n                  )\n                })\n              }\n              {\n                linkFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        required={field.req}\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                      />\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                      </Box>\n                    </Grid>)\n                })\n              }\n              {\n                fileUploadFields.map((field, index) => {\n                  return <Grid item xs={12}>\n                    <Typography>{field.title}</Typography>\n                    <input id=\"contained-button-file\" name={field.title} required={field.req} type=\"file\" onChange={handleFileSelect} ></input>\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                    </Box>\n                  </Grid>\n                })\n              }\n\n              <Grid item xs={12}>\n                <Typography>By registering for the event.I accept the <Button onClick={handleTermsClick} color=\"primary\">Terms and Conditions</Button></Typography>\n              </Grid>\n            </Grid>\n            {canRegister && !backDropOpen && <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n              {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Register\"}\n            </Button>}\n            {\n              !canRegister && <Typography>{userMessage}</Typography>\n            }\n          </form>\n        </div>\n      }\n      <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n    </Container>\n  );\n}\n\nexport default withRouter(EventRegistrationForm);","import React from 'react';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n//component imports\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport ActiveEvents from '../ActiveEventsContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 2)\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const { allEvents } = React.useContext(EventsContext);\n    const { activeEvents } = React.useContext(ActiveEvents);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        setSelectedEvent(info);\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n    }\n\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\">\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={8} lg={8} >\n                        <Paper className={classes.root2}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"on\">\n                                <Tab label=\"Registered Events\" />\n                                <Tab label=\"Past Events\" />\n                            </Tabs>\n                        </Paper>\n                        <div className={classes.content}>\n                            {value === 0 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                                {\n                                    regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                                }\n                                {regEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n\n                            </Grid>}\n                            {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                                {\n                                    pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                                }\n                                {pastEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n                            </Grid>}\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}))\n\nconst LoadingIndicator = (props) => {\n    const classes = useStyles();\n\n    return <div className={classes.progress}>\n        <Fade\n            in={props.loading}\n            unmountOnExit>\n            <CircularProgress />\n        </Fade>\n    </div>\n}\n\nexport default LoadingIndicator","import React from 'react';\n\n//material imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport AboutEventsPanel from '../Components/AboutEventPanel';\nimport LoadingIndicator from '../Components/LoadingIndicator';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const id = props.match.params.eventId;\n    const [event, setEvent] = React.useState({});\n    const [open, setOpen] = React.useState(false);\n    const [loading,setLoading] = React.useState(true);\n    const [found,setFound] = React.useState(true);\n    if (token) {\n        props.history.replace(`/event/${id}`)\n    }\n\n    const handleClickOpen = () => {\n        localStorage.setItem('eventid', id);\n        props.history.push(\"/signin\")\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/unregistered/event?id=${id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if(response.status === 200){\n                response.json().then(value => {\n                    setEvent(value.event);\n                    setFound(true);\n                    setLoading(false)\n                })\n            }\n            else{\n                setFound(false);\n                setLoading(false)\n            }\n            \n        })\n    }, [id])\n\n    function handleSigninClick() {\n        localStorage.setItem('eventid', id);\n        props.history.push(\"/signin\")\n    }\n    function handleSignupClick() {\n        localStorage.setItem('eventid', id);\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <LoadingIndicator loading={loading}></LoadingIndicator>\n            {!loading && found && <div className={classes.body}>\n                <Typography\n                    align='center'\n                    variant=\"h4\"\n                    style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>\n                    {event.name}\n                </Typography>\n                <AboutEventsPanel notRegistered={true} event={event}></AboutEventsPanel>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Register</Button>\n            </div>}\n            {\n                !loading && !found && <div className={classes.body}>\n                <Typography>Not Found</Typography>\n                </div>\n            }\n            <Dialog\n                open={open}\n                maxWidth=\"md\"\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Login to Register for the Event/Contest\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root2: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(50),\n            height: theme.spacing(50),\n        },\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    root4: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const classes = useStyles();\n    const id = props.match.params.id;\n    const [details, setDetails] = React.useState({});\n    const [userFound, setUserFound] = React.useState(true);\n    const [date, setDate] = React.useState(null);\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + `/api/event/verify_certificate?id=${id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setUserFound(true)\n                    setDetails(value);\n                    const d = new Date(value.date);\n                    setDate(d.toDateString());\n                })\n            }\n            else {\n                setUserFound(false);\n            }\n\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            {userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                    <VerifiedUserIcon fontSize=\"large\"></VerifiedUserIcon>\n                    <Typography variant=\"h4\">{details.participantname}</Typography>\n                    <Typography>{details.participant_college}</Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>Event Name: {details.event_name}</Typography>\n                    <Typography>Organizer: {details.organizer}</Typography>\n                    <Typography>Held on {date}</Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>participation by {details.participantname} has been confirmed</Typography>\n                </Box>\n            </Box>}\n            {!userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                    <CancelIcon fontSize=\"large\"></CancelIcon>\n                    <Typography variant=\"h4\">Certificate NOT FOUND</Typography>\n                </Box>\n            </Box>}\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/un5.2f31c04b.svg\";","export default __webpack_public_path__ + \"static/media/un6.11989350.svg\";","export default __webpack_public_path__ + \"static/media/un7.07dd0552.svg\";","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport DeviceDesign from '../Components/Images/un5.svg';\nimport DeviceDesign2 from '../Components/Images/un6.svg';\nimport DeviceDesign3 from '../Components/Images/un7.svg';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst tutorialSteps = [\n    {\n        label: 'Find and register for all your College events from one App',\n        imgPath: DeviceDesign,\n    },\n    {\n        label: 'Post events and manage them with ease',\n        imgPath: DeviceDesign2,\n    },\n    {\n        label: 'Feature Rich dashboard for Event Administrators',\n        imgPath: DeviceDesign3,\n    },\n    {\n        label: 'Create announcements, Live chat with participants and generate event certificates',\n        imgPath: DeviceDesign2,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        flexGrow: 1,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0),\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: theme.spacing(0),\n        // alignContent: 'center'\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 300,\n        [theme.breakpoints.down('md')]: {\n            minHeight: 200,\n        },\n        paddingLeft: theme.spacing(0),\n        backgroundColor: theme.palette.primary.dark,\n    },\n    img: {\n        padding: theme.spacing(0),\n        maxHeight: 550,\n        display: 'block',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        width: '100%',\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(0),\n        },\n    },\n    paperLeft: {\n        margin: theme.spacing(0),\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            //   margin: theme.spacing(3, 1),\n        },\n\n    },\n    carouselCaption: {\n        fontSize: '2.5em',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '2.3em',\n        },\n    }\n}));\n\nfunction SwipeableTextMobileStepper(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const maxSteps = tutorialSteps.length;\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleStepChange = (step) => {\n        setActiveStep(step);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container component=\"main\" justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} md={6}>\n                    <AutoPlaySwipeableViews\n                    interval=\"5000\"\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={activeStep}\n                        onChangeIndex={handleStepChange}\n                        enableMouseEvents\n                    >\n                        {tutorialSteps.map((step, index) => (\n                            <div key={step.label}>\n                                {Math.abs(activeStep - index) <= 2 ? (\n                                    <img className={classes.img} src={step.imgPath} alt={step.label} />\n                                ) : null}\n                            </div>\n                        ))}\n                    </AutoPlaySwipeableViews>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Paper elevation={0} className={classes.header}>\n                        <Typography className={classes.carouselCaption} color=\"secondary\" align=\"center\">{tutorialSteps[activeStep].label}</Typography>\n                    </Paper>\n                    <Box className={classes.paperLeft} >\n                        <Button onClick={props.handleSignin} variant=\"contained\" color=\"secondary\">Get started</Button>\n                        <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n                            <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n                        </a>\n                    </Box>\n\n                </Grid>\n            </Grid>\n            <MobileStepper\n                steps={maxSteps}\n                position=\"static\"\n                variant=\"dots\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n                        Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                        Back\n                    </Button>\n                }\n            />\n        </div>\n    );\n}\n\nexport default SwipeableTextMobileStepper;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\n\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  //   const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n\n\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              //   onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        {/* <MenuItem onClick={handleReportClick}>Report</MenuItem> */}\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {event.name}\n          </Typography>\n        }\n        subheader={\n          <React.Fragment>\n            <Typography style={{textOverflow:\"ellipsis\",overflow:\"hidden\",height:\"50px\"}} variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {event.description}\n            </Typography>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n          </React.Fragment>\n        }\n      />\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <MailIcon></MailIcon>\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={props.onClick}>\n            See More\n        </Button>\n          {\n            <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={props.onClick}>\n              Register\n            </Button>\n          }\n        </div>\n\n\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { withRouter, Redirect } from \"react-router\";\n\n//material ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n\n//Other component Imports\nimport NewHomePageCarousel from './HomePageCarousel';\nimport Copyright from \"../Components/copyright\";\nimport HomePageEventCard from '../Components/HomePageEventCard';\nimport GoogleBadge from '../Components/Images/google-play-badge.png';\n\n\n//styles\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n    body: {\n        margin: theme.spacing(0)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    img: {\n        padding: theme.spacing(10),\n        minHeight: 200,\n        display: 'block',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(3),\n        },\n    },\n    footer: {\n        backgroundColor: theme.palette.secondary.main,\n        marginTop: theme.spacing(3)\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 200,\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(10),\n        borderRadius: theme.spacing(2),\n        boxShadow: \"3\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(3)\n    },\n    title: {\n        fontFamily: 'Gugi',\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold',\n        flexGrow: 1,\n    },\n}));\n\nfunction UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [activeEvents, setActiveEvents] = React.useState([])\n\n    React.useEffect(() => {\n        //function to get events\n        fetch(process.env.REACT_APP_API_URL + '/api/get_events', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setActiveEvents(value.filter(e => {\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }))\n                })\n            }\n\n        })\n    }, [])\n\n    //if token is already present redirect to home page\n    if (token) {\n        return <Redirect to=\"/home\" />;\n    }\n\n    //function to navigate to home page\n    const handleSigninClick = () => {\n        props.history.push(\"/signin\")\n    }\n\n    //function to navigate to signup page\n    const handleSignupClick = () => {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h5\">\n                        Ellipse\n                    </Typography>\n                    <Button className={classes.button} variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button className={classes.button} variant=\"outlined\" size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <NewHomePageCarousel handleSignin={handleSigninClick}></NewHomePageCarousel>\n            </div>\n            <Grid style={{ minHeight: '100px' }} container component=\"main\">\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} ></Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    {\n                        activeEvents.map((e, index) => {\n                            return <HomePageEventCard onClick={handleSigninClick} event={e}></HomePageEventCard>\n                        })\n                    }\n                </Grid>\n            </Grid>\n            <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                        {\"support@ellipseapp.com\"}\n                    </Link></Typography>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Copyright></Copyright>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                        {\"Privacy Policy\"}\n                    </Link>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n                        <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n                    </a>\n                </Box>\n            </Box>\n        </div>\n    );\n}\n\nexport default withRouter(UnregisteredPage);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setAnnouncements(value);\n      })\n    })\n  }, [token, event._id])\n\n  const handleDeleteButton = (a) => () =>{\n    fetch(process.env.REACT_APP_API_URL+`/api/event/delete_announcement?id=${a._id}&event_id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n      }).then(response => {\n        response.json().then(value => {\n            setAnnouncements(value);\n        })\n      })\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Button onClick={handleDeleteButton(a)}>Delete</Button>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\n\n\n//Materialui imports\nimport { useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function AnnouncementForm(props) {\n  const theme = useTheme()\n  const token = localStorage.getItem('token');\n  const [title, setTitle] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [visibility, setVisibility] = React.useState(\"All\");\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value);\n  }\n  const handleDescChange = (event) => {\n    setDesc(event.target.value);\n  }\n\n\n  function handleVisibilityChange(event, value) {\n    setVisibility(value);\n  }\n  function handleAddButton() {\n    var visible_all = true;\n    if (visibility !== \"All\") {\n      visible_all = false;\n    }\n    try {\n      var data = new FormData();\n      const d = { event_id: props.id, title: title, description: desc, visible_all: visible_all }\n      data = JSON.stringify(d);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/add_announcement`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        response.json().then(value => {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Added successfully',\n            type: \"success\",\n            autoHide: 2000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n    props.handleClose()\n\n  }\n  const handleClose = async (event, reason) => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Announcement</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                fullWidth\n                value={title}\n                required\n                onChange={handleTitleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                fullWidth\n                value={desc}\n                required\n                onChange={handleDescChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Announcement visibility</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={visibility} onChange={handleVisibilityChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"All\" control={<Radio color=\"default\" />} label=\"All\" />\n                <FormControlLabel value=\"Registered Users\" control={<Radio color=\"default\" />} label=\"Registered Users\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Add\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {  useTheme } from '@material-ui/core/styles';\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SendEmailForm(props) {\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const [content, setContent] = React.useState(null);\n\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleContentChange(event) {\n        setContent(event.target.value);\n    }\n\n    function handleAddButton() {\n        try {\n            var data = new FormData();\n            const d = { \n                event_id: props.id, \n                title: title, \n                content: content,\n                emails: props.emails}\n            data = JSON.stringify(d);\n            // console.log(data);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/sendemail`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                response.json().then(value => {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Added successfully',\n                        type: \"success\",\n                        autoHide: 2000\n                    });\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n        props.handleClose()\n\n    }\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    // boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Content for your Email</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Enter everything about your event in detail\"\n                                autoComplete='off'\n                                required\n                                id=\"content\"\n                                name=\"content\"\n                                label=\"Content\"\n                                fullWidth\n                                onChange={handleContentChange}\n                                value={content || \"\"}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button, IconButton } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AddAnnouncementForm from './AddAnnouncementForm';\nimport SendEmailForm from './SendEmailForm';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport { CSVLink } from \"react-csv\";\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n    // maxWidth: 880\n    // width: '100%',\n  },\n  table: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  },\n  progress: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [loading, setLoading] = React.useState(false);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [announcementDialog, setAnnouncementDialog] = React.useState(false);\n  const [sendEmailDialog, setSendEmailDialog] = React.useState(false);\n  const [fileColumns, setFileColumns] = React.useState([]);\n  const event = props.event;\n\n  React.useEffect(() => {\n    if(event.reg_mode === \"form\"){\n      event.reg_fields.forEach(v => {\n        if (v.field === \"file\") {\n          setFileColumns([...fileColumns, v.title]);\n        }\n      })\n    }\n    \n    // eslint-disable-next-line\n  }, [event])\n\n  // console.log(fileColumns);\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    setHeaders([]);\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, key: item, label: item, minWidth: 170 }]));\n          })\n          value.forEach(d => {\n            setRowValues(rowValues => [...rowValues, d.data]);\n          })\n          setLoading(false);\n        }\n        else{\n          setLoading(false);\n        }\n      })\n    })\n  }, [token, event])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  function handleAddAnnouncement() {\n    setAnnouncementDialog(true);\n  }\n\n  function handleAnnoucementClose() {\n    setAnnouncementDialog(false);\n  }\n\n  // function handleSendEmail() {\n  //   console.log(selected);\n  //   setSendEmailDialog(true);\n  // }\n  function handleSendEmailClose() {\n    setSendEmailDialog(false);\n  }\n\n \n\n\n  return (\n    <React.Fragment>\n      <div className={classes.progress}>\n        <Fade\n          in={loading}\n          unmountOnExit>\n          <CircularProgress />\n        </Fade>\n      </div>\n      <Grid container spacing={3}>\n        <SendEmailForm open={sendEmailDialog} emails={selected} handleClose={handleSendEmailClose}></SendEmailForm>\n        <AddAnnouncementForm open={announcementDialog} id={event._id} handleClose={handleAnnoucementClose}></AddAnnouncementForm>\n        <Grid item xs={12} md={4} lg={9}>\n          <Paper className={classes.buttonsPaper}>\n            <Button variant=\"contained\" onClick={handleAddAnnouncement} className={classes.button}>Add Announcement</Button>\n            {/* <Button variant=\"contained\" onClick={()=>saveAsCsv({ fields, data, filename })} className={classes.button}>Add Announcement</Button> */}\n            {/* <Button variant=\"contained\" onClick={handleSendEmail} className={classes.button}>Send Emails to Selected</Button> */}\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={3} >\n          <Paper className={classes.fixedHeightPaper}>\n            <Typography>Total Registrations</Typography>\n            <Typography component=\"p\" variant=\"h4\">\n              {rowValues.length}\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <TableContainer className={classes.container}>\n              <Button variant=\"contained\" className={classes.button}><CSVLink filename={event.name + '.csv'} headers={headers} data={rowValues} style={{ color: '#000000' }}>Download as csv</CSVLink></Button>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                  </TableRow>\n                  <TableRow >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"default\"\n                        checked={rowValues.length > 0 && selected.length === rowValues.length}\n                        onChange={handleSelectAllClick}\n                        indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                        inputProps={{ 'aria-label': 'select all fields' }}\n                      />\n                    </TableCell>\n                    {headers.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        {column.label}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = isSelected(row.Email);\n                    return (\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                        onClick={(event) => handleClick(event, row.Email)}\n                        selected={isItemSelected}>\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            color=\"default\"\n                            inputProps={{ 'aria-label': 'select all fields' }}\n                          /></TableCell>\n                        {headers.map((column) => {\n                          if (fileColumns.includes(column.id)) {\n                            return <TableCell key={column.id} align={column.align}>\n                              <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${row[column.id]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                            </TableCell>\n                          } else {\n                            const value = column.id === \"Email\" ? row[column.id].substr(0, 3) + '*****@' + row[column.id].split('@')[1] : row[column.id];\n                            return (\n                              <TableCell key={column.id} align={column.align}>\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                              </TableCell>\n                            );\n                          }\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={rowValues.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { Divider, IconButton } from '@material-ui/core';\n// import { TextField } from '@material-ui/core';\n\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport AuthContext from '../AuthContext';\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageDeleteDialog from './MessageDeleteDialog';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    // const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { eventChatMessages } = React.useContext(WebSocketDataContext);\n    const { setEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedEventChatMessages, setDeletedEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"join_event_room\",\n                event_id: event._id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n\n        return ()=>{\n            if (webSocketContext) {\n                webSocketContext.send(JSON.stringify({\n                    action: \"close_event_socket\",\n                    event_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n        }\n    }, [webSocketContext, currentUser, event])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        eventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            //         // console.log(mes);\n            if (mes.event_id === event._id) {\n                // console.log(cMes);\n                setChatMessages(chatMessages => [...chatMessages, cMes]);\n                setEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        });\n        // eslint-disable-next-line\n    }, [eventChatMessages, event])\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                setLoading(false)\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        if (webSocketContext) {\n            if (event.chat_blocked_users.includes(currentUser.user_id)) {\n\n            }\n            else {\n                webSocketContext.send(JSON.stringify({\n                    action: \"send_event_message\",\n                    event_id: event._id,\n                    msg: {\n                        'id': currentUser.user_id + Date.now(),\n                        'user_id': currentUser.user_id,\n                        'user_name': currentUser.name,\n                        'user_pic': currentUser.profile_pic,\n                        'message_type': 'normal_text_message',\n                        'message': message,\n                        'date': d.toISOString()\n                    }\n                }));\n            }\n\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    React.useEffect(() => {\n        deletedEventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.event_id === event._id) {\n                setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                setDeletedEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        })\n\n        // eslint-disable-next-line\n    }, [deletedEventChatMessages])\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(mes);\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        webSocketContext.send(JSON.stringify({\n            action: \"delete_event_chat_message\",\n            event_id: event._id,\n            msg: mes\n        }));\n        setChatMessages(chatMessages.filter(m => { return m !== mes }))\n\n        setOpenDeleteDialog(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    return (\n                                        <MessageBox1 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox1>\n                                    );\n                                }\n                                return (\n                                    <MessageBox2 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '80px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n\n                    </Box>\n                    <div className={classes.textField}>\n                        {\n                            event.chat_blocked_users.includes(currentUser.user_id) ? <Typography>You cannot send messages in this channel</Typography> : <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        }\n\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n\n//Materail impports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n// import Select from '@material-ui/core/Select';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import { NextWeekOutlined } from '@material-ui/icons';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n\n\nexport default function EditDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const [startDate, setStartDate] = React.useState(null);\n    const [endDate, setEndDate] = React.useState(null);\n    const [linkField, setLinkField] = React.useState('');\n    const [open, setOpen] = React.useState(false);\n    const [selectedFields, setSelectedFields] = React.useState([]);\n    const [state, setState] = React.useState({\n        alertopen: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, alertopen, message, type, autoHide } = state;\n\n    const [checked, setChecked] = React.useState({\n        form: true,\n        link: false,\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    React.useEffect(() => {\n        const data = props.roundData;\n        setTitle(data.title);\n        setDesc(data.description);\n        setStartDate(data.start_date);\n        setEndDate(data.end_date);\n        setLinkField(data.link);\n        if (data.fields) {\n            setSelectedFields(data.fields);\n        }\n        if (data.link !== undefined && data.link !== \"\" && data.link !== null) {\n            setChecked({ ...checked, link: true });\n        }\n        // eslint-disable-next-line\n    }, [props.roundData])\n\n    // console.log(selectedFields);\n\n    function handleSaveChangesButton() {\n        if (desc !== null && startDate !== null && endDate !== null) {\n            // props.handleAdd({\n            //     title: title,\n            //     description: desc,\n            //     start_date: startDate,\n            //     end_date: endDate,\n            //     link: linkField,\n            //     fields: selectedFields\n            // })\n            // console.log(props.rounds)\n            const updatedRounds = []\n            props.rounds.forEach((r, index) => {\n                if (r.title === title) {\n                    updatedRounds.push({\n                        title: title,\n                        description: desc,\n                        start_date: startDate,\n                        end_date: endDate,\n                        link: linkField,\n                        fields: selectedFields\n                    })\n                }\n                else {\n                    updatedRounds.push(r);\n                }\n                if (index === props.rounds.length - 1) {\n                    props.setRounds(updatedRounds)\n                }\n            })\n            props.handleClose();\n            // console.log(updatedRounds)\n            // setDesc('');\n            // setStartDate(null);\n            // setEndDate(null);\n            // setLinkField('');\n            // setSelectedFields([]);\n        }\n        else {\n            setState({\n                alertopen: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"please fill in all fields\",\n                type: \"error\",\n                autoHide: '5000',\n            })\n        }\n\n\n    }\n\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n\n    // const handleDelete = (chipToDelete) => () => {\n    //     setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    // };\n\n    const handleChange = (event) => {\n        setChecked({ ...checked, [event.target.name]: event.target.checked });\n    };\n\n    const { form, link } = checked;\n\n    const handleAlertClose = () => {\n        setState({ ...state, alertopen: false });\n    }\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={alertopen}\n                autoHideDuration={autoHide}\n                onClose={handleAlertClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Rounds</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Name\"\n                                name=\"name\"\n                                fullWidth\n                                disabled\n                                value={title}\n                            // required\n                            // onChange={(e) => { setName(e.target.value) }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc}\n                                required\n                                onChange={(e) => { setDesc(e.target.value) }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n                                <DateTimePicker\n                                    inputProps={{ required: true }}\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"startDate\"\n                                    label=\"Start Date\"\n                                    name=\"startDate\"\n                                    value={startDate}\n                                    onChange={(date) => { setStartDate(date) }}\n                                //   error={startDateError}\n                                //   helperText={startDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DateTimePicker\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"endDate\"\n                                    label=\"End Date\"\n                                    name=\"endDate\"\n                                    value={endDate}\n                                    onChange={(date) => { setEndDate(date) }}\n                                //   error={endDateError}\n                                //   helperText={endDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormLabel component=\"legend\">Action</FormLabel>\n                            <FormGroup>\n                                <FormControlLabel\n                                    control={<Checkbox checked={form} color=\"default\" onChange={handleChange} name=\"form\" />}\n                                    label=\"Create Form\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={link} color=\"default\" onChange={handleChange} name=\"link\" />}\n                                    label=\"Link\"\n                                />\n                            </FormGroup>\n                            {/* <RadioGroup aria-label=\"address\" name=\"address\" value={action} onChange={handleActionChange} style={{ display: \"inline\" }}>\n                                <FormControlLabel value=\"form\" control={<Radio color=\"default\" />} label=\"Create Form\" />\n                                <FormControlLabel value=\"hackathon_template\" control={<Radio color=\"default\" />} label=\"Use Hackathon Template\" />\n                                <FormControlLabel value=\"link\" control={<Radio color=\"default\" />} label=\"Provide Link\" />\n                            </RadioGroup> */}\n                        </Grid>\n                        {link && <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"platform_link\"\n                                label=\"Platform Link\"\n                                name=\"platform_link\"\n                                fullWidth\n                                value={linkField}\n                                required\n                                onChange={(e) => { setLinkField(e.target.value) }}\n                            />\n                        </Grid>}\n                        {form && <Grid item xs={12}>\n                            <Typography>Fields</Typography>\n                            <Paper component=\"ul\" className={classes.root}>\n                                {selectedFields.map((data) => {\n                                    return (\n                                        <li key={data.key}>\n                                            <Chip\n                                                label={data.title}\n                                                // onDelete={handleDelete(data)}\n                                                className={classes.chip}\n                                            />\n                                        </li>\n                                    );\n                                })}\n                            </Paper>\n                        </Grid>}\n                        {/* {form && <Grid item xs={12}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                onClick={() => { setOpen(true) }}>\n                                Add Field\n                        </Button>\n                        </Grid>} */}\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSaveChangesButton} color=\"primary\">\n                        Save Changes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <AddFieldDialog\n                open={open}\n                handleAdd={handleFieldAddButton}\n                handleClose={handleClose}>\n            </AddFieldDialog>\n        </div>\n    );\n}\n","import React from 'react';\n// import Copyright from '../Components/copyright';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport RoundEditDialog from '../Components/EditRoundDialog';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    // padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    // margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n    backgroundColor: theme.palette.primary.light\n  },\n}));\n\nconst EventEdit = (props) => {\n  var event = props.event;\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error'\n  });\n\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [regLink, setRegLink] = React.useState(null);\n  const [regFees, setRegFees] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  // const [image, setImage] = React.useState(null);\n  // const [imageName, setImageName] = React.useState(\"\");\n  const [addressType, setAddressType] = React.useState(\"\");\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [regMode, setRegMode] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(null);\n  const [participantType, setParticipantsType] = React.useState(\"open\");\n  const [image, setImage] = React.useState(null);\n  const [imageUrl, setImageurl] = React.useState(null);\n  const [imageUpdated, setImageUpdated] = React.useState(false);\n  const [venue, setVenue] = React.useState(null);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const { vertical, horizontal, open, message, type } = state;\n  const [colleges, setColleges] = React.useState([]);\n  // const [collegesNames, setCollegesName] = React.useState([]);\n\n  const token = localStorage.getItem('token');\n  const [eventTags, setEventTags] = React.useState([]);\n  const [requirements, setRequirements] = React.useState([]);\n  const [eventTypes, setEventTypes] = React.useState([]);\n  const [platformDetails, setPlatformDetails] = React.useState('');\n  const [isTeamed, setIsTeamed] = React.useState(false);\n  const [teamSize, setTeamSize] = React.useState({});\n  const [rounds, setRounds] = React.useState([]);\n  const [rules, setRules] = React.useState(null);\n  const [themes, setThemes] = React.useState(null);\n  const [prizes, setPrizes] = React.useState([]);\n  const [prizeTitle, setPrizeTitle] = React.useState(null);\n  const [prize, setPrize] = React.useState(null);\n  const [prizeDesc, setPrizeDesc] = React.useState(null);\n  const [roundsDialogOpen, setRoundsDialogOpen] = React.useState(false);\n  const [selectedEditRound, setSelectedEditRound] = React.useState({});\n\n\n\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  // const colleges = [\"VIT University\", \"GITAM University\", \"SRM University\"];\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        // value.forEach((v) => {\n        //   setCollegesName((collegesNames) => [...collegesNames, v.name])\n        // })\n      })\n    })\n  }, [token])\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setendDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDate(date)\n  };\n  React.useEffect(() => {\n    setEventThemes(event.tags);\n    setEventType(event.event_type);\n    setName(event.name);\n    setDesc(event.description);\n    setStartDate(event.start_time);\n    setendDate(event.finish_time);\n    setRegEndDate(event.registration_end_time);\n    setEventMode(event.event_mode);\n    setRegLink(event.reg_link);\n    setAbout(event.about);\n    setRegFees(event.fees);\n    setSelectedRequirements(event.requirements);\n    setFeeType(event.fee_type);\n    setCollegeName(event.college_name);\n    setRegMode(event.reg_mode);\n    setOrganizer(event.organizer);\n    setVenue(event.venue);\n    setVenueCollege(event.venue_college);\n    setPlatformDetails(event.platform_details);\n    setAddressType(event.venue_type);\n    setIsTeamed(event.isTeamed);\n    setTeamSize(event.team_size);\n    setRounds(event.rounds);\n    setRules(event.rules);\n    setPrizes(event.prizes);\n    setThemes(event.themes);\n    if (event.o_allowed === true) {\n      setParticipantsType(\"open\")\n    }\n    else {\n      setParticipantsType(\"onlycollege\")\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        value.forEach((v) => {\n          if (v.type === \"EventTags\") {\n            setEventTags((eventTags) => [...eventTags, v.title]);\n          }\n          else if (v.type === \"EventRequirements\") {\n            setRequirements((r) => [...r, v.title]);\n          }\n          else {\n            setEventTypes((r) => [...r, v.title]);\n          }\n        })\n      })\n    })\n\n  }, [token, event])\n\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Saved changes successfully\") {\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  };\n\n  const handleRoundEditDialogClose = () => {\n    setRoundsDialogOpen(false);\n  };\n\n  async function handleEventPost(e) {\n    e.preventDefault();\n    setLoading(true);\n    var oAllowed = false;\n    if (participantType === \"open\") {\n      oAllowed = true\n    }\n    try {\n      var data = new FormData();\n      const payload = {\n        eventId: event._id,\n        name: name,\n        description: desc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: regFees,\n        about: about,\n        fee_type: feeType,\n        college: collegeName,\n        organizer: organizer,\n        requirements: selectedrequirements,\n        o_allowed: oAllowed,\n        reg_mode: regMode,\n        venue_type: addressType,\n        venue: venue,\n        venue_college: venueCollege,\n        platform_details: platformDetails,\n        rounds: rounds,\n        rules: rules,\n        prizes: prizes,\n        themes: themes\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL + '/api/updateevent', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            event = value.event;\n            if (imageUpdated) {\n              var data2 = new FormData()\n              data2.append(\"image\", image);\n              fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${event._id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: data2\n              }).then(res => {\n                if (res.status === 200) {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"successful\",\n                    type: \"success\",\n                    autoHide: 300\n                  })\n                }\n              })\n            }\n            else {\n              setLoading(false);\n              setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"Saved changes successfully\",\n                type: \"success\"\n              })\n            }\n          })\n        }\n        else {\n          result.json().then(value => {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: value,\n              type: \"error\"\n            })\n          })\n        }\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleeventTypsChange(event, value) {\n    setEventType(value);\n  }\n\n  function handleeventTagsChange(event, values) {\n    setEventThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    setSelectedRequirements(values);\n  }\n\n\n  function handleAddressTypeChange(evemt, value) {\n    setAddressType(value);\n  }\n  function handleName(event) {\n    setName(event.target.value)\n  }\n  function handleDesc(event) {\n    setDesc(event.target.value);\n  }\n  function handleFeeTypeChange(event, value) {\n    setFeeType(value);\n  }\n\n  function handleCollegeChange(event, value) {\n    setCollegeName(value);\n  }\n  function handleEventMode(event) {\n    setEventMode(event.target.value);\n  }\n\n  function handleRegLink(event) {\n    setRegLink(event.target.value);\n  }\n  function handleFees(event) {\n    setRegFees(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    setParticipantsType(value)\n  }\n  function handleVenue(event) {\n    setVenue(event.target.value);\n  }\n  // function handleVenueCollegeChange(event, value) {\n  //   setVenueCollege(value);\n  // }\n\n  function handlePlatformChange(event) {\n    setPlatformDetails(event.target.value);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n      const url = URL.createObjectURL(event.target.files[0]);\n      setImageurl(url)\n      setImageUpdated(true);\n    }\n\n  }\n\n  const handleRoundEditButton = (data) => () => {\n    setSelectedEditRound(data);\n    setRoundsDialogOpen(true);\n  }\n\n  const handlePrizeAddButton = () => {\n    setPrizes(prizes => [...prizes, { title: prizeTitle,prize: prize, desc: prizeDesc }]);\n    setPrizeTitle(null);\n    setPrizeDesc(null);\n  }\n\n  const handlePrizeDeleteButton = (index, data) => () => {\n    var currentPrizes = prizes;\n    currentPrizes.splice(index);\n    setPrizes(currentPrizes);\n  }\n\n\n  const handlePrizeFieldChange = (title) => (event) => {\n    if (title === \"title\") {\n        setPrizeTitle(event.target.value)\n    }\n    else if (title === \"desc\") {\n        setPrizeDesc(event.target.value);\n    }\n    else {\n        setPrize(event.target.value);\n    }\n}\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <form className={classes.form} novalidate onSubmit={handleEventPost}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} >\n              <input id=\"contained-button-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n              <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                badgeContent={<label htmlFor=\"contained-button-file\">\n                  <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <EditIcon></EditIcon>\n                  </IconButton>\n                </label>}>\n                <img height=\"160\" width=\"150\" alt=\"poster\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`} ></img>\n              </Badge>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventName\"\n                name=\"eventName\"\n                label=\"Event name\"\n                value={name || \"\"}\n                onChange={handleName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"shortdesc\"\n                name=\"shortdesc\"\n                label=\"Short Description\"\n                fullWidth\n                value={desc || \"\"}\n                onChange={handleDesc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"startDate\"\n                  label=\"Event Start Date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"endDate\"\n                  label=\"Event End Date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={handleendDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"regEndDate\"\n                  label=\"Registration End Date\"\n                  name=\"regEndDate\"\n                  value={regEndDate}\n                  onChange={handleRegEndDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"event mode\">Event Mode</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Event Mode\"\n                  value={eventMode || \"\"}\n                  onChange={handleEventMode}\n                  inputProps={{\n                    name: 'eventMode',\n                    id: 'event mode',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Online\">Online</option>\n                  <option value=\"Offline\">Offline</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"event type\"\n                options={eventTypes}\n                getOptionLabel={(option) => option}\n                value={eventType || \"\"}\n                onChange={handleeventTypsChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Event Type\" />}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"event themes\"\n                options={eventTags.map((option) => option)}\n                // defaultValue={[eventTypes[1]]}\n                freeSolo\n                value={eventThemes || []}\n                onChange={handleeventTagsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Event Themes\" placeholder=\"Event Themes\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Entry Fee</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={feeType || \"\"} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n                <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n              </RadioGroup>\n            </Grid>\n            {regMode !== \"form\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  id=\"regLink\"\n                  name=\"regLink\"\n                  label=\"Registration Link\"\n                  fullWidth\n                  value={regLink || \"\"}\n                  onChange={handleRegLink}\n                />\n              </Grid>}\n            {feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"regFees\"\n                name=\"regFees\"\n                value={regFees || \"\"}\n                label=\"Registration Fees\"\n                onChange={handleFees}\n                fullWidth\n              // helperText={\"Enter 0 if your event is free\"}\n              />\n            </Grid>}\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                disabled\n                id=\"collegename\"\n                options={colleges}\n                getOptionLabel={(option) => option}\n                value={collegeName || \"\"}\n                onChange={handleCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth >\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  disabled\n                  label=\"Registration\"\n                  inputProps={{\n                    name: 'registrationMode',\n                    id: 'registration mode',\n                  }}\n                  value={regMode || \"\"}\n                // onChange={handleRegistrationModeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"form\">Our Platform(Ellipse)</option>\n                  <option value=\"link\">Other</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"requirements\"\n                options={requirements.map((option) => option)}\n                freeSolo\n                value={selectedrequirements}\n                onChange={handleRequirementsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Prerequisites\" placeholder=\"Requirements\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Participation</FormLabel>\n              <RadioGroup name=\"participanttype\" value={participantType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n                <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${collegeName}`} />\n              </RadioGroup>\n            </Grid>\n            {eventMode === \"Offline\" && <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={addressType} onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"College/University\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>}\n            <Grid item xs={12}>\n              <FormLabel required component=\"legend\">Participation Type</FormLabel>\n              <RadioGroup required aria-label=\"address\" name=\"teamed\" value={isTeamed ? \"team\" : \"individual\"} style={{ display: \"inline\" }}>\n                <FormControlLabel disabled value=\"individual\" control={<Radio color=\"default\" />} label=\"Individual\" />\n                <FormControlLabel disabled value=\"team\" control={<Radio color=\"default\" />} label=\"Team\" />\n              </RadioGroup>\n            </Grid>\n            {isTeamed && <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                type=\"number\"\n                id=\"maxTeam\"\n                name=\"minTeam\"\n                label=\"Minimum Team Members\"\n                fullWidth\n                value={teamSize.min_team_size || \"\"}\n              // onChange={(e)=>{props.setMinTeamSize(e.target.value)}}\n              />\n            </Grid>}\n            {isTeamed && <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                type=\"number\"\n                id=\"maxTeam\"\n                name=\"maxTeam\"\n                label=\"Maximum Team Members\"\n                fullWidth\n                value={teamSize.max_team_size || \"\"}\n              // onChange={(e)=>{props.setMaxTeamSize(e.target.value)}}\n              />\n            </Grid>}\n            {eventMode === \"Offline\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  multiline={true}\n                  helperText=\"Enter venue details (Ex: VIT, Vellore)\"\n                  rows=\"5\"\n                  variant='outlined'\n                  // required\n                  value={venue || \"\"}\n                  onChange={handleVenue}\n                  id=\"building\"\n                  name=\"building\"\n                  label=\"Room No & Building\"\n                  fullWidth\n                />\n              </Grid>\n            }\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter short description of your event\"\n                autoComplete='off'\n                // required\n                value={about || \"\"}\n                id=\"about\"\n                name=\"about\"\n                label=\"About\"\n                fullWidth\n              />\n            </Grid>\n            {eventMode === \"Online\" && <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                helperText=\"Enter link for the platform, you can also add it later\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter details about your online platform\"\n                autoComplete='off'\n                // required\n                id=\"platform\"\n                name=\"platform\"\n                label=\"Platform\"\n                fullWidth\n                onChange={handlePlatformChange}\n                value={platformDetails || \"\"}\n              />\n            </Grid>}\n            {regMode === \"form\" && <Grid item xs={12}>\n              <Typography>Registration Fields</Typography>\n              <Paper component=\"ul\" className={classes.root}>\n                {event.reg_fields.map((data) => {\n                  return (\n                    <li key={data.key}>\n                      <Chip\n                        label={data.title}\n                        className={classes.chip}\n                      />\n                    </li>\n                  );\n                })}\n              </Paper>\n            </Grid>}\n\n            {regMode === \"form\" && <Grid item xs={12}>\n              <Typography>Rounds</Typography>\n              <Paper component=\"ul\" className={classes.root}>\n                {rounds.map((data) => {\n                  return (\n                    <li key={data.key}>\n                      <Chip\n                        label={data.title}\n                        className={classes.chip}\n                      />\n                      <IconButton onClick={handleRoundEditButton(data)}><EditIcon></EditIcon></IconButton>\n                    </li>\n                  );\n                })}\n              </Paper>\n            </Grid>}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                helperText=\"Enter all rules and regulation including eligibility for participation\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter all rules and regulation including eligibility for participation\"\n                autoComplete='off'\n                onChange={(e) => { setRules(e.target.value) }}\n                value={rules}\n                id=\"rules\"\n                name=\"rules\"\n                label=\"Rules\"\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                helperText=\"Enter your event themes like healthcare, fintech\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter your event themes like healthcare, fintech\"\n                autoComplete='off'\n                onChange={(e) => { setThemes(e.target.value) }}\n                value={themes}\n                id=\"themes\"\n                name=\"themes\"\n                label=\"Themes\"\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\" className={classes.root}>\n                <FormLabel component=\"legend\">Prizes</FormLabel>\n                <Box display=\"flex\" style={{ marginTop: \"10px\" }}>\n                  <Box>\n                    <TextField onChange={handlePrizeFieldChange(\"title\")} value={prizeTitle || \"\"} label=\"Prize Title\" variant=\"outlined\" style={{ marginRight: \"5px\" }}></TextField>\n                  </Box>\n                  <Box>\n                  <TextField onChange={handlePrizeFieldChange(\"prize\")} value={prize || \"\"} label=\"Prize\" variant=\"outlined\"></TextField>\n                  </Box>\n                  <Box>\n                    <TextField onChange={handlePrizeFieldChange(\"desc\")} value={prizeDesc || \"\"} label=\"Prize Description\" variant=\"outlined\"></TextField>\n                  </Box>\n                  <Box>\n                    <IconButton onClick={handlePrizeAddButton}>Add</IconButton>\n                  </Box>\n                </Box>\n              </FormControl>\n            </Grid>\n            <Grid>\n              <Paper component=\"ul\" className={classes.root}>\n                {prizes.map((data, index) => {\n                  return (\n                    <li key={data.key}>\n                      <Chip\n                        label={data.title}\n                        onDelete={handlePrizeDeleteButton(index, data)}\n                        className={classes.chip}\n                      />\n                    </li>\n                  );\n                })}\n              </Paper>\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save Changes\"}\n          </Button>\n        </form>\n      </div>\n      <RoundEditDialog\n        open={roundsDialogOpen}\n        handleClose={handleRoundEditDialogClose}\n        rounds={rounds}\n        setRounds={setRounds}\n        roundData={selectedEditRound}\n      ></RoundEditDialog>\n    </Container>\n  );\n}\n\nexport default withRouter(EventEdit);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClose = async (event, reason) => {\n    getParticipantsList()\n    setState({ ...state, open: false });\n  }\n\n\n  const handleClick = (event, name) => {\n    // console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getParticipantsList = () =>{\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          // const firstdata = value[0].data;\n          // const columnNames = Object.keys(firstdata);\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n      })\n    })\n  }\n\n\n\n  function handleGenerateCertificateButton() {\n    setLoading(true);\n    // console.log(selected)\n    try {\n      var data = new FormData();\n      const d = { eventId: event._id, participants: selected }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/generate_certificates`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          \n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Generated successfully',\n            type: \"success\",\n            autoHide: 4000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button\n            variant=\"contained\"\n            onClick={handleGenerateCertificateButton}\n            className={classes.button}>{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Generate Certificates\"}</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = column.id === \"Email\" ? row[column.id].substr(0,3)+'*****@'+row[column.id].split('@')[1] : row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    // console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n              if(d.certificate_status !== \"not_generated\"){\n                setRowValues(rowValues => [...rowValues, d.data])\n              }\n            \n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return (\n\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4} lg={9}>\n        {/* <Paper className={classes.buttonsPaper}>\n          <Button variant=\"contained\" onClick={handleGenerateCertificateButton} className={classes.button}>Generate Certificates</Button>\n        </Paper> */}\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = column.id === \"Email\" ? row[column.id].substr(0,3)+'*****@'+row[column.id].split('@')[1] : row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","export default __webpack_public_path__ + \"static/media/certificate_sample.6f46be5a.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CertificateSample from './Images/certificate_sample.png';\nimport Typography from '@material-ui/core/Typography';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n}));\n\nexport default function StickyHeadTable(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    }\n\n    React.useEffect(() => {\n        setTitle(event.certificate.title)\n    }, [event])\n\n    function handleUpdateButton() {\n        setLoading(true);\n        try {\n            if (title === \"\" || title === null) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"please fill the details\",\n                    type: \"error\",\n                    autoHide: 6000\n                })\n            }\n            else {\n                var data = new FormData();\n                const d = { eventId: event._id, title: title }\n                data = JSON.stringify(d);\n                fetch(process.env.REACT_APP_API_URL + `/api/event/update_certificate_title`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    // console.log(response);\n                    response.json().then(value => {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Generated successfully',\n                            type: \"success\",\n                            autoHide: 4000\n                        });\n                    })\n                })\n            }\n\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n    }\n\n\n    return (\n        <div className={classes.paper}>\n            <Grid container spacing={2}>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={open}\n                    autoHideDuration={autoHide}\n                    onClose={handleClose}\n                    key={vertical + horizontal}>\n                    <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                </Snackbar>\n                <Grid item xs={12}>\n                    <TextField\n                        autoComplete='off'\n                        required\n                        id=\"title\"\n                        name=\"title\"\n                        label=\"Certificate Title\"\n                        value={title || \"\"}\n                        onChange={(e) => setTitle(e.target.value)}\n                        fullWidth\n                        inputProps={{\n                            maxLength: 32,\n                        }}\n                        helperText=\"You can change the title of certificate as shown below in sample by default it is event name\"\n                    />\n                </Grid>\n                {/* <Grid item xs={6}>\n                </Grid> */}\n                <Grid item xs={12}>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        onClick={handleUpdateButton}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update\"}\n                    </Button>\n                </Grid>\n            </Grid>\n            <Typography style={{marginTop:\"10px\"}} variant=\"h4\">Sample Certificate</Typography>\n            <img width=\"100%\" alt=\"certificate sample\" src={CertificateSample}></img>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport AdminCertificateDashboard1 from './AdminCertificateDashboad1';\nimport AdminCertificateDashboard2 from './AdminCertificateDashboard2';\nimport AdminCertificateDashboard3 from './AdminCertificateDashboard3';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <div className={classes.root}>\n\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"Dashboard\"></Tab>\n                        <Tab label=\"Pending\" />\n                        <Tab label=\"Generated\" />\n                    </Tabs>\n                </Paper>\n                {\n                    value === 0 && <AdminCertificateDashboard3 event={event}></AdminCertificateDashboard3>\n                }\n                {\n                    value === 1 && <AdminCertificateDashboard1 event={event}></AdminCertificateDashboard1>\n                }\n                {\n                    value === 2 && <AdminCertificateDashboard2 event={event}></AdminCertificateDashboard2>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport useStyles from '../Themes/SignupPageStyles';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Box from '@material-ui/core/Box';\n\n\n//other components imports\nimport AuthContext from '../AuthContext';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nfunction SubmissionForm(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n\n    const [userMessage, setUserMessage] = React.useState(false);\n    const [access, setAccess] = React.useState(true);\n    const [editAccess, setEditAccess] = React.useState(false);\n\n    const [formValues, setFormValues] = React.useState(null);\n    const [uploadFiles, setUploadFiles] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [normalFields, setNormalFields] = React.useState([]);\n    const [dropDownFields, setDropDownFields] = React.useState([]);\n    const [checkboxFields, setCheckBoxFields] = React.useState([]);\n    const [radioFields, setRadioFields] = React.useState([]);\n    const [dateFields, setDateFields] = React.useState([]);\n    const [longDescFields, setLongDescFields] = React.useState([]);\n    const [linkFields, setLinkFields] = React.useState([]);\n    const [fileUploadFields, setFileUploadFields] = React.useState([]);\n\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const [backDropOpen, setBackDropOpen] = React.useState(true);\n    const event = props.event;\n    const colleges = [\"VIT University,Vellore\", \"GITAM University, Bengaluru\", \"SRM University\"];\n\n    const { currentUser } = React.useContext(AuthContext);\n\n    const currentRound = props.round;\n    const currentDate = new Date();\n    const roundStartDate = new Date(currentRound.start_date);\n    const roundEndDate = new Date(currentRound.end_date);\n\n    React.useEffect(() => {\n        if (roundStartDate >= currentDate) {\n            setAccess(false);\n            setUserMessage(\"Round Not yet started\");\n        }\n        else if (roundEndDate <= currentDate) {\n            setAccess(false);\n            setUserMessage(\"Round Ended\");\n        }\n        // eslint-disable-next-line\n    }, [event, currentUser])\n\n    React.useEffect(() => {\n        if (!props.individual && props.team) {\n\n            if (props.team.members.length < event.team_size.min_team_size) {\n                setAccess(false);\n                setUserMessage(`Form team with minimum of ${event.team_size.min_team_size} members to make submission`);\n            }\n            if (props.team.submissions[props.index].is_submitted) {\n                setAccess(false);\n                setUserMessage(\"submission Already made\");\n                setEditAccess(true);\n                const submission_form = props.team.submissions[props.index].submission_form;\n                const keys = Object.keys(submission_form);\n                keys.forEach((sub, index) => {\n                    setFormValues(formValues => ({ ...formValues, [sub]: submission_form[sub] }))\n                })\n            }\n        }\n        else if (props.registration) {\n            if (props.registration.submissions[props.index].is_submitted) {\n                setAccess(false);\n                setUserMessage(\"submission Already made\");\n                setEditAccess(true);\n                const submission_form = props.registration.submissions[props.index].submission_form;\n                const keys = Object.keys(submission_form);\n                keys.forEach((sub, index) => {\n                    setFormValues(formValues => ({ ...formValues, [sub]: submission_form[sub] }))\n                })\n            }\n        }\n        // eslint-disable-next-line\n    }, [props])\n\n\n    React.useEffect(() => {\n        const allFields = props.fields;\n        if (allFields != null) {\n            allFields.forEach(f => {\n                if (f.title === \"Name\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.name }))\n                }\n                else if (f.title === \"Email\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.email }));\n                }\n                else if (f.title === \"College\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.college_name }));\n                }\n                else {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n                }\n                if (f.field === \"checkbox\") {\n\n                }\n\n            })\n            // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n            setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n            setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n            setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n            setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n            setDateFields(allFields.filter((f) => f.field === \"date\"));\n            setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n            setLinkFields(allFields.filter(f => f.field === \"link\"));\n            setFileUploadFields(allFields.filter(f => f.field === \"file\"));\n\n        }\n        setBackDropOpen(false);\n    }, [token, currentUser, props.fields])\n\n    function handleClose() {\n        if (message === \"Successful.Stay tunned with notifications and announcements\") {\n            props.fetchAll();\n        }\n        setState({ ...state, open: false });\n    }\n\n    function handleChange(event) {\n        setFormValues({ ...formValues, [event.target.name]: event.target.value });\n    }\n    const handleChange2 = (name) => (event, values) => {\n        setFormValues({ ...formValues, [name]: values });\n\n    }\n    const handleChange3 = (name) => (event) => {\n\n        if (event.target.checked) {\n            var array = [];\n            if (formValues[name]) {\n                array = formValues[name];\n                array.push(event.target.name);\n            }\n            else {\n                array.push(event.target.name);\n            }\n            setFormValues({ ...formValues, [name]: array });\n        }\n        else {\n            const array = formValues[name];\n            var index = array.indexOf(event.target.name);\n            array.splice(index, 1);\n            setFormValues({ ...formValues, [name]: array });\n        }\n    }\n\n    const handleDateChange = (name) => (date) => {\n        setFormValues({ ...formValues, [name]: date })\n    };\n\n    const handleLondDescChange = (event) => {\n        setFormValues({ ...formValues, [event.target.name]: event.target.value })\n    }\n\n    function handleradioChange(event, value) {\n        setFormValues({ ...formValues, [event.target.name]: value });\n    }\n\n    function handleEventRegistration(e) {\n        e.preventDefault();\n        setLoading(true);\n        var uploadedFilesIds = [];\n        const formkeys = Object.keys(formValues);\n        const fileFormKeys = Object.keys(uploadFiles);\n        var count = 0;\n        formkeys.forEach((v, index) => {\n            const cField = props.fields.filter((value) => { return value.title === v });\n            if (formValues[v] === null || formValues[v] === '') {\n                if (fileFormKeys.includes(v)) {\n\n                }\n                else {\n                    if (cField[0].req) {\n                        count = count + 1;\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Please fill in all required fields',\n                            type: \"error\",\n                            autoHide: 4000\n                        });\n                    }\n                }\n            }\n        })\n        if (fileFormKeys) {\n            fileFormKeys.forEach(f => {\n                const cField = props.fields.filter((value) => { return value.title === f });\n                if (uploadFiles[f] === null) {\n                    if (cField[0].req) {\n                        count = count + 1;\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Please fill in all fields',\n                            type: \"error\",\n                            autoHide: 4000\n                        });\n                    }\n                }\n            })\n        }\n\n        var finalValues = formValues;\n        if (count === 0) {\n            try {\n                if (fileFormKeys.length > 0) {\n                    fileFormKeys.forEach((key, index) => {\n                        var data1 = new FormData();\n                        data1.append('uploaded_file', uploadFiles[key]);\n                        fetch(process.env.REACT_APP_API_URL + `/api/event/register/upload_file?id=${event._id}`, {\n                            headers: {\n                                'Authorization': `Bearer ${token}`,\n                            },\n                            method: 'POST',\n                            body: data1\n                        }).then((response) => {\n                            if (response.status === 200) {\n                                response.json().then(value => {\n                                    setFormValues({ ...formValues, [key]: value.file_name })\n                                    finalValues[key] = value.file_name\n                                    uploadedFilesIds.push({ [key]: value.file_name });\n                                    if (uploadedFilesIds.length === fileFormKeys.length) {\n                                        var data = new FormData();\n                                        const d = props.individual ? { event_id: event._id, reg_id: props.registration._id, submission: finalValues, is_teamed: false, event_round: currentRound.title } : { event_id: event._id, submission: finalValues, team_id: props.team_id, is_teamed: true, event_round: currentRound.title }\n                                        data = JSON.stringify(d);\n                                        fetch(process.env.REACT_APP_API_URL + `/api/event/team/add_submission`, {\n                                            headers: {\n                                                'Authorization': `Bearer ${token}`,\n                                                'Content-Type': 'application/json',\n                                                'Accept': 'application/json'\n                                            },\n                                            method: 'POST',\n                                            body: data\n                                        }).then(response => {\n                                            if (response.status === 200) {\n                                                response.json().then(value => {\n                                                    setLoading(false);\n                                                    setState({\n                                                        open: true,\n                                                        vertical: 'top',\n                                                        horizontal: 'center',\n                                                        message: 'Successful.Stay tunned with notifications and announcements',\n                                                        type: \"success\",\n                                                        autoHide: 4000\n                                                    });\n                                                })\n                                            }\n                                        })\n                                    }\n                                })\n                            }\n                        })\n                    })\n                }\n                else {\n                    var data = new FormData();\n                    const d = props.individual ? { event_id: event._id, reg_id: props.registration._id, submission: finalValues, is_teamed: false, event_round: currentRound.title } : { event_id: event._id, submission: finalValues, team_id: props.team_id, is_teamed: true, event_round: currentRound.title }\n                    data = JSON.stringify(d);\n                    fetch(process.env.REACT_APP_API_URL + `/api/event/team/add_submission`, {\n                        headers: {\n                            'Authorization': `Bearer ${token}`,\n                            'Content-Type': 'application/json',\n                            'Accept': 'application/json'\n                        },\n                        method: 'POST',\n                        body: data\n                    }).then(response => {\n                        if (response.status === 200) {\n                            response.json().then(value => {\n                                setLoading(false);\n                                setState({\n                                    open: true,\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                    message: 'Successful.Stay tunned with notifications and announcements',\n                                    type: \"success\",\n                                    autoHide: 4000\n                                });\n                            })\n                        }\n                        else {\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"something went wrong try again\",\n                                type: \"error\",\n                                autoHide: 5000\n                            })\n                        }\n\n                    })\n                }\n            }\n            catch (error) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: error.message,\n                    type: \"error\",\n                    autoHide: 6000\n                })\n            }\n        }\n    }\n\n    function handleFileSelect(event) {\n        if (event.target.files[0]) {\n            setUploadFiles({ ...uploadFiles, [event.target.name]: event.target.files[0] });\n        }\n    }\n\n    return (\n        <div>\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Backdrop className={classes.backdrop} open={backDropOpen}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <form style={{ margin: \"20px\" }}>\n\n                <Grid container component=\"main\" spacing={2}>\n                    {normalFields.map((field, index) => {\n                        if (field.title === \"College\") {\n                            return (\n                                <Grid item xs={12}>\n                                    <Autocomplete\n                                        fullWidth\n                                        id={field.title}\n                                        options={colleges}\n                                        getOptionLabel={(option) => option}\n                                        onChange={handleChange}\n                                        value={formValues[field.title]}\n                                        disabled\n                                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                                    />\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                    </Box>\n                                </Grid>)\n                        }\n                        else if (field.title === \"Email\") {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        disabled\n                                        // variant=\"outlined\"\n                                        // required\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title]}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                    </Box>\n                                </Grid>)\n                        }\n                        else {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        // variant=\"outlined\"\n                                        margin=\"dense\"\n                                        required={field.req}\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title] || \"\"}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                    </Box>\n                                </Grid>)\n                        }\n\n                    })}\n                    {\n                        longDescFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        multiline={true}\n                                        rows=\"5\"\n                                        variant='outlined'\n                                        placeholder={field.title}\n                                        autoComplete='off'\n                                        required={field.req}\n                                        id={field.title}\n                                        name={field.title}\n                                        label={field.title}\n                                        fullWidth\n                                        onChange={handleLondDescChange}\n                                        value={formValues[field.title] || \"\"}\n                                    />\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                    </Box>\n                                </Grid>\n                            )\n                        })\n                    }\n                    {checkboxFields.map((field, index) => {\n                        return (\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\" className={classes.formControl}>\n                                    <FormLabel required={field.req} component=\"legend\">{field.title}</FormLabel>\n                                    <FormGroup class={classes.formgroup}>\n                                        {field.options.map((option) => {\n                                            return <FormControlLabel\n                                                control={<Checkbox color=\"primary\" checked={formValues[field.title] !== null && formValues[field.title].includes(option)} onChange={handleChange3(field.title)} name={option} />}\n                                                label={option}\n                                            />\n                                        })}\n                                    </FormGroup>\n                                </FormControl>\n                                <Box display=\"flex\" justifyContent=\"flex-end\">\n                                    <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                </Box>\n                            </Grid>\n                        )\n                    })}\n                    {dropDownFields.map((field, index) => {\n                        return (\n                            <Grid item xs={12}>\n                                <Autocomplete\n                                    id={field.title}\n                                    options={field.options.map((option) => option)}\n                                    value={formValues[field.title]}\n                                    onChange={handleChange2(field.title)}\n                                    renderTags={(value, getTagProps) =>\n                                        value.map((option, index) => (\n                                            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                                        ))\n                                    }\n                                    renderInput={(params) => (\n                                        <TextField required={field.req} {...params} name={field.name} label={field.title} placeholder={field.name} />\n                                    )}\n                                />\n                                <Box display=\"flex\" justifyContent=\"flex-end\">\n                                    <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                </Box>\n                            </Grid>\n                        )\n                    })}\n                    {radioFields.map((field, index) => {\n                        return (\n                            <Grid item xs={12}>\n                                <FormLabel required={field.req} component=\"legend\">{field.title}</FormLabel>\n                                <RadioGroup required={field.req} aria-label=\"address\" name={field.title} defaultValue={field.options[0]} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                                    {field.options.map((option) => {\n                                        return <FormControlLabel required={field.req} value={option} control={<Radio color=\"default\" />} label={option} />\n                                    })}\n                                </RadioGroup>\n                                <Box display=\"flex\" justifyContent=\"flex-end\">\n                                    <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                </Box>\n                            </Grid>\n                        )\n                    })}\n                    {\n                        dateFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <DateTimePicker\n                                            // minDate={Date.now()}\n                                            fullWidth\n                                            required={field.req}\n                                            variant=\"dialog\"\n                                            format=\"dd MMM yyyy hh:mm a zzz\"\n                                            margin=\"normal\"\n                                            id={field.title}\n                                            label={field.title}\n                                            name={field.title}\n                                            // defaultValue={Date.now()}\n                                            value={formValues[field.title]}\n                                            onChange={handleDateChange(field.title)}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change date',\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                    </Box>\n                                </Grid>\n                            )\n                        })\n                    }\n\n                    {\n                        linkFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        required={field.req}\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title] || \"\"}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                    </Box>\n                                </Grid>)\n                        })\n                    }\n                    {\n                        fileUploadFields.map((field, index) => {\n                            if (editAccess) {\n                                return <Grid item xs={12}>\n                                    <Typography>{field.title}</Typography>\n                                    <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${formValues[field.title]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                                    <input id={index} name={field.title} required={field.req} type=\"file\" onChange={handleFileSelect} style={{ \"marginTop\": \"10px\" }} ></input>\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                    </Box>\n                                </Grid>\n                            }\n                            else {\n                                return <Grid item xs={12}>\n                                    <Typography>{field.title}</Typography>\n                                    <input id={index} name={field.title} required={field.req} type=\"file\" onChange={handleFileSelect} style={{ \"marginTop\": \"10px\" }} ></input>\n                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{field.req && \"*required\"}</Typography>\n                                    </Box>\n                                </Grid>\n                            }\n                        })\n                    }\n                </Grid>\n                {access && <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    className={classes.submit}\n                    onClick={handleEventRegistration}\n                >\n                    {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Submit\"}\n                </Button>}\n                {\n                    !access && <Typography style={{ margin: \"20px 0px 10px 0px\" }}>{userMessage}</Typography>\n                }\n                {editAccess && <Button\n                    onClick={handleEventRegistration}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    className={classes.submit}\n                >\n                    {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Edit\"}\n                </Button>}\n            </form>\n        </div>\n    )\n}\nexport default SubmissionForm;","import React from 'react';\nimport { Typography, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\n// import AuthContext from '../AuthContext';\n// import WebSocketContext from '../WebSocketContext';\nimport SubmissionPanel from './SubmissionForm';\n// import ChatMessage from '../Components/ChatMessage';\n// import ChatTextField from './ChatTextField';\n\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Linkify from 'react-linkify';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        // marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n\n    grid: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        maxWidth: '99%',\n        marginTop: theme.spacing(2)\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n        maxHeight: \"300px\"\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    accordion: {\n        backgroundColor: theme.palette.secondary.main\n    },\n\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    // const { currentUser } = React.useContext(AuthContext);\n    const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const [registration, setRegistration] = React.useState(null);\n    // const registration = props.registration;\n    const [teamDetails, setTeamDetails] = React.useState(null);\n    // const [admin, setAdmin] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    // const { webSocketContext } = React.useContext(WebSocketContext);\n\n\n    React.useEffect(() => {\n        // console.log(props.individual);\n        if (!props.individual) {\n            setRegistration(props.registration);\n            fetchAll()\n\n        }\n        else {\n            getData();\n        }\n\n        // eslint-disable-next-line\n    }, [props.individual])\n\n    const fetchAll = () => {\n        setLoading(true);\n        try {\n            if (props.registration.team_id !== null) {\n                fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_details?id=${props.registration.team_id}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'GET',\n                }).then(response => {\n                    response.json().then(value => {\n                        // console.log(value);\n                        setTeamDetails(value[0]);\n                        setLoading(false)\n                        // if (value[0].user_id === currentUser.user_id) {\n                        //     setAdmin(true);\n                        // }\n                    })\n                })\n            }\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const getData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        // console.log(value);\n                        setRegistration(value[0]);\n                        setLoading(false);\n                        // if(value[0].teamed_up){\n                        // setTeamedUp(value[0].teamed_up);\n                        // }\n\n                    })\n                }\n\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <React.Fragment>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    {!props.individual && <div className={classes.grid}>\n                        {teamDetails !== null && <Grid container component=\"main\" >\n                            <Grid item xs={12} md={6}>\n                                <Typography>Team</Typography>\n                                <Box className={classes.root0}>\n                                    <Box className={classes.adminDetails}>\n                                        <Box>\n                                            <Avatar className={classes.avatar} alt={teamDetails.team_name} src=\"abc.jpg\"></Avatar>\n                                        </Box>\n                                        <Box>\n                                            <Box>\n                                                <Typography variant=\"h5\">{teamDetails.team_name}</Typography>\n                                            </Box>\n                                            <Box>\n                                                <Typography color=\"textSecondary\" variant=\"body2\">{teamDetails.description}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Grid>\n                        </Grid>}\n                    </div>}\n                    {props.individual && <Grid container component=\"main\">\n                        {registration !== null && <Grid item xs={12}>\n                            {\n                                event.rounds.map((value, index) => {\n                                    const cDate = new Date();\n                                    const sDate = new Date(value.start_date);\n                                    const eDate = new Date(value.end_date);\n                                    return <Accordion className={classes.accordion}>\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1a-content\"\n                                            id=\"panel1a-header\">\n                                            <Typography className={classes.heading}>{value.title}</Typography>\n                                            <Typography color=\"textSecondary\" style={{ marginLeft: '3px' }}>{cDate < sDate ? \"Starts on \" + sDate.toDateString() + \" \" + sDate.toLocaleTimeString() : \"Ends on \" + eDate.toDateString() + \" \" + eDate.toLocaleTimeString()}</Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            {\n                                                value.link !== '' && <Typography component=\"span\" variant=\"body1\" color=\"textSecondary\" className={classes.inline}>\n                                                    <Linkify\n                                                        componentDecorator={(decoratedHref, decoratedText, key) => (\n                                                            <a target=\"blank\" style={{ color: '#00bdaa', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                                {decoratedText}\n                                                            </a>\n                                                        )}\n                                                    >{value.link}</Linkify>\n                                                </Typography>\n                                            }\n                                        </AccordionDetails>\n                                        {\n                                            value.fields.length > 0 && <SubmissionPanel fetchAll={getData} registration={registration} individual={props.individual} team_id={registration.team_id} index={index} team={teamDetails} event={event} round={value} fields={value.fields}></SubmissionPanel>\n                                        }\n\n                                    </Accordion>\n                                })\n                            }\n                        </Grid>}\n                    </Grid>}\n                    {!props.individual && <Grid container component=\"main\">\n                        {teamDetails !== null && <Grid item xs={12}>\n                            {\n                                event.rounds.map((value, index) => {\n                                    const cDate = new Date();\n                                    const sDate = new Date(value.start_date);\n                                    const eDate = new Date(value.end_date);\n                                    return <Accordion className={classes.accordion}>\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1a-content\"\n                                            id=\"panel1a-header\">\n                                            <Typography className={classes.heading}>{value.title}</Typography>\n                                            <Typography color=\"textSecondary\" style={{ marginLeft: '3px' }}>{cDate < sDate ? \"Starts on \" + sDate.toDateString() + \" \" + sDate.toLocaleTimeString() : \"Ends on \" + eDate.toDateString() + \" \" + eDate.toLocaleTimeString()}</Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            {\n                                                value.link !== '' && <Typography component=\"span\" variant=\"body1\" color=\"textSecondary\" className={classes.inline}>\n                                                    <Linkify\n                                                        componentDecorator={(decoratedHref, decoratedText, key) => (\n                                                            <a target=\"blank\" style={{ color: '#00bdaa', fontWeight: 'bold', margin: \"20px\" }} href={decoratedHref} key={key}>\n                                                                {decoratedText}\n                                                            </a>\n                                                        )}\n                                                    >{value.link}</Linkify>\n                                                </Typography>\n                                            }\n                                        </AccordionDetails>\n                                        {\n                                            value.fields.length > 0 && <SubmissionPanel fetchAll={fetchAll} team_id={registration.team_id} index={index} team={teamDetails} event={event} round={value} fields={value.fields}></SubmissionPanel>\n                                        }\n                                    </Accordion>\n                                })\n                            }\n                        </Grid>}\n                    </Grid>}\n\n                </React.Fragment>\n            )}\n        </div>\n    );\n}\nexport default AboutEventPanel;\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { Typography } from '@material-ui/core';\n\nimport AuthContext from '../AuthContext';\nimport WebSocketContext from '../WebSocketContext';\n\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     alignItems: \"center\",\n//     backgroundColor: theme.palette.secondary.main,\n//     marginBottom: theme.spacing(2),\n\n//   },\n\n// }));\n\n\n\n\nfunction Eventcard(props) {\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    //   const classes = useStyles();\n      const event = props.event;\n    const [memberDetails, setMemberDetails] = React.useState({});\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    React.useEffect(() => {\n        fetchAll()\n        // eslint-disable-next-line\n    }, [props])\n\n    const fetchAll = () =>{\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_member_details?id=${props.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    \n                    setMemberDetails(value);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    const handleRemoveButton = () =>{\n        const d = new Date();\n        var data = new FormData();\n        data = JSON.stringify({\n            event_id: event._id,\n            team_id: props.id._id,\n            user_id: props.user_id\n        });\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/remove_user_from_team`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((response) => {\n            response.json().then(value => {\n                // console.log(value);\n                props.fetchAll()\n                if (webSocketContext) {\n                    webSocketContext.send(JSON.stringify({\n                        action: \"team_status_update_message\",\n                        team_id: props.id._id,\n                        msg: {\n                            'id': props.user_id + Date.now(),\n                            'user_id': currentUser.user_id,\n                            'user_name': currentUser.name,\n                            'user_pic': currentUser.user_pic,\n                            'message_type': 'team_status_update_message',\n                            'message': memberDetails.name + \" was removed from the team\",\n                            'date': d.toISOString()\n                        }\n                    }));\n                    webSocketContext.send(JSON.stringify({\n                        action: \"team_status_update_status\",\n                        team_id: props.id._id,\n                        users: props.id.members,\n                        msg: {\n                          'id': currentUser.user_id + Date.now(),\n                          'user_id': currentUser.user_id,\n                          'user_name': currentUser.name,\n                          'user_pic': currentUser.profile_pic,\n                          'message_type': 'team_status_update_message',\n                          'message': currentUser.name + \" has left the team\",\n                          'date': d.toISOString()\n                        }\n                      }));\n                }\n            })\n        })\n    }\n\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar>\n                    <Avatar alt={memberDetails.name} src={memberDetails.user_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${memberDetails.user_pic}` : \"abc.jpg\"} />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n                primary={props.id === props.user_id ? memberDetails.name + \" (Team Leader)\" : memberDetails.name}\n                secondary={memberDetails.college}\n            />\n            {props.admin && !(currentUser.user_id === props.user_id) && <ListItemSecondaryAction>\n                <IconButton onClick={handleRemoveButton} edge=\"end\" aria-label=\"delete\">\n                    <RemoveCircleIcon></RemoveCircleIcon> <Typography>Remove</Typography>\n                </IconButton>\n            </ListItemSecondaryAction>}\n        </ListItem>\n    );\n}\n\nexport default Eventcard;\n\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Typography } from '@material-ui/core';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     alignItems: \"center\",\n//     backgroundColor: theme.palette.secondary.main,\n//     marginBottom: theme.spacing(2),\n\n//   },\n\n// }));\n\nfunction Eventcard(props) {\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n    const { currentUser } = React.useContext(AuthContext);\n    //   const classes = useStyles();\n    const event = props.event;\n    const [memberDetails, setMemberDetails] = React.useState({});\n    const { webSocketContext } = React.useContext(WebSocketContext);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_member_details?id=${props.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    setMemberDetails(value);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }, [props, token])\n\n    const handleAcceptButton = () => {\n        const d = new Date();\n        var data = new FormData();\n        data = JSON.stringify({\n            event_id: event._id,\n            team_id: props.id._id,\n            user_id: props.user_id\n        });\n        fetch(process.env.REACT_APP_API_URL + `/api/event/accept_user_teamup_request`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((response) => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    props.fetchAll();\n\n                    if (webSocketContext) {\n                        webSocketContext.send(JSON.stringify({\n                            action: \"team_status_update_message\",\n                            team_id: props.id._id,\n                            msg: {\n                                'id': props.user_id + Date.now(),\n                                'user_id': currentUser.user_id,\n                                'user_name': memberDetails.name,\n                                'user_pic': memberDetails.user_pic,\n                                'message_type': 'team_status_update_message',\n                                'message': memberDetails.name + \" has joined the team\",\n                                'date': d.toISOString()\n                            }\n                        }));\n                        webSocketContext.send(JSON.stringify({\n                            action: \"team_status_update_status\",\n                            team_id: props.id._id,\n                            users: props.id.members.concat([value.updated_user_id]),\n                            msg: {\n                                'id': currentUser.user_id + Date.now(),\n                                'user_id': currentUser.user_id,\n                                'user_name': currentUser.name,\n                                'user_pic': currentUser.profile_pic,\n                                'message_type': 'team_status_update_message',\n                                'message': currentUser.name + \" has left the team\",\n                                'date': d.toISOString()\n                            }\n                        }));\n                    }\n\n                })\n            }\n            else if (response.status === 201) {\n                response.json().then(value => {\n                    // setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: value.message,\n                        type: \"error\",\n                        autoHide: 4000\n                    });\n                })\n\n            }\n\n        })\n    }\n\n    function handleClose() {\n        // if (message === \"Successful.Stay tunned with notifications and announcements\") {\n        //     props.fetchAll();\n        // }\n        setState({ ...state, open: false });\n    }\n\n\n    return (\n        <ListItem>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <ListItemAvatar>\n                <Avatar alt={memberDetails.name} src={memberDetails.user_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${memberDetails.user_pic}` : \"abc.lpg\"} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={memberDetails.name}\n                secondary={memberDetails.college}\n            />\n            <ListItemSecondaryAction>\n                {/* <IconButton edge=\"end\" aria-label=\"delete\">\n                          <DeleteIcon />\n                        </IconButton> */}\n                <IconButton onClick={handleAcceptButton} edge=\"end\" aria-label=\"delete\">\n                    <CheckCircleIcon></CheckCircleIcon><Typography>Accept</Typography>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n\n    );\n}\n\nexport default Eventcard;\n\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n\n    React.useEffect(() => {\n        // console.log(props.title)\n        setTitle(props.title);\n        setDesc(props.desc);\n    }, [props])\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData();\n            data = JSON.stringify({\n                team_id: props.team_id,\n                desc: desc\n            });\n            // console.log(data);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/edit_team`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then((response) => {\n                response.json().then(value => {\n                    setLoading(false)\n                    props.handleClose()\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Successfull',\n                        type: \"success\",\n                        autoHide: 3000\n                    });\n                })\n            })\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Name\"\n                                name=\"title\"\n                                fullWidth\n                                disabled\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Typography, Box, Avatar, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\n// import { cleanup } from '@testing-library/react';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport TeamMemberRequestListItem from './TeamMemberRequestListItem';\n\nimport AuthContext from '../AuthContext';\nimport TeamEditDialog from './EditTeamDialog';\nimport WebSocketContext from '../WebSocketContext';\n// import ChatMessage from '../Components/ChatMessage';\n// import ChatTextField from './ChatTextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  adminDetails: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    // marginTop: theme.spacing(2)\n  },\n  root0: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginRight: theme.spacing(1)\n  },\n\n  grid: {\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.secondary.main,\n    // maxWidth: '99%',\n    marginTop: theme.spacing(2)\n\n  },\n  root3: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    minWidth: theme.spacing(30)\n  },\n  root6: {\n    display: \"flex\",\n    justifyContent: \"center\",\n\n  },\n  // stickyHeader: {\n  //     position: \"sticky\",\n  //     position: \"-webkit-sticky\",\n  //     top: 0,\n  // },\n\n  topBar: {\n    // display: 'fixed'\n    maxHeight: \"300px\"\n  },\n  root4: {\n    marginRight: theme.spacing(0)\n  },\n  root5: {\n    marginLeft: theme.spacing(0),\n    maxWidth: '65%',\n    overflow: 'auto',\n    //    textOverflow: \"ellipsis\"\n  },\n  root2: {\n    // backgroundColor: theme.palette.background.paper,\n    // borderRadius: theme.spacing(1),\n    textDecorationColor: theme.palette.secondary.light,\n    maxWidth: '65%',\n    minWidth: '20%',\n    overflow: 'auto',\n    marginLeft: theme.spacing(1)\n    // textOverflow: \"ellipsis\"\n  },\n  bottomBar: {\n    position: 'absolute',\n    // flexGrow: 1,\n    // zIndex: '5',\n    right: theme.spacing(4),\n    bottom: theme.spacing(4),\n    left: \"200px\",\n    padding: theme.spacing(0, 3),\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.spacing(5),\n  },\n  progress: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  message: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  }\n\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { currentUser } = React.useContext(AuthContext);\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  const token = localStorage.getItem('token');\n  const event = props.event;\n  const registration = props.registration;\n  const [teamDetails, setTeamDetails] = React.useState({});\n  const [admin, setAdmin] = React.useState(false);\n  const [editDialogOpen, setEditDialogOpen] = React.useState(false);\n\n  const { webSocketContext } = React.useContext(WebSocketContext);\n\n\n  React.useEffect(() => {\n    fetchAll()\n    // eslint-disable-next-line\n  }, [props.registration])\n\n  //   if (webSocketContext) {\n  //     // console.log(\"xyshs\")\n  //     webSocketContext.onmessage = (message) => {\n  //         const mes = JSON.parse(message.data);\n  //         const cMes = mes.msg;\n  //         console.log(mes);\n  //         if(mes.action === \"receive_team_status_status\"){\n  //             console.log(\"hurray\")\n  //             // getData()\n  //             fetchAll()\n  //         }\n  //         // if (mes.team_id === registration.team_id) {\n  //         //     // console.log(cMes);\n  //         //     // setChatMessages(chatMessages => [...chatMessages, cMes]);\n  //         // }\n  //     }\n  // }\n\n\n\n  const fetchAll = () => {\n    try {\n      if(registration.team_id !== null){\n        fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_details?id=${registration.team_id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'GET',\n        }).then(response => {\n          response.json().then(value => {\n            // console.log(value);\n            setTeamDetails(value[0]);\n  \n            if (value[0].user_id === currentUser.user_id) {\n              setAdmin(true);\n            }\n          })\n        })\n      }\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const handleDeleteButton = () => {\n    // const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      team_id: teamDetails._id,\n    });\n    // console.log(data);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/delete_team`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      response.json().then(value => {\n        props.getData();\n        // console.log(value);\n        // props.fetchAll()\n\n      })\n    })\n  }\n\n  const handleLeaveButton = () => {\n    const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      team_id: teamDetails._id,\n      event_id: event._id\n    });\n    // console.log(data);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/leave_team`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then(value => {\n          // console.log(value);\n          props.getData();\n          // props.fetchAll()\n          if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_message\",\n              team_id: registration.team_id,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has left the team\",\n                'date': d.toISOString()\n              }\n            }));\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_status\",\n              team_id: registration.team_id,\n              users: teamDetails.members,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has left the team\",\n                'date': d.toISOString()\n              }\n            }));\n          }\n        })\n      }\n    })\n  }\n\n  const handleEditButton = () => {\n    setEditDialogOpen(true);\n  }\n\n  const handleClose = () => {\n    setEditDialogOpen(false);\n    fetchAll()\n  }\n\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <React.Fragment>\n          <div className={classes.grid}>\n            <Grid container component=\"main\" >\n              <Grid item xs={12} md={6}>\n                <Box className={classes.root0}>\n                  <Box className={classes.adminDetails}>\n                    <Box>\n                      <Avatar className={classes.avatar} alt={teamDetails.team_name} src=\"abc.jpg\"></Avatar>\n                    </Box>\n                    <Box>\n                      <Box>\n                        <Typography variant=\"h5\">{teamDetails.team_name}</Typography>\n                      </Box>\n                      <Box>\n                        <Typography color=\"textSecondary\" variant=\"body2\">{teamDetails.description}</Typography>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                  {!admin && <Button onClick={handleLeaveButton}>Leave</Button>}\n                  {admin && <Button onClick={handleEditButton}>Edit</Button>}\n                  {admin && <Button onClick={handleDeleteButton}>Delete</Button>}\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid container component=\"main\" >\n              <Grid item xs={12} md={6}>\n                <Typography color=\"textSecondary\" style={{ marginTop: \"7px\" }}>Team Members</Typography>\n                {teamDetails.members !== undefined && <List dense={true}>\n                  {teamDetails.members.map((v) => {\n                    return <TeamMemberListItem fetchAll={fetchAll} admin={admin} event={props.event} id={teamDetails} user_id={v}></TeamMemberListItem>\n                  })}\n                </List>}\n              </Grid>\n              <Grid item xs={12} md={6}>\n                {admin && <Typography color=\"textSecondary\" style={{ marginTop: \"7px\" }}>Team up Requests</Typography>}\n                {admin && <List dense={true}>\n                  {\n                    teamDetails.received_requests.map(v => {\n                      return <TeamMemberRequestListItem fetchAll={fetchAll} event={props.event} id={teamDetails} user_id={v}></TeamMemberRequestListItem>\n                    })\n                  }\n                </List>}\n              </Grid>\n            </Grid>\n            <TeamEditDialog open={editDialogOpen} handleClose={handleClose} team_id={teamDetails._id} title={teamDetails.team_name} desc={teamDetails.description}></TeamEditDialog>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\nexport default AboutEventPanel;\n\n// {/* <ChatMessage adminId={event.user_id} message={value} ></ChatMessage> */}\n","import React from 'react';\nimport { Box, Button, TextField} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(2),\n        maxWidth: \"260px\"\n    },\n\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n\n    const handleCreateButton = (e) =>{\n        e.preventDefault();\n        const { name, desc } = e.target.elements;\n        var data = new FormData();\n        data = JSON.stringify({\n            'team_name': name.value,\n            'desc': desc.value,\n            'event_id': event._id,\n        });\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/create_team`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then((response)=>{\n            response.json().then(value=>{\n                // console.log(value);\n                props.getData();\n            })\n        })\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <form onSubmit={handleCreateButton}>\n                    <TextField variant=\"outlined\" label=\"Team Name\" required name=\"name\" fullWidth margin=\"dense\"></TextField>\n                    <TextField variant=\"outlined\" label=\"Description\" required name=\"desc\" fullWidth margin=\"dense\"></TextField>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Button type=\"submit\" fullWidth color=\"primary\" className={classes.button} variant=\"contained\">Create Team</Button>\n                    </Box>\n                    </form>\n                    \n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(0),\n  },\n\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(2),\n    maxWidth: \"260px\"\n  },\n  adminDetails: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    // marginTop: theme.spacing(2)\n  },\n  root0: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n\n\n  },\n  root1: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    backgroundColor: \"rgb(0, 189, 170,0.2)\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginRight: theme.spacing(1)\n  },\n  avatar2: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    marginRight: theme.spacing(1)\n  },\n  grid: {\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n    backgroundColor: \"rgb(0, 189, 170,0.2)\",\n    maxWidth: '99%'\n\n  },\n  progress: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  search: {\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    maxWidth: \"300px\",\n    padding: theme.spacing(0.5)\n  }\n\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  const token = localStorage.getItem('token');\n  const event = props.event;\n  const [teams, setTeams] = React.useState([]);\n  const [sortedTeams, setSortedTeams] = React.useState(null);\n  const [sentRequests, setSentRequests] = React.useState([]);\n  const [showMembers, setShowMembers] = React.useState(false);\n  const [teamIndex, setTeamIndex] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n\n  const { currentUser } = React.useContext(AuthContext);\n\n  const { webSocketContext } = React.useContext(WebSocketContext);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  React.useEffect(() => {\n    getData();\n    // eslint-disable-next-line\n  }, [])\n\n  function handleClose() {\n    if (message === \"Successful.Stay tunned with notifications and announcements\") {\n      props.fetchAll();\n    }\n    setState({ ...state, open: false });\n  }\n\n  const getData = () => {\n    setLoading(true);\n    try {\n      fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_teams?id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET',\n      }).then(response => {\n        response.json().then(value => {\n          // console.log(value);\n          setTeams(value);\n          setLoading(false);\n        })\n      })\n    }\n    catch (e) {\n      console.log(e);\n    }\n    try {\n      fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET',\n      }).then(response => {\n        response.json().then(value => {\n          setSentRequests(value[0].sent_requests);\n        })\n      })\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const handleRequestButton = (id, team) => () => {\n    const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      event_id: event._id,\n      team_id: id,\n    });\n    fetch(process.env.REACT_APP_API_URL + `/api/event/user_teamup_request`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then(value => {\n          // console.log(value);\n          // getData()\n          // setUpdated(true);\n          setSortedTeams(null);\n          if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_message\",\n              team_id: id,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has requested to join the team\",\n                'date': d.toISOString()\n              }\n            }));\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_status\",\n              team_id: id,\n              users: team.members,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has requested to join the team\",\n                'date': d.toISOString()\n              }\n            }));\n            getData();\n          }\n        })\n      }\n    })\n  }\n\n  const handleWithdrawButton = (id, team) => () => {\n    // console.log(id);\n    // console.log(team);\n    var data = new FormData();\n    data = JSON.stringify({\n      event_id: event._id,\n      team_id: id,\n    });\n    fetch(process.env.REACT_APP_API_URL + `/api/event/user_teamwithdraw_request`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then(value => {\n          // console.log(value);\n          // setUpdated(true);\n          const d = new Date();\n\n          if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_message\",\n              team_id: id,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has withdrawn the team join request\",\n                'date': d.toISOString()\n              }\n            }));\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_status\",\n              team_id: id,\n              users: team.members,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has withdrawen the team join request\",\n                'date': d.toISOString()\n              }\n            }));\n            getData();\n          }\n        })\n      }\n\n    })\n  }\n\n  const handleViewMembersClick = (v) => () => {\n\n    if (showMembers) {\n\n      if (teamIndex !== {}) {\n        if (teamIndex === v) {\n          setShowMembers(false);\n          setTeamIndex({});\n        }\n        else {\n          setTeamIndex(v)\n        }\n      }\n      else {\n        setShowMembers(false);\n        setTeamIndex({});\n      }\n\n    }\n    else {\n      setShowMembers(true);\n      setTeamIndex(v);\n    }\n  }\n\n  const handleTeamSearch = (e, value) => {\n    // console.log(value);\n    setSortedTeams(value);\n    // teams.\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={open}\n            autoHideDuration={autoHide}\n            onClose={handleClose}\n            key={vertical + horizontal}\n          >\n            <Alert onClose={handleClose} severity={type}>{message}</Alert>\n          </Snackbar>\n          <div className={classes.progress}>\n            <Fade\n              in={loading}\n              unmountOnExit>\n              <CircularProgress />\n            </Fade>\n          </div>\n          {sentRequests.length !== 0 && <Typography variant=\"body2\" color=\"textSecondary\">Sent Requests</Typography>}\n          {\n            sentRequests.map((v) => {\n              const searchedTeam = teams.find(t => t._id === v);\n              if (searchedTeam) {\n                return <Grid container component=\"main\" className={classes.grid}>\n                  <Grid item xs={12} md={6}>\n                    <Box className={classes.root0}>\n                      <Box className={classes.adminDetails}>\n                        <Box>\n                          <Avatar className={classes.avatar} alt={searchedTeam.team_name}>{searchedTeam.team_name[0]}</Avatar>\n                        </Box>\n                        <Box>\n                          <Box>\n                            <Typography variant=\"h5\">{searchedTeam.team_name}</Typography>\n                          </Box>\n                          <Box>\n                            <Typography color=\"textSecondary\" variant=\"body2\">{searchedTeam.description}</Typography>\n                            {showMembers && searchedTeam === teamIndex && <div>\n                              {\n                                searchedTeam.members.map((value, index) => {\n                                  return <TeamMemberListItem admin={false} event={props.event} id={searchedTeam} user_id={value}></TeamMemberListItem>\n                                })\n                              }\n                            </div>}\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <Button disabled={loading} onClick={handleViewMembersClick(searchedTeam)}>{(showMembers && searchedTeam === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                      <Button disabled={loading} onClick={handleWithdrawButton(searchedTeam._id, searchedTeam)}>Withdraw</Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              }\n              else {\n                return null\n              }\n            })\n          }\n          <Typography variant=\"body2\" color=\"textSecondary\">All Teams</Typography>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n\n            <Autocomplete\n              id=\"search\"\n              placeholder=\"Search..\"\n              options={teams}\n              fullWidth\n              variant=\"filled\"\n              className={classes.search}\n              getOptionLabel={(option) => option.team_name}\n              onChange={handleTeamSearch}\n\n              renderInput={(params) => <TextField {...params} placeholder=\"Search..\"\n                className={classes.inputInput} />}\n            />\n          </Box>\n\n          {!loading && teams.length === 0 && <Typography>No Teams Found Create one</Typography>}\n          {sortedTeams === null ? <div>\n            {\n              teams.map(v => {\n                if (!sentRequests.includes(v._id)) {\n                  return <Grid container component=\"main\" className={classes.grid}>\n                    <Grid item xs={12} md={6}>\n                      <Box className={classes.root0}>\n                        <Box className={classes.adminDetails}>\n                          <Box>\n                            <Avatar className={classes.avatar} alt={v.team_name}>{v.team_name[0]}</Avatar>\n                          </Box>\n                          <Box>\n                            <Box>\n                              <Typography variant=\"h5\">{v.team_name}</Typography>\n                            </Box>\n                            <Box>\n                              <Typography color=\"textSecondary\" variant=\"body2\">{v.description}</Typography>\n                              {showMembers && v === teamIndex && <div>\n                                {\n                                  v.members.map((value, index) => {\n                                    return <TeamMemberListItem admin={false} event={props.event} id={v} user_id={value}></TeamMemberListItem>\n                                  })\n                                }\n                              </div>}\n                            </Box>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Button disabled={loading} onClick={handleViewMembersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                        <Button disabled={loading} onClick={handleRequestButton(v._id, v)}>Request</Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                }\n                else {\n                  return null\n                }\n              })\n            }\n          </div> : <div>{!sentRequests.includes(sortedTeams._id) && <Grid container component=\"main\" className={classes.grid}>\n            <Grid item xs={12} md={6}>\n              <Box className={classes.root0}>\n                <Box className={classes.adminDetails}>\n                  <Box>\n                    <Avatar className={classes.avatar} alt={sortedTeams.team_name}>{sortedTeams.team_name[0]}</Avatar>\n                  </Box>\n                  <Box>\n                    <Box>\n                      <Typography variant=\"h5\">{sortedTeams.team_name}</Typography>\n                    </Box>\n                    <Box>\n                      <Typography color=\"textSecondary\" variant=\"body2\">{sortedTeams.description}</Typography>\n                      {showMembers && sortedTeams === teamIndex && <div>\n                        {\n                          sortedTeams.members.map((value, index) => {\n                            return <TeamMemberListItem admin={false} event={props.event} id={sortedTeams} user_id={value}></TeamMemberListItem>\n                          })\n                        }\n                      </div>}\n                    </Box>\n                  </Box>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Box display=\"flex\" justifyContent=\"flex-end\">\n                <Button disabled={loading} onClick={handleViewMembersClick(sortedTeams)}>{(showMembers && sortedTeams === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                <Button disabled={loading} onClick={handleRequestButton(sortedTeams._id, sortedTeams)}>Request</Button>\n              </Box>\n            </Grid>\n          </Grid>}</div>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\n// import ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Avatar from '@material-ui/core/Avatar';\n// import { List } from '@material-ui/core';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Dialog from '@material-ui/core/Dialog';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageBox3 from './MessageBox3';\nimport MessageBox4 from './MessageBox4';\nimport MessageDeleteDialog from './MessageDeleteDialog';\n\n// import socketIOClient from \"socket.io-client\";\n// const socket = socketIOClient(\"https://staging.ellipseapp.com\",{\n//     path: '/ws',\n//     // transports: ['websocket']\n// });\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [loading, setLoading] = React.useState(false);\n    const registration = props.registration;\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    // const [showOptions, setShowOptiona] = React.useState(\"\");\n    const classes = useStyles();\n    var counterDate = null;\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { teamChatMessages } = React.useContext(WebSocketDataContext);\n    const { setTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedTeamChatMessages, setDeletedTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n\n    const closeWebSocket = () => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"close_team_socket\",\n                team_id: registration.team_id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n    }\n\n    window.onbeforeunload = () => {\n        closeWebSocket()\n    }\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"join_team_room\",\n                team_id: registration.team_id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n        return () => {\n            closeWebSocket();\n        }\n        // eslint-disable-next-line\n    }, [currentUser, registration, webSocketContext])\n\n    React.useEffect(() => {\n        teamChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.team_id === registration.team_id) {\n                setChatMessages(chatMessages => [...chatMessages, cMes]);\n                setTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n            }\n        });\n        // eslint-disable-next-line\n    }, [teamChatMessages, registration])\n\n    React.useEffect(() => {\n        deletedTeamChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.team_id === registration.team_id) {\n                setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                setDeletedTeamChatMessages(deletedTeamChatMessages.filter(m => { return m !== mes }));\n            }\n        })\n        // eslint-disable-next-line\n    }, [deletedTeamChatMessages])\n\n\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_team_chat_messages?id=${registration.team_id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                // webConnect();\n                setLoading(false)\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_team_message\",\n                team_id: registration.team_id,\n                msg: {\n                    'id': currentUser.user_id + Date.now(),\n                    'user_id': currentUser.user_id,\n                    'user_name': currentUser.name,\n                    'user_pic': currentUser.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(\"delete\")\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n\n        webSocketContext.send(JSON.stringify({\n            action: \"delete_team_chat_message\",\n            team_id: registration.team_id,\n            msg: mes\n        }));\n        setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        setOpenDeleteDialog(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.message_type === 'team_status_update_message') {\n                                        return (\n                                            <MessageBox3\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox3>\n                                        );\n                                    }\n                                    return (\n                                        <MessageBox1\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox1>\n                                    );\n                                }\n                                if (value.message_type === 'team_status_update_message') {\n                                    return (\n                                        <MessageBox4\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox4>\n                                    )\n                                }\n                                return (\n                                    <MessageBox2\n                                        handleMessageDeleteButton={handleMessageDeleteButton}\n                                        message={value}\n                                        currentDate={currentDate}\n                                        messageDate={messageDate}\n                                        index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '70px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                    </Box>\n                    <div>\n                        <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\n// import Paper from '@material-ui/core/Paper';\n// import Tabs from '@material-ui/core/Tabs';\n// import Tab from '@material-ui/core/Tab';\n\nimport SubmissionPanel from './EventSubmissionPanel';\nimport SubPanel1 from './EventsTeamSubPanel1';\nimport SubPanel2 from './EventsTeamSubPanel2';\nimport SubPanel3 from './EventsTeamSubPanel3';\nimport EventsTeamChatPanel from './EventsTeamChatPanel';\nimport { Typography } from '@material-ui/core';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(0),\n        alignContent: \"center\",\n        // position: 'fixed'\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // position: '-webkit-sticky',\n        // position: 'sticky'\n        // position: 'fixed'\n        // marginBottom: theme.spacing(2),\n        // padding: theme.spacing(1)\n\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const [loading, setLoading] = React.useState(false);\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    // const [subIndexValue, setSubIndexValue] = React.useState(0);\n    const [teamedUp, setTeamedUp] = React.useState(false);\n    const [registration, setRegistration] = React.useState({});\n    const subIndexValue = props.subIndexValue;\n\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { teamUpdateStatus } = React.useContext(WebSocketDataContext);\n    // const handleChange = (event, newValue) => {\n    //     setSubIndexValue(newValue);\n    // };\n\n    React.useEffect(() => {\n        getData()\n        // eslint-disable-next-line\n    }, [teamUpdateStatus])\n\n    React.useEffect(() => {\n        getData();\n        // eslint-disable-next-line\n    }, [event, token])\n\n    const closeWebSocket = () => {\n        if (registration !== {}) {\n            // console.log(\"xxxxx\")\n            webSocketContext.send(JSON.stringify({\n                action: \"close_team_update_status_socket\",\n                team_id: registration.team_id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n    }\n\n    window.onbeforeunload = () => {\n        closeWebSocket()\n    }\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            if (registration !== {}) {\n                // console.log(\"xxxxx\")\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_team_update_status\",\n                    team_id: registration.team_id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n        }\n        return () => {\n            closeWebSocket();\n        }\n        // eslint-disable-next-line\n    }, [registration, currentUser, webSocketContext])\n\n\n    const getData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        setRegistration(value[0]);\n                        setTeamedUp(value[0].teamed_up);\n                        setLoading(false);\n                    })\n                }\n                else {\n\n                }\n\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    {/* <Paper className={classes.root2}>\n                        <Tabs\n                            value={subIndexValue}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"Submissions\" />\n                            <Tab label=\"Your Team\" />\n                            <Tab label=\"Team Chat\"/>\n                            <Tab label=\"Create Team\" />\n                            <Tab label=\"Join Team\" />\n                        </Tabs>\n                    </Paper> */}\n                    {teamedUp && !loading && <SubmissionPanel getData={getData} individual={false} value={subIndexValue} registration={registration} index={0} event={props.event}></SubmissionPanel>}\n                    {teamedUp && !loading && <SubPanel1 getData={getData} value={subIndexValue} registration={registration} index={1} event={props.event}></SubPanel1>}\n                    {teamedUp && !loading && subIndexValue === 2 && <EventsTeamChatPanel open={props.open} value={subIndexValue} registration={registration} index={2} event={props.event}></EventsTeamChatPanel>}\n                    {!teamedUp && subIndexValue === 0 && <Typography>Join team or create a team</Typography>}\n                    {/* {!teamedUp && subIndexValue === 1 && <Typography>Join team or create a team</Typography>} */}\n                    {!teamedUp && subIndexValue === 2 && <Typography>Join team or create a team</Typography>}\n                    {!teamedUp && <SubPanel2 value={subIndexValue} index={1} event={props.event} getData={getData}></SubPanel2>}\n                    {/* {teamedUp && subIndexValue === 3 && <Typography>Team already created</Typography>} */}\n                    {!teamedUp && !loading && <SubPanel3 value={subIndexValue} index={1} event={props.event}></SubPanel3>}\n                    {teamedUp && subIndexValue === 4 && <Typography>Team created or joined, delete to join other teams</Typography>}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport { Button, Typography, Box, } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n// import PeopleIcon from '@material-ui/icons/People';\nimport Grid from '@material-ui/core/Grid';\n// import WebSocketContext from '../WebSocketContext';\n// import AuthContext from '../AuthContext';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(0),\n    },\n\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(2),\n        maxWidth: \"260px\"\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        // marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n\n\n    },\n    root1: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: \"rgb(0, 189, 170,0.2)\",\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    avatar2: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n        marginRight: theme.spacing(1)\n    },\n    grid: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        maxWidth: '99%'\n\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n}));\n\nfunction EventDetailsTeamPanel(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n    const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const [teams, setTeams] = React.useState([]);\n    // const [sentRequests, setSentRequests] = React.useState([]);\n    const [showMembers, setShowMembers] = React.useState(false);\n    const [teamIndex, setTeamIndex] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // const { webSocketContext } = React.useContext(WebSocketContext);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        getData();\n        // eslint-disable-next-line\n    }, [])\n\n    function handleClose() {\n        if (message === \"Successful.Stay tunned with notifications and announcements\") {\n            props.fetchAll();\n        }\n        setState({ ...state, open: false });\n    }\n\n    const getData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_teams?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    setTeams(value);\n                    setLoading(false);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    const handleViewMembersClick = (v) => () => {\n\n        if (showMembers) {\n            if (teamIndex !== {}) {\n                if (teamIndex === v) {\n                    setShowMembers(false);\n                    setTeamIndex({});\n                }\n                else {\n                    setTeamIndex(v)\n                }\n            }\n            else {\n                setShowMembers(false);\n                setTeamIndex({});\n            }\n        }\n        else {\n            setShowMembers(true);\n            setTeamIndex(v);\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={autoHide}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    >\n                        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    <Typography variant=\"body2\" color=\"textSecondary\">All Teams</Typography>\n                    {!loading && teams.length === 0 && <Typography>No Teams Found</Typography>}\n                    <div>\n                        {\n                            teams.map(v => {\n                                return <Grid container component=\"main\" className={classes.grid}>\n                                    <Grid item xs={12} md={6}>\n                                        <Box className={classes.root0}>\n                                            <Box className={classes.adminDetails}>\n                                                <Box>\n                                                    <Avatar className={classes.avatar} alt={v.team_name}>{v.team_name[0]}</Avatar>\n                                                </Box>\n                                                <Box>\n                                                    <Box>\n                                                        <Typography variant=\"h5\">{v.team_name}</Typography>\n                                                    </Box>\n                                                    <Box>\n                                                        <Typography color=\"textSecondary\" variant=\"body2\">{v.description}</Typography>\n                                                        {showMembers && v === teamIndex && <div>\n                                                            {\n                                                                v.members.map((value, index) => {\n                                                                    return <TeamMemberListItem admin={false} event={props.event} id={v} user_id={value}></TeamMemberListItem>\n                                                                })\n                                                            }\n                                                        </div>}\n                                                    </Box>\n                                                </Box>\n                                            </Box>\n                                        </Box>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Box display=\"flex\" justifyContent=\"flex-end\">\n                                            <Button disabled={loading} onClick={handleViewMembersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n\n                            })\n                        }\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default EventDetailsTeamPanel;","import React from 'react';\nimport { makeStyles} from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    \n    \n}));\n\n\n\nexport default function CircularLoading(props) {\n    const classes = useStyles();\n\n    return (\n\n            <div className={classes.progress}>\n                <Fade\n                    in={props.loading}\n                    unmountOnExit>\n                    <CircularProgress />\n                </Fade>\n            </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Typography } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Linkify from 'react-linkify';\n\nimport CircularLoading from './CircularLoading';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n        },\n        // color: theme.palette.grey[500],\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    },\n    mobileHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    },\n    desktopHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    }\n}));\n\n\n\nexport default function ScrollDialog(props) {\n\n    // const token = localStorage.getItem('token');\n    const [loading,setLoading] = React.useState(false);\n    const classes = useStyles();\n    const theme = useTheme();\n    const [submission, setSubmission] = React.useState(null);\n    const [keys, setKeys] = React.useState([]);\n    const event = props.event;\n    const [currentRoundFields, setCurrentRoundFields] = React.useState([]);\n\n    const handleClose = () => {\n        props.setOpen(false);\n        setSubmission(null);\n        setKeys([]);\n    };\n\n    React.useEffect(() => {\n        event.rounds.forEach(round => {\n            if (round.title === props.submission.title) {\n                setCurrentRoundFields(round.fields);\n            }\n        });\n        if(props.submission !== null){\n            if (props.submission.submission_form !== null) {\n                setKeys(Object.keys(props.submission.submission_form));\n                setSubmission(props.submission.submission_form);\n                setLoading(false);\n            }\n        }\n        // eslint-disable-next-line\n    }, [props,event])\n\n\n    return (\n        <div>\n        \n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                scroll=\"paper\"\n                aria-labelledby=\"submission\"\n                fullWidth={true}\n                maxWidth=\"md\"\n                PaperProps={{\n                    style: {\n                        backgroundColor: theme.palette.secondary.main,\n                        boxShadow: 'none',\n                    },\n                }}\n                classes={{ paper: classes.dialog }}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">{props.name}<div className={classes.icons}>\n                    <IconButton aria-label=\"share\" >\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div></DialogTitle>\n               \n                <DialogContent dividers={true}>\n                <CircularLoading loading={loading}></CircularLoading>\n                    {submission !== null && keys.length !== 0 && <DialogContentText\n                        id=\"description\"\n                        tabIndex={-1}\n                    >\n                        {\n                            keys.map((value, index) => {\n                                if (currentRoundFields[index].field === \"file\") {\n                                    return <React.Fragment>\n                                        <Typography>{value}</Typography>\n                                        <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${submission[value]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                                    </React.Fragment>\n                                }\n                                return <React.Fragment>\n                                    <Typography>{value}</Typography>\n                                    <Typography variant=\"h4\" color=\"primary\">\n                                    <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{submission[value]}\n                            </Linkify></Typography>\n                                </React.Fragment>\n                            })\n                        }\n                    </DialogContentText>}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SubmissionShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    // const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        if(props.reg){\n            setTitle(props.reg.share_link)\n        }\n    }, [props])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n    const handleDialogClose = () => {\n        props.setOpen(false);\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\">\n                {/* <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle> */}\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Share Link\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDialogClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, Box, } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport EventSubmissionDialog from './EventSubmissionDialog';\nimport SubmissionShareDialog from './SubmissionShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.secondary.main,\n        marginBottom: theme.spacing(2),\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        // marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root1: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: \"rgb(0, 189, 170,0.2)\",\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    grid: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        maxWidth: '99%'\n\n    },\n    roundButton: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1)\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n}));\n\nfunction EventAdminSubmissionPanel(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const token = localStorage.getItem('token');\n    const [registrations, setRegistrations] = React.useState([]);\n    const [teams, setTeams] = React.useState([]);\n    const [showMembers, setShowMembers] = React.useState(false);\n    const [teamIndex, setTeamIndex] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [viewSubmissionDialog, setViewSubmissionDialog] = React.useState(false);\n    const [selectedSubmission, setSelectedSubmission] = React.useState(null);\n    const [selectedTeam, setSelectedTeam] = React.useState(null);\n    const [shareDialogOpen,setShareDialogOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        if (event.isTeamed) {\n            getTeamData();\n        }\n        else {\n            getIndividualsData();\n        }\n        // eslint-disable-next-line\n    }, [event])\n\n    const getIndividualsData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setRegistrations(value);\n                    setLoading(false);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const getTeamData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_teams?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setTeams(value);\n                    setLoading(false);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const handleViewMembersClick = (v) => () => {\n\n        if (showMembers) {\n            if (teamIndex !== {}) {\n                if (teamIndex === v) {\n                    setShowMembers(false);\n                    setTeamIndex({});\n                }\n                else {\n                    setTeamIndex(v);\n                }\n            }\n            else {\n                setShowMembers(false);\n                setTeamIndex({});\n            }\n        }\n        else {\n            setShowMembers(true);\n            setTeamIndex(v);\n        }\n    }\n\n    const handleRoundClickButton = (sub, t) => () => {\n        setSelectedSubmission(sub);\n        setSelectedTeam(t);\n        setViewSubmissionDialog(true);\n    }\n\n    const handleAccessButton = (is_teamed, user_id, title,team_id) => () => {\n        setLoading(true);\n        var data = new FormData()\n        var payload ;\n        if(is_teamed){\n            payload = {\n                is_teamed: is_teamed,\n                event_id: event._id,\n                user_id: user_id,\n                round_title: title,\n                team_id: team_id\n            }\n        }\n        else{\n            payload = {\n                is_teamed: is_teamed,\n                event_id: event._id,\n                user_id: user_id,\n                round_title: title\n            }\n        }\n        \n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/give_access_round`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then(res => {\n            if (res.status === 200) {\n                res.json().then(value => {\n                    setLoading(false);\n                    if (event.isTeamed) {\n                        getTeamData();\n                    }\n                    else {\n                        getIndividualsData();\n                    }\n\n                })\n\n            }\n        })\n    }\n\n\n    const handleRemoveAccessButton = (is_teamed, user_id, title,team_id) => () => {\n        setLoading(true);\n        var data = new FormData()\n        var payload ;\n        if(is_teamed){\n            payload = {\n                is_teamed: is_teamed,\n                event_id: event._id,\n                user_id: user_id,\n                round_title: title,\n                team_id: team_id\n            }\n        }\n        else{\n            payload = {\n                is_teamed: is_teamed,\n                event_id: event._id,\n                user_id: user_id,\n                round_title: title\n            }\n        }\n        \n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/remove_access_round`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then(res => {\n            if (res.status === 200) {\n                res.json().then(value => {\n                    setLoading(false);\n                    if (event.isTeamed) {\n                        getTeamData();\n                    }\n                    else {\n                        getIndividualsData();\n                    }\n\n                })\n\n            }\n        })\n    }\n\n    const handleShareButtonClick = (v) => () => {\n        setSelectedTeam(v);\n        setShareDialogOpen(true)\n    }\n\n    return (\n        <div>\n            <div className={classes.progress}>\n                <Fade\n                    in={loading}\n                    unmountOnExit>\n                    <CircularProgress />\n                </Fade>\n            </div>\n            <Typography>All Submissions</Typography>\n            {\n                teams.map(v => {\n                    return <Grid container component=\"main\" className={classes.grid} >\n                        <Grid item xs={12} md={6}>\n                            <Box className={classes.root0}>\n                                <Box className={classes.adminDetails}>\n                                    <Box>\n                                        <Avatar className={classes.avatar} alt={v.team_name}>{v.team_name[0]}</Avatar>\n                                    </Box>\n                                    <Box>\n                                        <Box>\n                                            <Typography variant=\"h5\">{v.team_name}</Typography>\n                                        </Box>\n                                        <Box>\n                                            <Typography color=\"textSecondary\" variant=\"body2\">{v.description}</Typography>\n                                            {\n                                                showMembers && v === teamIndex && <div>\n                                                    <Typography color=\"textSecondary\" variant=\"body2\">Submissions</Typography>\n                                                    {v.submissions.map((value, index) => {\n                                                        return <React.Fragment>\n                                                            <Button onClick={handleRoundClickButton(value, v)} variant=\"outlined\" className={classes.roundButton}>\n                                                                {value.title}\n                                                            </Button>\n                                                            {!value.submission_access && <Button disabled={loading} onClick={handleAccessButton(true, v.user_id, value.title,v._id)}>Give Access</Button>}\n                                                            {value.submission_access && <Button disabled={loading} onClick={handleRemoveAccessButton(true, v.user_id, value.title,v._id)}>Remove Access</Button>}\n                                                            <br></br>\n                                                        </React.Fragment>\n                                                    })}\n                                                </div>\n                                            }\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                            <Button disabled={loading} onClick={handleViewMembersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide\" : \"View\"}</Button>\n                                <Button disabled={loading} onClick={handleShareButtonClick(v)}>Share</Button>\n                            </Box>\n                            <Box>\n                                {showMembers && v === teamIndex && <div>\n                                    <Typography color=\"textSecondary\" variant=\"body2\">Members</Typography>\n                                    {\n                                        v.members.map((value, index) => {\n                                            return <TeamMemberListItem admin={false} event={props.event} id={v} user_id={value}></TeamMemberListItem>\n                                        })\n                                    }\n                                </div>}\n                            </Box>\n                        </Grid>\n                    </Grid>\n                })\n            }\n            {\n                registrations.map((v, index) => {\n                    return <Grid container component=\"main\" className={classes.grid} >\n                        <Grid item xs={12} md={6}>\n                            <Box className={classes.root0}>\n                                <Box className={classes.adminDetails}>\n                                    <Box>\n                                        <Avatar className={classes.avatar} alt={v.data.Name}>{v.data.Name[0]}</Avatar>\n                                    </Box>\n                                    <Box>\n                                        <Box>\n                                            <Typography variant=\"h5\">{v.data.Name}</Typography>\n                                        </Box>\n                                        <Box>\n                                            <Typography color=\"textSecondary\" variant=\"body2\"> </Typography>\n                                            {\n                                                showMembers && v === teamIndex && <div>\n                                                    <Typography color=\"textSecondary\" variant=\"body2\">Submissions</Typography>\n                                                    {v.submissions.map((value, index) => {\n                                                    \n                                                        return <React.Fragment>\n                                                            <Button onClick={handleRoundClickButton(value, v)} variant=\"outlined\" className={classes.roundButton}>\n                                                                {value.title}\n                                                            </Button>\n                                                            {!value.submission_access && <Button disabled={loading} onClick={handleAccessButton(false, v.user_id, value.title)}>Give Access</Button>}\n                                                            {value.submission_access && <Button disabled={loading} onClick={handleRemoveAccessButton(false, v.user_id, value.title,v._id)}>Remove Access</Button>}\n                                                            <br></br>\n                                                        </React.Fragment>\n                                                    })}\n                                                </div>\n                                            }\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                <Button disabled={loading} onClick={handleViewMembersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide\" : \"View\"}</Button>\n                                <Button disabled={loading} onClick={handleShareButtonClick(v)}>Share</Button>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                })\n            }\n            {viewSubmissionDialog && event.isTeamed && <EventSubmissionDialog\n                event={event}\n                reg={selectedTeam}\n                name={selectedTeam && selectedTeam.team_name}\n                submission={selectedSubmission}\n                open={viewSubmissionDialog}\n                setOpen={setViewSubmissionDialog}>\n\n            </EventSubmissionDialog>}\n            {viewSubmissionDialog && !event.isTeamed && <EventSubmissionDialog\n                event={event} reg={selectedTeam}\n                name={selectedTeam && selectedTeam.data.Name}\n                submission={selectedSubmission}\n                open={viewSubmissionDialog}\n                setOpen={setViewSubmissionDialog}>\n\n            </EventSubmissionDialog>}\n            {\n                <SubmissionShareDialog open={shareDialogOpen} setOpen={setShareDialogOpen} reg={selectedTeam}></SubmissionShareDialog>\n            }\n        </div>\n    );\n}\nexport default EventAdminSubmissionPanel;","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { Typography } from '@material-ui/core';\n\nimport AuthContext from '../AuthContext';\n// import WebSocketContext from '../WebSocketContext';\n\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     alignItems: \"center\",\n//     backgroundColor: theme.palette.secondary.main,\n//     marginBottom: theme.spacing(2),\n\n//   },\n\n// }));\n\n\n\n\nfunction ModeratorListItem(props) {\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    //   const classes = useStyles();\n    const event = props.event;\n    const [memberDetails, setMemberDetails] = React.useState({});\n\n    React.useEffect(() => {\n        fetchAll()\n        // eslint-disable-next-line\n    }, [props])\n\n    const fetchAll = () => {\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_member_details?id=${props.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n\n                    setMemberDetails(value);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    const handleRemoveButton = () => {\n        if (props.type === \"moderator\") {\n            // const d = new Date();\n            var data = new FormData();\n            data = JSON.stringify({\n                event_id: event._id,\n                moderator_id: props.user_id\n            });\n            // console.log(data);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/remove_moderator`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then((response) => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        props.setEvent(value.event);\n\n                    })\n                }\n            })\n        }\n        else {\n            // const d = new Date();\n            var data2 = new FormData();\n            data2 = JSON.stringify({\n                event_id: event._id,\n                blocked_user_id: props.user_id\n            });\n            // console.log(data);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/unblock_chat_for_user`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n            }).then((response) => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        props.setEvent(value.event);\n\n                    })\n                }\n            })\n        }\n\n    }\n\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar>\n                    <Avatar alt={memberDetails.name} src={memberDetails.user_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${memberDetails.user_pic}` : \"abc.jpg\"} />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n                primary={props.id === props.user_id ? memberDetails.name + \" (Team Leader)\" : memberDetails.name}\n                secondary={memberDetails.college}\n            />\n            {currentUser.user_id === event.user_id && <IconButton onClick={handleRemoveButton} edge=\"end\" aria-label=\"delete\">\n                <RemoveCircleIcon></RemoveCircleIcon> <Typography>{props.type === \"moderator\" ? \"Remove\" : \"UnBlock\"}</Typography>\n            </IconButton>}\n        </ListItem>\n    );\n}\n\nexport default ModeratorListItem;\n\n","import React from 'react';\nimport { Button, Typography, TextField, Divider, } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import PeopleIcon from '@material-ui/icons/People';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n// import WebSocketContext from '../WebSocketContext';\n// import AuthContext from '../AuthContext';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport ModeratorListItem from '../Components/ModeratorListItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n// import AuthContext from '../AuthContext';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(0),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n}));\n\nfunction AdminSettingsPanel(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n    const { children, value, url, index, ...other } = props;\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const [loading, setLoading] = React.useState(false);\n    // const [moderators, setModerators] = React.useState([]);\n    const [allUsers, setAllUsers] = React.useState([]);\n    const [selectedUser,setSelectedUser] = React.useState(null);\n    const [selecteedBlockUser,setSelectedBlockUser] = React.useState(null);\n    const [registeredUsers,setRegisteredUsers] = React.useState([]);\n\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // const { webSocketContext } = React.useContext(WebSocketContext);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        getData();\n        // eslint-disable-next-line\n    }, [])\n\n    function handleClose() {\n\n        setState({ ...state, open: false });\n    }\n\n    const getData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_users`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // setTeams(value);\n                    // console.log(value);\n                    setAllUsers(value);\n                    setLoading(false);\n                })\n            })\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_reg_users_for_blocking?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // setTeams(value);\n                    // console.log(value);\n                    // setAllUsers(value);\n                    setRegisteredUsers(value);\n                    setLoading(false);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    const handleAddModeratorChange = (event,value) => {\n        // console.log(value)\n        setSelectedUser(value);\n        \n    }\n\n    const handleAddButton = () => {\n        setLoading(true);\n        if(selectedUser === null || selectedUser === undefined){\n\n        }\n        else{\n            try{\n                var data = new FormData();\n                const payload = {\n                    event_id: event._id,\n                    moderator_id: selectedUser.user_id\n                }\n                data = JSON.stringify(payload)\n                fetch(process.env.REACT_APP_API_URL+\"/api/event/add_moderator\",{\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    setLoading(false);\n                    if(response.status === 200){\n                        response.json().then(value => {\n                            setSelectedUser(null);\n                            props.setEvent(value.event)\n                        })\n                    }\n                })\n            }\n            catch (e){\n                console.log(e)\n            }\n        }\n    }\n\n    const handleBlockUserChange = (e,value) => {\n        setSelectedBlockUser(value);\n    }\n\n    const handleBlockUser = () => {\n        setLoading(true);\n        if(selecteedBlockUser=== null || selecteedBlockUser === undefined){\n\n        }\n        else{\n            try{\n                var data = new FormData();\n                const payload = {\n                    event_id: event._id,\n                    blocked_user_id: selecteedBlockUser.user_id\n                }\n                data = JSON.stringify(payload)\n                fetch(process.env.REACT_APP_API_URL+\"/api/event/block_chat_for_user\",{\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    setLoading(false);\n                    if(response.status === 200){\n                        response.json().then(value => {\n                            setSelectedUser(null);\n                            props.setEvent(value.event)\n                        })\n                    }\n                    \n                })\n            }\n            catch (e){\n                console.log(e)\n            }\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={autoHide}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    >\n                        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    \n                    <div>\n                        <Typography>Add Moderator</Typography>\n                        <Autocomplete\n                            fullWidth\n                            id=\"combo-box-demo\"\n                              options={allUsers}\n                            //   value={selectedUser.name+\",\"+selectedUser.username }\n                              getOptionLabel={(option) => option.name+\",\"+option.username}\n                              onChange={handleAddModeratorChange}\n                              autoComplete=\"off\"\n                            renderInput={(params) => <TextField fullWidth autoComplete=\"off\" label=\"User Name\" margin=\"dense\" {...params} placeholder=\"Enter User Name\" />}\n                        />\n                        <Button variant=\"contained\" onClick={handleAddButton} disabled={loading} style={{margin:\"10px\",borderRadius:\"15px\"}}>Add</Button>\n                    </div>\n                    <Typography style={{marginTop: \"20px\"}}>Moderators</Typography>\n                    <div>\n                    {\n                        event.moderators.map((m_id,index)=>{\n                            return <ModeratorListItem event = {props.event} type=\"moderator\" setEvent={props.setEvent} user_id={m_id}></ModeratorListItem>\n                        })\n                    }\n                    </div>\n                    <Divider style={{margin:\"30px 10px\",height:\"5px\"}}></Divider>\n                    <div>\n                        <Typography>Block User from Chat</Typography>\n                        <Autocomplete\n                            fullWidth\n                            id=\"combo-box-demo\"\n                              options={registeredUsers}\n                            //   value={selectedUser.name+\",\"+selectedUser.username }\n                              getOptionLabel={(option) => option.name+\",\"+option.username}\n                              onChange={handleBlockUserChange}\n                              autoComplete=\"off\"\n                            renderInput={(params) => <TextField fullWidth autoComplete=\"off\" label=\"User Name\" margin=\"dense\" {...params} placeholder=\"Enter User Name\" />}\n                        />\n                        <Button variant=\"contained\" onClick={handleBlockUser} disabled={loading} style={{margin:\"10px\",borderRadius:\"15px\"}}>Block</Button>\n                    </div>\n                    <Typography style={{marginTop: \"20px\"}}>Blocked Users</Typography>\n                    <div>\n                    {\n                        event.chat_blocked_users.map((m_id,index)=>{\n                            return <ModeratorListItem event = {props.event} type=\"blocked_user\" setEvent={props.setEvent} user_id={m_id}></ModeratorListItem>\n                        })\n                    }\n                    </div>\n                    <Typography style={{margin:\"10px 0px\"}}>Any Queries contact us at support@ellipseapp.com</Typography>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AdminSettingsPanel;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\n// import Box from '@material-ui/core/Box';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport AuthContext from '../AuthContext';\nimport AnnouncementPanel from '../Components/EventsAnnouncementsPanel';\nimport AnnouncementEditPanel from '../Components/AnnouncementsEditPanel';\nimport AboutPanel from '../Components/AboutEventPanel';\nimport TimeLinePanel from '../Components/EventTimeLinePanel';\nimport DashboardPanel from '../Components/DashboardPanel';\nimport ChatPanel from '../Components/EventDetailsChatPanel';\nimport EventPost from './EventEdit';\nimport CertificateDashboard from '../Components/AdminCertificateDashboard';\nimport EventSubmissionPanel from '../Components/EventSubmissionPanel';\nimport EventsTeamPanel from '../Components/EventsTeamPanel';\nimport EventDetailsTeamPanel from '../Components/EventDetailsTeamPanel';\nimport EventAdminSubmissionPanel from '../Components/EventAdminSubmissionPanel';\nimport EventShareDialog from '../Components/EventShareDialog';\nimport AdminSettingsPanel from '../Components/AdminSettingsPanel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { setLogLevel } from 'firebase';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    appBar: {\n        position: 'sticky',\n        top: 64,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        position: 'sticky',\n        top: 64,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        position: 'sticky',\n\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        backgroundColor: theme.palette.secondary.main,\n        // position:'sticky',\n        top: 64,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: drawerWidth,\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(0.5),\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none'\n        // },\n        // color: theme.palette.grey[500],\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    localStorage.removeItem('eventid')\n    const token = localStorage.getItem('token');\n    const id = props.match.params.eventId;\n    const t = localStorage.getItem('theme');\n    const [loading, setLoading] = React.useState(false);\n\n    const [drawerOpen, setDrawerOpen] = React.useState(true);\n    const [event, setEvent] = React.useState({});\n    const [adminAccess, setAdminAccess] = React.useState(false);\n    const [moderatorAccess, setModeratorAcces] = React.useState(false);\n    const [chatAcess, setChatAcess] = React.useState(false);\n    const [teamAccess, setTeamAccess] = React.useState(false);\n    const { currentUser } = React.useContext(AuthContext);\n    const [subIndexValue, setSubIndexValue] = React.useState(0);\n    const [selected, setSelected] = React.useState({\n        infoSelected: true,\n        dashBoardSelected: false,\n        timilineSelected: false,\n        announcementSelected: false,\n        settingsSelected: false,\n        editEventSelected: false,\n        chatSelected: false,\n        certificateSelected: false,\n        submissionSelected: false,\n        participationSelected: false,\n        teamsSelected: false,\n    });\n\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n\n    React.useEffect(() => {\n        setLoading(true);\n        fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(val => {\n                    setEvent(val.event);\n                    // console.log(val.event.isTeamed)\n                    if (val.event.isTeamed && val.event.registered) {\n                        setTeamAccess(true);\n                    }\n                    if (val.event.registered || val.event.reg_mode !== \"form\") {\n                        setChatAcess(true);\n\n                    } else if (val.event.user_id === currentUser.user_id) {\n                        setChatAcess(true);\n                        setTeamAccess(false);\n                    }\n                    else {\n                        setChatAcess(false)\n                    }\n                    if (val.event.moderators.includes(currentUser.user_id)) {\n                        setModeratorAcces(true);\n                        setChatAcess(true);\n                    }\n                    setLoading(false);\n\n                })\n            }\n            else {\n\n            }\n\n        })\n        // eslint-disable-next-line\n    }, [token, id, currentUser])\n\n    React.useEffect(() => {\n        if (event.user_id !== undefined && currentUser.user_id !== undefined) {\n            if (event.user_id === currentUser.user_id) {\n                // console.log(event);\n                // console.log(currentUser)\n                setAdminAccess(true);\n            }\n        }\n\n    }, [currentUser, event])\n\n\n\n    const handleDrawerOpen = () => {\n        setDrawerOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setDrawerOpen(false);\n    };\n\n    function handleClose() {\n        props.history.goBack()\n\n    }\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    const handleAnyClick = (selectedOption) => () => {\n        const defaultValues = {\n            infoSelected: false,\n            dashBoardSelected: false,\n            timilineSelected: false,\n            announcementSelected: false,\n            settingsSelected: false,\n            editEventSelected: false,\n            chatSelected: false,\n            certificateSelected: false,\n            submissionSelected: false,\n            participationSelected: false,\n            teamsSelected: false\n        }\n        defaultValues[selectedOption] = true;\n        setSelected(defaultValues);\n    }\n\n\n\n\n    const {\n        infoSelected,\n        dashBoardSelected,\n        timilineSelected,\n        announcementSelected,\n        settingsSelected,\n        editEventSelected,\n        chatSelected,\n        certificateSelected,\n        submissionSelected,\n        participationSelected, teamsSelected } = selected;\n\n    function handleRegClick() {\n        props.history.push('/event/register/' + event._id);\n        // props.handleReg(event._id);\n\n    }\n\n    const handleSubIndexChange = (event, newValue) => {\n        setSubIndexValue(newValue);\n    };\n\n    // console.log(event.rounds.length)\n    return (\n        <div>\n\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                color=\"secondary\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: drawerOpen,\n                })}\n                elevation={0}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography>{event.name}</Typography>\n                    <div className={classes.icons}>\n                        <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                            <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon fontSize=\"large\" />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n                {event.isTeamed &&\n                    teamAccess &&\n                    participationSelected && <Paper className={classes.root2}>\n                        <Tabs\n                            value={subIndexValue}\n                            onChange={handleSubIndexChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"Submissions\" />\n                            <Tab label=\"Your Team\" />\n                            <Tab label=\"Team Chat\" />\n                        </Tabs>\n                    </Paper>}\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={drawerOpen}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem button onClick={handleAnyClick(\"infoSelected\")} selected={infoSelected}>\n                        <ListItemIcon >\n                            <InfoIcon color=\"primary\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"About\" />\n                    </ListItem>\n                    <ListItem button onClick={handleAnyClick(\"timilineSelected\")} selected={timilineSelected}>\n                        <ListItemIcon>\n                            <TimelineIcon color=\"primary\"></TimelineIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Schedule\" />\n                    </ListItem>\n                    <ListItem button onClick={handleAnyClick(\"announcementSelected\")} selected={announcementSelected}>\n                        <ListItemIcon>\n                            <AnnouncementIcon color=\"primary\"></AnnouncementIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Announcements\" />\n                    </ListItem>\n                    <ListItem button onClick={handleAnyClick(\"chatSelected\")} selected={chatSelected}>\n                        <ListItemIcon>\n                            <TelegramIcon color=\"primary\"></TelegramIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Chat\" />\n                    </ListItem>\n                    {!adminAccess && <ListItem button onClick={handleAnyClick(\"participationSelected\")} selected={participationSelected}>\n                        <ListItemIcon>\n                            <GroupWorkIcon color=\"primary\"></GroupWorkIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Participation\" />\n                    </ListItem>}\n                </List>\n                <Divider />\n                {\n                    adminAccess && <List>\n                        <ListItem button onClick={handleAnyClick(\"dashBoardSelected\")} selected={dashBoardSelected}>\n                            <ListItemIcon >\n                                <DashboardIcon color=\"primary\" />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dashboard\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"submissionSelected\")} selected={submissionSelected}>\n                            <ListItemIcon>\n                                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Submissions\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"teamsSelected\")} selected={teamsSelected}>\n                            <ListItemIcon>\n                                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Teams\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"editEventSelected\")} selected={editEventSelected}>\n                            <ListItemIcon>\n                                <EditIcon color=\"primary\"></EditIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Edit Event\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"certificateSelected\")} selected={certificateSelected}>\n                            <ListItemIcon>\n                                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Certificates\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"settingsSelected\")} selected={settingsSelected}>\n                            <ListItemIcon>\n                                <SettingsIcon color=\"primary\"></SettingsIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Settings\" />\n                        </ListItem>\n                    </List>\n                }\n                {\n                    moderatorAccess && <List>\n                        <ListItem button onClick={handleAnyClick(\"dashBoardSelected\")} selected={dashBoardSelected}>\n                            <ListItemIcon >\n                                <DashboardIcon color=\"primary\" />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dashboard\" />\n                        </ListItem>\n                    </List>\n                }\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: drawerOpen,\n                })}\n            >\n                <div className={classes.progress}>\n                    <Fade\n                        in={loading}\n                        unmountOnExit>\n                        <CircularProgress />\n                    </Fade>\n                </div>\n                {/* <div className={classes.drawerHeader} /> */}\n                {/* <Typography className={classes.eventName} align='center' variant=\"h4\" style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>{event.name}</Typography> */}\n                {\n                    infoSelected && !loading && event != null && <AboutPanel event={event}></AboutPanel>\n                }\n                {\n                    editEventSelected && event != null && <EventPost event={event} ></EventPost>\n                }\n                {\n                    timilineSelected && event != null && <TimeLinePanel event={event}></TimeLinePanel>\n                }\n                {\n                    dashBoardSelected && event != null && <DashboardPanel event={event}></DashboardPanel>\n                }\n                {\n                    chatSelected && event != null && chatAcess && <div className={classes.chat} ><ChatPanel user={currentUser} open={drawerOpen} event={event}></ChatPanel></div>\n                }\n                {\n                    adminAccess && announcementSelected && event != null && <AnnouncementEditPanel event={event}></AnnouncementEditPanel>\n                }\n                {\n                    !adminAccess && announcementSelected && event != null && <AnnouncementPanel event={event}></AnnouncementPanel>\n                }\n                {\n                    event.isTeamed &&\n                    teamAccess &&\n                    participationSelected && !adminAccess &&\n                    <EventsTeamPanel subIndexValue={subIndexValue} value={4} index={4} open={drawerOpen} event={event}></EventsTeamPanel>\n                }\n                {!event.isTeamed && event.rounds && event.rounds.length === 0 &&\n                    participationSelected && !adminAccess && <Typography>This event don't have participation in this platform. Contact Event organizer through chat for more details</Typography>\n\n                }\n                {\n                    !event.isTeamed && participationSelected && !adminAccess && <EventSubmissionPanel individual={true} event={event}></EventSubmissionPanel>\n                }\n                {\n                    adminAccess && certificateSelected && event != null && <CertificateDashboard event={event}></CertificateDashboard>\n                }\n                {\n                    infoSelected && event.reg_mode === \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                        {event.registered ? \"Registered\" : \"Register\"}\n                    </Button>\n                }\n                {\n                    infoSelected && event.reg_mode !== \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                    </Button>\n                }\n                {\n                    adminAccess && settingsSelected && <AdminSettingsPanel event={event} setEvent={setEvent}></AdminSettingsPanel>\n                }\n                {\n                    adminAccess && teamsSelected && <EventDetailsTeamPanel event={event}></EventDetailsTeamPanel>\n                }\n                {\n                    adminAccess && submissionSelected && <EventAdminSubmissionPanel event={event}></EventAdminSubmissionPanel>\n                }\n            </main>\n            <EventShareDialog\n                event={event}\n                open={shareDialogOpen}\n                handleClose={handleShareClose}></EventShareDialog>\n        </div>\n    );\n}","import React from 'react';\nimport Linkify from 'react-linkify';\n\n//materialui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\n//other componennt imports\nimport ImageDialog from '../Components/ImageDialog';\nimport LoadingIndicator from '../Components/LoadingIndicator';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root2: {\n        margin: theme.spacing(2),\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: theme.spacing(2)\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    root4: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root5: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    root6: {\n        paddingLeft: theme.spacing(2)\n    }\n}));\n\nexport default function ViewSubmissionPage(props) {\n    const classes = useStyles();\n    const id = props.match.params.sub_id;\n\n    const [event, setEvent] = React.useState({});\n    const [users, setUsers] = React.useState({});\n    const [userFound, setUserFound] = React.useState(true);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    const [isTeamed, setIsTeamed] = React.useState(false);\n    const [submission, setSubmission] = React.useState(null);\n    const [roundInfo, setRoundInfo] = React.useState(null);\n    const [reg, setReg] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        setLoading(true);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/get_submission?id=${id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    if (value.event.isTeamed) {\n                        setIsTeamed(true);\n                    }\n                    setUsers(value.users);\n                    setEvent(value.event);\n                    setReg(value.submission);\n                    setSubmission(value.submission.submissions);\n                    setRoundInfo(value.rounds_info);\n                    setLoading(false);\n                })\n            }\n            else {\n                setUserFound(false);\n                setLoading(false);\n            }\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    const handleImageDialogClose = () => {\n        setImageDialogOpen(false);\n    }\n    const handleImageDialogOpen = () => {\n        setImageDialogOpen(true);\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <LoadingIndicator loading={loading}></LoadingIndicator>\n            {!loading && userFound && <div>\n                <Box >\n                    <Box className={classes.root5}>\n                        <Typography variant=\"h5\" style={{ marginBottom: \"7px\" }}>{event.name}</Typography>\n                    </Box>\n                    <Box className={classes.root5}>\n                        <img\n                            onClick={handleImageDialogOpen}\n                            style={{ width: '240px', height: '180px' }}\n                            alt=\"event poster\"\n                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n                        </img>\n                    </Box>\n                </Box>\n                {isTeamed && <Box className={classes.root6}>\n                    <Typography>Team Name: {reg.team_name}</Typography>\n                </Box>}\n                <Box className={classes.root6}>\n                    <Typography>Members</Typography>\n                </Box>\n\n                {users.length > 0 && users.map((value, index) => {\n                    return <ListItem>\n                        <ListItemAvatar>\n                            <Avatar>\n                                <Avatar alt={value.name} src={value.profile_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${value.profile_pic}` : \"abc.jpg\"} />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={value.name}\n                            secondary={value.college_name}\n                        />\n\n                    </ListItem>\n                })\n                }\n                {\n                    userFound && roundInfo && submission && submission !== null && <Box className={classes.root2}>\n                        <Typography variant=\"h5\" style={{ marginBottom: \"5px\" }}>Submissions</Typography>\n                        {\n                            submission.map(value => {\n                                if (value.submission_form) {\n                                    const ks = Object.keys(value.submission_form);\n                                    return <React.Fragment>\n                                        <Typography>{value.title}</Typography>\n                                        {\n                                            ks.map((val, index) => {\n                                                if (roundInfo[0].fields[index].field === \"file\") {\n                                                    return <React.Fragment>\n                                                        <Typography>{val}</Typography>\n                                                        <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${value[val]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                                                    </React.Fragment>\n                                                }\n                                                return <React.Fragment>\n                                                    <Typography>{val}</Typography>\n                                                    <Typography variant=\"h4\" color=\"primary\">\n                                                        <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\n                                                            <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                                {decoratedText}\n                                                            </a>\n                                                        )}\n                                                        >{value.submission_form[val]}\n                                                        </Linkify>\n                                                    </Typography>\n                                                </React.Fragment>\n                                            })\n                                        }\n                                    </React.Fragment>\n                                }\n                                else {\n                                    return <React.Fragment>\n                                        <Typography>{value.title}</Typography>\n                                        <Typography color=\"textSecondary\">Team has no submissions</Typography>\n                                    </React.Fragment>\n                                }\n\n                            })\n                        }\n                    </Box>\n                }\n            </div>}\n            {!userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                    <CancelIcon fontSize=\"large\"></CancelIcon>\n                    <Typography variant=\"h4\"> NOT FOUND</Typography>\n                </Box>\n            </Box>}\n            <ImageDialog\n                event={event}\n                open={imageDialogOpen}\n                handleClose={handleImageDialogClose}>\n            </ImageDialog>\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nimport Login from './Pages/signin';\nimport SignUp from './Pages/signup';\nimport ForgotPassword from './Pages/ForgotPassword';\nimport { AuthProvider } from \"./Auth\";\nimport OTPVer from './Pages/otpverification';\nimport UserInfo from './Pages/UpdateUserInfo';\nimport Layout from './Pages/Layout';\nimport CalenderPanel from './Pages/CalenderPanel';\nimport EventsTabPanel from './Pages/EventsTabpanel';\nimport ProfileTabPanel from './Pages/ProfileTabpanel';\nimport EventPostForm from './Pages/EventPostForm';\nimport ChatPage from './Pages/ChatPage';\nimport EventRegisterForm from './Pages/EventRegistrationform';\nimport ExplorePanel from './Pages/ExplorePanel';\nimport UnregisteredPage from './Pages/UnregisteredPage';\nimport NetworkDetector from './NetworkDetector';\nimport VerifyCertificate from './Pages/VerifyCertificate';\nimport NewHomePage from './Pages/HomePage';\nimport EventDetails from './Pages/EventDetails';\nimport ViewSubmissionPage from './Pages/ViewSubmission';\n\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={NewHomePage} />\n            <Route exact path=\"/signin\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route exact path=\"/userinfo\" component={UserInfo}></Route>\n            <Route exact path=\"/otpverification\" component={OTPVer}></Route>\n            <Route exact path=\"/un/event/:eventId\" component={UnregisteredPage}></Route>\n            <Route exact path=\"/submission/:sub_id\" component={ViewSubmissionPage}></Route>\n            {/* <Route exact path=\"/event/:eventId\" component={EventDetails} /> */}\n            {/* <Route exact path=\"/resetforgotpassword\" component ={ForgotPassword2}></Route> */}\n\n            <Route exact path=\"/verify_certificate/:id\" component={VerifyCertificate}></Route>\n            <Layout>\n              <Route path=\"/home\" component={EventsTabPanel}></Route>\n              <Route exact path=\"/events\" component={CalenderPanel}></Route>\n              <Route exact path=\"/post\" component={EventPostForm}></Route>\n              <Route exact path=\"/profile\" component={ProfileTabPanel}></Route>\n              <Route exact path=\"/chat\" component={ChatPage}></Route>\n\n              <Route exact path=\"/event/register/:eventId\" component={EventRegisterForm} />\n              <Route exact path=\"/yourevents\" component={ExplorePanel}></Route>\n              <Route exact path=\"/event/:eventId\" component={EventDetails} />\n\n            </Layout>\n          </Switch>\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\nexport default NetworkDetector(App);\n","\n\nimport React, { Component } from 'react';\n\nexport default function network(ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      if (condition === 'online') {\n        const webPing = setInterval(\n          () => {\n            fetch('//google.com', {\n              mode: 'no-cors',\n              })\n            .then(() => {\n              this.setState({ isDisconnected: false }, () => {\n                return clearInterval(webPing)\n              });\n            }).catch(() => this.setState({ isDisconnected: true }) )\n          }, 2000);\n        return;\n      }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div>\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n      type: \"dark\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#000000'\n      },\n      secondary: {\n        main: '#1C1C1E',\n      },\n      background:{\n        default: \"#000000\"\n      }\n    },\n    \n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n      type: \"light\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#ffffff'\n      },\n      secondary: {\n        main: '#e5e5e5'\n      },\n      background:{\n        default: \"#ffffff\"\n      }\n    },\n    \n    \n});\n\nexport {lightTheme,darkTheme};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {lightTheme,darkTheme} from './Components/theme'\nimport { CssBaseline } from '@material-ui/core';\nconst t = localStorage.getItem('theme');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={t === 'light' ? lightTheme: darkTheme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}