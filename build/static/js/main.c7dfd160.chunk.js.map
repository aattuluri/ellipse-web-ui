{"version":3,"sources":["Components/Images/logo.svg","Components/Images/google-play-badge.png","Components/Images/logo300.svg","Components/Images/dashboard.png","Components/Images/profile.png","Components/Images/AdminDashboard.png","Components/Images/certificate.png","Components/Images/certificate_sample.png","Themes/SigninPageStyles.js","Components/copyright.js","Components/HomePageCarousel.js","Pages/signin.js","Themes/SignupPageStyles.js","Pages/signup.js","Pages/ForgotPassword.js","Auth.js","Pages/otpverification.js","Pages/UserInfo.js","Themes/MainHomeStyles.js","Components/EventShareDialog.js","Components/ImageDialog.js","Components/AboutEventPanel.js","Components/EventTimeLinePanel.js","Components/EventsAnnouncementsPanel.js","Components/ChatMessage.js","AuthContext.js","Components/ChatTextField.js","Components/EventsChatPanel.js","Components/EventsDialog.js","EventsContext.js","Components/NotficationsDialog.js","Pages/NavigationBar.js","ActiveEventsContext.js","Pages/Layout.js","Pages/CalenderPanel.js","Components/EventReportDialog.js","Components/EventCard.js","Components/SortLeftPanel.js","Components/MobileSortPanel.js","Components/FeedBackDialog.js","Pages/EventsTabpanel.js","Components/ProfileEventCard.js","Components/ProfilePostedEventsTabPanel.js","Components/ProfileAboutDataBox.js","Components/ProfileAboutTabPanel.js","Components/CertificateCard.js","Components/ProfileCertificateTabPanel.js","Components/MainProfileCard.js","Components/UpdateInfoTabPanel.js","Components/UpdatePasswordTabPanel.js","Components/UpdateProfileDialog.js","Pages/ProfileTabpanel.js","Components/EventPostDetails1.js","Components/EventPostDetails2.js","Components/AddFieldDialog.js","Components/EventPostDetails3.js","Pages/EventPostForm.js","Components/EventDetailsNavigationBar.js","Components/AnnouncementsEditPanel.js","Components/AddAnnouncementForm.js","Components/SendEmailForm.js","Components/DashboardPanel.js","Components/EventDetailsChatPanel.js","Pages/EventEdit.js","Components/AdminCertificateDashboad1.js","Components/AdminCertificateDashboard2.js","Components/AdminCertificateDashboard3.js","Components/AdminCertificateDashboard.js","Pages/EventDetails.js","Pages/EventRegistrationform.js","Pages/ExplorePanel.js","Pages/UnregisteredPage.js","Pages/VerifyCertificate.js","App.js","NetworkDetector.js","Components/theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","height","wrapper","margin","spacing","position","paperRight","flexDirection","alignItems","backgroundColor","palette","secondary","main","padding","paddingBottom","borderRadius","minHeight","breakpoints","down","paperLeft","up","paperimage","avatar","marginTop","primary","form","width","submit","iPhoneImage","title","fontFamily","color","dark","fontWeight","hidden","image","maxHeight","maxWidth","footer","Copyright","Typography","variant","align","Link","href","Date","getFullYear","AutoPlaySwipeableViews","autoPlay","SwipeableViews","tutorialSteps","label","imgPath","Dashboard","Profile","AdminDashboard","Certificate","flexGrow","header","paddingLeft","img","overflow","SwipeableTextMobileStepper","classes","useTheme","React","useState","activeStep","setActiveStep","maxSteps","length","className","axis","direction","index","onChangeIndex","step","enableMouseEvents","map","key","Math","abs","src","alt","Paper","square","elevation","MobileStepper","steps","nextButton","Button","size","onClick","prevActiveStep","disabled","backButton","Alert","props","withRouter","history","open","vertical","horizontal","message","type","autoHide","state","setState","loading","setLoading","token","setToken","isUserVerified","setIsUserVerified","email","setEmail","abortController","AbortController","handleClose","event","reason","a","localStorage","setItem","eventId","getItem","abort","push","FormData","payload2","data2","JSON","stringify","fetch","process","signal","headers","method","body","then","result","json","res","error","preventDefault","target","elements","password","payload","value","data","response","status","isVerified","useremail","to","Fragment","Grid","container","component","CssBaseline","Snackbar","anchorOrigin","autoHideDuration","onClose","severity","item","xs","sm","md","Box","justifyContent","m","p","PhoneImage","rel","GoogleBadge","Avatar","onSubmit","TextField","name","required","fullWidth","id","autoComplete","autoFocus","CircularProgress","HomePageCarousel","fontSize","paper","closeButton","right","top","nameError","setNameError","usernameError","setUserNameError","signupButtonDisabled","setSignupButtonDisabled","replace","fullName","username","terms","checked","val","tok","Container","inputProps","pattern","onInvalid","helperText","onInput","onChange","FormControlLabel","control","Checkbox","justify","mt","otp","setOtp","setPassword","loading2","setLoading2","console","log","nPassword","e","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","useEffect","Provider","seconds","setSeconds","resendEnabled","setresetEnabled","setTimeout","textArea","imageUrl","setImageurl","setImage","colleges","setColleges","gender","designation","collegeId","bio","college_id","append","accept","files","url","URL","createObjectURL","style","Badge","overlap","badgeContent","htmlFor","IconButton","aria-label","sizes","multiline","rows","placeholder","FormControl","InputLabel","Select","native","coll","_id","outline","marginBottom","background","grow","mobileTitle","titleButton","mobileTitleButton","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","borderBottom","transition","transitions","create","sectionDesktop","sectionMobile","tabs","mobiletab","tabPanel","flex_section","flex_col_scroll","rpaper","textAlign","text","light","postButton","EventShareDialog","setTitle","share_link","copyToClipBoard","copyMe","navigator","clipboard","writeText","Dialog","PaperProps","boxShadow","aria-labelledby","DialogTitle","DialogContent","DialogActions","imageBox","dialog","icons","ImageDialog","scroll","aria-describedby","poster_url","alignContent","media","buttonDiv","button","large","tab","adminDetails","AboutEventPanel","other","tags","requirements","timeLabel","setTimeLabel","setAdminDetails","imageDialogOpen","setImageDialogOpen","undefined","user_id","calculateTimeLeft","difference","registration_end_time","timeLeft","start_time","finish_time","days","floor","hours","minutes","setTimeLeft","x","getTimeLabel","cleanup","clearTimeout","timerComponents","Object","keys","forEach","interval","role","lg","description","Chip","event_type","fee_type","event_mode","about","venue","venue_college","fee","profile_pic","college_name","secondaryTail","startDate","endDate","regEndDate","Timeline","TimelineItem","TimelineOppositeContent","toDateString","toLocaleTimeString","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","timiline","root3","root5","CustomizedTimeline","announcements","setAnnouncements","registered","ann","visible_all","date","time","root2","whiteSpace","pos","inline","ChatMessage","userType","setUserType","adminId","ListItem","ListItemAvatar","ListItemText","user_name","componentDecorator","decoratedHref","decoratedText","timeStyle","bottomBar","bottom","left","close","JustifyContent","sendButtonDisabled","setSendButtonDisabled","newmessage","setNewMessage","cl","setCl","clsx","rowsMax","onKeyUp","keyCode","shiftKey","handleSend","sendIcon","textDecorationColor","minWidth","root6","topBar","root4","progress","user","useContext","dialogOpen","setDialogOpen","reference","setReferenece","chatMessages","setChatMessages","counterDate","webSocket","setWebSocket","webConnect","ws","WebSocket","onopen","onmessage","mes","parse","cMes","msg","event_id","onclose","check","scrollIntoView","behavior","readyState","Fade","in","unmountOnExit","List","currentDate","messageDate","userName","user_pic","float","clear","ref","el","d","send","action","now","toISOString","a11yProps","bottomTags","field","dialogContent","EventsDialog","t","setValue","shareDialogOpen","setShareDialogOpen","chatAcess","setChatAcess","reg_mode","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","dividers","handleReg","reg_link","textDecoration","EventsContext","FormDialog","notificationms","setNotifications","handleNotificationClick","n","handleClick","Divider","anchorEl","setAnchorEl","darkThemeSelected","setDarkThemeSelected","searchedEvent","setSearchedEvent","notificationsCount","setNotificationCount","isMenuOpen","Boolean","setOpen","notificationsOpen","setNotificationsOpen","allEvents","tabIndex","parseInt","handleChange","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","Switch","window","location","reload","removeItem","handleeventClick","handleHomeClick","handleProfileClick","handleExploreClick","handleTitleButtonClick","AppBar","Toolbar","Logo","noWrap","Autocomplete","freeSolo","options","getOptionLabel","option","renderInput","params","icon","edge","aria-controls","aria-haspopup","currentTarget","ActiveEventsContext","backdrop","zIndex","drawer","setAllEvents","activeEvents","setActiveEvents","authorized","setAuthorized","userDetailsDone","setUserDetailsDone","verified","sort","b","filter","Backdrop","subRpaper","fab","sideList","CalenderPanel","events","setEvents","selectedEvent","setSelectedEvent","registeredEvents","setRegisteredEvents","y","start","end","handlePostButtonClick","handleRegisterdEventClick","eventBackgroundColor","eventBorderColor","eventClick","info","defaultView","plugins","dayGridPlugin","buttonIcons","Fab","EventReportDialog","desc","setDesc","morePopup","Eventcard","anchorRef","useRef","imageLoaded","setImageLoaded","reportDialogOpen","setReportDialogOpen","current","contains","handleListKeyDown","prevOpen","handleReportClick","handleShareClick","focus","Card","CardHeader","imageDialog","onLoad","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","subheader","CardContent","CardActions","disableSpacing","click","filterTextField","filterButton","SortLeftPanel","handleModeToggle","currentIndex","modeChecked","indexOf","newChecked","splice","setModeChecked","handleFeeToggle","feeChecked","setFeeChecked","utils","DateFnsUtils","DatePicker","format","sortStartDate","handleSortDateChange","sortEndDate","handleEndSortDateChange","paddingTop","labelId","dense","ListItemIcon","disableRipple","RadioGroup","defaultValue","handleSortCollegeChange","Radio","handleSortApplyButton","handlesortDiscardButton","MobileSortPanel","KeyboardButtonProps","collegeName","leftSubPaper","mobileFilterButton","skeleton","feedBackButton","setSortStartDate","setSortEndDate","sortCollegeType","setSortCollegeType","sortedEventsArray","setSortedEventsArray","isFiltered","setIsFiltered","feeSortChecked","setFeeSortChecked","modeSortChecked","setModeSortChecked","filterDialogOpen","setFilterDialogOpen","registerdEvents","feedBackOpen","setFeedBackOpen","dateRangeSortedEvents","sortByDateRange","sortByMode","typeSortedEvents","feeSortedEvents","sortByCost","collegeSortedEvents","sortByCollege","sortByDate","dateSortedEvents","date1","date2","sEvents","sortedEvents","sEvent","getTime","tEvents","sDEvents","sevent","getDate","getMonth","includes","college","handleImageDialogOpen","handleRegistrationButton","Skeleton","animation","EventCard","startTime","endTime","eventMode","eventType","regEndTime","registrationEndTime","feeType","feesType","ImgMediaCard","CardMedia","gutterBottom","handleViewClick","pathname","toUpperCase","ProfilePostsTabPanel","postedEvents","setSellectedEvent","mode","content","ProfileDataBox","setIcon","editIcon","handleEditButton","ProfileAboutDataBox","eventName","setEventName","certificate_status","download","certificate_url","ProfilePostedEventsTabPanel","UpdateInfoTabPanel","setName","setUserName","setBio","setGender","setDesignation","setCollegeName","setCollegeId","collegesName","setCollegesName","imageUpdated","setImageUpdated","v","collegesNames","c","UpdatePasswordTabPanel","cPassword","setCPassword","setNPassword","UpdateProfile","accordion","EventsTabPanel","eOpen","setEOpen","ActiveEvents","UpdateProfileDialog","buttons","AddressForm","startDateError","setStartDateError","endDateError","setEndDateError","regEndDateError","setRegEndDateError","eventTypes","setEventTypes","handleNext","DateTimePicker","minDate","setStartDate","setEndDate","setRegEndDate","setEventMode","setEventType","registrationMode","setSteps","setRegistrationMode","FormLabel","setFeeType","imageName","setImageName","eventTags","setEventTags","setRequirements","r","setAbout","multiple","eventThemes","values","setThemes","renderTags","getTagProps","setPoster","fileName","InputProps","endAdornment","InputAdornment","regLink","setRegLink","regFees","setFees","setParticipantsType","aria-disabled","evemt","setAddressType","setBuilding","building","venueCollege","setVenueCollege","handleBack","setType","selectedOptions","setSelectedOptions","handleAdd","formControl","formgroup","flexWrap","listStyle","chip","fields","selectedFields","setSelectedFields","sName","setFields","handlePost","addingField","fName","FormGroup","onDelete","chipToDelete","appBar","layout","stepper","Checkout","shortDesc","setShortDesc","setendDate","fees","setEventThemes","selectedrequirements","setSelectedRequirements","addressType","setBuildingAdress","organizer","setOrganizer","participantsType","platformDetails","setPlatformDetails","handleEventPost","allFields","oAllowed","venue_type","reg_fields","o_allowed","platform_details","setRegFields","f","handlePostwithoutregFileds","goBack","Stepper","Step","StepLabel","eventPoster","Error","getStepContent","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","toolbar","mixins","MiniDrawer","setUser","handleSignout","dOpen","setDOpen","handleDeleteButton","AnnouncementForm","visibility","setVisibility","SendEmailForm","setContent","emails","buttonsPaper","fixedHeightPaper","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setHeaders","rowValues","setRowValues","selected","setSelected","announcementDialog","setAnnouncementDialog","sendEmailDialog","setSendEmailDialog","firstdata","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","newSelecteds","Email","indeterminate","column","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","textField","setRegFees","regMode","setRegMode","participantType","setVenue","novalidate","getParticipantsList","participants","certificate","maxLength","CertificateSample","ExplorePanel","flexShrink","drawerOpen","drawerClose","overflowX","match","setDrawerOpen","setEvent","adminAccess","setAdminAccess","infoSelected","dashBoardSelected","timilineSelected","announcementSelected","settingsSelected","editEventSelected","chatSelected","certificateSelected","Drawer","chat","canRegister","setCanRegister","userMessage","setUserMessage","formValues","setFormValues","normalFields","setNormalFields","dropDownFields","setDropDownFields","checkboxFields","setCheckBoxFields","radioFields","setRadioFields","dateFields","setDateFields","longDescFields","setLongDescFields","linkFields","setLinkFields","backDropOpen","setBackDropOpen","checkedValues","setCheckedValues","handleLondDescChange","handleradioChange","class","array","i","regEvents","pastEvents","handleEventClick","appbar","UnregisteredPage","DialogContentText","details","setDetails","userFound","setUserFound","participantname","participant_college","event_name","NetworkDetector","ComposedComponent","exact","path","Login","SignUp","ForgotPassword","UserInfo","OTPVer","EventDetails","VerifyCertificate","EventPostForm","ProfileTabPanel","EventRegisterForm","isDisconnected","handleConnectionChange","onLine","webPing","setInterval","clearInterval","catch","this","addEventListener","removeEventListener","Component","darkTheme","createMuiTheme","default","lightTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.c7dfd160.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.50ff3dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-play-badge.1a0c1f51.png\";","module.exports = __webpack_public_path__ + \"static/media/logo300.a7187bbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.fe7183c2.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.945210bd.png\";","module.exports = __webpack_public_path__ + \"static/media/AdminDashboard.5cae4727.png\";","module.exports = __webpack_public_path__ + \"static/media/certificate.1c76872b.png\";","module.exports = __webpack_public_path__ + \"static/media/certificate_sample.987b5a91.png\";","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  paperRight: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    paddingBottom: theme.spacing(4),\n    borderRadius: 30,\n    // height: '80vh',\n    minHeight: '80vh',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(0, 1),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  paperLeft: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(3, 1),\n    },\n    [theme.breakpoints.up('md')]: {\n      height: '80vh',\n    },\n\n  },\n  paperimage: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(),\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '90%',\n    margin: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(2),\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  iPhoneImage: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  title: {\n\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  hidden: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  image: {\n    maxHeight: \"600px\",\n    maxWidth: '600px',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  footer: {\n    backgroundColor: theme.palette.secondary.main,\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n          ellipseapp.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default Copyright;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport Dashboard from '../Components/Images/dashboard.png';\nimport Profile from '../Components/Images/profile.png';\nimport AdminDashboard from '../Components/Images/AdminDashboard.png';\nimport Certificate from '../Components/Images/certificate.png';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst tutorialSteps = [\n  {\n    label: 'All your College events at single place',\n    imgPath: Dashboard,\n  },\n  {\n    label: 'Post your events and manage them easily',\n    imgPath: Profile,\n  },\n  {\n    label: 'Feature Rich dashboard for Admins',\n    imgPath: AdminDashboard,\n  },\n  {\n    label: 'Generate and send certificates easily to participants',\n    imgPath: Certificate,\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 1000,\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.primary.dark,\n    borderRadius: theme.spacing(3)\n    // alignContent: 'center'\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 200,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.primary.dark,\n  },\n  img: {\n    height: 450,\n    display: 'block',\n    maxWidth: 1000,\n    overflow: 'hidden',\n    width: '100%',\n  },\n}));\n\nfunction SwipeableTextMobileStepper() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const maxSteps = tutorialSteps.length;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <div className={classes.root}>\n      \n      <AutoPlaySwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {tutorialSteps.map((step, index) => (\n          <div key={step.label}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <img className={classes.img} src={step.imgPath} alt={step.label} />\n            ) : null}\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n      <Paper square elevation={0}  className={classes.header}>\n        <Typography variant=\"h3\" color=\"secondary\" align=\"center\">{tutorialSteps[activeStep].label}</Typography>\n      </Paper>\n      <MobileStepper\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"dots\"\n        activeStep={activeStep}\n        nextButton={\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n            Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </Button>\n        }\n        backButton={\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            Back\n          </Button>\n        }\n      />\n    </div>\n  );\n}\n\nexport default SwipeableTextMobileStepper;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../Themes/SigninPageStyles'\n// import AppleBadge from '../Components/Images/AppleBadge.png';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n// import iPhone from '../Components/Images/iPhone 11 Pro Max@2x.png';\nimport Copyright from \"../Components/copyright\";\nimport { withRouter, Redirect } from \"react-router\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PhoneImage from '../Components/Images/logo300.svg';\nimport HomePageCarousel from '../Components/HomePageCarousel';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\n\n\n\nconst Signin = ({ history }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [user,setUser] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  const [isUserVerified, setIsUserVerified] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const abortController = new AbortController();\n\n\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Signedin successfully\") {\n      localStorage.setItem('token', token);\n      if (isUserVerified) {\n        localStorage.setItem('token', token);\n        const eventId = localStorage.getItem('eventid');\n        if (eventId) {\n          abortController.abort()\n          history.push(`/event/${eventId}`)\n        }\n        else {\n          abortController.abort()\n          history.push('/home');\n        }\n\n      }\n      else {\n        try {\n          var data2 = new FormData();\n          const payload2 = {\n            email: email\n          };\n          data2 = JSON.stringify(payload2)\n          fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n            signal: abortController.signal,\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data2\n          }).then((result) => {\n            // console.log(result);\n            result.json().then((res) => {\n              if (res.message === \"success\") {\n                abortController.abort()\n                localStorage.setItem('token', token);\n                history.push('/otpverification')\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Signedin successfully',\n                  type: \"success\",\n                  autoHide: 300\n                });\n              }\n            })\n\n          })\n        } catch (error) {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: error.message,\n            type: \"error\",\n            autoHide: 3000\n          })\n        }\n\n      }\n\n    }\n    setState({ ...state, open: false });\n  };\n  async function handleSignin(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { email, password } = event.target.elements;\n    try {\n      var data = new FormData()\n      const payload = {\n        email: email.value,\n        password: password.value\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/users/login', {\n        signal: abortController.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then((response) => {\n        // console.log(response);\n        if (response.status === 200) {\n          // console.log\n          response.json().then((value) => {\n            setToken(value.token);\n            setIsUserVerified(value.isVerified);\n            setEmail(value.useremail);\n            // setUser(JSON.stringify(value.userDetails));\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Signedin successfully',\n              type: \"success\",\n              autoHide: 200\n            });\n          })\n        }\n        else {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: \"invalid credentials\",\n            type: \"error\", autoHide: 6000\n          })\n        }\n\n      })\n    } catch (error) {\n\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n    }\n  }\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          autoHideDuration={autoHide}\n          onClose={handleClose}\n          key={vertical + horizontal}>\n          <Alert onClose={handleClose} severity={type}>{message}</Alert>\n        </Snackbar>\n        <Grid item xs={12} sm={12} md={7} elevation={6} >\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" m={1} p={1} className={classes.paperLeft}>\n            <img src={PhoneImage} alt=\"logo\" height=\"500px\" width=\"500px\" className={classes.image}></img>\n            <Typography className={classes.title} component=\"h1\" variant=\"h2\">\n              Ellipse\n          </Typography>\n            <Typography component=\"h1\" variant=\"h6\">\n              Kill time for what matters\n          </Typography><br></br>\n            <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.guna0027.ellipse\" target=\"_blank\">\n              <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n            </a>\n\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={5} elevation={6}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1} className={classes.paperRight}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n          </Typography>\n            <form className={classes.form} onSubmit={handleSignin}>\n              <TextField\n                name=\"email\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                name=\"password\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n              <div className={classes.wrapper}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  className={classes.submit}>\n                  {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign In\"}\n\n                </Button>\n              </div>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"/forgotpassword\" variant=\"body2\">\n                    Forgot password?\n                </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/signup\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-end\">\n              <Copyright></Copyright>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <HomePageCarousel></HomePageCarousel>\n            </Box>\n          </Box>\n          <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Made with <FavoriteIcon fontSize=\"inherit\" color=\"primary\"></FavoriteIcon> for Students and Organizations</Typography><br></br>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                {\"support@ellipseapp.com\"}\n              </Link></Typography>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Copyright></Copyright>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                {\"Privacy Policy\"}\n              </Link>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n\n    </React.Fragment>\n  );\n}\nexport default withRouter(Signin);","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // backgroundColor: theme.palette.secondary.main,\n      padding: theme.spacing(3),\n      borderRadius: 30,\n  \n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(7),\n      [theme.breakpoints.down('md')]: {\n        top: theme.spacing(12),\n      }\n    }\n  }));\n\n  export default useStyles;","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = ({ history }) => {\n  const classes = useStyles();\n  const [token, setToken] = React.useState(\"\");\n  // const [currentUser, setCurrentUser] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUserNameError] = React.useState(false);\n  const [signupButtonDisabled, setSignupButtonDisabled] = React.useState(false);\n  const handleClose = async (event, reason) => {\n\n    if (message === \"Signedup successfully\") {\n      localStorage.setItem('token', token);\n      history.replace(\"/otpverification\")\n    }\n\n    setState({ ...state, open: false });\n  };\n  async function handleSignUp(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { fullName, email, password, username, terms } = event.target.elements;\n    try {\n      if (terms.checked) {\n        var data = new FormData()\n        const payload = {\n          name: fullName.value,\n          email: email.value,\n          password: password.value,\n          username: username.value\n        };\n        data = JSON.stringify(payload);\n        fetch(process.env.REACT_APP_API_URL + '/api/users/signup', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then((result) => {\n          if (result.status === 200) {\n            result.json().then((val) => {\n              setToken(val.token);\n              var data2 = new FormData();\n              const payload2 = {\n                email: val.useremail\n              };\n              data2 = JSON.stringify(payload2)\n              // console.log(token);\n              const tok = val.token;\n              fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                headers: {\n                  'Authorization': `Bearer ${tok}`,\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n              }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                  if (res.message === \"success\") {\n                    setState({\n                      open: true,\n                      vertical: 'top',\n                      horizontal: 'center',\n                      message: 'Signedup successfully',\n                      type: \"success\",\n                      autoHide: 300\n                    });\n                  }\n                })\n\n              })\n\n            })\n          }\n          else if (result.status === 401) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Email already registered',\n              type: \"error\",\n              autoHide: 3000\n            });\n          }\n        })\n      }\n\n      else {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please agress the terms and condiitons',\n          type: \"error\"\n        });\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleUsernameChange(event) {\n    const username = event.target.value;\n    var data = new FormData();\n    const payload = {\n      username: username\n    };\n    data = JSON.stringify(payload);\n    setUserNameError(false);\n    setSignupButtonDisabled(false)\n    fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((result) => {\n      result.json().then(value => {\n        if (value.message === \"user already exists\") {\n          setUserNameError(true);\n          setSignupButtonDisabled(true);\n        }\n      })\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fullName\"\n                name=\"fullName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                inputProps={{ pattern: \"[a-zA-Z ]+\" }}\n                onInvalid={() => { setNameError(true) }}\n                helperText={nameError && \"Name should only contain alphabet and spaces\"}\n                onInput={() => { setNameError(false) }}\n                error={nameError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"User Name\"\n                onChange={handleUsernameChange}\n                name=\"username\"\n                error={usernameError}\n                helperText={usernameError && \"username already exists\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" name=\"terms\" />}\n                label=\"I accept the terms and conditions\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || signupButtonDisabled}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign Up\"}\n          </Button>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n\n\n","import React from \"react\";\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst ForgotPassword = ({ history }) => {\n  const classes = useStyles();\n  // const token = localStorage.getItem('token');\n  const [email, setEmail] = React.useState(null);\n  const [otp, setOtp] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [loading2, setLoading2] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n\n  async function handlePasswordReset(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/sendverificationemail', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading(false)\n            // history.push('/resetforgotpassword')\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Check your email for OTP and enter below',\n              type: \"success\",\n              autoHide: 2000\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  async function handleForgotPassword(event) {\n    event.preventDefault();\n    setLoading2(true);\n    // const { email,} = event.target.elements;\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email,\n        otp: otp,\n        nPassword: password\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/forgotpassword', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n\n            // history.push('/resetforgotpassword')\n            setLoading2(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Succesfull Login to continue',\n              type: \"success\",\n              autoHide: 300\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading2(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  function handleClose() {\n    if (message === \"Succesfull Login to continue\") {\n      history.replace(\"/\");\n    }\n  }\n\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter your email to receive OTP\n        </Typography>\n        <form className={classes.form} onSubmit={handlePasswordReset}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}>\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send OTP\"}\n          </Button>\n        </form>\n        <form className={classes.form} onSubmit={handleForgotPassword}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"otp\"\n                label=\"OTP\"\n                name=\"otp\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"New Password\"\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading2}\n            className={classes.submit}>\n            {loading2 ? <CircularProgress color=\"primary\" size={24} /> : \"Reset Password\"}\n          </Button>\n\n\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Link href=\"/\" variant=\"body2\">\n              Instead? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(ForgotPassword);\n\n\n","import React, { useEffect, useState } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [token,setToken] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    // function storeUser(user){\n    //   setCurrentUser(user);\n    //   setPending(false)\n    // }\n    // console.log(localStorage.getItem('user'))\n    setCurrentUser(localStorage.getItem('user'));\n    setPending(false);\n\n    // app.auth().onAuthStateChanged((user) => {\n    //   setCurrentUser(user)\n    //   setPending(false)\n    // });\n  }, []);\n  // function add\n\n  if (pending) {\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OTPver = ({ history }) => {\n    const classes = useStyles();\n    const token = localStorage.getItem(\"token\");\n    // const [token, setToken] = React.useState(\"\");\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide} = state;\n    const [seconds,setSeconds] = React.useState(30);\n    const [resendEnabled,setresetEnabled] = React.useState(false)\n\n    React.useEffect(() => {\n        if (seconds > 0) {\n          setTimeout(() => setSeconds(seconds - 1), 1000);\n        } else {\n          setresetEnabled(true)\n        }\n        // eslint-disable-next-line\n      },[seconds]);\n\n    function handleClose() {\n        // console.log(\"message\")\n        if (message === \"verified\") {\n            history.replace(\"/userinfo\")\n        }\n        setState({ ...state, open: false });\n    }\n\n    if(!token){\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    function handleVerification(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { otp } = event.target.elements;\n        try {\n            var data = new FormData();\n            const payload = {\n                otp: otp.value\n            };\n            // data.append(JSON.stringify(payload));\n            data = JSON.stringify(payload);\n            \n            fetch(process.env.REACT_APP_API_URL+'/api/users/verifyotp', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n\n            }\n            ).then((result) => {\n                result.json().then(val => {\n                    // console.log(val.message);\n                    if (val.message === \"verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"verified\",\n                            type: 'success',\n                            autoHide: 300\n                        })\n\n                    }\n                    else if (val.message === \"Not verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"incorrect otp\",\n                            type: 'error',\n                            autoHide: 3000\n                        })\n                    }\n                    else {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Something went wrong try again\",\n                            type: 'error',\n                            autoHide: 3000\n                        })\n                    }\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n\n\n\n    }\n\n\n    function handleResendOTP(){\n        try {\n            var data2 = new FormData();\n            const payload2 = {\n            //   email: value[0].email\n            };\n            data2 = JSON.stringify(payload2)\n            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemailwithauth', {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              },\n              method: 'POST',\n              body: data2\n            }).then((result) => {\n              // console.log(result);\n              result.json().then((res) => {\n                if (res.message === \"success\") {\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: \"Password sent succcessfully\",\n                        type: 'success',\n                        autoHide: 300\n                    })\n                }\n              })\n  \n            })\n          } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n          }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Email Verification\n                </Typography>\n                <form className={classes.form} onSubmit={handleVerification}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"otp\"\n                            label=\"Enter OTP\"\n                            name=\"otp\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                    <Grid container>\n             \n              <Grid item>\n              <Button disabled={!resendEnabled} onClick={handleResendOTP}>Resend OTP in {seconds}</Button>\n              </Grid>\n            </Grid>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(OTPver);\n\n\n","import React from 'react';\nimport Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textArea: {\n        width: theme.spacing(58),\n        margin: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.dark,\n    },\n\n}));\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UserInfo = ({ history }) => {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [currentUser, setCurrentUser] = React.useState(null);\n    const [imageUrl, setImageurl] = React.useState(\"\");\n    const [image, setImage] = React.useState(null);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide } = state;\n    const [colleges,setColleges] = React.useState([]);\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            const eventId = localStorage.getItem('eventid');\n        if(eventId){\n          history.push(`/event/${eventId}`)\n        }\n        else{\n            history.replace(\"/home\")\n        }\n            \n        }\n\n        setState({ ...state, open: false });\n    };\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'GET',\n                }).then(response =>{\n                  // console.log(response);\n                  response.json().then(value =>{\n                    // console.log(value);\n                    setColleges(value);\n                  })\n                })\n      },[token])\n\n      if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n  \n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            // setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            // const fileType = event.target.files[0].type;\n            setImageurl(url);\n            // setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    async function handleSignUp(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { gender, designation, collegeId, bio } = event.target.elements;\n\n        try {\n            var data = new FormData()\n            const payload = {\n                gender: gender.value,\n                designation: designation.value,\n                college_id: collegeId.value,\n                bio: bio.value,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/userdetails', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (image != null) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Welcome\n                </Typography>\n                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    badgeContent={<label htmlFor=\"contained-button-file\">\n                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <EditIcon></EditIcon>\n                        </IconButton>\n                    </label>}>\n                    <Avatar className={classes.avatar} sizes=\"100\" alt=\"\" src={imageUrl}></Avatar>\n                </Badge>\n\n                <form className={classes.form} onSubmit={handleSignUp}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                            // onChange={handleAboutChange}\n                            // value={props.about}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                        \n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Your College</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"College\"\n                                    inputProps={{\n                                        name: 'collegeId',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    {colleges.map((coll,index) =>{\n                                        return <option key={index} value={coll._id}>{coll.name}</option>\n                                    })}\n                                    \n                                    {/* <option value=\"GITAM University\">GITAM University</option>\n                                    <option value=\"SRM University\">SRM University</option> */}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(UserInfo);\n\n\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.5em',\n      height: '0.5em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 1px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: '#ad9d9d',\n      outline: '1px solid slategrey'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n    marginBottom: theme.spacing(5)\n\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n    alignItems: 'center',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  mobileTitle:{\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    \n  },\n  titleButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n    textTransform: 'none'\n  },\n  mobileTitleButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      width: 'fit-content'\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    width: '230px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    borderBottom: 'none',\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  sectionDesktop: {\n    \n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  tabs: {\n    \n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginLeft: theme.spacing(15),\n    },\n  },\n  mobiletab: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  tabPanel: {\n    marginBottom: theme.spacing(3),\n  },\n  flex_section: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    // minHeight: 0\n  },\n  \n  flex_col_scroll: {\n    flexGrow: 1,\n    overflow: 'auto',\n    // minHeight: '100vh'\n  },\n  rpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    margin: theme.spacing(2),\n    // borderRadius: theme.spacing(50)\n  },\n  postButton: {\n    borderRadius: theme.spacing(50)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        setTitle(event.share_link)\n    }, [event.share_link])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Share Link\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DialogContent, DialogTitle } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  imageBox:{\n    display: \"flex\",\n        justifyContent: \"center\",\n  },\n  dialog: {\n    // height: '800px',\n    minHeight: '90vh',\n    maxHeight: '90vh',\n},\n  image: {\n    maxWidth: \"100%\",\n  },\n  icons: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    // color: theme.palette.grey[500],\n\n},\ntitle:{\n  backgroundColor: theme.palette.secondary\n}\n}));\n\n\n\n\nfunction ImageDialog(props) {\n  const classes = useStyles();\n  const event = props.event;\n  function handleClose() {\n    props.handleClose();\n\n}\n\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"transparent\",\n                    boxShadow: 'none',\n                    \n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.title}>{event.name}\n            <div className={classes.icons}>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n            </div>\n            </DialogTitle>\n              <DialogContent>\n              <Box className={classes.imageBox}>\n              <img className={classes.image} src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  alt=\"profile pic\"></img>\n              </Box>\n                \n              </DialogContent>\n            </Dialog>\n      </div>\n   );\n}\n\nexport default ImageDialog;\n\n","import React from 'react';\nimport { cleanup } from '@testing-library/react';\n\n//Materail imports\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\n// import AuthContext from '../AuthContext';\nimport ImageDialog from '../Components/ImageDialog';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginTop: theme.spacing(2)\n    }\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const { children, value, url, index, ...other } = props;\n    const event = props.event;\n    const tags = event.tags;\n    const requirements = event.requirements;\n    const [timeLabel, setTimeLabel] = React.useState(\"Registration Ends in\");\n    const [adminDetails, setAdminDetails] = React.useState({});\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        if(event._id !== undefined && event.user_id !== undefined){\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_organizer_details?eventId=${event._id}&userId=${event.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    setAdminDetails(value);\n                })\n            })\n        }\n    }, [event,token])\n\n\n    const calculateTimeLeft = () => {\n\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let timeLeft = {};\n        if (difference < 0) {\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        if (difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const getTimeLabel = () => {\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let label = \"Registration ends in\"\n        if (difference < 0) {\n            label = \"Starts in\"\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            label = \"Ends in\"\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        return label;\n    }\n\n    const [timeLeft, setTimeLeft] = React.useState(calculateTimeLeft());\n\n    React.useEffect(() => {\n        const x = setTimeout(() => {\n            setTimeLabel(getTimeLabel());\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n\n        return () => {\n            cleanup();\n            clearTimeout(x);\n        }\n    });\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach(interval => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span key={interval}>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        // setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Grid container component=\"main\">\n                        <Grid item xs={12} sm={12} md={4} lg={4} >\n                            <img onClick={handleImageDialogOpen} style={{ maxWidth: '250px' }} alt=\"event poster\" src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  ></img>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <Typography>{event.description} </Typography>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }}>{timeLabel}</Typography>\n                            <Typography variant=\"h5\">{timerComponents.length ? timerComponents : <span>Time's up!</span>}</Typography>\n                            {/* <Typography>Starts at {event.start_time}</Typography>\n                        <Typography>Ends at {event.finish_time}</Typography> */}\n                            <div style={{ marginTop: '10px' }}>\n                                <Chip variant=\"outlined\" color=\"inherit\" label={event.event_type}></Chip>\n\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.fee_type}></Chip>\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.event_mode}></Chip>\n                                {tags != null && tags.map(val => {\n                                    return <Chip key={val} style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                })}\n                            </div>\n\n                        </Grid>\n                        <Grid item xs={12}>\n\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h4\">About</Typography>\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                {\n                                    event.about\n                                }\n                                {/* {[...new Array(5)]\n                                    .map(\n                                        () => `Cras mattis consectetur purus sit amet fermentum. \n                                    Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n                                    Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                                    Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n                                    )\n                                    .join('\\n')} */}\n                            </Typography>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Requirements</Typography>\n                            {\n                                requirements != null && requirements.map(val => {\n                                    return <Chip key={val} style={{ marginRight: '5px' }} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                })\n                            }\n                            {event.event_mode === \"Offline\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Venue Details</Typography>}\n                            {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue}</Typography>}\n                            {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue_college}</Typography>}\n                            {/* {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Platform Details</Typography>}\n                            {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">{}</Typography>} */}\n                            {event.fee_type === \"Paid\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Fee Details</Typography>}\n                            {event.fee_type === \"Paid\" && <Typography color=\"textSecondary\" variant=\"body2\">{\"Rs \" + event.fee}</Typography>}\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Organised By</Typography>\n                            <Box className={classes.adminDetails}>\n                                <Box>\n                                    <Avatar className={classes.avatar} alt={adminDetails.name} src={process.env.REACT_APP_API_URL + `/api/image?id=${adminDetails.profile_pic}`} />\n                                </Box>\n                                <Box>\n                                    <Box>\n                                        <Typography variant=\"h5\">{adminDetails.name}</Typography>\n                                    </Box>\n                                    <Box>\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{adminDetails.college_name}</Typography>\n                                    </Box>\n\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12}>\n                        </Grid>\n                        <Grid>\n                        </Grid>\n                    </Grid>\n                    <ImageDialog\n                    // image={selectedImage}\n                    event={event}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose}>\n                </ImageDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n\n// This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport TimerIcon from '@material-ui/icons/Timer';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  large: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  tab: {\n    flexGrow: 1,\n    // maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const token = localStorage.getItem('token');\n  const event = props.event;\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  \n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Timeline align=\"alternate\">\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {regEndDate.toDateString()}{\" \"+regEndDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              \n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Registration Ends\n                  </Typography>\n                  <Typography>Your oppurtunity to participate came to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {startDate.toDateString()}{\" \"+startDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\" variant=\"outlined\"> \n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Starts\n                  </Typography>\n                  <Typography>Party begins</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n            <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {endDate.toDateString()}{\" \"+endDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector className={classes.secondaryTail} />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Ends\n                  </Typography>\n                  <Typography>Chill,event came to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            {/* <TimelineItem>\n              <TimelineSeparator>\n                <TimelineDot color=\"secondary\">\n                  <RepeatIcon />\n                </TimelineDot>\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Repeat\n            </Typography>\n                  <Typography>Because this is the life you love!</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem> */}\n          </Timeline>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if(event.registered){\n          setAnnouncements(value);\n        }\n        else{\n          value.forEach(ann => {\n            if(ann.visible_all){\n              setAnnouncements((announcements)=>[...announcements,ann])\n            }\n          });\n        }\n        \n      })\n    })\n  }, [token, event])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useEffect } from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { ListItemAvatar } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Linkify from 'react-linkify';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar style={{ display: 'none' }} ><InfoIcon></InfoIcon></ListItemAvatar>\n            <ListItemText\n                primary={\n                    <React.Fragment>\n                        <Typography component=\"h6\" variant=\"body2\">\n                            {message.user_name+userType}\n                        </Typography>\n\n                        {/* <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                            {userType}\n                        </Typography> */}\n                    </React.Fragment>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" variant=\"body1\" color=\"textPrimary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{color:'red',fontWeight: 'bold'}} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                            {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                        </Typography>\n                        <Box>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                className={classes.date}\n                            >\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </React.Fragment>}\n            />\n        </ListItem>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n \nconst AuthContext = React.createContext(null);\n \nexport default AuthContext;","import React from 'react';\nimport clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        position: 'absolute',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    open: {\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(34),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    close: {\n        // width: '85%',\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(13),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    const [cl, setCl] = React.useState(classes.bottomBar);\n    React.useEffect(() => {\n        if (props.open !== undefined) {\n            setCl(clsx({\n                [classes.open]: props.open,\n                [classes.close]: !props.open,\n            }))\n        }\n        // eslint-disable-next-line\n    }, [props.open])\n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        if (newmessage !== null && newmessage !== \"\") {\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={cl} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage adminId={event.user_id} message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport EventShareDialog from './EventShareDialog';\nimport AboutEventPanel from '../Components/AboutEventPanel';\nimport EventsTimeLinePanel from '../Components/EventTimeLinePanel';\nimport EvenstAnnouncementsPanel from '../Components/EventsAnnouncementsPanel';\nimport ChatPanel from '../Components/EventsChatPanel';\nimport { Typography } from '@material-ui/core';\nimport AuthContext from '../AuthContext';\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    }\n}));\n\nfunction EventsDialog(props) {\n    const event = props.event;\n    const t = localStorage.getItem('theme');\n    const [value, setValue] = React.useState(0);\n    const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    // const token = localStorage.getItem('token');\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n    const [chatAcess, setChatAcess] = React.useState(false);\n\n    React.useEffect(() => {\n        if (event.registered || event.reg_mode !== \"form\") {\n            setChatAcess(true)\n        }else if(event.user_id === user.user_id){\n            setChatAcess(true)\n        }\n        else {\n            setChatAcess(false)\n        }\n    }, [event,user])\n\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleClose() {\n        props.handleClose();\n\n    }\n\n    function handleRegClick() {\n        props.handleReg(event);\n\n    }\n\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                {event.name}\n                <div className={classes.icons}>\n                    {/* <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                        <MailIcon></MailIcon>\n                    </IconButton> */}\n                    <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <Paper className={classes.root2}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"About\" {...a11yProps(0)} />\n                            <Tab label=\"Schedule\" {...a11yProps(1)} />\n                            <Tab label=\"Announcements\" {...a11yProps(2)} />\n                            <Tab label=\"Chat\" {...a11yProps(3)} />\n\n                        </Tabs>\n                    </Paper>\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent} dividers={true} >\n                <EventShareDialog\n                    event={event}\n                    open={shareDialogOpen}\n                    handleClose={handleShareClose}></EventShareDialog>\n                <AboutEventPanel\n                    value={value}\n                    index={0}\n                    event={props.event}></AboutEventPanel>\n                <EventsTimeLinePanel value={value} index={1} event={props.event}></EventsTimeLinePanel>\n                <EvenstAnnouncementsPanel value={value} index={2} event={props.event}></EvenstAnnouncementsPanel>\n                {value === 3 && chatAcess && <ChatPanel value={value} index={3} event={props.event}></ChatPanel>}\n                {value === 3 && !chatAcess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n            </DialogContent>\n            <DialogActions className={classes.action}>\n                <Box className={classes.bottomBar} display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\" hidden={value !== 3}>\n                </Box>\n                <div\n                    role=\"tabpanel\"\n                    hidden={value === 3}>\n                    {value !== 3 && (\n                        <div className={classes.buttonDiv}>\n\n                            {\n                                event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                                    {event.registered ? \"Registered\" : \"Register\"}\n                                </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                                    </Button>\n                            }\n\n                        </div>\n                    )}\n\n                </div>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default EventsDialog;","import React from 'react';\n \nconst EventsContext = React.createContext(null);\n \nexport default EventsContext;","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// import CardContent from '@material-ui/core/CardContent';\n// import Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\n// import { Redirect } from 'react-router';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root3: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2)\n    },\n    root5:{\n        display: \"flex\",\n            justifyContent: \"flex-end\",\n      },\n      secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n      },\n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [notificationms,setNotifications] = React.useState([]);\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/get_notifications', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value)\n                    setNotifications(value);\n                })\n            }\n        })\n    }, [token])\n\n    const handleNotificationClick = (n) => () =>{\n        props.handleClick(n.event_id)\n    }\n\n\n    return (\n        <div>\n            <Dialog scroll=\"paper\" open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.dialog }}>\n                <DialogTitle id=\"form-dialog-title\">Notifications</DialogTitle>\n                <Divider></Divider>\n                <DialogContent>\n                {\n                    notificationms.map((n,index)=>{\n                        const date = new Date(n.time)\n                       return <Box onClick={handleNotificationClick(n)} m={1} p={1} className={classes.root3}>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Typography className={classes.title}>\n                                {n.title}\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                {n.description}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.root5}>\n                            <Typography variant=\"body2\" >\n                                {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    })\n                }\n                    \n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EventIcon from '@material-ui/icons/Event';\nimport useStyles from '../Themes/MainHomeStyles';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport { Button } from '@material-ui/core';\nimport Logo from '../Components/Images/logo.svg';\n// import DarkLogo from '../Components/Images/dark_theme_logo.png';\n// import LightLogo from '../Components/Images/light_theme_logo.png';\n// import CuboidLogo from '../Components/Images/Cuboid logo.png'\n\n\n\n\n\n\nconst NavigationBar = function ({ history }) {\n\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const t = localStorage.getItem('theme');\n  const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n  // const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n  // const [allEvents, setAllEvents] = React.useState([]);\n  const [searchedEvent, setSearchedEvent] = React.useState([]);\n  const [notificationsCount,setNotificationCount] = React.useState(0);\n\n  const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  // const [calenderValue, setCalenderValue] = useState(new Date());\n  // const [loading, setLoading] = React.useState(false);\n  // const eventypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [open, setOpen] = React.useState(false);\n  const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n  const allEvents = React.useContext(EventsContext);\n  useEffect(() => {\n    if (localStorage.getItem('tabIndex') != null) {\n      const tabIndex = parseInt(localStorage.getItem('tabIndex'));\n      if (tabIndex != null) {\n        setValue(tabIndex);\n      }\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/get_unseen_notifications_count', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        // console.log(data);\n        setNotificationCount(data);\n      })\n    })\n  }, [token])\n\n\n  // function handleMorebuttonClick(event) {\n  //   event.preventDefault();\n  //   // history.push(\"/event/1\")\n  // }\n  function handleSearchChange(event, value) {\n    if (value) {\n      // console.log(value);\n      setSearchedEvent(value);\n      setOpen(true);\n    }\n  }\n\n  const handleNotificationCardClick = (value)=>{\n    if(value){\n      allEvents.forEach(event => {\n        if(event._id === value){\n          setSearchedEvent(event);\n          setOpen(true);\n        }\n      });\n    }\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('tabIndex', newValue);\n  };\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    // setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  \n  if (!token) {\n    history.replace('/');\n  }\n\n  function handleThemeChange(event) {\n    // console.log(event.target.checked);\n    setDarkThemeSelected(event.target.checked);\n    if (event.target.checked) {\n      localStorage.setItem('theme', 'dark');\n      window.location.reload(false);\n    }\n    else {\n      localStorage.setItem('theme', 'light');\n      window.location.reload(false);\n    }\n  }\n\n\n\n  function handleSignout(event) {\n\n    fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then((result) => {\n      result.json().then((data) => {\n        if (data.message === \"success\") {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tabIndex');\n          history.replace(\"/\")\n        }\n      })\n    })\n\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\n      {/* <MenuItem onClick={handleMenuClose}>My account</MenuItem> */}\n      <MenuItem> Dark Theme <Switch\n        checked={darkThemeSelected}\n        onChange={handleThemeChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      /></MenuItem>\n      <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n    </Menu>\n  );\n\n  function handleeventClick(event) {\n    event.preventDefault();\n    history.push(\"/events\")\n    // localStorage.setItem('tabIndex',1);\n  }\n  function handleHomeClick() {\n    history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n  function handleProfileClick() {\n    history.push(\"/profile\")\n  }\n  function handleExploreClick() {\n    history.push(\"/yourevents\")\n  }\n  // function handleChatClick() {\n  //   history.push('/chat')\n  // }\n  const handleClose = () => {\n    setOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  function handleRegistrationButton(event) {\n    setOpen(false);\n    // setSelectedEvent(event);\n    // history.push('/event/register/' + event._id);\n  }\n\n  function handleNotificationClick() {\n    fetch(process.env.REACT_APP_API_URL + '/api/update_notification_status', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(0);\n      })\n    })\n    setNotificationsOpen(true);\n  }\n  function handleTitleButtonClick() {\n    localStorage.setItem('tabIndex', 0)\n    setValue(0)\n    history.push('/home')\n  }\n\n  return (\n    <div className={classes.grow}>\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Toolbar>\n            <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n            <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                options={allEvents}\n                getOptionLabel={(option) => option.name}\n                onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              />\n            </div>\n            <div className={classes.tabs}>\n              <Paper square className={classes.root}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  variant=\"fullWidth\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  aria-label=\"icon\"\n\n                >\n                  <Tab onClick={handleHomeClick} icon={<HomeIcon />} aria-label=\"home\" />\n                  <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                  {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"favorite\" /> */}\n                  <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"person\" />\n                  <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n                </Tabs>\n              </Paper>\n            </div>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                <Badge badgeContent={notificationsCount} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\">\n                <SettingsIcon></SettingsIcon>\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <div className={classes.mobiletab}>\n\n            <Paper square className={classes.root} position=\"sticky\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              // aria-label=\"icon tabs example\"\n              >\n                <Tab onClick={handleHomeClick} icon={< HomeIcon />} aria-label=\"home\" />\n                <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"messages\" /> */}\n                <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"explore\" />\n                <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n              </Tabs>\n            </Paper>\n          </div>\n        </AppBar>\n        <div>\n          {open && <EventsDialog\n            open={open}\n            event={searchedEvent}\n            handleReg={handleRegistrationButton}\n            handleClose={handleClose}>\n          </EventsDialog>}\n          <NotificationsDialog open={notificationsOpen} handleClick={handleNotificationCardClick} handleClose={handleClose}></NotificationsDialog>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default withRouter(NavigationBar);\n\n","import React from 'react';\n \nconst ActiveEventsContext = React.createContext(null);\n \nexport default ActiveEventsContext;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\n\n//Material Imports\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Components impoprts\nimport NavigationBar from './NavigationBar';\nimport EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n// import dot from 'dote'\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    root: {\n        background: 'white',\n        position: 'sticky',\n        top: 0,\n        bottom: 0,\n        zIndex: 5,\n    },\n}));\n\nfunction Layout(props) {\n\n\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [allEvents, setAllEvents] = React.useState([]);\n    const [activeEvents,setActiveEvents] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [open, setOpen] = React.useState(true);\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    \n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value);\n                    if (value[0].verified === false) {\n                        // setUserDetailsDone(false);\n                        try {\n                            var data2 = new FormData();\n                            const payload2 = {\n                              email: value[0].email\n                            };\n                            data2 = JSON.stringify(payload2)\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                              headers: {\n                                'Authorization': `Bearer ${token}`,\n                                'Content-Type': 'application/json'\n                              },\n                              method: 'POST',\n                              body: data2\n                            }).then((result) => {\n                              // console.log(result);\n                              result.json().then((res) => {\n                                if (res.message === \"success\") {\n                                    setOpen(false);\n                                    props.history.push(\"/otpverification\")\n                                }\n                              })\n                  \n                            })\n                          } catch (error) {\n                            \n                          }\n                        \n                    }\n                    else if(value[0].college_name === null){\n                        setOpen(false);\n                        props.history.push(\"/userinfo\")\n                    }\n                    else{\n                        setUserDetailsDone(true);\n                        setCurrentUser(value[0]);\n                    }\n                   \n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL+'/api/events', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setAllEvents(value);\n                    setActiveEvents(value.filter(e =>{\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }))\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n\n        })\n// eslint-disable-next-line\n    }, [token])\n    // if(!currentUser.verified){\n\n    // }\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        if(currentUser.verified){\n            return <Redirect to=\"/userinfo\"></Redirect>\n        }else{\n            console.log(\"xyz\")\n            try {\n                var data2 = new FormData();\n                const payload2 = {\n                  email: currentUser.email\n                };\n                data2 = JSON.stringify(payload2)\n                fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                  headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                  },\n                  method: 'POST',\n                  body: data2\n                }).then((result) => {\n                  // console.log(result);\n                  result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        return <Redirect to=\"/otpverification\"></Redirect>\n                    }\n                  })\n      \n                })\n              } catch (error) {\n                \n              }\n            \n        }\n        \n    }\n\n    return (\n        <AuthContext.Provider value={currentUser}>\n            <EventsContext.Provider value={allEvents}>\n            <ActiveEventsContext.Provider value={activeEvents}>\n                {\n                    currentUser != null  && <div>\n                        <Paper className={classes.root}>\n                            <NavigationBar></NavigationBar>\n                        </Paper>\n                        <div>\n                            {props.children}\n                        </div>\n                    </div>\n                }\n                {\n                    currentUser == null && <Backdrop className={classes.backdrop} open={open}>\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n                }\n                </ActiveEventsContext.Provider>\n            </EventsContext.Provider>\n        </AuthContext.Provider>\n\n\n    );\n}\nexport default withRouter(Layout) ;\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n// import { Typography } from '@material-ui/core';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport '../Themes/main.scss'\nimport EventsDialog from '../Components/EventsDialog';\n// import EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction CalenderPanel({history}) {\n    localStorage.setItem('tabIndex',1)\n    // const { children, value, url, index, ...other } = props;\n    // const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [events, setEvents] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const [registeredEvents,setRegisteredEvents] = React.useState([]);\n    // const [image, setImage] = React.useState(null);\n    const allEvents = React.useContext(ActiveEventsContext);\n\n    useEffect(() => {\n        allEvents.forEach(y => {\n            // console.log(y.start_time);\n            setEvents(events =>\n                [...events, { id: JSON.stringify(y), title: y.name, start: y.start_time, end: y.finish_time }]\n            )\n        })\n        setRegisteredEvents(allEvents.filter((value) => value.registered === true))\n\n    }, [allEvents])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n    \n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    function handleRegistrationButton(event) {\n        setOpen(false);\n        // setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n\n    function handleEventClick(info) {\n        setSelectedEvent(JSON.parse(info.event.id))\n        setOpen(true);\n    }\n    return (\n        <div>\n            {/* {value === index && ( */}\n            <div className={classes.root}>\n                <Grid container component=\"main\" >\n\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                        {/* <Typography index={0}>Filters</Typography> */}\n                        {/* <Calendar onChange={setCalenderValue} value={calenderValue} ></Calendar> */}\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8} >\n                        <FullCalendar\n                            eventBackgroundColor=\"#1C1C1E\"\n                            eventBorderColor=\"#00bdaa\"\n                            events={events}\n                            eventClick={handleEventClick}\n                            defaultView='dayGridMonth' plugins={[dayGridPlugin]} backgroundColor=\"black\" \n                            buttonIcons={false}></FullCalendar>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={false} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                        </Button>\n                            <List className={classes.sideList}>\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registeredEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        handleReg={handleRegistrationButton}\n                        ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CalenderPanel;\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const event = props.event;\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                event_id: event._id,\n                title: title,\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Report({event.name})</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\nimport EventReportDialog from './EventReportDialog';\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [reportDialogOpen, setReportDialogOpen] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  \n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n  function handleImageClick() {\n    props.imageDialog(event)\n  }\n  function handleRegClick() {\n    props.handleReg(props.eventId);\n\n  }\n  function handleMoreButtonClick() {\n    props.click(props.eventId);\n  }\n  function handleReportClick() {\n    setReportDialogOpen(true);\n  }\n  function handleReportClose() {\n    setReportDialogOpen(false);\n  }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {props.name}\n          </Typography>\n        }\n        subheader={\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n            {event.description}\n        </Typography>\n        }\n      />\n      <CardContent>\n        <EventReportDialog\n          event={event}\n          open={reportDialogOpen}\n          handleClose={handleReportClose}>\n\n        </EventReportDialog>\n        <EventShareDialog\n          event={event}\n          open={shareDialogOpen}\n          handleClose={handleShareClose}></EventShareDialog>\n        {/* <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n          Details\n        </Typography> */}\n        <Chip variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n        {/* <Grid container component=\"main\">\n          <Grid item xs={6} sm={6} md={6}>\n            <Typography variant=\"h6\" component=\"p\">\n            <PublicIcon></PublicIcon> {props.eventMode} \n            </Typography>\n            <Typography variant=\"h6\" component=\"p\">\n            <PublicIcon></PublicIcon> {props.eventType} \n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Last Date for Registration:\n            </Typography>\n            <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n              {startDate.toDateString()}\n            </Typography>\n\n          </Grid>\n          <Grid item xs={6} sm={6} md={6}>\n            <Timeline align='alternate'>\n            <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{startDate.toDateString()}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Starts</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{startDate.toDateString()}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Ends</Typography>\n          </TimelineContent>\n        </TimelineItem>\n            </Timeline>\n          </Grid>\n        </Grid> */}\n\n      </CardContent>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <MailIcon></MailIcon>\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={handleMoreButtonClick}>\n            See More\n        </Button>\n          {\n            event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                  <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n          }\n\n        </div>\n        \n\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(10),\n        zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        // top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n            // top: theme.spacing(20)\n        },\n    \n    },\n    root2: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        borderRadius: theme.spacing(2)\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50),\n        backgroundColor: theme.palette.primary.main\n    },\n\n}));\n\nfunction SortLeftPanel(props) {\n    const classes = useStyles();\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        // defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        // defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List className={classes.root}>\n                    {[\"Online\", \"Offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${user.college_name}`].map((value) => {\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default SortLeftPanel;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n\n    root: {\n        background: theme.palette.secondary.main,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none',\n        // },\n    },\n    \n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n\n}));\n\nfunction MobileSortPanel(props) {\n    const classes = useStyles();\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List >\n                    {[\"online\", \"offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${user.collegeName}`].map((value) => {\n                           \n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default MobileSortPanel;\n\n ","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    // const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    \n\n    // function handleTitleChange(event) {\n    //     setTitle(event.target.value);\n    // }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/send_feedback', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack)</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport EventCard from '../Components/EventCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withRouter} from \"react-router\";\nimport List from '@material-ui/core/List';\nimport EventsDialog from '../Components/EventsDialog';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SortLeftPanel from '../Components/SortLeftPanel';\nimport MobileSortPanel from '../Components/MobileSortPanel';\nimport ImageDialog from '../Components/ImageDialog';\n// import EventsContext from '../EventsContext';\nimport Skeleton from '@material-ui/lab/Skeleton';\n// import { Link } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\n// import GridListEvents from '../Components/GridListEvents';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\nimport FeedBackDialog from '../Components/FeedBackDialog';\n// function a11yProps(index) {\n//     return {\n//         id: `scrollable-auto-tab-${index}`,\n//         'aria-controls': `scrollable-auto-tabpanel-${index}`,\n//     };\n// }\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '89vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        // color: theme.palette.primary.main\n        backgroundColor: theme.palette.primary.main\n    },\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        // height: '89vh',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        // bottom: 0,\n        // zIndex: 3,\n    },\n    leftSubPaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n        [theme.breakpoints.down('md')]: {\n            maxHeight: '78vh',\n        },\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    mobileFilterButton: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    skeleton: {\n        textDecorationColor: theme.palette.primary.dark,\n    },\n    feedBackButton: {\n        borderRadius: theme.spacing(50),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        paddingBottom: theme.spacing(1)\n    }\n\n}));\n\nfunction EventsTabPanel({ history }) {\n    localStorage.setItem('tabIndex',0);\n    // const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [selectedEvent, setSelectedEvent] = React.useState(\"\");\n    const [sortStartDate, setSortStartDate] = React.useState(null);\n    const [sortEndDate, setSortEndDate] = React.useState(null);\n    // const [sortType, setSortType] = React.useState(null);\n    // const [sortEventMode, setSortEventMode] = React.useState(null);\n    const [sortCollegeType, setSortCollegeType] = React.useState(\"\");\n    const [sortedEventsArray, setSortedEventsArray] = React.useState([]);\n    const [isFiltered, setIsFiltered] = React.useState(false);\n    const [feeSortChecked, setFeeSortChecked] = React.useState([0]);\n    const [modeSortChecked, setModeSortChecked] = React.useState([0]);\n    const [filterDialogOpen, setFilterDialogOpen] = React.useState(false);\n    // const [selectedImage, setSelectedImage] = React.useState(null);\n    const allEvents = React.useContext(ActiveEventsContext);\n    const [registerdEvents, setRegisteredEvents] = React.useState([]);\n    const [feedBackOpen,setFeedBackOpen] = React.useState(false);\n\n    \n\n    React.useEffect(() => {\n        // console.log(allEvents);\n        setRegisteredEvents(allEvents.filter((value) => value.registered === true))\n    }, [allEvents])\n    // console.log(registerdEvents);\n    if (!token) {\n        // return <Redirect to=\"/\" />;\n        history.replace(\"/\")\n    }\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClick = function (event, image) {\n        // console.log(id);\n        setSelectedEvent(event);\n        // setSelectedImage(image);\n        setOpen(true);\n        // history.push('eventdetails')\n    }\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleSortDateChange = (date) => {\n        console.log(date);\n        setSortStartDate(date);\n    };\n    const handleEndSortDateChange = (date) => {\n        setSortEndDate(date);\n    }\n\n    const handleFeedBackButtonClick = () =>{\n        setFeedBackOpen(true);\n    }\n\n    const closeFeedBckDialog = () =>{\n        setFeedBackOpen(false);\n    }\n\n    // function handleSortEventModeChamge(event, value) {\n    //     console.log(event);\n    //     console.log(value);\n    // }\n    // console.log(allEvents);\n    function handleSortCollegeChange(event, value) {\n        setSortCollegeType(value);\n    }\n    async function handleSortApplyButton() {\n        // console.log(sortStartDate);\n        // console.log(modeSortChecked);\n        // console.log(sortCollegeType);\n        setFilterDialogOpen(false);\n        if (sortStartDate != null && sortEndDate != null) {\n            const dateRangeSortedEvents = sortByDateRange(sortStartDate, sortEndDate, allEvents);\n            setSortedEventsArray(dateRangeSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateRangeSortedEvents));\n                const typeSortedEvents = sortByMode(dateRangeSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(typeSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.college_name) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateRangeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.college_name) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateRangeSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (sortStartDate != null) {\n            const dateSortedEvents = await sortByDate(sortStartDate, allEvents)\n            setSortedEventsArray(dateSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateSortedEvents));\n                const typeSortedEvents = sortByMode(dateSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(dateSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.collegeName) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.collegeName) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (modeSortChecked.length > 1) {\n            const typeSortedEvents = sortByMode(allEvents);\n            console.log(sortByMode(allEvents));\n\n            setSortedEventsArray(typeSortedEvents);\n            setIsFiltered(true);\n            if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(typeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (feeSortChecked.length > 1) {\n            const feeSortedEvents = sortByCost(allEvents);\n            setSortedEventsArray(feeSortedEvents);\n            setIsFiltered(true);\n        }\n        else if (sortCollegeType === user.collegeName) {\n            const collegeSortedEvents = sortByCollege(allEvents);\n            setSortedEventsArray(collegeSortedEvents);\n            setIsFiltered(true);\n        }\n    }\n\n    function sortByDateRange(date1, date2, sEvents) {\n        var sortedEvents = [];\n        // console.log(typeof (date1));\n        // console.log(typeof (date1));\n        sEvents.forEach(sEvent => {\n            const d = new Date(sEvent.start_time);\n            if (date1.getTime() <= d.getTime() && d.getTime() <= date2.getTime()) {\n                sortedEvents.push(sEvent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByDate(date, tEvents) {\n        var sDEvents = [];\n        tEvents.forEach(async sevent => {\n            const x = `${date.getDate()}` + date.getMonth() + date.getFullYear();\n            const d = new Date(sevent.start_time);\n            const y = `${d.getDate()}` + d.getMonth() + d.getFullYear();\n            console.log(y);\n            if (x === y) {\n                console.log(sevent);\n                sDEvents.push(sevent);\n            }\n            console.log(sortedEventsArray);\n        })\n        console.log(sDEvents);\n        return sDEvents;\n    }\n    function sortByMode(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (modeSortChecked.includes(sevent.event_mode)) {\n                console.log(\"ddd\");\n                sortedEvents.push(sevent);\n            }\n        })\n        console.log(sortedEvents);\n        return sortedEvents;\n    }\n\n    function sortByCost(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (feeSortChecked.includes(sevent.fee_type)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCollege(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (user.collegeName === sevent.college) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function handlesortDiscardButton() {\n        setModeSortChecked([0])\n        setFeeSortChecked([0])\n        setSortedEventsArray([]);\n        setSortStartDate(null);\n        setSortEndDate(null);\n        setIsFiltered(false);\n        setFilterDialogOpen(false)\n        // setChecked(null);\n    }\n    function handlefilterButtonClicked() {\n        setFilterDialogOpen(true);\n    }\n    function handleFilterClose() {\n        setFilterDialogOpen(false);\n    }\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n\n    function handleRegistrationButton(event) {\n        setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    return (\n        <div>\n            <Grid container component=\"main\" >\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} >\n                    <Paper className={classes.root}>\n                        <Paper className={classes.leftSubPaper}>\n                            <SortLeftPanel\n                                handleSortDateChange={handleSortDateChange}\n                                sortStartDate={sortStartDate}\n                                handleEndSortDateChange={handleEndSortDateChange}\n                                sortEndDate={sortEndDate}\n                                handleSortCollegeChange={handleSortCollegeChange}\n                                feeChecked={feeSortChecked}\n                                modeChecked={modeSortChecked}\n                                setFeeChecked={setFeeSortChecked}\n                                setModeChecked={setModeSortChecked}\n                                handleSortApplyButton={handleSortApplyButton}\n                                handlesortDiscardButton={handlesortDiscardButton}>\n                            </SortLeftPanel>\n                        </Paper>\n                    </Paper>\n                    <Button className={classes.mobileFilterButton} variant=\"outlined\" onClick={handlefilterButtonClicked} >Filters</Button>\n                </Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    {/* <Typography variant=\"h5\" style={{ paddingTop: '5px' }}>\n                        Your College Events\n                    </Typography>\n                    <GridListEvents click={handleClick} events={allEvents.filter((event) => event.college_name === user.college_name)} ></GridListEvents> */}\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px',paddingBottom: '7px' }}>\n                        {/* Active Events */}\n                    </Typography>\n\n                    {allEvents.length === 0 && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>}\n                    {\n                        isFiltered ? sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    eventId={event}\n                                >\n\n                                </EventCard>)\n                        }) : allEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                </Grid>\n                <Grid item xs={12} sm={12} md={4} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                            </Button>\n                            <List className={classes.root2}>\n                                \n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registerdEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                            <Button\n                                onClick={handleFeedBackButtonClick}\n                                variant=\"outlined\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.feedBackButton}\n                                 >\n                                Report Bug/Feedback\n                            </Button>\n                           \n\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n            </Grid>\n            <div>\n            <FeedBackDialog open={feedBackOpen} handleClose={closeFeedBckDialog}></FeedBackDialog>\n                {open && <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    // imageUrl={selectedImage}\n                    handleClose={handleClose}\n                    handleReg={handleRegistrationButton}\n                    imageDialog={handleImageDialogOpen}\n                >\n                </EventsDialog>}\n                <ImageDialog\n                    // image={selectedImage}\n                    event={selectedEvent}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose}>\n                </ImageDialog>\n                <Dialog\n                    open={filterDialogOpen}\n                    onClose={handleFilterClose}\n                    fullWidth={true}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                    maxWidth=\"sm\" PaperProps={{\n                        style: {\n                            backgroundColor: \"#1C1C1E\",\n                            boxShadow: 'none',\n                        },\n                    }}>\n                    <DialogTitle>Filters</DialogTitle>\n                    <DialogContent>\n                        <MobileSortPanel\n                            handleSortDateChange={handleSortDateChange}\n                            sortStartDate={sortStartDate}\n                            handleEndSortDateChange={handleEndSortDateChange}\n                            sortEndDate={sortEndDate}\n                            handleSortCollegeChange={handleSortCollegeChange}\n                            feeChecked={feeSortChecked}\n                            modeChecked={modeSortChecked}\n                            setFeeChecked={setFeeSortChecked}\n                            setModeChecked={setModeSortChecked}\n                            handleSortApplyButton={handleSortApplyButton}\n                            handlesortDiscardButton={handlesortDiscardButton}>\n                        </MobileSortPanel>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default withRouter(EventsTabPanel);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport EventShareDialog from '../Components/EventShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n  }\n}));\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const [image, setImage] = React.useState(null);\n  // const token = localStorage.getItem('token');\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  function handleViewButtonClick() {\n    props.handleViewClick(props.event);\n  }\n\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n      <CardMedia\n        component=\"img\"\n        height=\"180\"\n        image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        \n      </CardContent>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleShareClick}>\n          Share\n        </Button>\n        <Button onClick={handleViewButtonClick} size=\"small\" color=\"primary\">\n          {t === 'light' ? <Link target=\"_blank\" to={{ pathname: `/event/${event._id}` }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link> :\n            <Link target='_blank' to={{ pathname: `/event/${event._id}`}} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link>}\n        </Button>\n        <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {event.status.toUpperCase()}\n        </Typography>\n      </CardActions>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n    </Card>\n  );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\nimport { Typography } from '@material-ui/core';\n\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const [open, setOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const allEvents = React.useContext(EventsContext);\n    \n    const postedEvents = allEvents.filter((val)=>{\n        return val.user_id === user.user_id;\n    });\n\n    const [selectedEvent,setSellectedEvent] = React.useState(\"\");\n    function handleViewClick(event){\n        setSellectedEvent(event);\n        // setOpen(true);\n    } \n\n    function handleClose(){\n        setOpen(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    postedEvents.length === 0 && <Typography>No Posted Events</Typography>\n                }\n                {postedEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={4} key={index}>\n                    <ProfileEventCard event={event} handleViewClick={handleViewClick} name={event.name} image={url}></ProfileEventCard>\n                    </Grid>) \n                })}\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    handleClose={handleClose}\n                    name={selectedEvent.name}\n                    startTime={selectedEvent.start_time}\n                    endTime={selectedEvent.finish_time}\n                    regEndTime={selectedEvent.registrationEndTime}\n                    type={selectedEvent.eventType}\n                    tags={selectedEvent.tags}\n                    mode={selectedEvent.eventMode}\n                    feeType={selectedEvent.feesType}\n                    url={user.imageUrl}>\n                    {/* imageDialog={handleImageDialogOpen} */}\n                </EventsDialog>\n                    \n                </Grid>\n                \n                {/* <ProfileEventCard></ProfileEventCard> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WcIcon from '@material-ui/icons/Wc';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        paddingLeft: theme.spacing(4),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1.5),\n        padding: theme.spacing(1)\n    }\n\n}));\n\nfunction ProfileDataBox(props) {\n    const classes = useStyles();\n    const [icon,setIcon] = React.useState(<EmailIcon></EmailIcon>)\n    React.useEffect(()=>{\n        switch(props.name){\n            case 'Username':\n                setIcon(<PersonPinCircleIcon></PersonPinCircleIcon>)\n                break;\n            case 'Name':\n                setIcon(<PersonIcon></PersonIcon>)\n                break;\n            case 'College':\n                setIcon(<SchoolIcon></SchoolIcon>)\n                break;\n            case 'Gender':\n                setIcon(<WcIcon></WcIcon>)\n                break;\n            case 'Bio':\n                setIcon(<InfoIcon></InfoIcon>)\n                break;\n            case 'Designation':\n                setIcon(<WorkIcon></WorkIcon>)\n                break;\n            case 'Email':\n                setIcon(<EmailIcon></EmailIcon>)\n                break;\n            default:\n                setIcon(<InfoIcon></InfoIcon>)\n        }\n    },[props.name])\n\n    return (\n        <Box className={classes.root3}>\n            <Box className={classes.avatar}>\n                <Avatar>\n                    {icon}\n                </Avatar>\n            </Box>\n            <Box className={classes.content}>\n                <Box><Typography>{props.name}</Typography></Box>\n                <Box><Typography variant=\"body2\" color=\"textSecondary\">{props.value}</Typography></Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ProfileDataBox;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthContext from '../AuthContext';\nimport Box from '@material-ui/core/Box';\nimport ProfileAboutDataBox from './ProfileAboutDataBox';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    editIcon: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n}));\n\nfunction ProfilePostsTabPanel(props) {\n    const classes = useStyles()\n    const { children, value, url, index, ...other } = props;\n    const user = React.useContext(AuthContext);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Box>\n                        <Box className={classes.editIcon}>\n                            <IconButton onClick={props.handleEditButton}><EditIcon></EditIcon></IconButton>\n                        </Box>\n                        <ProfileAboutDataBox name=\"Name\" value={user.name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Email\" value={user.email}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Username\" value={user.username}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"College\" value={user.college_name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Designation\" value={user.designation}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Gender\" value={user.gender}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Bio\" value={user.bio}></ProfileAboutDataBox>\n                    </Box>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main,\n    }\n}));\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const token = localStorage.getItem('token');\n    const [eventName,setEventName] = React.useState(\"\");\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/event/get_event_name?eventId=${event.event_id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n              setEventName(value)\n            })\n          })\n    },[event,token])\n\n    \n    function handleShareClick() {\n        \n    }\n\n    return (\n        <Card className={classes.root}>\n            {/* <CardActionArea> */}\n            {/* <CardMedia\n                component=\"img\"\n                height=\"180\"\n                image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n            /> */}\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {eventName}\n                </Typography>\n            </CardContent>\n\n            <CardActions>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    Download\n                </Button>\n                <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {event.certificate_status.toUpperCase()}\n                </Typography>\n            </CardActions>\n        </Card>\n    );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport CertificateCard from './CertificateCard';\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const token = localStorage.getItem('token');\n    \n    const [registerdEvents,setRegisteredEvents] = React.useState([]);\n\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/user/get_certificates`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n            //   console.log(value);\n              setRegisteredEvents(value);\n            })\n          })\n    },[token])\n\n    \n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    registerdEvents.length === 0 && <Typography>No Posted Events</Typography>\n                }\n                {registerdEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={6} key={index}>\n                    <CertificateCard event={event}></CertificateCard>\n                    </Grid>) \n                })}\n                    \n                </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import ProfileEventsTabPanel from './ProfileRegEventsTabPanel';\nimport ProfilePostedEventsTabPanel from './ProfilePostedEventsTabPanel';\nimport AboutProfileTabPanel from './ProfileAboutTabPanel';\nimport AuthContext from '../AuthContext';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ProfileCertificatePanel from './ProfileCertificateTabPanel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        borderRadius: theme.spacing(3)\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    }\n}));\n\n\n\n\nfunction Eventcard(props) {\n    localStorage.setItem('tabIndex', 3)\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <Grid container component=\"main\">\n                <CssBaseline />\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.large}\n                                sizes=\"100\" alt=\"\"\n                                src={process.env.REACT_APP_API_URL + `/api/image?id=${user.profile_pic}`}>\n                                <PersonIcon></PersonIcon>\n                            </Avatar>\n                        }\n                        action={\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={props.handleEditButton}>\n                                Edit Profile\n                            </Button>\n                        }\n                        title={\n                            <Typography variant=\"h4\">{user.name}</Typography>\n                        }\n                        subheader={user.bio}\n                    ></CardHeader>\n                </Grid>\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n            </Grid>\n\n            <CardContent>\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"About\" />\n                        {/* <Tab label=\"Registered Events\" /> */}\n                        <Tab label=\"Posted Events\" />\n                        <Tab label=\"Certificates\"></Tab>\n                    </Tabs>\n                </Paper>\n                <div>\n                    <AboutProfileTabPanel handleEditButton={props.handleEditButton} value={value} index={0}></AboutProfileTabPanel>\n                    {/* <ProfileEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfileEventsTabPanel> */}\n                    <ProfilePostedEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfilePostedEventsTabPanel>\n                    <ProfileCertificatePanel url={user.imageUrl} value={value} index={2}></ProfileCertificatePanel>\n                </div>\n            </CardContent>\n        </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { Grid, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from '../AuthContext';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n   \n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n}));\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateInfoTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const user = React.useContext(AuthContext);\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const [colleges, setColleges] = React.useState([]);\n    const [image, setImage] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [userName, setUserName] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [designation, setDesignation] = React.useState(null);\n    const [collegeName, setCollegeName] = React.useState(null);\n    const [collegeId,setCollegeId] = React.useState(null);\n    const [collegesName,setCollegesName] = React.useState([]);\n    const [imageUrl,setImageurl] = React.useState(null);\n    const [imageUpdated,setImageUpdated] = React.useState(false);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n\n    React.useEffect(() => {\n        setEmail(user.email);\n        setName(user.name);\n        setUserName(user.username);\n        setDesignation(user.designation);\n        setCollegeName(user.college_name);\n        setCollegeId(user.college_id);\n        setBio(user.bio);\n        setGender(user.gender);\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setColleges(value);\n                value.forEach((v)=>{\n                    setCollegesName((collegesNames)=>[...collegesNames,v.name])\n                  })\n                // setCollegeNames()\n            })\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // console.log(user.college_name);\n\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            // history.replace(\"/home\")\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n          setImage(event.target.files[0]);\n        //   setImageAsFile(imageFile => (image))\n          const url = URL.createObjectURL(event.target.files[0]);\n        //   const fileType = event.target.files[0].type;\n          setImageurl(url)\n          setImageUpdated(true);\n        //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    function handleName(event,value){\n        setName(event.target.value);\n    }\n    function handleEmail(event,value){\n        setEmail(value);\n    }\n    function handleGender(event,value){\n        console.log(event.target.value);\n        setGender(event.target.value);\n    }\n    function handleDesig(event,value){\n        setDesignation(event.target.value);\n    }\n    function handleCollege(event,value){\n        setCollegeName(value);\n        colleges.forEach(c=>{\n            if(c.name === value){\n            //   props.collegeId(c._id)\n            setCollegeId(c._id);\n            }\n          })\n        \n    }\n    function handleUserName(event,value){\n        setUserName(event.target.value);\n    }\n    function handleBio(event,value){\n        setBio(value);\n    }\n\n    function handleUpdateButton(event){\n        event.preventDefault();\n        setLoading(true);\n        // console.log(name);\n        // console.log(userName)\n\n        try {\n            var data = new FormData()\n            const payload = {\n                name: name,\n                email: email,\n                username: userName,\n                // college_name: collegeName,\n                college_id: collegeId,\n                designation : designation,\n                gender: gender,\n                // college_id: collegeId.value,\n                bio: bio,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/updateprofile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (imageUpdated) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n                    <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={12} alignContent=\"center\" alignItems=\"center\">\n                            <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                                <Badge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    badgeContent={<label htmlFor=\"contained-button-file\">\n                                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                            <EditIcon></EditIcon>\n                                        </IconButton>\n                                    </label>}>\n                                    <Avatar className={classes.large} sizes=\"100\" alt=\"\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL+`/api/image?id=${user.profile_pic}`}></Avatar>\n                                </Badge>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                autoComplete=\"fullName\"\n                                name=\"fullName\"\n                                value={name || \"\"}\n                                onChange={handleName}\n                                id=\"fullName\"\n                                label=\"Full Name\"\n                                autoFocus\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                            disabled\n                                id=\"email\"\n                                value={email}\n                                onChange={handleEmail}\n                                fullWidth\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                // variant=\"outlined\"\n                                fullWidth\n                                required\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                value={userName}\n                                onChange={handleUserName}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Autocomplete\n                                fullWidth\n                                id=\"college\"\n                                options={collegesName}\n                                getOptionLabel={(option) => option}\n                                // onChange={handleChange}\n                                value={collegeName}\n                                onChange={handleCollege}\n                                renderInput={(params) => <TextField name=\"college\" fullWidth required {...params} label=\"College\" />}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                                value={bio}\n                                onChange={handleBio}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    value={gender}\n                                    onChange={handleGender}\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    value={designation}\n                                    onChange={handleDesig}\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"WorkingProfessional\">Working Professional</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        className={classes.button}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpdateButton}\n                        disabled={loading}\n                    // className={classes.submit}\n                    >{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Profile\"}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UpdateInfoTabPanel;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthContext from '../AuthContext';\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const user = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error'\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [cPassword,setCPassword] = React.useState(null);\n    const [nPassword,setNPassword] = React.useState(null);\n\n\n    const handleClose = async (event, reason) => {\n        setCPassword(null);\n        setNPassword(null);\n\n        setState({ ...state, open: false });\n    };\n\n    function handleCurrentPasswordChange(event){\n        setCPassword(event.target.value);\n    }\n    function handleNewPasswordChange(event){\n        setNPassword(event.target.value);\n    }\n\n    function handleUpdatePassword(event) {\n        setLoading(true);\n        event.preventDefault();\n        // const { cPassword, nPassword } = event.target.elements;\n        // console.log(cPassword);\n        // console.log(nPassword);\n        try{\n            var data = new FormData()\n        const payload = {\n          email: user.email,\n          cPassword: cPassword,\n          nPassword: nPassword\n        };\n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL+'/api/users/updatepassword', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then(response =>{\n            if (response.status === 200){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: result.message,\n                        type: \"success\"\n                      })\n                })\n            }\n            else if (response.status === 401){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message:result.error,\n                        type: \"error\"\n                      })\n                })\n                \n            }\n           \n        })\n\n\n\n            \n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: error.message,\n              type: \"error\"\n            })\n          }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={2000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    ><Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    \n                    <div className={classes.paper}>\n                        <form className={classes.form} onSubmit={handleUpdatePassword}>\n                            <Grid container spacing={2} justify=\"center\" >\n                            \n\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"cPassword\"\n                                        label=\"Current Password\"\n                                        type=\"password\"\n                                        id=\"cPassword\"\n                                        value={cPassword}\n                                        onChange={handleCurrentPasswordChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"nPassword\"\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        id=\"nPassword\"\n                                        value={nPassword}\n                                        onChange={handleNewPasswordChange}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                            // className={classes.submit}\n                            >\n                                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Password\"}\n                            </Button>\n                        </form>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport UpdateInfoTabPanel from './UpdateInfoTabPanel';\nimport UpdatePasswordTabPanel from './UpdatePasswordTabPanel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    \n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n        flexGrow: 1,\n        // width: '100%',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n}));\n\nfunction UpdateProfile(props) {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function handleClose() {\n        props.handleClose();\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            style={{ minHeight: \"400px\" }}\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle id=\"scroll-dialog-title\">\n                <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <AppBar style={{ alignItems: 'center' }} position=\"static\" color=\"secondary\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\">\n                            <Tab label=\"Update info\" {...a11yProps(0)} />\n                            <Tab label=\"Change Password\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                <UpdateInfoTabPanel value={value} index={0}></UpdateInfoTabPanel>\n                <UpdatePasswordTabPanel value={value} index={1}></UpdatePasswordTabPanel>\n            </DialogContent>\n            <DialogActions alignItems=\"center\">\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default UpdateProfile;","import React from 'react';\nimport ProfileCard from '../Components/MainProfileCard';\nimport { Grid } from '@material-ui/core';\nimport UpdateProfileDialog from '../Components/UpdateProfileDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventsDialog from '../Components/EventsDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\n\nfunction EventsTabPanel(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [eOpen, setEOpen] = React.useState(false);\n    const activeEvents = React.useContext(ActiveEvents);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    function handleEditButton() {\n        setOpen(true);\n    }\n    function handleClose() {\n        setOpen(false);\n        setEOpen(false)\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setEOpen(true);\n\n    }\n    return (\n        <div>\n            <div>\n                <Grid container component=\"main\" >\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8}>\n                        <ProfileCard handleEditButton={handleEditButton}></ProfileCard>\n                        <UpdateProfileDialog open={open} handleClose={handleClose}></UpdateProfileDialog>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>\n                                        })\n                                    }\n                                </List>\n\n\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={eOpen}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EventsTabPanel;","import React from 'react';\n\n\n//MaterialUI imports\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [startDateError,setStartDateError] = React.useState(false);\n  const [endDateError,setEndDateError] = React.useState(false);\n  const [regEndDateError,setRegEndDateError] = React.useState(false);\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [eventTypes,setEventTypes] = React.useState([]);\n  React.useEffect(()=>{\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_types', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        value.forEach((v) => {\n          setEventTypes((eventTypes)=>[...eventTypes,v.title]);\n        })\n      })\n    })\n  },[token])\n\n\n  function handleEventNameChange(event) {\n    props.setName(event.target.value)\n  }\n\n  function handleDescChange(event) {\n    props.setDesc(event.target.value);\n  }\n\n  const handleStartDateChange = (date) => {\n    setStartDateError(false);\n    props.setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setEndDateError(false);\n    props.setEndDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDateError(false);\n    props.setRegEndDate(date);\n  };\n\n  function handleEventModeChange(event) {\n    props.setEventMode(event.target.value);\n  }\n  function handleeventTypsChange(event, value) {\n    props.setEventType(value);\n  }\n\n\n  function handleNext(event) {\n    event.preventDefault();\n    if(props.startDate === null){\n      setStartDateError(true)\n    }\n    else if(props.endDate === null){\n      setEndDateError(true);\n    }\n    else if(props.regEndDate === null){\n      setRegEndDateError(true)\n    }\n    else{\n      props.handleNext();\n    }\n    \n  }\n  function handleFeeTypeChange(event, value) {\n    props.setFeeType(value)\n  }\n  function handleRegistrationModeChange(event) {\n    if (event.target.value === \"form\") {\n      props.setSteps((steps) => [...steps, \"Registration Form\"])\n    }\n    else if (event.target.value === \"link\") {\n      props.setSteps(['About', 'More Details']);\n    }\n    props.setRegistrationMode(event.target.value);\n  }\n\n\n  return (\n    <form className={classes.form} onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventName\"\n            name=\"eventName\"\n            label=\"Name\"\n            fullWidth\n            value={props.name || \"\"}\n            onChange={handleEventNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"shortdesc\"\n            name=\"shortdesc\"\n            label=\"Short Description\"\n            fullWidth\n            value={props.desc || \"\"}\n            onChange={handleDescChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n            <DateTimePicker\n            inputProps={{required: true}}            \n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"startDate\"\n              label=\"Start Date\"\n              name=\"startDate\"\n              value={props.startDate}\n              onChange={handleStartDateChange}\n              error={startDateError}\n              helperText={startDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"endDate\"\n              label=\"End Date\"\n              name=\"endDate\"\n              value={props.endDate}\n              onChange={handleendDateChange}\n              error={endDateError}\n              helperText={endDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={12}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"regEndDate\"\n              label=\"Registration End Date\"\n              name=\"regEndDate\"\n              value={props.regEndDate}\n              onChange={handleRegEndDateChange}\n              error={regEndDateError}\n              helperText={regEndDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Mode</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Mode\"\n              inputProps={{\n                name: 'eventMode',\n                id: 'eventMode',\n              }}\n              value={props.eventMode || \"\"}\n              onChange={handleEventModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            fullWidth\n            id=\"combo-box-demo\"\n            options={eventTypes}\n            getOptionLabel={(option) => option}\n            onChange={handleeventTypsChange}\n            value={props.eventType}\n            renderInput={(params) => <TextField fullWidth required {...params} label=\"Type\" />}\n          />\n        </Grid>\n\n\n        <Grid item xs={12}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Registration\"\n              inputProps={{\n                name: 'registrationMode',\n                id: 'registaration mode',\n              }}\n              value={props.registrationMode || \"\"}\n              onChange={handleRegistrationModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"form\">Our Platform(Ellipse)</option>\n              <option value=\"link\">Other</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormLabel component=\"legend\">Entry Fee</FormLabel>\n          <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"Free\" onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n            <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n            <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      <div className={classes.buttons}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >Next\n        </Button>\n      </div>\n    </form>\n  );\n}","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [imageName, setImageName] = React.useState(\"\");\n  // const eventThemes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n  const [eventTags,setEventTags] = React.useState([]);\n  const [requirements,setRequirements] = React.useState([]);\n  // const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if(v.type === \"EventTags\"){\n            setEventTags((eventTags)=> [...eventTags,v.title]);\n          }\n          else if(v.type === \"EventRequirements\"){\n            setRequirements((r)=>[...r,v.title]);\n          }\n        })\n      })\n    })\n  }, [token])\n\n\n  function handleeventTagsChange(event, values) {\n    props.setThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    props.setRequirements(values);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      props.setPoster(event.target.files[0]);\n      const fileName = event.target.files[0].name;\n      setImageName(fileName);\n    }\n  }\n  function handleAddressTypeChange(evemt, value) {\n    props.setAddressType(value);\n  }\n\n  function handleRegLinkChange(event) {\n    props.setRegLink(event.target.value);\n  }\n\n  function handleRegFees(event) {\n    props.setFees(event.target.value);\n  }\n\n  function handleCollegeChange(event, value) {\n    console.log(value);\n    props.setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        props.setCollegeId(c._id)\n      }\n    })\n  }\n  function handleVenueCollegeChange(event, value) {\n    props.setVenueCollege(value);\n  }\n\n  function handleAboutChange(event) {\n    props.setAbout(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    props.setParticipantsType(value)\n  }\n  function handleBuildingChange(event) {\n    props.setBuilding(event.target.value);\n  }\n  // function handlePlatformChange(event){\n  //   props.setPlatformDetails(event.target.value)\n  // }\n  function handleNext(event) {\n    event.preventDefault();\n    props.handleNext();\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} onSubmit={handleNext}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter everything about your event in detail\"\n              autoComplete='off'\n              required\n              id=\"about\"\n              name=\"about\"\n              label=\"About\"\n              fullWidth\n              onChange={handleAboutChange}\n              value={props.about || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Autocomplete\n              multiple\n              id=\"themes\"\n              options={eventTags.map((option) => option)}\n              freeSolo\n              value={props.eventThemes || []}\n              onChange={handleeventTagsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Event Tags\" placeholder=\"Event Tags\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <input\n              id=\"contained-button-file\"\n              required\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleChange}\n              style={{ display: \"none\" }}>\n\n            </input>\n\n            <TextField\n              autoComplete='off'\n              required\n              id=\"eventposter\"\n              name=\"eventposter\"\n              label=\"Event Poster\"\n              component=\"span\"\n              value={imageName}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <label htmlFor=\"contained-button-file\">\n                      <IconButton component=\"span\" >\n                        <CameraAltIcon></CameraAltIcon>\n                      </IconButton>\n                    </label>\n\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </Grid>\n          {props.registrationMode !== \"form\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regLink\"\n              name=\"regLink\"\n              label=\"Registration Link\"\n              fullWidth\n              value={props.regLink || \"\"}\n              onChange={handleRegLinkChange}\n            />\n          </Grid>}\n\n          {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regFees\"\n              name=\"regFees\"\n              label=\"Registration Fees\"\n              fullWidth\n              value={props.regFees || \"\"}\n              onChange={handleRegFees}\n            />\n          </Grid>}\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={requirements.map((option) => option)}\n              freeSolo\n              value={props.requirements || []}\n              onChange={handleRequirementsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              fullWidth\n              id=\"combo-box-demo\"\n              options={collegesNames}\n              value={props.college || []}\n              getOptionLabel={(option) => option}\n              onChange={handleCollegeChange}\n              renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component=\"legend\">Participation</FormLabel>\n            <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"open\" onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n              <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${props.college}`} />\n            </RadioGroup>\n          </Grid>\n          {/* {props.eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={props.platformDetails || \"\"}\n            />\n          </Grid>} */}\n          {props.eventMode === \"Offline\" && <React.Fragment>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup aria-label=\"address\" aria-disabled name=\"address\" defaultValue=\"college\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"college\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Room No & Building\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                getOptionLabel={(option) => option}\n                value={props.venueCollege}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>\n\n          </React.Fragment>}\n          {props.registrationMode !== \"form\" && <Grid item xs={12}>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" name=\"terms\" />}\n              label=\"I accept the terms and conditions\"\n            />\n          </Grid>\n          }\n\n        </Grid>\n        <div className={classes.buttons}>\n          <Button onClick={props.handleBack} className={classes.button}>\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >{props.registrationMode !== \"form\" ? \"POST\" : \"NEXT\"}\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}","import React from 'react';\n\n//Materail impports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid } from '@material-ui/core';\nimport {useTheme } from '@material-ui/core/styles';\n\n\n\n\n\nexport default function FormDialog(props) {\n  const theme = useTheme();\n  const [name, setName] = React.useState(null);\n  const [type, setType] = React.useState(null);\n  const fieldOptions = [];\n  const [selectedOptions, setSelectedOptions] = React.useState(['option1', 'option2']);\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n  function handleTypeChange(event) {\n    setType(event.target.value);\n  }\n  function handleOptionsChange(event, values) {\n    setSelectedOptions(values);\n  }\n  function handleAddButton() {\n    if (type !== \"radiobuttons\" && type !== \"checkboxes\" && type !== \"dropdown\") {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': [] } }, name);\n    }\n    else {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': selectedOptions } }, name);\n    }\n    props.handleClose()\n\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n          boxShadow: 'none',\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Field</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Field Name\"\n                name=\"name\"\n                fullWidth\n                value={name}\n                required\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'outlined-age-native-simple',\n                  }}\n                  value={props.eventMode}\n                  onChange={handleTypeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"short_text\">Short Text</option>\n                  <option value=\"paragraph\">Long Description</option>\n                  <option value=\"dropdown\">Drop Down</option>\n                  <option value=\"date\">Date & Time</option>\n                  <option value=\"radiobuttons\">Radio Button</option>\n                  <option value=\"checkboxes\">Check Box</option>\n                  <option value=\"link\">Link</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {(type === \"radiobuttons\" || type === \"checkboxes\" || type === \"dropdown\") &&\n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"tags-filled\"\n                  options={fieldOptions.map((option) => option)}\n                  freeSolo\n                  value={selectedOptions || []}\n                  onChange={handleOptionsChange}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Options\" placeholder=\"Options\" helperText=\"you can choose multiple options for your checkboxes or radio buttons enter one option and press enter\" />\n                  )}\n                />\n              </Grid>\n            }\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(0),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    formControl: {\n        // marginTop: theme.spacing(3),\n    },\n    formgroup: {\n        marginTop: theme.spacing(1),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function AddressForm(props) {\n\n\n    const classes = useStyles();\n    // const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const fields = {\n        name: {\n            'title': 'Name',\n            'field': 'short_text',\n            'options': []\n        },\n        email: {\n            'title': 'Email',\n            'field': 'short_text',\n            'options': []\n        },\n        college: {\n            'title': 'College',\n            'field': 'short_text',\n            'options': []\n        },\n\n    }\n    const [selectedFields, setSelectedFields] = React.useState([]);\n    const [state, setState] = React.useState({\n        name: false,\n        email: false,\n        college: false,\n    });\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        const sName = event.target.name;\n        if (event.target.checked) {\n            setSelectedFields(selectedFields => [...selectedFields, fields[sName]]);\n        }\n        else if (!event.target.checked) {\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== sName));\n        }\n\n    };\n    const { name, email, college } = state;\n    // console.log(selectedFields);\n    function handleAddMoreButton() {\n        setOpen(true);\n    }\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n    const handleDelete = (chipToDelete) => () => {\n        setState({ ...state, [chipToDelete.name]: false })\n        setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    };\n\n    async function handlePostButton(e) {\n        e.preventDefault();\n        await props.setFields(selectedFields);\n        props.handlePost(selectedFields);\n    }\n\n    return (\n        <React.Fragment>\n\n            <form className={classes.form} onSubmit={handlePostButton}>\n                <Grid container spacing={3}>\n                    <AddFieldDialog\n                        open={open}\n                        handleClose={handleClose}\n                        handleAdd={handleFieldAddButton}></AddFieldDialog>\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Fields for your Registration Form</FormLabel>\n                            <FormGroup className={classes.formgroup}>\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={name} onChange={handleChange} name=\"name\" />}\n                                    label=\"Name\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={email} onChange={handleChange} name=\"email\" />}\n                                    label=\"Email\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={college} onChange={handleChange} name=\"college\" />}\n                                    label=\"College\"\n                                />\n                                {/* <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={phno} onChange={handleChange} name=\"phno\" />}\n                                    label=\"Phone No\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={github} onChange={handleChange} name=\"github\" />}\n                                    label=\"Github\"\n                                /> */}\n                            </FormGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={handleAddMoreButton}\n                        >\n                            Add More\n                        </Button>\n                    </Grid>\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {selectedFields.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n\n                                            label={data.title}\n                                            onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={<Checkbox color=\"primary\" name=\"terms\" />}\n                            label=\"I accept the terms and conditions\"\n                        />\n                    </Grid>\n                </Grid>\n                <div className={classes.buttons}>\n                    <Button onClick={props.handleBack} className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                    >Post\n                    </Button>\n                </div>\n            </form>\n        </React.Fragment>\n    );\n}","import React from 'react';\n\n//Material UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n//Components imports\nimport EventPostDetails1 from '../Components/EventPostDetails1';\nimport EventPostDetails2 from '../Components/EventPostDetails2';\nimport EventPostDetails3 from '../Components/EventPostDetails3';\nimport AuthContext from '../AuthContext';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//function for copy right\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n        ellipseapp.com\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3),\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  stepper: {\n    padding: theme.spacing(3, 8, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(12),\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\n\nexport default function Checkout({ history }) {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const user = React.useContext(AuthContext);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(['About', 'More Details']);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const [eventName, setEventName] = React.useState(null);\n  const [shortDesc, setShortDesc] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [registrationMode, setRegistrationMode] = React.useState(null);\n\n\n\n  const [regLink, setRegLink] = React.useState(null);\n  const [fees, setFees] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState(null);\n  const [image, setImage] = React.useState(null);\n  const [addressType, setAddressType] = React.useState(null);\n  const [collegeName, setCollegeName] = React.useState(user.college_name);\n  const [collegeId, setCollegeId] = React.useState(user.college_id)\n  const [building, setBuildingAdress] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(user.name + \",\" + user.college_name);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const [participantsType, setParticipantsType] = React.useState(\"open\");\n  const [fields, setFields] = React.useState([]);\n  const [platformDetails,setPlatformDetails] = React.useState(null);\n\n\n\n\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <EventPostDetails1\n            name={eventName}\n            desc={shortDesc}\n            startDate={startDate}\n            endDate={endDate}\n            regEndDate={regEndDate}\n            eventMode={eventMode}\n            eventType={eventType}\n            about={about}\n            feeType={feeType}\n            registrationMode={registrationMode}\n            setName={setEventName}\n            setDesc={setShortDesc}\n            setStartDate={setStartDate}\n            setEndDate={setendDate}\n            setRegEndDate={setRegEndDate}\n            setEventMode={setEventMode}\n            setEventType={setEventType}\n            setRegistrationMode={setRegistrationMode}\n            setAbout={setAbout}\n            handleNext={handleNext}\n            setFeeType={setFeeType}\n            steps={steps}\n            setSteps={setSteps} />);\n      case 1:\n        return (\n          <EventPostDetails2\n            handleBack={handleBack}\n            handleEventPost={handleEventPost}\n            eventMode={eventMode}\n            feeType={feeType}\n            eventThemes={eventThemes}\n            eventPoster={image}\n            regLink={regLink}\n            regFees={fees}\n            about={about}\n            requirements={selectedrequirements}\n            college={collegeName}\n            building={building}\n            organizer={organizer}\n            registrationMode={registrationMode}\n            venueCollege={venueCollege}\n            participantsType={participantsType}\n            platformDetails={platformDetails}\n            setPlatformDetails={setPlatformDetails}\n            setThemes={setEventThemes}\n            setPoster={setImage}\n            setRegLink={setRegLink}\n            setFees={setFees}\n            setRequirements={setSelectedRequirements}\n            setOrganizer={setOrganizer}\n            setAddressType={setAddressType}\n            setCollegeName={setCollegeName}\n            setCollegeId={setCollegeId}\n            setBuilding={setBuildingAdress}\n            setVenueCollege={setVenueCollege}\n            setAbout={setAbout}\n            setParticipantsType={setParticipantsType}\n            handleNext={registrationMode === \"form\" ? handleNext : handlePostwithoutregFileds} />\n        );\n      case 2:\n        return (\n          <EventPostDetails3\n            handleBack={handleBack}\n            fields={fields}\n            setFields={setRegFields} handlePost={handleEventPost}>\n          </EventPostDetails3>);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n\n  const handleEventPost = (allFields) => {\n    var oAllowed = false;\n    if (participantsType === \"open\") {\n      oAllowed = true\n    }\n    setLoading(true);\n    try {\n      var data = new FormData();\n      const payload = {\n        user_id: user.user_id,\n        name: eventName,\n        description: shortDesc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: fees,\n        about: about,\n        // organizer: organizer,\n        fee_type: feeType,\n        requirements: selectedrequirements,\n        college_name: collegeName,\n        college_id: collegeId,\n        venue_type: addressType,\n        venue: building,\n        reg_fields: allFields,\n        reg_mode: registrationMode,\n        o_allowed: oAllowed,\n        platform_details: platformDetails\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL+'/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data,\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            var data2 = new FormData();\n            data2.append(\"image\", image);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/uploadimage?id=${value.eventId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data2,\n            }).then(response => {\n              if (response.status === 200) {\n                response.json().then(val => {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"Event Added Successfully\",\n                    type: \"success\",\n                    autoHide: \"4000\"\n                  })\n                })\n              }\n            })\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n          })\n        }\n      })\n\n\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: '5000',\n      })\n    }\n  }\n\n  function setRegFields(f) {\n    setFields(f);\n  }\n\n  function handlePostwithoutregFileds() {\n    handleEventPost(null);\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function handleCloseButton() {\n    history.goBack();\n  }\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Event Added Successfully\") {\n      history.replace(\"/home\");\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      {<Backdrop open={loading} className={classes.backdrop}><CircularProgress></CircularProgress></Backdrop>}\n      <main className={classes.layout}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleCloseButton}>\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Post your Event\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you.\n                </Typography>\n              </React.Fragment>\n            ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                </React.Fragment>\n              )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport Logo from '../Components/Images/logo.svg';\nimport { Button } from '@material-ui/core';\n\n\nimport { Redirect } from 'react-router';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    \n    grow: {\n        flexGrow: 1,\n        alignItems: 'center',\n    },\n    sectionDesktop: {\n\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    tabs: {\n        display: 'none',\n        [theme.breakpoints.up('lg')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginLeft: theme.spacing(4),\n        },\n    },\n    mobiletab: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    tabPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    flex_section: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'row',\n        // minHeight: 0\n    },\n\n    flex_col_scroll: {\n        flexGrow: 1,\n        overflow: 'auto',\n        // minHeight: '100vh'\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n        fontFamily: 'Gugi',\n        marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n      },\n    '@global': {\n        '*::-webkit-scrollbar': {\n          width: '0.5em',\n          height: '0.5em'\n        },\n        '*::-webkit-scrollbar-track': {\n          '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '*::-webkit-scrollbar-thumb': {\n          backgroundColor: '#ad9d9d',\n          outline: '1px solid slategrey'\n        }\n      },\n      mobileTitle:{\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n        \n      },\n      titleButton: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'inline-block',\n        },\n        margin: theme.spacing(0),\n        padding: theme.spacing(0),\n        textTransform: 'none'\n      },\n}));\n\nexport default function MiniDrawer(props) {\n    const classes = useStyles();\n    // const theme = useTheme();\n    const t = localStorage.getItem('theme');\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n    // const [value, setValue] = React.useState(0);\n    // const [searchedEvent, setSearchedEvent] = React.useState([]);\n\n    const isMenuOpen = Boolean(anchorEl);\n    // const [open, setOpen] = React.useState(false);\n    const token = localStorage.getItem('token');\n\n    const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n    // const [currentUser, setCurrentUser] = React.useState({});\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    \n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // setCurrentUser(value[0]);\n                    props.setUser(value[0])\n                    if (value[0].college_name === null) {\n                        setUserDetailsDone(false);\n                    }\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n\n// eslint-disable-next-line\n    }, [token])\n\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        return <Redirect to=\"/userinfo\"></Redirect>\n    }\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        // setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n\n\n    function handleThemeChange(event) {\n        // console.log(event.target.checked);\n        setDarkThemeSelected(event.target.checked);\n        if (event.target.checked) {\n            localStorage.setItem('theme', 'dark');\n            window.location.reload(false);\n        }\n        else {\n            localStorage.setItem('theme', 'light');\n            window.location.reload(false);\n        }\n    }\n\n\n\n    function handleSignout(event) {\n\n        fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then((result) => {\n            result.json().then((data) => {\n                if (data.message === \"success\") {\n                    localStorage.removeItem('token');\n                    localStorage.removeItem('tabIndex');\n                    props.handleSignout()\n                }\n            })\n        })\n\n    }\n    function handleHomeClick() {\n        props.handleHomeClick()\n        // props.history.push(\"/home\")\n        // localStorage.setItem('tabIndex',2);\n      }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}>\n            <MenuItem> Dark Theme <Switch\n                checked={darkThemeSelected}\n                onChange={handleThemeChange}\n                color=\"primary\"\n                name=\"checkedB\"\n                inputProps={{ 'aria-label': 'dark mode checkbox' }}\n            /></MenuItem>\n            <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n        </Menu>\n    );\n\n\n\n\n    const handleClose = () => {\n        setNotificationsOpen(false);\n    };\n\n    \n\n    function handleNotificationClick() {\n        setNotificationsOpen(true);\n    }\n\n\n    const handleDrawerOpen = () => {\n        props.setDOpen(true);\n    };\n\n    function handleTitleButtonClick() {\n        localStorage.setItem('tabIndex', 0)\n        props.handleHomeClick()\n      }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                color=\"secondary\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: props.dOpen,\n                })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: props.dOpen,\n                        })}>\n                        <MenuIcon color=\"primary\" />\n                    </IconButton>\n                    <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n                    <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n                    <div className={classes.grow} />\n                    <Typography variant=\"h5\" noWrap>{props.event.name}</Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton onClick={handleHomeClick}><HomeIcon></HomeIcon></IconButton>\n                        <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                            <Badge badgeContent={0} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\">\n                            <SettingsIcon></SettingsIcon>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMenu}\n            <NotificationsDialog open={notificationsOpen} handleClose={handleClose}></NotificationsDialog>\n        </div>\n    );\n}\n\n\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setAnnouncements(value);\n      })\n    })\n  }, [token, event._id])\n\n  const handleDeleteButton = (a) => () =>{\n    fetch(process.env.REACT_APP_API_URL+`/api/event/delete_announcement?id=${a._id}&event_id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n      }).then(response => {\n        response.json().then(value => {\n            setAnnouncements(value);\n        })\n      })\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Button onClick={handleDeleteButton(a)}>Delete</Button>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\n\n\n//Materail imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function AnnouncementForm(props) {\n  const theme = useTheme()\n  const token = localStorage.getItem('token');\n  const [title, setTitle] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [visibility, setVisibility] = React.useState(\"All\");\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleDescChange(event) {\n    setDesc(event.target.value);\n  }\n\n\n  function handleVisibilityChange(event, value) {\n    console.log(value);\n    setVisibility(value);\n  }\n  function handleAddButton() {\n    // console.log(visibility);\n    var visible_all = true;\n    if (visibility !== \"All\") {\n      visible_all = false;\n    }\n    try {\n      var data = new FormData();\n      const d = { event_id: props.id, title: title, description: desc, visible_all: visible_all }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL+`/api/event/add_announcement`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Added successfully',\n            type: \"success\",\n            autoHide: 2000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n    props.handleClose()\n\n  }\n  const handleClose = async (event, reason) => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Announcement</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                fullWidth\n                value={title}\n                required\n                onChange={handleTitleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                fullWidth\n                value={desc}\n                required\n                onChange={handleDescChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Announcement visibility</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={visibility} onChange={handleVisibilityChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"All\" control={<Radio color=\"default\" />} label=\"All\" />\n                <FormControlLabel value=\"Registered Users\" control={<Radio color=\"default\" />} label=\"Registered Users\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Add\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {  useTheme } from '@material-ui/core/styles';\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SendEmailForm(props) {\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const [content, setContent] = React.useState(null);\n\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleContentChange(event) {\n        setContent(event.target.value);\n    }\n\n    function handleAddButton() {\n        try {\n            var data = new FormData();\n            const d = { \n                event_id: props.id, \n                title: title, \n                content: content,\n                emails: props.emails}\n            data = JSON.stringify(d);\n            console.log(data);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/sendemail`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                response.json().then(value => {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Added successfully',\n                        type: \"success\",\n                        autoHide: 2000\n                    });\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n        props.handleClose()\n\n    }\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    // boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Content for your Email</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Enter everything about your event in detail\"\n                                autoComplete='off'\n                                required\n                                id=\"content\"\n                                name=\"content\"\n                                label=\"Content\"\n                                fullWidth\n                                onChange={handleContentChange}\n                                value={content || \"\"}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AddAnnouncementForm from './AddAnnouncementForm';\nimport SendEmailForm from './SendEmailForm';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [announcementDialog, setAnnouncementDialog] = React.useState(false);\n  const [sendEmailDialog, setSendEmailDialog] = React.useState(false);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            setRowValues(rowValues => [...rowValues, d.data])\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  function handleAddAnnouncement() {\n    setAnnouncementDialog(true);\n  }\n\n  function handleAnnoucementClose() {\n    setAnnouncementDialog(false);\n  }\n\n  function handleSendEmail() {\n    console.log(selected);\n    setSendEmailDialog(true);\n  }\n  function handleSendEmailClose() {\n    setSendEmailDialog(false);\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <SendEmailForm open={sendEmailDialog} emails={selected} handleClose={handleSendEmailClose}></SendEmailForm>\n      <AddAnnouncementForm open={announcementDialog} id={event._id} handleClose={handleAnnoucementClose}></AddAnnouncementForm>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button variant=\"outlined\" onClick={handleAddAnnouncement} className={classes.button}>Add Announcement</Button>\n          <Button variant=\"contained\" onClick={handleSendEmail} className={classes.button}>Send Emails to Selected</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3} >\n\n        <Paper className={classes.fixedHeightPaper}>\n          <Typography>Total Registrations</Typography>\n          <Typography component=\"p\" variant=\"h4\">\n            {rowValues.length}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\n// import AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { TextField } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0.5)\n    },\n    root5: {\n        marginLeft: theme.spacing(0.5),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textField: {\n        zIndex: '100',\n        position: 'fixed',\n        bottom: '0px'\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    // console.log(event)\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            // console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div className={classes.textField}>\n                            {/* <TextField\n                                // disabled={props.loading}\n                                fullWidth\n                                placeholder=\"Type your message\"\n                                multiline\n                                // onChange={handleNewMessage}\n                                // value={newmessage || \"\"}\n                                rowsMax=\"3\"\n                            // onKeyUp={handleKeyPress}\n                            >\n\n                            </TextField> */}\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    // padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    // margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst EventEdit = (props) => {\n  var event = props.event;\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error'\n  });\n\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [regLink, setRegLink] = React.useState(null);\n  const [regFees, setRegFees] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  // const [image, setImage] = React.useState(null);\n  // const [imageName, setImageName] = React.useState(\"\");\n  // const [addressType,setAddressType] = React.useState(\"\");\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [regMode, setRegMode] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(null);\n  const [participantType, setParticipantsType] = React.useState(\"open\");\n  const [image, setImage] = React.useState(null);\n  const [imageUrl, setImageurl] = React.useState(null);\n  const [imageUpdated, setImageUpdated] = React.useState(false);\n  const [venue, setVenue] = React.useState(null);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const { vertical, horizontal, open, message, type } = state;\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n\n  const token = localStorage.getItem('token');\n\n\n  const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  // const colleges = [\"VIT University\", \"GITAM University\", \"SRM University\"];\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n  }, [token])\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setendDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDate(date)\n  };\n  React.useEffect(() => {\n    setEventThemes(event.tags);\n    setEventType(event.event_type);\n    setName(event.name);\n    setDesc(event.description);\n    setStartDate(event.start_time);\n    setendDate(event.finish_time);\n    setRegEndDate(event.registration_end_time);\n    setEventMode(event.event_mode);\n    setRegLink(event.reg_link);\n    setAbout(event.about);\n    setRegFees(event.fees);\n    setSelectedRequirements(event.requirements);\n    setFeeType(event.fee_type);\n    setCollegeName(event.college_name);\n    setRegMode(event.reg_mode);\n    setOrganizer(event.organizer);\n    setVenue(event.venue);\n    setVenueCollege(event.venue_college);\n    // setParticipantsType(event.o_allowed)\n    if (event.o_allowed === true) {\n      setParticipantsType(\"open\")\n    }\n    else {\n      setParticipantsType(\"onlycollege\")\n    }\n\n  }, [token, event])\n\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Saved changes successfully\") {\n      // history.replace()\n      // history.replace(\"/otpverification\")\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  };\n\n  async function handleEventPost(e) {\n    e.preventDefault();\n    setLoading(true);\n    var oAllowed = false;\n    if (participantType === \"open\") {\n      oAllowed = true\n    }\n    // console\n    try {\n      // console.log(\"started\");\n      // getBase64(image, (result) => {\n      var data = new FormData();\n      const payload = {\n        eventId: event._id,\n        name: name,\n        description: desc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        // poster: result,\n        reg_link: regLink,\n        fee: regFees,\n        about: about,\n        fee_type: feeType,\n        college: collegeName,\n        organizer: organizer,\n        requirements: selectedrequirements,\n        o_allowed: oAllowed,\n        reg_mode: regMode,\n        venue: venue,\n        venue_college: venueCollege\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/updateevent', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            // console.log(value);\n            event = value.event;\n            if (imageUpdated) {\n              var data2 = new FormData()\n              data2.append(\"image\", image);\n              fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${event._id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: data2\n              }).then(res => {\n                if (res.status === 200) {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"successful\",\n                    type: \"success\",\n                    autoHide: 300\n                  })\n                }\n              })\n            }\n            else {\n              setLoading(false);\n              setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"Saved changes successfully\",\n                type: \"success\"\n              })\n            }\n            // history.replace(\"/home\")\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: value,\n              type: \"error\"\n            })\n          })\n        }\n      })\n\n      // })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleeventTypsChange(event, value) {\n    setEventType(value);\n  }\n\n  function handleeventTagsChange(event, values) {\n    setEventThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    setSelectedRequirements(values);\n  }\n\n  // function handleChange(event) {\n  //   if (event.target.files[0]) {\n  //     setImage(event.target.files[0]);\n  //     const fileName = event.target.files[0].name;\n  //     setImageName(fileName);\n  //   }\n\n  // }\n\n  function handleAddressTypeChange(evemt, value) {\n    // setAddressType(value);\n  }\n  function handleName(event) {\n    setName(event.target.value)\n  }\n  function handleDesc(event) {\n    setDesc(event.target.value);\n  }\n  function handleFeeTypeChange(event, value) {\n    // props.setFeeType(value)\n    setFeeType(value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // props.setCollegeName(value);\n    setCollegeName(value);\n  }\n  function handleEventMode(event) {\n    setEventMode(event.target.value);\n  }\n\n  function handleRegLink(event) {\n    setRegLink(event.target.value);\n  }\n  function handleFees(event) {\n    setRegFees(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    setParticipantsType(value)\n  }\n  function handleVenue(event) {\n    setVenue(event.target.value);\n  }\n  function handleVenueCollegeChange(event, value) {\n    setVenueCollege(value);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n      //   setImageAsFile(imageFile => (image))\n      const url = URL.createObjectURL(event.target.files[0]);\n      //   const fileType = event.target.files[0].type;\n      setImageurl(url)\n      setImageUpdated(true);\n      //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n    }\n\n  }\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <form className={classes.form} novalidate onSubmit={handleEventPost}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} >\n              <input id=\"contained-button-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n              <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                badgeContent={<label htmlFor=\"contained-button-file\">\n                  <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <EditIcon></EditIcon>\n                  </IconButton>\n                </label>}>\n                <img height=\"160\" width=\"150\" alt=\"poster\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`} ></img>\n              </Badge>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventName\"\n                name=\"eventName\"\n                label=\"Event name\"\n                value={name || \"\"}\n                onChange={handleName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"shortdesc\"\n                name=\"shortdesc\"\n                label=\"Short Description\"\n                fullWidth\n                value={desc || \"\"}\n                onChange={handleDesc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"startDate\"\n                  label=\"Event Start Date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"endDate\"\n                  label=\"Event End Date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={handleendDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"regEndDate\"\n                  label=\"Registration End Date\"\n                  name=\"regEndDate\"\n                  value={regEndDate}\n                  onChange={handleRegEndDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Event Mode</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Event Mode\"\n                  value={eventMode || \"\"}\n                  onChange={handleEventMode}\n                  inputProps={{\n                    name: 'eventMode',\n                    id: 'event mode',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Online\">Online</option>\n                  <option value=\"Offline\">Offline</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"event type\"\n                options={eventTypes}\n                getOptionLabel={(option) => option}\n                value={eventType || \"\"}\n                onChange={handleeventTypsChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Event Type\" />}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"event themes\"\n                options={eventTypes.map((option) => option)}\n                // defaultValue={[eventTypes[1]]}\n                freeSolo\n                value={eventThemes || []}\n                onChange={handleeventTagsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Event Themes\" placeholder=\"Event Themes\" />\n                )}\n              />\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <input\n                id=\"contained-button-file\"\n                required\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n                style={{ display: \"none\" }}>\n\n              </input>\n\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventposter\"\n                name=\"eventposter\"\n                label=\"Event Poster\"\n                component=\"span\"\n                value={imageName}\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"start\">\n                      <label htmlFor=\"contained-button-file\">\n                        <IconButton component=\"span\" >\n                          <CameraAltIcon></CameraAltIcon>\n                        </IconButton>\n                      </label>\n\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            </Grid> */}\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Entry Fee</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={feeType || \"\"} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n                <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n              </RadioGroup>\n            </Grid>\n            {regMode !== \"form\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  id=\"regLink\"\n                  name=\"regLink\"\n                  label=\"Registration Link\"\n                  fullWidth\n                  value={regLink || \"\"}\n                  onChange={handleRegLink}\n                />\n              </Grid>}\n            {feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"regFees\"\n                name=\"regFees\"\n                value={regFees || \"\"}\n                label=\"Registration Fees\"\n                onChange={handleFees}\n                fullWidth\n              // helperText={\"Enter 0 if your event is free\"}\n              />\n            </Grid>}\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                disabled\n                id=\"collegename\"\n                options={colleges}\n                getOptionLabel={(option) => option}\n                value={collegeName || \"\"}\n                onChange={handleCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth >\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  disabled\n                  label=\"Registration\"\n                  inputProps={{\n                    name: 'registrationMode',\n                    id: 'registration mode',\n                  }}\n                  value={regMode || \"\"}\n                // onChange={handleRegistrationModeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"form\">Our Platform(Ellipse)</option>\n                  <option value=\"link\">Other</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                id=\"organizer\"\n                name=\"organizer\"\n                label=\"Organizer\"\n                fullWidth\n                value={organizer || \"\"}\n              />\n            </Grid> */}\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"requirements\"\n                options={requirements.map((option) => option)}\n                freeSolo\n                value={selectedrequirements}\n                onChange={handleRequirementsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Participation</FormLabel>\n              <RadioGroup name=\"participanttype\" value={participantType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n                <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${collegeName}`} />\n              </RadioGroup>\n            </Grid>\n            {eventMode === \"Offline\" && <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup disabled aria-label=\"address\" name=\"address\" defaultValue=\"College/University\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel disabled value=\"College/University\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>}\n            {eventMode === \"Offline\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  value={venue || \"\"}\n                  onChange={handleVenue}\n                  id=\"building\"\n                  name=\"building\"\n                  label=\"Room No & Building\"\n                  fullWidth\n                />\n              </Grid>\n            }\n            {eventMode === \"Offline\" && <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                value={venueCollege}\n                getOptionLabel={(option) => option}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter everything about your event in detail\"\n                autoComplete='off'\n                // required\n                value={about || \"\"}\n                id=\"about\"\n                name=\"about\"\n                label=\"About\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save Changes\"}\n          </Button>\n        </form>\n      </div>\n\n      {/* </Grid> */}\n      {/* <Box mt={2}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}\n\nexport default withRouter(EventEdit);\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClose = async (event, reason) => {\n    getParticipantsList()\n    setState({ ...state, open: false });\n  }\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getParticipantsList = () =>{\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          // const firstdata = value[0].data;\n          // const columnNames = Object.keys(firstdata);\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n      })\n    })\n  }\n\n\n\n  function handleGenerateCertificateButton() {\n    setLoading(true);\n    console.log(selected)\n    try {\n      var data = new FormData();\n      const d = { eventId: event._id, participants: selected }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/generate_certificates`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          \n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Generated successfully',\n            type: \"success\",\n            autoHide: 4000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button\n            variant=\"contained\"\n            onClick={handleGenerateCertificateButton}\n            className={classes.button}>{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Generate Certificates\"}</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n              if(d.certificate_status !== \"not_generated\"){\n                setRowValues(rowValues => [...rowValues, d.data])\n              }\n            \n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return (\n\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4} lg={9}>\n        {/* <Paper className={classes.buttonsPaper}>\n          <Button variant=\"contained\" onClick={handleGenerateCertificateButton} className={classes.button}>Generate Certificates</Button>\n        </Paper> */}\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CertificateSample from './Images/certificate_sample.png';\nimport Typography from '@material-ui/core/Typography';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n}));\n\nexport default function StickyHeadTable(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    }\n\n    React.useEffect(() => {\n        setTitle(event.certificate.title)\n    }, [event])\n\n    function handleUpdateButton() {\n        setLoading(true);\n        try {\n            if (title === \"\" || title === null) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"please fill the details\",\n                    type: \"error\",\n                    autoHide: 6000\n                })\n            }\n            else {\n                var data = new FormData();\n                const d = { eventId: event._id, title: title }\n                data = JSON.stringify(d);\n                fetch(process.env.REACT_APP_API_URL + `/api/event/update_certificate_title`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    // console.log(response);\n                    response.json().then(value => {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Generated successfully',\n                            type: \"success\",\n                            autoHide: 4000\n                        });\n                    })\n                })\n            }\n\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n    }\n\n\n    return (\n        <div className={classes.paper}>\n            <Grid container spacing={2}>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={open}\n                    autoHideDuration={autoHide}\n                    onClose={handleClose}\n                    key={vertical + horizontal}>\n                    <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                </Snackbar>\n                <Grid item xs={12}>\n                    <TextField\n                        autoComplete='off'\n                        required\n                        id=\"title\"\n                        name=\"title\"\n                        label=\"Certificate Title\"\n                        value={title || \"\"}\n                        onChange={(e) => setTitle(e.target.value)}\n                        fullWidth\n                        inputProps={{\n                            maxLength: 32,\n                        }}\n                        helperText=\"You can change the title of certificate as shown below in sample by default it is event name\"\n                    />\n                </Grid>\n                {/* <Grid item xs={6}>\n                </Grid> */}\n                <Grid item xs={12}>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        onClick={handleUpdateButton}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update\"}\n                    </Button>\n                </Grid>\n            </Grid>\n            <Typography style={{marginTop:\"10px\"}} variant=\"h4\">Sample Certificate</Typography>\n            <img width=\"100%\" alt=\"certificate sample\" src={CertificateSample}></img>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport AdminCertificateDashboard1 from './AdminCertificateDashboad1';\nimport AdminCertificateDashboard2 from './AdminCertificateDashboard2';\nimport AdminCertificateDashboard3 from './AdminCertificateDashboard3';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <div className={classes.root}>\n\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"Dashboard\"></Tab>\n                        <Tab label=\"Pending\" />\n                        <Tab label=\"Generated\" />\n                    </Tabs>\n                </Paper>\n                {\n                    value === 0 && <AdminCertificateDashboard3 event={event}></AdminCertificateDashboard3>\n                }\n                {\n                    value === 1 && <AdminCertificateDashboard1 event={event}></AdminCertificateDashboard1>\n                }\n                {\n                    value === 2 && <AdminCertificateDashboard2 event={event}></AdminCertificateDashboard2>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport { Button, Typography } from '@material-ui/core';\n\nimport EventDetailsNavigationBar from '../Components/EventDetailsNavigationBar';\nimport AnnouncementPanel from '../Components/EventsAnnouncementsPanel';\nimport AnnouncementEditPanel from '../Components/AnnouncementsEditPanel';\nimport AboutPanel from '../Components/AboutEventPanel';\nimport TimeLinePanel from '../Components/EventTimeLinePanel';\nimport DashboardPanel from '../Components/DashboardPanel';\nimport ChatPanel from '../Components/EventDetailsChatPanel';\nimport EventPost from './EventEdit';\nimport CertificateDashboard from '../Components/AdminCertificateDashboard';\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  \n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3),\n    },\n  },\n\n}));\n\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  localStorage.removeItem('eventid')\n  const token = localStorage.getItem('token');\n  const id = props.match.params.eventId;\n  const t = localStorage.getItem('theme');\n\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [event, setEvent] = React.useState({});\n  const [adminAccess, setAdminAccess] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [selected, setSelected] = React.useState({\n    infoSelected: true,\n    dashBoardSelected: false,\n    timilineSelected: false,\n    announcementSelected: false,\n    settingsSelected: false,\n    editEventSelected: false,\n    chatSelected: false,\n    certificateSelected: false\n  })\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(val => {\n        setEvent(val.event);\n        \n      })\n    })\n    \n  }, [token,id])\n\n  // console.log(adminAccess)\n  React.useEffect(()=>{\n    if( event.user_id !== undefined && currentUser.user_id !== undefined){\n      if (event.user_id === currentUser.user_id) {\n        // console.log(event);\n        // console.log(currentUser)\n        setAdminAccess(true);\n      }\n    }\n    \n  },[currentUser,event])\n\n\n\n  // const handleDrawerOpen = () => {\n  //   setDrawerOpen(true);\n  // };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  function handleHomeClick() {\n    props.history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n\n\n\n  function infoClicked() {\n    setSelected({\n      infoSelected: true,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n\n  function dashBoardClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: true,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function timelineClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: true,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function announcementsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: true,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function settingsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: true,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function editEventClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: true,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function chatClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: true,\n      certificateSelected: false\n    })\n  }\n  function certificateClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: true\n    })\n  }\n  const {\n    infoSelected,\n    dashBoardSelected,\n    timilineSelected,\n    announcementSelected,\n    settingsSelected,\n    editEventSelected, chatSelected, certificateSelected } = selected;\n\n    function handleSignout(){\n      props.history.replace('/');\n    }\n\n    function handleRegClick() {\n      props.history.push('/event/register/' + event._id);\n      // props.handleReg(event._id);\n  \n    }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <EventDetailsNavigationBar event={event} handleSignout={handleSignout} handleHomeClick={handleHomeClick} setUser={setCurrentUser}  dOpen={drawerOpen} setDOpen={setDrawerOpen}></EventDetailsNavigationBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: drawerOpen,\n          [classes.drawerClose]: !drawerOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: drawerOpen,\n            [classes.drawerClose]: !drawerOpen,\n          }),\n        }}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon color=\"primary\"/> : <ChevronLeftIcon color=\"primary\"/>}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={infoClicked} selected={infoSelected}>\n            <ListItemIcon >\n              <InfoIcon color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n          <ListItem button onClick={timelineClicked} selected={timilineSelected}>\n            <ListItemIcon>\n              <TimelineIcon color=\"primary\"></TimelineIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Schedule\" />\n          </ListItem>\n          <ListItem button onClick={announcementsClicked} selected={announcementSelected}>\n            <ListItemIcon>\n              <AnnouncementIcon color=\"primary\"></AnnouncementIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Announcements\" />\n          </ListItem>\n          <ListItem button onClick={chatClicked} selected={chatSelected}>\n            <ListItemIcon>\n              <TelegramIcon color=\"primary\"></TelegramIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Chat\" />\n          </ListItem>\n        </List>\n        <Divider />\n        {\n          adminAccess && <List>\n            <ListItem button onClick={dashBoardClicked} selected={dashBoardSelected}>\n              <ListItemIcon >\n                <DashboardIcon color=\"primary\"/>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n            <ListItem button onClick={editEventClicked} selected={editEventSelected}>\n              <ListItemIcon>\n                <EditIcon color=\"primary\"></EditIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Edit Event\" />\n            </ListItem>\n            <ListItem button onClick={certificateClicked} selected={certificateSelected}>\n              <ListItemIcon>\n                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Certificates\" />\n            </ListItem>\n            <ListItem button onClick={settingsClicked} selected={settingsSelected}>\n              <ListItemIcon>\n                <SettingsIcon color=\"primary\"></SettingsIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n          </List>\n        }\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* <Typography align='center' variant=\"h4\" style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>{event.name}</Typography> */}\n        {\n          infoSelected && event != null && <AboutPanel event={event}></AboutPanel>\n        }\n        {\n          editEventSelected && event != null && <EventPost event={event} ></EventPost>\n        }\n        {\n          timilineSelected && event != null && <TimeLinePanel event={event}></TimeLinePanel>\n        }\n        {\n          dashBoardSelected && event != null && <DashboardPanel event={event}></DashboardPanel>\n        }\n        {\n          chatSelected && event != null && <div className={classes.chat} ><ChatPanel user={currentUser} open={drawerOpen} event={event}></ChatPanel></div>\n        }\n        {\n          adminAccess && announcementSelected && event != null && <AnnouncementEditPanel event={event}></AnnouncementEditPanel>\n        }\n        {\n          !adminAccess && announcementSelected && event != null && <AnnouncementPanel event={event}></AnnouncementPanel>\n        }\n        {\n          adminAccess && certificateSelected && event != null && <CertificateDashboard event={event}></CertificateDashboard>\n        }\n        {\n            infoSelected && event.reg_mode === \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> \n             \n          }\n        {\n          infoSelected && event.reg_mode !== \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> : \n                <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n        }\n        {\n          adminAccess && settingsSelected && <Typography>Any queries contact us at support@ellipseapp.com</Typography>\n        }\n      </main>\n    </div>\n  );\n}\n\n\n\n\n\n","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n// import axios from 'axios';\n\n//MaterialUI imports\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// import { set } from 'date-fns';\n// import AuthContext from '../AuthContext';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n\n  const [canRegister, setCanRegister] = React.useState(true);\n  const [userMessage, setUserMessage] = React.useState(false);\n\n  const [formValues, setFormValues] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  // const [fields, setFields] = React.useState([]);\n  const [normalFields, setNormalFields] = React.useState([]);\n  const [dropDownFields, setDropDownFields] = React.useState([]);\n  const [checkboxFields, setCheckBoxFields] = React.useState([]);\n  const [radioFields, setRadioFields] = React.useState([]);\n  const [dateFields, setDateFields] = React.useState([]);\n  const [longDescFields, setLongDescFields] = React.useState([]);\n  const [linkFields, setLinkFields] = React.useState([]);\n\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const id = props.match.params.eventId;\n  const [backDropOpen, setBackDropOpen] = React.useState(true);\n  const [event, setEvent] = React.useState({});\n  const [checkedValues, setCheckedValues] = React.useState([]);\n  const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n\n  const user = React.useContext(AuthContext);\n\n  React.useEffect(() => {\n    if (user.designation === \"Student\" || user.designation === \"Faculty\") {\n      // setUserType(true);\n    }\n    else {\n      setCanRegister(false);\n      setUserMessage(\"You are \" + user.designation + \" so you cannot register\")\n    }\n    if (user.user_id === event.user_id) {\n      setCanRegister(false)\n      setUserMessage(\"You are event organizer so you cannot register\")\n    }\n    const cDate = new Date();\n    const eDate = new Date(event.registration_end_time);\n    if (cDate > eDate) {\n      setCanRegister(false)\n      setUserMessage(\"Registration closed\")\n\n    }\n  }, [event, user.designation, user.user_id])\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      console.log(response);\n      response.json().then(value => {\n        setEvent(value.event);\n        // setFields(value.event.regFields);\n        const allFields = value.event.reg_fields;\n        console.log(allFields);\n        if (allFields != null) {\n          allFields.forEach(f => {\n            if (f.title === \"Name\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.name }))\n            }\n            else if (f.title === \"Email\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.email }));\n            }\n            else if (f.title === \"College\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.college_name }));\n            }\n            else {\n              setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n            }\n            if (f.field === \"checkbox\") {\n\n            }\n\n          })\n          // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n          setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n          setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n          setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n          setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n          setDateFields(allFields.filter((f) => f.field === \"date\"));\n          // setLongDescFields(allFields.filter((f) => f.field === \"long_desc\"));\n          setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n          setLinkFields(allFields.filter(f => f.field === \"link\"));\n\n        }\n        setBackDropOpen(false);\n      })\n    })\n  }, [token, id, user])\n\n  function handleClose() {\n    if (message === \"Registered successfully\") {\n      props.history.push('/home')\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  }\n\n  function handleChange(event) {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  }\n  const handleChange2 = (name) => (event, values) => {\n    setFormValues({ ...formValues, [name]: values });\n\n  }\n  const handleChange3 = (name) => (event) => {\n    if (event.target.checked) {\n      setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n      const array = [];\n      checkedValues.forEach((v, i) => {\n        if (v[name]) {\n          array.push(v[name])\n        }\n      });\n      array.push(event.target.name);\n      setFormValues({ ...formValues, [name]: array });\n    }\n  }\n\n  const handleDateChange = (name) => (date) => {\n    // console.log(name);\n    // console.log(date);\n    setFormValues({ ...formValues, [name]: date })\n  };\n\n  const handleLondDescChange = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value })\n  }\n\n  function handleradioChange(event, value) {\n    // console.log(event.target.name);\n    // console.log(value);\n    setFormValues({ ...formValues, [event.target.name]: value });\n    // props.setFeeType(value)\n  }\n\n  function handleEventRegistration(e) {\n    e.preventDefault();\n    // setLoading(true);\n    // console.log(checkedValues);\n    console.log(formValues);\n    const formkeys = Object.keys(formValues);\n    formkeys.forEach(v => {\n      if (formValues[v] === null) {\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please fill in all fields',\n          type: \"error\",\n          autoHide: 4000\n        });\n      }\n    })\n    try {\n      var data = new FormData();\n      const d = { data: formValues }\n      data = JSON.stringify(d);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        console.log(response);\n        response.json().then(value => {\n          console.log(value);\n\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Registered successfully',\n            type: \"success\",\n            autoHide: 200\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n\n  }\n\n  function handleBack() {\n    props.history.goBack();\n  }\n\n\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Backdrop className={classes.backdrop} open={backDropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleBack}>\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      {event != null &&\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Registration for \" + event.name}\n          </Typography>\n          <form className={classes.form} onSubmit={handleEventRegistration}>\n\n            <Grid container spacing={2}>\n              {normalFields.map((field, index) => {\n                if (field.title === \"College\") {\n                  return (\n                    <Grid item xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        id={field.title}\n                        options={colleges}\n                        getOptionLabel={(option) => option}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        disabled\n                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                      />\n                    </Grid>)\n                }\n                else if (field.title === \"Email\") {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        disabled\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n                else {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n\n              })}\n              {checkboxFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                      <FormLabel component=\"legend\">{field.title}</FormLabel>\n                      <FormGroup class={classes.formgroup}>\n                        {field.options.map((option) => {\n                          return <FormControlLabel\n                            control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                            label={option}\n                          />\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                    {/* <Autocomplete\n                      id={field.name}\n                      multiple\n                      // value={}\n                      onChange={handleChange2(field.name)}\n                      options={field.options.map((option) => option)}\n                      getOptionLabel={(option) => option}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.name} placeholder={field.name} />\n                      )}\n                    /> */}\n                  </Grid>\n                )\n              })}\n              {dropDownFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id={field.title}\n                      options={field.options.map((option) => option)}\n                      // freeSolo\n                      // onChange={handleeventTagsChange}\n                      onChange={handleChange2(field.title)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.title} placeholder={field.name} />\n                      )}\n                    />\n                  </Grid>\n                )\n              })}\n              {radioFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormLabel required component=\"legend\">{field.title}</FormLabel>\n                    <RadioGroup required aria-label=\"address\" name={field.title} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                      {field.options.map((option) => {\n                        return <FormControlLabel value={option} control={<Radio color=\"default\" />} label={option} />\n                      })}\n\n                      {/* <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" /> */}\n                    </RadioGroup>\n                  </Grid>\n                )\n              })}\n              {\n                dateFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                          // minDate={Date.now()}\n                          fullWidth\n                          required\n                          variant=\"inline\"\n                          format=\"dd MMM yyyy hh:mm a zzz\"\n                          margin=\"normal\"\n                          id=\"startDate\"\n                          label=\"Start Date\"\n                          name=\"startDate\"\n                          value={formValues[field.title]}\n                          onChange={handleDateChange(field.title)}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n\n                    </Grid>\n                  )\n                })\n              }\n              {\n                longDescFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        multiline={true}\n                        rows=\"5\"\n                        variant='outlined'\n                        placeholder={field.title}\n                        autoComplete='off'\n                        required\n                        id={field.title}\n                        name={field.title}\n                        label={field.title}\n                        fullWidth\n                        onChange={handleLondDescChange}\n                      // value={props.about}\n                      />\n                    </Grid>\n                  )\n                })\n              }\n              {\n                linkFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                })\n              }\n\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox color=\"primary\" name=\"terms\" />}\n                  label=\"I accept the terms and conditions\"\n                />\n              </Grid>\n            </Grid>\n            {canRegister && <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n              {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Register\"}\n            </Button>}\n            {\n              !canRegister && <Typography>{userMessage}</Typography>\n            }\n          </form>\n        </div>\n      }\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 2)\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const allEvents = React.useContext(EventsContext);\n    const activeEvents = React.useContext(ActiveEvents);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const postedEvents = allEvents.filter((val) => {\n    //     return val.user_id === user.user_id;\n    // });\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n    }\n\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\">\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={8} lg={8} >\n                        {/* <div className={classes.root2}> */}\n                        <Paper className={classes.root2}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"on\">\n                                <Tab label=\"Registered Events\" />\n                                <Tab label=\"Past Events\" />\n                            </Tabs>\n                        </Paper>\n                        <div className={classes.content}>\n                            {value === 0 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                            {\n                                regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                            }\n                                {regEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n\n                            </Grid>}\n                            {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                            {\n                                pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                            }\n                                {pastEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n                            </Grid>}\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AboutEventsPanel from '../Components/AboutEventPanel';\nimport { Dialog } from '@material-ui/core';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const id = props.match.params.eventId;\n    const [event, setEvent] = React.useState({});\n    const [open, setOpen] = React.useState(false);\n    if(token){\n        props.history.replace(`/event/${id}`)\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+`/api/unregistered/event?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setEvent(value.event);\n            })\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <Typography\n                    align='center'\n                    variant=\"h4\"\n                    style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>\n                    {event.name + \"(Login to Register and Know More Info)\"}\n                </Typography>\n                <AboutEventsPanel event={event}></AboutEventsPanel>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Register</Button>\n            </div>\n            <Dialog\n                open={open}\n                maxWidth=\"md\"\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Login to Register for the Event/Contest\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root2: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(50),\n            height: theme.spacing(50),\n        },\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    root4: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const classes = useStyles();\n    const id = props.match.params.id;\n    const [details,setDetails] = React.useState({});\n    const [userFound,setUserFound] = React.useState(true);\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + `/api/event/verify_certificate?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if(response.status === 200){\n                response.json().then(value => {\n                    setUserFound(true)\n                    setDetails(value);\n                })\n            }\n            else{\n                setUserFound(false);\n            }\n            \n        })\n    }, [id])\n\n    function handleSigninClick() {\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            {userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                <VerifiedUserIcon fontSize=\"large\"></VerifiedUserIcon>\n                    <Typography variant=\"h4\">{details.participantname}</Typography>\n                    <Typography>{details.participant_college}</Typography>\n                    <Typography style={{marginTop:\"20px\"}}>Event Name: {details.event_name}</Typography>\n                    <Typography>Organizer: {details.organizer}</Typography>\n                    <Typography>Held on {details.date}</Typography>\n                    <Typography style={{marginTop:\"20px\"}}>participation by {details.participantname} has been confirmed</Typography>\n                </Box>\n            </Box>}\n            {!userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                <CancelIcon fontSize=\"large\"></CancelIcon>\n                    <Typography variant=\"h4\">Certificate NOT FOUND</Typography>\n                    \n                </Box>\n            </Box>}\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './Pages/signin';\nimport SignUp from './Pages/signup';\nimport ForgotPassword from './Pages/ForgotPassword';\nimport { AuthProvider } from \"./Auth\";\nimport OTPVer from './Pages/otpverification';\nimport UserInfo from './Pages/UserInfo';\nimport Layout from './Pages/Layout';\nimport CalenderPanel from './Pages/CalenderPanel';\nimport EventsTabPanel from './Pages/EventsTabpanel';\nimport ProfileTabPanel from './Pages/ProfileTabpanel';\nimport EventPostForm from './Pages/EventPostForm';\n// import ChatPage from './Pages/ChatPage';\nimport EventDetails from './Pages/EventDetails';\nimport EventRegisterForm from './Pages/EventRegistrationform';\nimport ExplorePanel from './Pages/ExplorePanel';\nimport UnregisteredPage from './Pages/UnregisteredPage';\nimport NetworkDetector from './NetworkDetector';\nimport VerifyCertificate from './Pages/VerifyCertificate';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/signin\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route exact path=\"/userinfo\" component={UserInfo}></Route>\n            <Route exact path=\"/otpverification\" component={OTPVer}></Route>\n            <Route exact path=\"/un/event/:eventId\" component={UnregisteredPage}></Route>\n            {/* <Route exact path=\"/resetforgotpassword\" component ={ForgotPassword2}></Route> */}\n            <Route exact path=\"/event/:eventId\" component={EventDetails} />\n            <Route exact path=\"/verify_certificate/:id\" component={VerifyCertificate}></Route>\n            <Layout>\n              <Route path=\"/home\" component={EventsTabPanel}></Route>\n              <Route exact path=\"/events\" component={CalenderPanel}></Route>\n              <Route exact path=\"/post\" component={EventPostForm}></Route>\n              <Route exact path=\"/profile\" component={ProfileTabPanel}></Route>\n              {/* <Route exact path=\"/chat\" component={ChatPage}></Route> */}\n\n              <Route exact path=\"/event/register/:eventId\" component={EventRegisterForm} />\n              <Route exact path=\"/yourevents\" component={ExplorePanel}></Route>\n            </Layout>\n          </Switch>\n\n\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\nexport default NetworkDetector(App);\n","import React, { Component } from 'react';\n\nexport default function (ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      if (condition === 'online') {\n        const webPing = setInterval(\n          () => {\n            fetch('//google.com', {\n              mode: 'no-cors',\n              })\n            .then(() => {\n              this.setState({ isDisconnected: false }, () => {\n                return clearInterval(webPing)\n              });\n            }).catch(() => this.setState({ isDisconnected: true }) )\n          }, 2000);\n        return;\n      }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div>\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n      type: \"dark\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#000000'\n      },\n      secondary: {\n        main: '#1C1C1E',\n      },\n      background:{\n        default: \"#000000\"\n      }\n    },\n    \n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n      type: \"light\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#ffffff'\n      },\n      secondary: {\n        main: '#e5e5e5'\n      },\n      background:{\n        default: \"#ffffff\"\n      }\n    },\n    \n    \n});\n\nexport {lightTheme,darkTheme};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {lightTheme,darkTheme} from './Components/theme'\nimport { CssBaseline } from '@material-ui/core';\nconst t = localStorage.getItem('theme');\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={t === 'light' ? lightTheme: darkTheme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}