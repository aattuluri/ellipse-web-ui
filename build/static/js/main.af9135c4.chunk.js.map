{"version":3,"sources":["Components/Images/google-play-badge.png","Components/Images/logo.svg","Components/Images/un6.svg","Components/Images/logo300.svg","Components/Images/certificate_sample.png","Components/Images/un5.svg","Components/Images/un7.svg","Themes/SigninPageStyles.js","Components/copyright.js","Pages/signin.js","Themes/SignupPageStyles.js","Pages/signup.js","Pages/ForgotPassword.js","Auth.js","Pages/otpverification.js","Pages/UserInfo.js","Themes/MainHomeStyles.js","Components/EventShareDialog.js","Components/ImageDialog.js","Components/AboutEventPanel.js","Components/EventTimeLinePanel.js","Components/EventsAnnouncementsPanel.js","Components/ChatMessage.js","AuthContext.js","Components/ChatTextField.js","Components/EventsChatPanel.js","Components/EventsDialog.js","EventsContext.js","Components/NotficationsDialog.js","Pages/NavigationBar.js","ActiveEventsContext.js","Pages/Layout.js","Pages/CalenderPanel.js","Components/EventReportDialog.js","Components/EventCard.js","Components/SortLeftPanel.js","Components/MobileSortPanel.js","Components/FeedBackDialog.js","Pages/EventsTabpanel.js","Components/ProfileEventCard.js","Components/ProfilePostedEventsTabPanel.js","Components/ProfileAboutDataBox.js","Components/ProfileAboutTabPanel.js","Components/CertificateCard.js","Components/ProfileCertificateTabPanel.js","Components/MainProfileCard.js","Components/UpdateInfoTabPanel.js","Components/UpdatePasswordTabPanel.js","Components/MoreSettingsTabPanel.js","Components/UpdateProfileDialog.js","Pages/ProfileTabpanel.js","Components/EventPostDetails1.js","Components/EventPostTermsandConditions.js","Components/EventPostDetails2.js","Components/AddFieldDialog.js","Components/EventPostDetails3.js","Pages/EventPostForm.js","Components/EventDetailsNavigationBar.js","Components/AnnouncementsEditPanel.js","Components/AddAnnouncementForm.js","Components/SendEmailForm.js","Components/DashboardPanel.js","Components/EventDetailsChatPanel.js","Pages/EventEdit.js","Components/AdminCertificateDashboad1.js","Components/AdminCertificateDashboard2.js","Components/AdminCertificateDashboard3.js","Components/AdminCertificateDashboard.js","Pages/EventDetails.js","Components/EventRegisterTermsandConditions.js","Pages/EventRegistrationform.js","Pages/ExplorePanel.js","Pages/UnregisteredPage.js","Pages/VerifyCertificate.js","Pages/NewHomePageCarousel.js","Components/HomePageEventCard.js","Pages/NewHomePage.js","App.js","NetworkDetector.js","Components/theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","height","wrapper","margin","spacing","position","paperRight","flexDirection","alignItems","backgroundColor","palette","secondary","main","padding","paddingBottom","borderRadius","minHeight","breakpoints","down","paperLeft","up","paperimage","avatar","marginTop","primary","form","width","submit","iPhoneImage","title","fontFamily","color","dark","fontWeight","hidden","image","maxHeight","maxWidth","footer","Copyright","Typography","variant","align","Link","href","Date","getFullYear","Alert","props","elevation","withRouter","history","classes","React","useState","open","vertical","horizontal","message","type","autoHide","state","setState","loading","setLoading","token","setToken","isUserVerified","setIsUserVerified","email","setEmail","abortController","AbortController","handleClose","event","reason","a","localStorage","setItem","eventId","getItem","abort","push","FormData","payload2","data2","JSON","stringify","fetch","process","signal","headers","method","body","then","result","json","res","error","preventDefault","target","elements","password","payload","value","data","response","status","isVerified","useremail","to","Fragment","Grid","container","component","className","CssBaseline","Snackbar","anchorOrigin","autoHideDuration","onClose","key","severity","item","xs","sm","md","Box","justifyContent","m","p","src","PhoneImage","alt","rel","GoogleBadge","Avatar","onSubmit","TextField","name","required","fullWidth","id","label","autoComplete","autoFocus","Button","disabled","CircularProgress","size","paper","closeButton","right","top","nameError","setNameError","usernameError","setUserNameError","signupButtonDisabled","setSignupButtonDisabled","replace","fullName","username","terms","checked","val","tok","Container","inputProps","pattern","onInvalid","helperText","onInput","onChange","FormControlLabel","control","Checkbox","justify","mt","otp","setOtp","setPassword","loading2","setLoading2","console","log","nPassword","e","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","useEffect","Provider","seconds","setSeconds","resendEnabled","setresetEnabled","setTimeout","onClick","textArea","imageUrl","setImageurl","setImage","colleges","setColleges","gender","designation","collegeId","bio","college_id","append","accept","files","url","URL","createObjectURL","style","Badge","overlap","badgeContent","htmlFor","IconButton","aria-label","sizes","multiline","rows","placeholder","FormControl","InputLabel","Select","native","map","coll","index","_id","outline","marginBottom","flexGrow","background","grow","mobileTitle","titleButton","mobileTitleButton","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","borderBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","tabs","mobiletab","tabPanel","flex_section","flex_col_scroll","overflow","rpaper","textAlign","text","light","postButton","EventShareDialog","useTheme","setTitle","share_link","copyToClipBoard","copyMe","navigator","clipboard","writeText","Dialog","PaperProps","boxShadow","aria-labelledby","DialogTitle","DialogContent","DialogActions","imageBox","dialog","icons","ImageDialog","scroll","aria-describedby","fontSize","poster_url","alignContent","media","buttonDiv","button","large","tab","adminDetails","root0","AboutEventPanel","other","tags","requirements","setRequirements","timeLabel","setTimeLabel","setAdminDetails","imageDialogOpen","setImageDialogOpen","notRegistered","setNotRegistered","undefined","user_id","calculateTimeLeft","difference","registration_end_time","timeLeft","start_time","finish_time","days","Math","floor","hours","minutes","setTimeLeft","x","getTimeLabel","cleanup","clearTimeout","timerComponents","Object","keys","forEach","interval","role","lg","description","length","Chip","event_type","fee_type","event_mode","about","venue","venue_college","fee","platform_details","profile_pic","college_name","secondaryTail","startDate","endDate","regEndDate","Timeline","TimelineItem","TimelineOppositeContent","toDateString","toLocaleTimeString","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","timiline","root3","root5","CustomizedTimeline","announcements","setAnnouncements","registered","ann","visible_all","date","time","root2","whiteSpace","pos","inline","ChatMessage","userType","setUserType","adminId","ListItem","ListItemAvatar","ListItemText","user_name","componentDecorator","decoratedHref","decoratedText","timeStyle","bottomBar","bottom","left","close","JustifyContent","sendButtonDisabled","setSendButtonDisabled","newmessage","setNewMessage","cl","setCl","clsx","rowsMax","onKeyUp","keyCode","shiftKey","handleSend","sendIcon","textDecorationColor","minWidth","root6","topBar","root4","progress","useContext","dialogOpen","setDialogOpen","reference","setReferenece","chatMessages","setChatMessages","counterDate","webSocket","setWebSocket","webConnect","ws","WebSocket","onopen","onmessage","mes","parse","cMes","msg","event_id","onclose","check","scrollIntoView","behavior","readyState","Fade","in","unmountOnExit","List","currentDate","messageDate","userName","user_pic","float","clear","ref","el","d","send","action","now","toISOString","a11yProps","bottomTags","field","dialogContent","EventsDialog","t","setValue","shareDialogOpen","setShareDialogOpen","chatAcess","setChatAcess","reg_mode","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","dividers","handleReg","reg_link","textDecoration","EventsContext","allEvents","setAllEvents","FormDialog","notificationms","setNotifications","handleNotificationClick","n","handleClick","Divider","anchorEl","setAnchorEl","darkThemeSelected","setDarkThemeSelected","searchedEvent","setSearchedEvent","notificationsCount","setNotificationCount","isMenuOpen","Boolean","setOpen","notificationsOpen","setNotificationsOpen","tabIndex","parseInt","handleChange","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","Switch","window","location","reload","removeItem","handleeventClick","handleHomeClick","handleProfileClick","handleExploreClick","handleTitleButtonClick","AppBar","Toolbar","Logo","noWrap","Autocomplete","freeSolo","options","getOptionLabel","option","renderInput","params","square","icon","edge","aria-controls","aria-haspopup","currentTarget","ActiveEventsContext","activeEvents","setActiveEvents","backdrop","zIndex","drawer","authorized","setAuthorized","userDetailsDone","setUserDetailsDone","allEventsValue","activeEventsValue","verified","sort","b","filter","Backdrop","subRpaper","fab","sideList","CalenderPanel","events","setEvents","selectedEvent","setSelectedEvent","registeredEvents","setRegisteredEvents","y","start","end","handlePostButtonClick","handleRegisterdEventClick","eventBackgroundColor","eventBorderColor","eventClick","info","defaultView","plugins","dayGridPlugin","buttonIcons","Fab","EventReportDialog","desc","setDesc","morePopup","Eventcard","anchorRef","useRef","imageLoaded","setImageLoaded","reportDialogOpen","setReportDialogOpen","current","contains","handleListKeyDown","prevOpen","handleReportClick","handleShareClick","focus","Card","CardHeader","imageDialog","onLoad","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","subheader","CardActions","disableSpacing","click","filterTextField","filterButton","SortLeftPanel","handleModeToggle","currentIndex","modeChecked","indexOf","newChecked","splice","setModeChecked","handleFeeToggle","feeChecked","setFeeChecked","utils","DateFnsUtils","DatePicker","format","sortStartDate","handleSortDateChange","sortEndDate","handleEndSortDateChange","paddingTop","labelId","dense","ListItemIcon","disableRipple","RadioGroup","sortCollgeType","handleSortCollegeChange","Radio","handleSortApplyButton","handlesortDiscardButton","MobileSortPanel","defaultValue","KeyboardButtonProps","collegeName","leftSubPaper","mobileFilterButton","skeleton","feedBackButton","user","setSortStartDate","setSortEndDate","sortCollegeType","setSortCollegeType","sortedEventsArray","setSortedEventsArray","isFiltered","setIsFiltered","feeSortChecked","setFeeSortChecked","modeSortChecked","setModeSortChecked","filterDialogOpen","setFilterDialogOpen","registerdEvents","feedBackOpen","setFeedBackOpen","dateRangeSortedEvents","sortByDateRange","sortByMode","typeSortedEvents","feeSortedEvents","sortByCost","collegeSortedEvents","sortByCollege","sortByDate","dateSortedEvents","date1","date2","sEvents","sortedEvents","sEvent","getTime","tEvents","sDEvents","sevent","getDate","getMonth","includes","handleImageDialogOpen","handleRegistrationButton","Skeleton","animation","EventCard","startTime","endTime","eventMode","eventType","regEndTime","registrationEndTime","feeType","feesType","ImgMediaCard","CardMedia","CardContent","gutterBottom","pathname","toUpperCase","ProfilePostsTabPanel","postedEvents","setSellectedEvent","handleViewClick","mode","content","ProfileDataBox","setIcon","editIcon","handleEditButton","ProfileAboutDataBox","eventName","setEventName","certificate_status","download","certificate_url","ProfilePostedEventsTabPanel","UpdateInfoTabPanel","setName","setUserName","setBio","setGender","setDesignation","setCollegeName","setCollegeId","collegesName","setCollegesName","imageUpdated","setImageUpdated","updateButtonDisabled","setUpdateButtonDisabled","v","collegesNames","c","UpdatePasswordTabPanel","cPassword","setCPassword","setNPassword","UpdateProfile","MoreSettingsTabPanel","accordion","EventsTabPanel","eOpen","setEOpen","ActiveEvents","UpdateProfileDialog","buttons","AddressForm","startDateError","setStartDateError","endDateError","setEndDateError","regEndDateError","setRegEndDateError","eventTypes","setEventTypes","handleNext","DateTimePicker","minDate","setStartDate","setEndDate","setRegEndDate","setEventMode","setEventType","registrationMode","setSteps","steps","setRegistrationMode","FormLabel","setFeeType","AlertDialog","DialogContentText","imageName","setImageName","eventTags","setEventTags","tandcOpen","setTandcOpen","r","setAbout","multiple","eventThemes","values","setThemes","renderTags","getTagProps","setPoster","fileName","InputProps","endAdornment","InputAdornment","regLink","setRegLink","regFees","setFees","college","setParticipantsType","setPlatformDetails","platformDetails","aria-disabled","evemt","setAddressType","setBuilding","building","handleBack","setType","selectedOptions","setSelectedOptions","handleAdd","formControl","formgroup","flexWrap","listStyle","chip","fields","selectedFields","setSelectedFields","sName","setFields","handlePost","addingField","fName","FormGroup","onDelete","chipToDelete","toLowercase","appBar","layout","stepper","Checkout","activeStep","setActiveStep","shortDesc","setShortDesc","setendDate","fees","setEventThemes","selectedrequirements","setSelectedRequirements","addressType","setBuildingAdress","organizer","setOrganizer","venueCollege","setVenueCollege","participantsType","handleEventPost","allFields","oAllowed","venue_type","reg_fields","o_allowed","setRegFields","f","handlePostwithoutregFileds","goBack","Stepper","Step","StepLabel","step","eventPoster","Error","getStepContent","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","toolbar","mixins","MiniDrawer","setUser","handleSignout","dOpen","setDOpen","handleDeleteButton","AnnouncementForm","visibility","setVisibility","SendEmailForm","setContent","emails","buttonsPaper","fixedHeightPaper","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setHeaders","rowValues","setRowValues","selected","setSelected","announcementDialog","setAnnouncementDialog","sendEmailDialog","setSendEmailDialog","firstdata","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","newSelecteds","Email","indeterminate","column","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","textField","setRegFees","regMode","setRegMode","participantType","setVenue","novalidate","getParticipantsList","participants","certificate","maxLength","CertificateSample","ExplorePanel","flexShrink","drawerOpen","drawerClose","overflowX","match","setDrawerOpen","setEvent","adminAccess","setAdminAccess","infoSelected","dashBoardSelected","timilineSelected","announcementSelected","settingsSelected","editEventSelected","chatSelected","certificateSelected","Drawer","direction","chat","canRegister","setCanRegister","userMessage","setUserMessage","formValues","setFormValues","normalFields","setNormalFields","dropDownFields","setDropDownFields","checkboxFields","setCheckBoxFields","radioFields","setRadioFields","dateFields","setDateFields","longDescFields","setLongDescFields","linkFields","setLinkFields","backDropOpen","setBackDropOpen","checkedValues","setCheckedValues","handleLondDescChange","handleradioChange","class","array","i","regEvents","pastEvents","handleEventClick","appbar","UnregisteredPage","details","setDetails","userFound","setUserFound","participantname","participant_college","event_name","AutoPlaySwipeableViews","autoPlay","SwipeableViews","tutorialSteps","imgPath","DeviceDesign","DeviceDesign2","DeviceDesign3","header","img","carouselCaption","SwipeableTextMobileStepper","maxSteps","axis","onChangeIndex","enableMouseEvents","abs","handleSignin","MobileStepper","nextButton","prevActiveStep","backButton","handleSigninClick","NewHomePageCarousel","HomePageEventCard","NetworkDetector","ComposedComponent","exact","path","NewHomePage","Login","SignUp","ForgotPassword","UserInfo","OTPVer","EventDetails","VerifyCertificate","EventPostForm","ProfileTabPanel","EventRegisterForm","isDisconnected","handleConnectionChange","onLine","webPing","setInterval","clearInterval","catch","this","addEventListener","removeEventListener","Component","darkTheme","createMuiTheme","default","lightTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.af9135c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google-play-badge.1a0c1f51.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.50ff3dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/un6.2b090ac4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo300.a7187bbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/certificate_sample.987b5a91.png\";","module.exports = __webpack_public_path__ + \"static/media/un5.92727b4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/un7.01edb8aa.svg\";","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  paperRight: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    paddingBottom: theme.spacing(4),\n    borderRadius: 30,\n    // height: '80vh',\n    minHeight: '80vh',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(0, 1),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  paperLeft: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(3, 1),\n    },\n    [theme.breakpoints.up('md')]: {\n      height: '80vh',\n    },\n\n  },\n  paperimage: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(),\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '90%',\n    margin: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(2),\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  iPhoneImage: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  title: {\n\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  hidden: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  image: {\n    maxHeight: \"600px\",\n    maxWidth: '600px',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  footer: {\n    backgroundColor: theme.palette.secondary.main,\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n          ellipseapp.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default Copyright;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../Themes/SigninPageStyles'\n// import AppleBadge from '../Components/Images/AppleBadge.png';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n// import iPhone from '../Components/Images/iPhone 11 Pro Max@2x.png';\nimport Copyright from \"../Components/copyright\";\nimport { withRouter, Redirect } from \"react-router\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PhoneImage from '../Components/Images/logo300.svg';\n// import HomePageCarousel from '../Components/HomePageCarousel';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\n\n\n\nconst Signin = ({ history }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [user,setUser] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  const [isUserVerified, setIsUserVerified] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const abortController = new AbortController();\n\n\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Signedin successfully\") {\n      localStorage.setItem('token', token);\n      if (isUserVerified) {\n        localStorage.setItem('token', token);\n        const eventId = localStorage.getItem('eventid');\n        if (eventId) {\n          abortController.abort()\n          history.push(`/event/${eventId}`)\n        }\n        else {\n          abortController.abort()\n          history.push('/home');\n        }\n\n      }\n      else {\n        try {\n          var data2 = new FormData();\n          const payload2 = {\n            email: email\n          };\n          data2 = JSON.stringify(payload2)\n          fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n            signal: abortController.signal,\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data2\n          }).then((result) => {\n            // console.log(result);\n            result.json().then((res) => {\n              if (res.message === \"success\") {\n                abortController.abort()\n                localStorage.setItem('token', token);\n                history.push('/otpverification')\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Signedin successfully',\n                  type: \"success\",\n                  autoHide: 300\n                });\n              }\n            })\n\n          })\n        } catch (error) {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: error.message,\n            type: \"error\",\n            autoHide: 3000\n          })\n        }\n\n      }\n\n    }\n    setState({ ...state, open: false });\n  };\n  async function handleSignin(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { email, password } = event.target.elements;\n    try {\n      var data = new FormData()\n      const payload = {\n        email: email.value,\n        password: password.value\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/users/login', {\n        signal: abortController.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then((response) => {\n        // console.log(response);\n        if (response.status === 200) {\n          // console.log\n          response.json().then((value) => {\n            setToken(value.token);\n            setIsUserVerified(value.isVerified);\n            setEmail(value.useremail);\n            // setUser(JSON.stringify(value.userDetails));\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Signedin successfully',\n              type: \"success\",\n              autoHide: 200\n            });\n          })\n        }\n        else {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: \"invalid credentials\",\n            type: \"error\", autoHide: 6000\n          })\n        }\n\n      })\n    } catch (error) {\n\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n    }\n  }\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          autoHideDuration={autoHide}\n          onClose={handleClose}\n          key={vertical + horizontal}>\n          <Alert onClose={handleClose} severity={type}>{message}</Alert>\n        </Snackbar>\n        <Grid item xs={12} sm={12} md={7} elevation={6} >\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" m={1} p={1} className={classes.paperLeft}>\n            <img src={PhoneImage} alt=\"logo\" height=\"500px\" width=\"500px\" className={classes.image}></img>\n            <Typography className={classes.title} component=\"h1\" variant=\"h2\">\n              Ellipse\n          </Typography>\n            <Typography component=\"h1\" variant=\"h6\">\n              Kill time for what matters\n          </Typography><br></br>\n            <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n              <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n            </a>\n\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={5} elevation={6}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1} className={classes.paperRight}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n          </Typography>\n            <form className={classes.form} onSubmit={handleSignin}>\n              <TextField\n                name=\"email\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                name=\"password\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n              <div className={classes.wrapper}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  className={classes.submit}>\n                  {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign In\"}\n\n                </Button>\n              </div>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"/forgotpassword\" variant=\"body2\">\n                    Forgot password?\n                </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/signup\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-end\">\n              <Copyright></Copyright>\n            </Box>\n          </Box>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <HomePageCarousel></HomePageCarousel>\n            </Box>\n          </Box>\n          <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Made with <FavoriteIcon fontSize=\"inherit\" color=\"primary\"></FavoriteIcon> for Students and Organizations</Typography><br></br>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                {\"support@ellipseapp.com\"}\n              </Link></Typography>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Copyright></Copyright>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                {\"Privacy Policy\"}\n              </Link>\n            </Box>\n          </Box>\n        </Grid> */}\n      </Grid>\n\n    </React.Fragment>\n  );\n}\nexport default withRouter(Signin);","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // backgroundColor: theme.palette.secondary.main,\n      padding: theme.spacing(3),\n      borderRadius: 30,\n  \n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(7),\n      [theme.breakpoints.down('md')]: {\n        top: theme.spacing(12),\n      }\n    }\n  }));\n\n  export default useStyles;","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = ({ history }) => {\n  const classes = useStyles();\n  const [token, setToken] = React.useState(\"\");\n  // const [currentUser, setCurrentUser] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUserNameError] = React.useState(false);\n  const [signupButtonDisabled, setSignupButtonDisabled] = React.useState(false);\n  const handleClose = async (event, reason) => {\n\n    if (message === \"Signedup successfully\") {\n      localStorage.setItem('token', token);\n      history.replace(\"/otpverification\")\n    }\n\n    setState({ ...state, open: false });\n  };\n  async function handleSignUp(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { fullName, email, password, username, terms } = event.target.elements;\n    try {\n      if (terms.checked) {\n        var data = new FormData()\n        const payload = {\n          name: fullName.value,\n          email: email.value,\n          password: password.value,\n          username: username.value\n        };\n        data = JSON.stringify(payload);\n        fetch(process.env.REACT_APP_API_URL + '/api/users/signup', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then((result) => {\n          if (result.status === 200) {\n            result.json().then((val) => {\n              setToken(val.token);\n              var data2 = new FormData();\n              const payload2 = {\n                email: val.useremail\n              };\n              data2 = JSON.stringify(payload2)\n              // console.log(token);\n              const tok = val.token;\n              fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                headers: {\n                  'Authorization': `Bearer ${tok}`,\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n              }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                  if (res.message === \"success\") {\n                    setState({\n                      open: true,\n                      vertical: 'top',\n                      horizontal: 'center',\n                      message: 'Signedup successfully',\n                      type: \"success\",\n                      autoHide: 300\n                    });\n                  }\n                })\n\n              })\n\n            })\n          }\n          else if (result.status === 401) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Email already registered',\n              type: \"error\",\n              autoHide: 3000\n            });\n          }\n        })\n      }\n\n      else {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please agree to the terms and conditions',\n          type: \"error\"\n        });\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleUsernameChange(event) {\n    const username = event.target.value;\n    var data = new FormData();\n    const payload = {\n      username: username\n    };\n    data = JSON.stringify(payload);\n    setUserNameError(false);\n    setSignupButtonDisabled(false)\n    fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((result) => {\n      result.json().then(value => {\n        if (value.message === \"user already exists\") {\n          setUserNameError(true);\n          setSignupButtonDisabled(true);\n        }\n      })\n    })\n  }\n\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fullName\"\n                name=\"fullName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                inputProps={{ pattern: \"[a-zA-Z ]+\" }}\n                onInvalid={() => { setNameError(true) }}\n                helperText={nameError && \"Name should only contain alphabet and spaces\"}\n                onInput={() => { setNameError(false) }}\n                error={nameError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"User Name\"\n                onChange={handleUsernameChange}\n                name=\"username\"\n                error={usernameError}\n                helperText={usernameError && \"username already exists\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox  color=\"primary\" name=\"terms\" />}\n                label={<Typography>By signing up I accept the <Link href='/Privacy_Policy.pdf'>Pivacy Policy and Terms of Service</Link></Typography>}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || signupButtonDisabled}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign Up\"}\n          </Button>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n","import React from \"react\";\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst ForgotPassword = ({ history }) => {\n  const classes = useStyles();\n  // const token = localStorage.getItem('token');\n  const [email, setEmail] = React.useState(null);\n  const [otp, setOtp] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [loading2, setLoading2] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n\n  async function handlePasswordReset(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/sendverificationemail', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading(false)\n            // history.push('/resetforgotpassword')\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Enter the OTP sent to your registered email address',\n              type: \"success\",\n              autoHide: 2000\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  async function handleForgotPassword(event) {\n    event.preventDefault();\n    setLoading2(true);\n    // const { email,} = event.target.elements;\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email,\n        otp: otp,\n        nPassword: password\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/forgotpassword', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n\n            // history.push('/resetforgotpassword')\n            setLoading2(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Succesful! Login to continue',\n              type: \"success\",\n              autoHide: 300\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading2(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  function handleClose() {\n    if (message === \"Succesful! Login to continue\") {\n      history.replace(\"/\");\n    }\n  }\n\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter your email to receive OTP\n        </Typography>\n        <form className={classes.form} onSubmit={handlePasswordReset}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}>\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send OTP\"}\n          </Button>\n        </form>\n        <form className={classes.form} onSubmit={handleForgotPassword}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"otp\"\n                label=\"OTP\"\n                name=\"otp\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"New Password\"\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading2}\n            className={classes.submit}>\n            {loading2 ? <CircularProgress color=\"primary\" size={24} /> : \"Reset Password\"}\n          </Button>\n\n\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Link href=\"/\" variant=\"body2\">\n              Instead? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(ForgotPassword);\n","import React, { useEffect, useState } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [token,setToken] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    // function storeUser(user){\n    //   setCurrentUser(user);\n    //   setPending(false)\n    // }\n    // console.log(localStorage.getItem('user'))\n    setCurrentUser(localStorage.getItem('user'));\n    setPending(false);\n\n    // app.auth().onAuthStateChanged((user) => {\n    //   setCurrentUser(user)\n    //   setPending(false)\n    // });\n  }, []);\n  // function add\n\n  if (pending) {\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OTPver = ({ history }) => {\n    const classes = useStyles();\n    const token = localStorage.getItem(\"token\");\n    // const [token, setToken] = React.useState(\"\");\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide} = state;\n    const [seconds,setSeconds] = React.useState(30);\n    const [resendEnabled,setresetEnabled] = React.useState(false)\n\n    React.useEffect(() => {\n        if (seconds > 0) {\n          setTimeout(() => setSeconds(seconds - 1), 1000);\n        } else {\n          setresetEnabled(true)\n        }\n        // eslint-disable-next-line\n      },[seconds]);\n\n    function handleClose() {\n        // console.log(\"message\")\n        if (message === \"Success! redirecting to Ellipse Home\") {\n            history.replace(\"/userinfo\")\n        }\n        setState({ ...state, open: false });\n    }\n\n    if(!token){\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    function handleVerification(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { otp } = event.target.elements;\n        try {\n            var data = new FormData();\n            const payload = {\n                otp: otp.value\n            };\n            // data.append(JSON.stringify(payload));\n            data = JSON.stringify(payload);\n\n            fetch(process.env.REACT_APP_API_URL+'/api/users/verifyotp', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n\n            }\n            ).then((result) => {\n                result.json().then(val => {\n                    // console.log(val.message);\n                    if (val.message === \"verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Success! redirecting to Ellipse Home\",\n                            type: 'success',\n                            autoHide: 1000\n                        })\n\n                    }\n                    else if (val.message === \"Not verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Invalid OTP, please check and try again\",\n                            type: 'error',\n                            autoHide: 5000\n                        })\n                    }\n                    else {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Something went wrong try again\",\n                            type: 'error',\n                            autoHide: 5000\n                        })\n                    }\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n\n\n\n    }\n\n\n    function handleResendOTP(){\n        try {\n            var data2 = new FormData();\n            const payload2 = {\n            //   email: value[0].email\n            };\n            data2 = JSON.stringify(payload2)\n            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemailwithauth', {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              },\n              method: 'POST',\n              body: data2\n            }).then((result) => {\n              // console.log(result);\n              result.json().then((res) => {\n                if (res.message === \"success\") {\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: \"Password sent succcessfully\",\n                        type: 'success',\n                        autoHide: 300\n                    })\n                }\n              })\n\n            })\n          } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n          }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Email Verification\n                </Typography>\n                <form className={classes.form} onSubmit={handleVerification}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"otp\"\n                            label=\"Enter OTP\"\n                            name=\"otp\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                    <Grid container>\n\n              <Grid item>\n              <Button disabled={!resendEnabled} onClick={handleResendOTP}>Resend OTP in {seconds}</Button>\n              </Grid>\n            </Grid>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(OTPver);\n","import React from 'react';\nimport Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textArea: {\n        width: theme.spacing(58),\n        margin: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.dark,\n    },\n\n}));\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UserInfo = ({ history }) => {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [currentUser, setCurrentUser] = React.useState(null);\n    const [imageUrl, setImageurl] = React.useState(\"\");\n    const [image, setImage] = React.useState(null);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide } = state;\n    const [colleges,setColleges] = React.useState([]);\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            const eventId = localStorage.getItem('eventid');\n        if(eventId){\n          history.push(`/event/${eventId}`)\n        }\n        else{\n            history.replace(\"/home\")\n        }\n            \n        }\n\n        setState({ ...state, open: false });\n    };\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'GET',\n                }).then(response =>{\n                  // console.log(response);\n                  response.json().then(value =>{\n                    // console.log(value);\n                    setColleges(value);\n                  })\n                })\n      },[token])\n\n      if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n  \n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            // setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            // const fileType = event.target.files[0].type;\n            setImageurl(url);\n            // setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    async function handleSignUp(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { gender, designation, collegeId, bio } = event.target.elements;\n\n        try {\n            var data = new FormData()\n            const payload = {\n                gender: gender.value,\n                designation: designation.value,\n                college_id: collegeId.value,\n                bio: bio.value,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/userdetails', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (image != null) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Welcome\n                </Typography>\n                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    badgeContent={<label htmlFor=\"contained-button-file\">\n                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <EditIcon></EditIcon>\n                        </IconButton>\n                    </label>}>\n                    <Avatar className={classes.avatar} sizes=\"100\" alt=\"\" src={imageUrl}></Avatar>\n                </Badge>\n\n                <form className={classes.form} onSubmit={handleSignUp}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                            // onChange={handleAboutChange}\n                            // value={props.about}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                        \n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Your College</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"College\"\n                                    inputProps={{\n                                        name: 'collegeId',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    {colleges.map((coll,index) =>{\n                                        return <option key={index} value={coll._id}>{coll.name}</option>\n                                    })}\n                                    \n                                    {/* <option value=\"GITAM University\">GITAM University</option>\n                                    <option value=\"SRM University\">SRM University</option> */}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(UserInfo);\n\n\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.5em',\n      height: '0.5em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 1px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: '#ad9d9d',\n      outline: '1px solid slategrey'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n    marginBottom: theme.spacing(5)\n\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n    alignItems: 'center',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  mobileTitle:{\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    \n  },\n  titleButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n    textTransform: 'none'\n  },\n  mobileTitleButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      width: 'fit-content'\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    width: '230px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    borderBottom: 'none',\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  sectionDesktop: {\n    \n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  tabs: {\n    \n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginLeft: theme.spacing(15),\n    },\n  },\n  mobiletab: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  tabPanel: {\n    marginBottom: theme.spacing(3),\n  },\n  flex_section: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    // minHeight: 0\n  },\n  \n  flex_col_scroll: {\n    flexGrow: 1,\n    overflow: 'auto',\n    // minHeight: '100vh'\n  },\n  rpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    margin: theme.spacing(2),\n    // borderRadius: theme.spacing(50)\n  },\n  postButton: {\n    borderRadius: theme.spacing(50)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        setTitle(event.share_link)\n    }, [event.share_link])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Share Link\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DialogContent, DialogTitle } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  imageBox:{\n    display: \"flex\",\n        justifyContent: \"center\",\n  },\n  dialog: {\n    // height: '800px',\n    minHeight: '90vh',\n    maxHeight: '90vh',\n},\n  image: {\n    maxWidth: \"100%\",\n  },\n  icons: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    // color: theme.palette.grey[500],\n\n},\ntitle:{\n  backgroundColor: theme.palette.secondary\n}\n}));\n\n\n\n\nfunction ImageDialog(props) {\n  const classes = useStyles();\n  const event = props.event;\n  function handleClose() {\n    props.handleClose();\n\n}\n\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"transparent\",\n                    boxShadow: 'none',\n                    \n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.title}>{event.name}\n            <div className={classes.icons}>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n            </div>\n            </DialogTitle>\n              <DialogContent>\n              <Box className={classes.imageBox}>\n              <img className={classes.image} src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  alt=\"profile pic\"></img>\n              </Box>\n                \n              </DialogContent>\n            </Dialog>\n      </div>\n   );\n}\n\nexport default ImageDialog;\n\n","import React from 'react';\nimport { cleanup } from '@testing-library/react';\n\n//Materail imports\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\n// import AuthContext from '../AuthContext';\nimport ImageDialog from '../Components/ImageDialog';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    }\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const { children, value, url, index, ...other } = props;\n    const event = props.event;\n    const tags = event.tags;\n    // const requirements = event.requirements;\n    const [requirements, setRequirements] = React.useState([])\n    const [timeLabel, setTimeLabel] = React.useState(\"Registration Ends in\");\n    const [adminDetails, setAdminDetails] = React.useState({});\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    const [notRegistered,setNotRegistered] = React.useState(false);\n    React.useEffect(()=>{\n        if(props.notRegistered){\n            setNotRegistered(true)\n        }\n        else {\n            setNotRegistered(false)\n        }\n    },[props])\n\n    React.useEffect(() => {\n        if (event.requirements !== undefined) {\n            setRequirements(event.requirements);\n        }\n        if (event._id !== undefined && event.user_id !== undefined) {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_organizer_details?eventId=${event._id}&userId=${event.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    setAdminDetails(value);\n                })\n            })\n        }\n    }, [event, token])\n    // console.log(event)\n    // console.log(requirements);\n\n    const calculateTimeLeft = () => {\n\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let timeLeft = {};\n        if (difference < 0) {\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        if (difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const getTimeLabel = () => {\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let label = \"Registration ends in\"\n        if (difference < 0) {\n            label = \"Starts in\"\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            label = \"Ends in\"\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        return label;\n    }\n\n    const [timeLeft, setTimeLeft] = React.useState(calculateTimeLeft());\n\n    React.useEffect(() => {\n        const x = setTimeout(() => {\n            setTimeLabel(getTimeLabel());\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n\n        return () => {\n            cleanup();\n            clearTimeout(x);\n        }\n    });\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach(interval => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span key={interval}>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        // setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Grid container component=\"main\">\n                        <Grid item xs={12} sm={12} md={4} lg={4} >\n                            <img onClick={handleImageDialogOpen} style={{ maxWidth: '250px' }} alt=\"event poster\" src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  ></img>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <Typography>{event.description} </Typography>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }}>{timeLabel}</Typography>\n                            <Typography variant=\"h5\">{timerComponents.length ? timerComponents : <span>Time's up!</span>}</Typography>\n                            {/* <Typography>Starts at {event.start_time}</Typography>\n                        <Typography>Ends at {event.finish_time}</Typography> */}\n                            <div style={{ marginTop: '10px' }}>\n                                <Chip variant=\"outlined\" color=\"inherit\" label={event.event_type}></Chip>\n\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.fee_type}></Chip>\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.event_mode}></Chip>\n                                {tags != null && tags.map(val => {\n                                    return <Chip key={val} style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                })}\n                            </div>\n\n                        </Grid>\n                        <Grid item xs={12}>\n\n                            <Box>\n                                <Box className={classes.root0}>\n                                    <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h4\">About</Typography>\n                                </Box>\n                                <Box className={classes.root0}>\n                                    <Typography color=\"textSecondary\" variant=\"body2\">\n                                        {\n                                            event.about\n                                        }\n                                    </Typography>\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {requirements !== null && requirements.length !== 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Requirements</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {\n                                        requirements.length !== 0 && requirements.map(val => {\n                                            return <Chip key={val} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                        })\n                                    }\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Offline\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Venue Details</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue}</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue_college}</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.fee_type === \"Paid\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Fee Details</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.fee_type === \"Paid\" && <Typography color=\"textSecondary\" variant=\"body2\">{\"Rs \" + event.fee}</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Platform Details</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"body2\">{event.platform_details}</Typography>}\n                                </Box>\n                                {!notRegistered && <Box className={classes.root0}>\n                                    <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Organised By</Typography>\n                                </Box>}\n                                {!notRegistered && <Box className={classes.root0}>\n                                    <Box className={classes.adminDetails}>\n                                        <Box>\n                                            <Avatar className={classes.avatar} alt={adminDetails.name} src={process.env.REACT_APP_API_URL + `/api/image?id=${adminDetails.profile_pic}`} />\n                                        </Box>\n                                        <Box>\n                                            <Box>\n                                                <Typography variant=\"h5\">{adminDetails.name}</Typography>\n                                            </Box>\n                                            <Box>\n                                                <Typography color=\"textSecondary\" variant=\"body2\">{adminDetails.college_name}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>}\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12}>\n                        </Grid>\n                        <Grid>\n                        </Grid>\n                    </Grid>\n                    <ImageDialog\n                        // image={selectedImage}\n                        event={event}\n                        open={imageDialogOpen}\n                        handleClose={handleImageDialogClose}>\n                    </ImageDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n\n// This impressive paella is a perfect party dish and a fun meal\n//  to cook together with your guests. Add 1 cup of frozen peas along with \n// the mussels, if you like.","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport TimerIcon from '@material-ui/icons/Timer';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  large: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  tab: {\n    flexGrow: 1,\n    // maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const token = localStorage.getItem('token');\n  const event = props.event;\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Timeline align=\"alternate\">\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {regEndDate.toDateString()}{\" \"+regEndDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Registration Ends\n                  </Typography>\n                  <Typography>Your opportunity to participate comes to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {startDate.toDateString()}{\" \"+startDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\" variant=\"outlined\">\n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Starts\n                  </Typography>\n                  <Typography>Party begins</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n            <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {endDate.toDateString()}{\" \"+endDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector className={classes.secondaryTail} />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Ends\n                  </Typography>\n                  <Typography>Chill time, event complete</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            {/* <TimelineItem>\n              <TimelineSeparator>\n                <TimelineDot color=\"secondary\">\n                  <RepeatIcon />\n                </TimelineDot>\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Repeat\n            </Typography>\n                  <Typography>Because this is the life you love!</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem> */}\n          </Timeline>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if(event.registered){\n          setAnnouncements(value);\n        }\n        else{\n          value.forEach(ann => {\n            if(ann.visible_all){\n              setAnnouncements((announcements)=>[...announcements,ann])\n            }\n          });\n        }\n        \n      })\n    })\n  }, [token, event])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n        {\n                    announcements.length === 0 && <Typography>No Announcements</Typography>\n                }\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useEffect } from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { ListItemAvatar } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Linkify from 'react-linkify';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar style={{ display: 'none' }} ><InfoIcon></InfoIcon></ListItemAvatar>\n            <ListItemText\n                primary={\n                    <React.Fragment>\n                        <Typography component=\"h6\" variant=\"body2\">\n                            {message.user_name+userType}\n                        </Typography>\n\n                        {/* <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                            {userType}\n                        </Typography> */}\n                    </React.Fragment>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" variant=\"body1\" color=\"textPrimary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{color:'red',fontWeight: 'bold'}} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                            {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                        </Typography>\n                        <Box>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                className={classes.date}\n                            >\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </React.Fragment>}\n            />\n        </ListItem>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n \nconst AuthContext = React.createContext({\n    currentUser: null,\n    setCurrentUser: ()=>{}\n});\n \nexport default AuthContext;","import React from 'react';\nimport clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        position: 'absolute',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    open: {\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(34),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    close: {\n        // width: '85%',\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(13),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    const [cl, setCl] = React.useState(classes.bottomBar);\n    React.useEffect(() => {\n        if (props.open !== undefined) {\n            setCl(clsx({\n                [classes.open]: props.open,\n                [classes.close]: !props.open,\n            }))\n        }\n        // eslint-disable-next-line\n    }, [props.open])\n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        if (newmessage !== null && newmessage !== \"\") {\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={cl} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const {currentUser} = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            // console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            // console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            // console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === currentUser.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage adminId={event.user_id} message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === currentUser.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport EventShareDialog from './EventShareDialog';\nimport AboutEventPanel from '../Components/AboutEventPanel';\nimport EventsTimeLinePanel from '../Components/EventTimeLinePanel';\nimport EvenstAnnouncementsPanel from '../Components/EventsAnnouncementsPanel';\nimport ChatPanel from '../Components/EventsChatPanel';\nimport { Typography } from '@material-ui/core';\nimport AuthContext from '../AuthContext';\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    }\n}));\n\nfunction EventsDialog(props) {\n    const event = props.event;\n    const t = localStorage.getItem('theme');\n    const [value, setValue] = React.useState(0);\n    const {currentUser} = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    // const token = localStorage.getItem('token');\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n    const [chatAcess, setChatAcess] = React.useState(false);\n\n    React.useEffect(() => {\n        if (event.registered || event.reg_mode !== \"form\") {\n            setChatAcess(true)\n        }else if(event.user_id === currentUser.user_id){\n            setChatAcess(true)\n        }\n        else {\n            setChatAcess(false)\n        }\n    }, [event,currentUser])\n\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleClose() {\n        props.handleClose();\n\n    }\n\n    function handleRegClick() {\n        props.handleReg(event);\n\n    }\n\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                {event.name}\n                <div className={classes.icons}>\n                    {/* <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                        <MailIcon></MailIcon>\n                    </IconButton> */}\n                    <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <Paper className={classes.root2}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"About\" {...a11yProps(0)} />\n                            <Tab label=\"Schedule\" {...a11yProps(1)} />\n                            <Tab label=\"Announcements\" {...a11yProps(2)} />\n                            <Tab label=\"Chat\" {...a11yProps(3)} />\n\n                        </Tabs>\n                    </Paper>\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent} dividers={true} >\n                <EventShareDialog\n                    event={event}\n                    open={shareDialogOpen}\n                    handleClose={handleShareClose}></EventShareDialog>\n                <AboutEventPanel\n                    value={value}\n                    index={0}\n                    event={props.event}></AboutEventPanel>\n                <EventsTimeLinePanel value={value} index={1} event={props.event}></EventsTimeLinePanel>\n                <EvenstAnnouncementsPanel value={value} index={2} event={props.event}></EvenstAnnouncementsPanel>\n                {value === 3 && chatAcess && <ChatPanel value={value} index={3} event={props.event}></ChatPanel>}\n                {value === 3 && !chatAcess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n            </DialogContent>\n            <DialogActions className={classes.action}>\n                <Box className={classes.bottomBar} display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\" hidden={value !== 3}>\n                </Box>\n                <div\n                    role=\"tabpanel\"\n                    hidden={value === 3}>\n                    {value !== 3 && (\n                        <div className={classes.buttonDiv}>\n\n                            {\n                                event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                                    {event.registered ? \"Registered\" : \"Register\"}\n                                </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                                    </Button>\n                            }\n\n                        </div>\n                    )}\n\n                </div>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default EventsDialog;","import React from 'react';\n \nconst EventsContext = React.createContext({\n    allEvents: null,\n    setAllEvents: ()=>{}\n});\n \nexport default EventsContext;","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// import CardContent from '@material-ui/core/CardContent';\n// import Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\n// import { Redirect } from 'react-router';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root3: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2)\n    },\n    root5:{\n        display: \"flex\",\n            justifyContent: \"flex-end\",\n      },\n      secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n      },\n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [notificationms,setNotifications] = React.useState([]);\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/get_notifications', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value)\n                    setNotifications(value);\n                })\n            }\n        })\n    }, [token])\n\n    const handleNotificationClick = (n) => () =>{\n        props.handleClick(n.event_id)\n    }\n\n\n    return (\n        <div>\n            <Dialog scroll=\"paper\" open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.dialog }}>\n                <DialogTitle id=\"form-dialog-title\">Notifications</DialogTitle>\n                <Divider></Divider>\n                <DialogContent>\n                {\n                    notificationms.map((n,index)=>{\n                        const date = new Date(n.time)\n                       return <Box onClick={handleNotificationClick(n)} m={1} p={1} className={classes.root3}>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Typography className={classes.title}>\n                                {n.title}\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                {n.description}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.root5}>\n                            <Typography variant=\"body2\" >\n                                {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    })\n                }\n                    \n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EventIcon from '@material-ui/icons/Event';\nimport useStyles from '../Themes/MainHomeStyles';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport { Button } from '@material-ui/core';\nimport Logo from '../Components/Images/logo.svg';\n// import DarkLogo from '../Components/Images/dark_theme_logo.png';\n// import LightLogo from '../Components/Images/light_theme_logo.png';\n// import CuboidLogo from '../Components/Images/Cuboid logo.png'\n\n\n\n\n\n\nconst NavigationBar = function ({ history }) {\n\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const t = localStorage.getItem('theme');\n  const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n  // const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n  // const [allEvents, setAllEvents] = React.useState([]);\n  const [searchedEvent, setSearchedEvent] = React.useState([]);\n  const [notificationsCount,setNotificationCount] = React.useState(0);\n\n  const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  // const [calenderValue, setCalenderValue] = useState(new Date());\n  // const [loading, setLoading] = React.useState(false);\n  // const eventypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [open, setOpen] = React.useState(false);\n  const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n  const {allEvents} = React.useContext(EventsContext);\n  useEffect(() => {\n    if (localStorage.getItem('tabIndex') != null) {\n      const tabIndex = parseInt(localStorage.getItem('tabIndex'));\n      if (tabIndex != null) {\n        setValue(tabIndex);\n      }\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/get_unseen_notifications_count', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        // console.log(data);\n        setNotificationCount(data);\n      })\n    })\n  }, [token])\n\n\n  // function handleMorebuttonClick(event) {\n  //   event.preventDefault();\n  //   // history.push(\"/event/1\")\n  // }\n  function handleSearchChange(event, value) {\n    if (value) {\n      // console.log(value);\n      setSearchedEvent(value);\n      setOpen(true);\n    }\n  }\n\n  const handleNotificationCardClick = (value)=>{\n    if(value){\n      allEvents.forEach(event => {\n        if(event._id === value){\n          setSearchedEvent(event);\n          setOpen(true);\n        }\n      });\n    }\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('tabIndex', newValue);\n  };\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    // setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  \n  if (!token) {\n    history.replace('/');\n  }\n\n  function handleThemeChange(event) {\n    // console.log(event.target.checked);\n    setDarkThemeSelected(event.target.checked);\n    if (event.target.checked) {\n      localStorage.setItem('theme', 'dark');\n      window.location.reload(false);\n    }\n    else {\n      localStorage.setItem('theme', 'light');\n      window.location.reload(false);\n    }\n  }\n\n\n\n  function handleSignout(event) {\n\n    fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then((result) => {\n      result.json().then((data) => {\n        if (data.message === \"success\") {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tabIndex');\n          history.replace(\"/\")\n        }\n      })\n    })\n\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\n      {/* <MenuItem onClick={handleMenuClose}>My account</MenuItem> */}\n      <MenuItem> Dark Theme <Switch\n        checked={darkThemeSelected}\n        onChange={handleThemeChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      /></MenuItem>\n      <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n    </Menu>\n  );\n\n  function handleeventClick(event) {\n    event.preventDefault();\n    history.push(\"/events\")\n    // localStorage.setItem('tabIndex',1);\n  }\n  function handleHomeClick() {\n    history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n  function handleProfileClick() {\n    history.push(\"/profile\")\n  }\n  function handleExploreClick() {\n    history.push(\"/yourevents\")\n  }\n  // function handleChatClick() {\n  //   history.push('/chat')\n  // }\n  const handleClose = () => {\n    setOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  function handleRegistrationButton(event) {\n    setOpen(false);\n    // setSelectedEvent(event);\n    history.push('/event/register/' + event._id);\n  }\n\n  function handleNotificationClick() {\n    fetch(process.env.REACT_APP_API_URL + '/api/update_notification_status', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(0);\n      })\n    })\n    setNotificationsOpen(true);\n  }\n  function handleTitleButtonClick() {\n    localStorage.setItem('tabIndex', 0)\n    setValue(0)\n    history.push('/home')\n  }\n\n  return (\n    <div className={classes.grow}>\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Toolbar>\n            <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n            <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                options={allEvents}\n                getOptionLabel={(option) => option.name}\n                onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              />\n            </div>\n            <div className={classes.tabs}>\n              <Paper square className={classes.root}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  variant=\"fullWidth\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  aria-label=\"icon\"\n\n                >\n                  <Tab onClick={handleHomeClick} icon={<HomeIcon />} aria-label=\"home\" />\n                  <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                  {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"favorite\" /> */}\n                  <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"person\" />\n                  <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n                </Tabs>\n              </Paper>\n            </div>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                <Badge badgeContent={notificationsCount} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\">\n                <SettingsIcon></SettingsIcon>\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <div className={classes.mobiletab}>\n\n            <Paper square className={classes.root} position=\"sticky\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              // aria-label=\"icon tabs example\"\n              >\n                <Tab onClick={handleHomeClick} icon={< HomeIcon />} aria-label=\"home\" />\n                <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"messages\" /> */}\n                <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"explore\" />\n                <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n              </Tabs>\n            </Paper>\n          </div>\n        </AppBar>\n        <div>\n          {open && <EventsDialog\n            open={open}\n            event={searchedEvent}\n            handleReg={handleRegistrationButton}\n            handleClose={handleClose}>\n          </EventsDialog>}\n          <NotificationsDialog open={notificationsOpen} handleClick={handleNotificationCardClick} handleClose={handleClose}></NotificationsDialog>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default withRouter(NavigationBar);\n\n","import React from 'react';\n \nconst ActiveEventsContext = React.createContext({\n    activeEvents: null,\n    setActiveEvents: ()=>{}\n});\n \nexport default ActiveEventsContext;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\n\n//Material Imports\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Components impoprts\nimport NavigationBar from './NavigationBar';\nimport EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n// import dot from 'dote'\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    root: {\n        background: 'white',\n        position: 'sticky',\n        top: 0,\n        bottom: 0,\n        zIndex: 5,\n    },\n}));\n\nfunction Layout(props) {\n\n\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [allEvents, setAllEvents] = React.useState([]);\n    const [activeEvents, setActiveEvents] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [open, setOpen] = React.useState(true);\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n\n    const value = {currentUser,setCurrentUser};\n    const allEventsValue = {allEvents,setAllEvents};\n    const activeEventsValue = {activeEvents,setActiveEvents};\n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value);\n                    if (value[0].verified === false) {\n                        // setUserDetailsDone(false);\n                        try {\n                            var data2 = new FormData();\n                            const payload2 = {\n                                email: value[0].email\n                            };\n                            data2 = JSON.stringify(payload2)\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                    'Content-Type': 'application/json'\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then((result) => {\n                                // console.log(result);\n                                result.json().then((res) => {\n                                    if (res.message === \"success\") {\n                                        setOpen(false);\n                                        props.history.push(\"/otpverification\")\n                                    }\n                                })\n\n                            })\n                        } catch (error) {\n\n                        }\n\n                    }\n                    else if (value[0].college_name === null) {\n                        setOpen(false);\n                        props.history.push(\"/userinfo\")\n                    }\n                    else {\n                        setUserDetailsDone(true);\n                        setCurrentUser(value[0]);\n                    }\n\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL + '/api/events', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value)\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setAllEvents(value);\n                    setActiveEvents(value.filter(e => {\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }))\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // if(!currentUser.verified){\n\n    // }\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        if (currentUser.verified) {\n            return <Redirect to=\"/userinfo\"></Redirect>\n        } else {\n            console.log(\"xyz\")\n            try {\n                var data2 = new FormData();\n                const payload2 = {\n                    email: currentUser.email\n                };\n                data2 = JSON.stringify(payload2)\n                fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data2\n                }).then((result) => {\n                    // console.log(result);\n                    result.json().then((res) => {\n                        if (res.message === \"success\") {\n                            return <Redirect to=\"/otpverification\"></Redirect>\n                        }\n                    })\n\n                })\n            } catch (error) {\n\n            }\n\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            <EventsContext.Provider value={allEventsValue}>\n                <ActiveEventsContext.Provider value={activeEventsValue}>\n                    {\n                        currentUser != null && <div>\n                            <Paper className={classes.root}>\n                                <NavigationBar></NavigationBar>\n                            </Paper>\n                            <div>\n                                {props.children}\n                            </div>\n                        </div>\n                    }\n                    {\n                        currentUser == null && <Backdrop className={classes.backdrop} open={open}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                    }\n                </ActiveEventsContext.Provider>\n            </EventsContext.Provider>\n        </AuthContext.Provider>\n\n\n    );\n}\nexport default withRouter(Layout);\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n// import { Typography } from '@material-ui/core';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport '../Themes/main.scss'\nimport EventsDialog from '../Components/EventsDialog';\n// import EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction CalenderPanel({history}) {\n    localStorage.setItem('tabIndex',1)\n    // const { children, value, url, index, ...other } = props;\n    // const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [events, setEvents] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const [registeredEvents,setRegisteredEvents] = React.useState([]);\n    // const [image, setImage] = React.useState(null);\n    const {activeEvents} = React.useContext(ActiveEventsContext);\n\n    useEffect(() => {\n        activeEvents.forEach(y => {\n            // console.log(y.start_time);\n            setEvents(events =>\n                [...events, { id: JSON.stringify(y), title: y.name, start: y.start_time, end: y.finish_time }]\n            )\n        })\n        setRegisteredEvents(activeEvents.filter((value) => value.registered === true))\n\n    }, [activeEvents])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n    \n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    function handleRegistrationButton(event) {\n        setOpen(false);\n        // setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n\n    function handleEventClick(info) {\n        setSelectedEvent(JSON.parse(info.event.id))\n        setOpen(true);\n    }\n    return (\n        <div>\n            {/* {value === index && ( */}\n            <div className={classes.root}>\n                <Grid container component=\"main\" >\n\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                        {/* <Typography index={0}>Filters</Typography> */}\n                        {/* <Calendar onChange={setCalenderValue} value={calenderValue} ></Calendar> */}\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8} >\n                        <FullCalendar\n                            eventBackgroundColor=\"#1C1C1E\"\n                            eventBorderColor=\"#00bdaa\"\n                            events={events}\n                            eventClick={handleEventClick}\n                            defaultView='dayGridMonth' plugins={[dayGridPlugin]} backgroundColor=\"black\" \n                            buttonIcons={false}></FullCalendar>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={false} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                        </Button>\n                            <List className={classes.sideList}>\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registeredEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        handleReg={handleRegistrationButton}\n                        ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CalenderPanel;\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const event = props.event;\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                event_id: event._id,\n                title: title,\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Report({event.name})</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\nimport EventReportDialog from './EventReportDialog';\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [reportDialogOpen, setReportDialogOpen] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n  function handleImageClick() {\n    props.imageDialog(event)\n  }\n  function handleRegClick() {\n    props.handleReg(props.eventId);\n\n  }\n  function handleMoreButtonClick() {\n    props.click(props.eventId);\n  }\n  function handleReportClick() {\n    setReportDialogOpen(true);\n  }\n  function handleReportClose() {\n    setReportDialogOpen(false);\n  }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography noWrap variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {props.name}\n          </Typography>\n        }\n        subheader={\n          <React.Fragment>\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {event.description}\n            </Typography>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n          </React.Fragment>\n        }\n      />\n      <EventReportDialog\n        event={event}\n        open={reportDialogOpen}\n        handleClose={handleReportClose}>\n      </EventReportDialog>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n      <CardActions disableSpacing>\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={handleMoreButtonClick}>\n            See More\n        </Button>\n          {\n            event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                  <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n          }\n        </div>\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(10),\n        zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        // top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n            // top: theme.spacing(20)\n        },\n    \n    },\n    root2: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        borderRadius: theme.spacing(2)\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50),\n        backgroundColor: theme.palette.primary.main\n    },\n\n}));\n\nfunction SortLeftPanel(props) {\n    const classes = useStyles();\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const {currentUser} = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        // defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        // defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List className={classes.root}>\n                    {[\"Online\", \"Offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" value={props.sortCollgeType} onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${currentUser.college_name}`].map((value) => {\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default SortLeftPanel;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n\n    root: {\n        background: theme.palette.secondary.main,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none',\n        // },\n    },\n    \n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n\n}));\n\nfunction MobileSortPanel(props) {\n    const classes = useStyles();\n    const {currentUser} = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List >\n                    {[\"online\", \"offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${currentUser.collegeName}`].map((value) => {\n                           \n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default MobileSortPanel;\n\n ","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    // const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    \n\n    // function handleTitleChange(event) {\n    //     setTitle(event.target.value);\n    // }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/send_feedback', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack)</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport EventCard from '../Components/EventCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withRouter} from \"react-router\";\nimport List from '@material-ui/core/List';\nimport EventsDialog from '../Components/EventsDialog';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SortLeftPanel from '../Components/SortLeftPanel';\nimport MobileSortPanel from '../Components/MobileSortPanel';\nimport ImageDialog from '../Components/ImageDialog';\n// import EventsContext from '../EventsContext';\nimport Skeleton from '@material-ui/lab/Skeleton';\n// import { Link } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\n// import GridListEvents from '../Components/GridListEvents';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\nimport FeedBackDialog from '../Components/FeedBackDialog';\n// function a11yProps(index) {\n//     return {\n//         id: `scrollable-auto-tab-${index}`,\n//         'aria-controls': `scrollable-auto-tabpanel-${index}`,\n//     };\n// }\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '89vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        // color: theme.palette.primary.main\n        backgroundColor: theme.palette.primary.main\n    },\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        // height: '89vh',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        // bottom: 0,\n        // zIndex: 3,\n    },\n    leftSubPaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n        [theme.breakpoints.down('md')]: {\n            maxHeight: '78vh',\n        },\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    mobileFilterButton: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    skeleton: {\n        textDecorationColor: theme.palette.primary.dark,\n    },\n    feedBackButton: {\n        borderRadius: theme.spacing(50),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        paddingBottom: theme.spacing(1)\n    }\n\n}));\n\nfunction EventsTabPanel({ history }) {\n    localStorage.setItem('tabIndex',0);\n    // const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [selectedEvent, setSelectedEvent] = React.useState(\"\");\n    const [sortStartDate, setSortStartDate] = React.useState(null);\n    const [sortEndDate, setSortEndDate] = React.useState(null);\n    // const [sortType, setSortType] = React.useState(null);\n    // const [sortEventMode, setSortEventMode] = React.useState(null);\n    const [sortCollegeType, setSortCollegeType] = React.useState(\"All\");\n    const [sortedEventsArray, setSortedEventsArray] = React.useState([]);\n    const [isFiltered, setIsFiltered] = React.useState(false);\n    const [feeSortChecked, setFeeSortChecked] = React.useState([0]);\n    const [modeSortChecked, setModeSortChecked] = React.useState([0]);\n    const [filterDialogOpen, setFilterDialogOpen] = React.useState(false);\n    // const [selectedImage, setSelectedImage] = React.useState(null);\n    const {activeEvents} = React.useContext(ActiveEventsContext);\n    const [registerdEvents, setRegisteredEvents] = React.useState([]);\n    const [feedBackOpen,setFeedBackOpen] = React.useState(false);\n\n    \n\n    React.useEffect(() => {\n        // console.log(allEvents);\n        setRegisteredEvents(activeEvents.filter((value) => value.registered === true))\n    }, [activeEvents])\n    // console.log(registerdEvents);\n    if (!token) {\n        // return <Redirect to=\"/\" />;\n        history.replace(\"/\")\n    }\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClick = function (event, image) {\n        // console.log(id);\n        setSelectedEvent(event);\n        // setSelectedImage(image);\n        setOpen(true);\n        // history.push('eventdetails')\n    }\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleSortDateChange = (date) => {\n        console.log(date);\n        setSortStartDate(date);\n    };\n    const handleEndSortDateChange = (date) => {\n        setSortEndDate(date);\n    }\n\n    const handleFeedBackButtonClick = () =>{\n        setFeedBackOpen(true);\n    }\n\n    const closeFeedBckDialog = () =>{\n        setFeedBackOpen(false);\n    }\n\n    // function handleSortEventModeChamge(event, value) {\n    //     console.log(event);\n    //     console.log(value);\n    // }\n    // console.log(allEvents);\n    function handleSortCollegeChange(event, value) {\n        setSortCollegeType(value);\n    }\n    async function handleSortApplyButton() {\n        // console.log(sortStartDate);\n        // console.log(modeSortChecked);\n        // console.log(sortCollegeType);\n        setFilterDialogOpen(false);\n        if (sortStartDate != null && sortEndDate != null) {\n            const dateRangeSortedEvents = sortByDateRange(sortStartDate, sortEndDate, activeEvents);\n            setSortedEventsArray(dateRangeSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateRangeSortedEvents));\n                const typeSortedEvents = sortByMode(dateRangeSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(typeSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.college_name) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateRangeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.college_name) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateRangeSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (sortStartDate != null) {\n            const dateSortedEvents = await sortByDate(sortStartDate, activeEvents)\n            setSortedEventsArray(dateSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateSortedEvents));\n                const typeSortedEvents = sortByMode(dateSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(dateSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.collegeName) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.collegeName) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (modeSortChecked.length > 1) {\n            const typeSortedEvents = sortByMode(activeEvents);\n            console.log(sortByMode(activeEvents));\n\n            setSortedEventsArray(typeSortedEvents);\n            setIsFiltered(true);\n            if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(typeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (feeSortChecked.length > 1) {\n            const feeSortedEvents = sortByCost(activeEvents);\n            setSortedEventsArray(feeSortedEvents);\n            setIsFiltered(true);\n        }\n        else if (sortCollegeType === user.college_name) {\n            const collegeSortedEvents = sortByCollege(activeEvents);\n            setSortedEventsArray(collegeSortedEvents);\n            setIsFiltered(true);\n        }\n    }\n\n    function sortByDateRange(date1, date2, sEvents) {\n        var sortedEvents = [];\n        // console.log(typeof (date1));\n        // console.log(typeof (date1));\n        sEvents.forEach(sEvent => {\n            const d = new Date(sEvent.start_time);\n            if (date1.getTime() <= d.getTime() && d.getTime() <= date2.getTime()) {\n                sortedEvents.push(sEvent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByDate(date, tEvents) {\n        var sDEvents = [];\n        tEvents.forEach(async sevent => {\n            const x = `${date.getDate()}` + date.getMonth() + date.getFullYear();\n            const d = new Date(sevent.start_time);\n            const y = `${d.getDate()}` + d.getMonth() + d.getFullYear();\n            console.log(y);\n            if (x === y) {\n                console.log(sevent);\n                sDEvents.push(sevent);\n            }\n            console.log(sortedEventsArray);\n        })\n        console.log(sDEvents);\n        return sDEvents;\n    }\n    function sortByMode(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (modeSortChecked.includes(sevent.event_mode)) {\n                console.log(\"ddd\");\n                sortedEvents.push(sevent);\n            }\n        })\n        console.log(sortedEvents);\n        return sortedEvents;\n    }\n\n    function sortByCost(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (feeSortChecked.includes(sevent.fee_type)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCollege(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            console.log(user.college_name);\n            console.log(sevent.college_name);\n            if (user.college_name === sevent.college_name) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function handlesortDiscardButton() {\n        setModeSortChecked([0])\n        setFeeSortChecked([0])\n        setSortedEventsArray([]);\n        setSortStartDate(null);\n        setSortEndDate(null);\n        setIsFiltered(false);\n        setFilterDialogOpen(false);\n        setSortCollegeType(\"All\")\n        // setChecked(null);\n    }\n    function handlefilterButtonClicked() {\n        setFilterDialogOpen(true);\n    }\n    function handleFilterClose() {\n        setFilterDialogOpen(false);\n    }\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n\n    function handleRegistrationButton(event) {\n        setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    return (\n        <div>\n            <Grid container component=\"main\" >\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} >\n                    <Paper className={classes.root}>\n                        <Paper className={classes.leftSubPaper}>\n                            <SortLeftPanel\n                                handleSortDateChange={handleSortDateChange}\n                                sortStartDate={sortStartDate}\n                                handleEndSortDateChange={handleEndSortDateChange}\n                                sortEndDate={sortEndDate}\n                                handleSortCollegeChange={handleSortCollegeChange}\n                                feeChecked={feeSortChecked}\n                                modeChecked={modeSortChecked}\n                                sortCollgeType={sortCollegeType}\n                                setFeeChecked={setFeeSortChecked}\n                                setModeChecked={setModeSortChecked}\n                                handleSortApplyButton={handleSortApplyButton}\n                                handlesortDiscardButton={handlesortDiscardButton}>\n                            </SortLeftPanel>\n                        </Paper>\n                    </Paper>\n                    <Button className={classes.mobileFilterButton} variant=\"outlined\" onClick={handlefilterButtonClicked} >Filters</Button>\n                </Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    {/* <Typography variant=\"h5\" style={{ paddingTop: '5px' }}>\n                        Your College Events\n                    </Typography>\n                    <GridListEvents click={handleClick} events={allEvents.filter((event) => event.college_name === user.college_name)} ></GridListEvents> */}\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px',paddingBottom: '7px' }}>\n                        {/* Active Events */}\n                    </Typography>\n\n                    {activeEvents.length === 0 && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>}\n                    {\n                        isFiltered ? sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    eventId={event}\n                                >\n                                </EventCard>)\n                        }) : activeEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                </Grid>\n                <Grid item xs={12} sm={12} md={4} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                            </Button>\n                            <List className={classes.root2}>\n                                \n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registerdEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                            <Button\n                                onClick={handleFeedBackButtonClick}\n                                variant=\"outlined\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.feedBackButton}\n                                 >\n                                Report Bug/Feedback\n                            </Button>\n                           \n\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n            </Grid>\n            <div>\n            <FeedBackDialog open={feedBackOpen} handleClose={closeFeedBckDialog}></FeedBackDialog>\n                {open && <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    // imageUrl={selectedImage}\n                    handleClose={handleClose}\n                    handleReg={handleRegistrationButton}\n                    imageDialog={handleImageDialogOpen}\n                >\n                </EventsDialog>}\n                <ImageDialog\n                    // image={selectedImage}\n                    event={selectedEvent}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose}>\n                </ImageDialog>\n                <Dialog\n                    open={filterDialogOpen}\n                    onClose={handleFilterClose}\n                    fullWidth={true}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                    maxWidth=\"sm\" PaperProps={{\n                        style: {\n                            backgroundColor: \"#1C1C1E\",\n                            boxShadow: 'none',\n                        },\n                    }}>\n                    <DialogTitle>Filters</DialogTitle>\n                    <DialogContent>\n                        <MobileSortPanel\n                            handleSortDateChange={handleSortDateChange}\n                            sortStartDate={sortStartDate}\n                            handleEndSortDateChange={handleEndSortDateChange}\n                            sortEndDate={sortEndDate}\n                            handleSortCollegeChange={handleSortCollegeChange}\n                            feeChecked={feeSortChecked}\n                            modeChecked={modeSortChecked}\n                            setFeeChecked={setFeeSortChecked}\n                            setModeChecked={setModeSortChecked}\n                            handleSortApplyButton={handleSortApplyButton}\n                            handlesortDiscardButton={handlesortDiscardButton}>\n                        </MobileSortPanel>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default withRouter(EventsTabPanel);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport EventShareDialog from '../Components/EventShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n  }\n}));\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const [image, setImage] = React.useState(null);\n  // const token = localStorage.getItem('token');\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  // function handleViewButtonClick() {\n  //   props.handleViewClick(props.event);\n  // }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n      <CardMedia\n        component=\"img\"\n        height=\"180\"\n        image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        \n      </CardContent>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleShareClick}>\n          Share\n        </Button>\n        <Button  size=\"small\" color=\"primary\">\n          {t === 'light' ? <Link target=\"_blank\" to={{ pathname: `/event/${event._id}` }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link> :\n            <Link target='_blank' to={{ pathname: `/event/${event._id}`}} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link>}\n        </Button>\n        <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {event.status.toUpperCase()}\n        </Typography>\n      </CardActions>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n    </Card>\n  );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\nimport { Typography } from '@material-ui/core';\n\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const [open, setOpen] = React.useState(false);\n    const {currentUser} = React.useContext(AuthContext);\n    const {allEvents} = React.useContext(EventsContext);\n    const postedEvents = allEvents.filter((val)=>{\n        return val.user_id === currentUser.user_id;\n    });\n\n    const [selectedEvent,setSellectedEvent] = React.useState(\"\");\n    function handleViewClick(event){\n        setSellectedEvent(event);\n        // setOpen(true);\n    } \n\n    function handleClose(){\n        setOpen(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    postedEvents.length === 0 && <Typography>No Posted Events</Typography>\n                }\n                {postedEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={4} key={index}>\n                    <ProfileEventCard event={event} handleViewClick={handleViewClick} name={event.name} image={url}></ProfileEventCard>\n                    </Grid>) \n                })}\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    handleClose={handleClose}\n                    name={selectedEvent.name}\n                    startTime={selectedEvent.start_time}\n                    endTime={selectedEvent.finish_time}\n                    regEndTime={selectedEvent.registrationEndTime}\n                    type={selectedEvent.eventType}\n                    tags={selectedEvent.tags}\n                    mode={selectedEvent.eventMode}\n                    feeType={selectedEvent.feesType}\n                    url={currentUser.imageUrl}>\n                    {/* imageDialog={handleImageDialogOpen} */}\n                </EventsDialog>\n                    \n                </Grid>\n                \n                {/* <ProfileEventCard></ProfileEventCard> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WcIcon from '@material-ui/icons/Wc';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        paddingLeft: theme.spacing(4),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1.5),\n        padding: theme.spacing(1)\n    }\n\n}));\n\nfunction ProfileDataBox(props) {\n    const classes = useStyles();\n    const [icon,setIcon] = React.useState(<EmailIcon></EmailIcon>)\n    React.useEffect(()=>{\n        switch(props.name){\n            case 'Username':\n                setIcon(<PersonPinCircleIcon></PersonPinCircleIcon>)\n                break;\n            case 'Name':\n                setIcon(<PersonIcon></PersonIcon>)\n                break;\n            case 'College':\n                setIcon(<SchoolIcon></SchoolIcon>)\n                break;\n            case 'Gender':\n                setIcon(<WcIcon></WcIcon>)\n                break;\n            case 'Bio':\n                setIcon(<InfoIcon></InfoIcon>)\n                break;\n            case 'Designation':\n                setIcon(<WorkIcon></WorkIcon>)\n                break;\n            case 'Email':\n                setIcon(<EmailIcon></EmailIcon>)\n                break;\n            default:\n                setIcon(<InfoIcon></InfoIcon>)\n        }\n    },[props.name])\n\n    return (\n        <Box className={classes.root3}>\n            <Box className={classes.avatar}>\n                <Avatar>\n                    {icon}\n                </Avatar>\n            </Box>\n            <Box className={classes.content}>\n                <Box><Typography>{props.name}</Typography></Box>\n                <Box><Typography variant=\"body2\" color=\"textSecondary\">{props.value}</Typography></Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ProfileDataBox;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthContext from '../AuthContext';\nimport Box from '@material-ui/core/Box';\nimport ProfileAboutDataBox from './ProfileAboutDataBox';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    editIcon: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n}));\n\nfunction ProfilePostsTabPanel(props) {\n    const classes = useStyles()\n    const { children, value, url, index, ...other } = props;\n    const {currentUser} = React.useContext(AuthContext);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Box>\n                        <Box className={classes.editIcon}>\n                            <IconButton onClick={props.handleEditButton}><EditIcon></EditIcon></IconButton>\n                        </Box>\n                        <ProfileAboutDataBox name=\"Name\" value={currentUser.name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Email\" value={currentUser.email}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Username\" value={currentUser.username}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"College\" value={currentUser.college_name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Designation\" value={currentUser.designation}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Gender\" value={currentUser.gender}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Bio\" value={currentUser.bio}></ProfileAboutDataBox>\n                    </Box>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main,\n    }\n}));\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const token = localStorage.getItem('token');\n    const [eventName,setEventName] = React.useState(\"\");\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/event/get_event_name?eventId=${event.event_id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n              setEventName(value)\n            })\n          })\n    },[event,token])\n\n    \n    function handleShareClick() {\n        \n    }\n\n    return (\n        <Card className={classes.root}>\n            {/* <CardActionArea> */}\n            {/* <CardMedia\n                component=\"img\"\n                height=\"180\"\n                image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n            /> */}\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {eventName}\n                </Typography>\n            </CardContent>\n\n            <CardActions>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    Download\n                </Button>\n                <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {event.certificate_status.toUpperCase()}\n                </Typography>\n            </CardActions>\n        </Card>\n    );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport CertificateCard from './CertificateCard';\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const token = localStorage.getItem('token');\n    \n    const [registerdEvents,setRegisteredEvents] = React.useState([]);\n\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/user/get_certificates`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n            //   console.log(value);\n              setRegisteredEvents(value);\n            })\n          })\n    },[token])\n\n    \n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    registerdEvents.length === 0 && <Typography>No Certificates Register for the event to get one</Typography>\n                }\n                {registerdEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={6} key={index}>\n                    <CertificateCard event={event}></CertificateCard>\n                    </Grid>) \n                })}\n                    \n                </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import ProfileEventsTabPanel from './ProfileRegEventsTabPanel';\nimport ProfilePostedEventsTabPanel from './ProfilePostedEventsTabPanel';\nimport AboutProfileTabPanel from './ProfileAboutTabPanel';\nimport AuthContext from '../AuthContext';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ProfileCertificatePanel from './ProfileCertificateTabPanel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        borderRadius: theme.spacing(3)\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    }\n}));\n\n\n\n\nfunction Eventcard(props) {\n    localStorage.setItem('tabIndex', 3)\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const {currentUser} = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <Grid container component=\"main\">\n                <CssBaseline />\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.large}\n                                sizes=\"100\" alt=\"\"\n                                src={process.env.REACT_APP_API_URL + `/api/image?id=${currentUser.profile_pic}`}>\n                                <PersonIcon></PersonIcon>\n                            </Avatar>\n                        }\n                        action={\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={props.handleEditButton}>\n                                Edit Profile\n                            </Button>\n                        }\n                        title={\n                            <Typography variant=\"h4\">{currentUser.name}</Typography>\n                        }\n                        subheader={currentUser.bio}\n                    ></CardHeader>\n                </Grid>\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n            </Grid>\n\n            <CardContent>\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"About\" />\n                        {/* <Tab label=\"Registered Events\" /> */}\n                        <Tab label=\"Posted Events\" />\n                        <Tab label=\"Certificates\"></Tab>\n                    </Tabs>\n                </Paper>\n                <div>\n                    <AboutProfileTabPanel handleEditButton={props.handleEditButton} value={value} index={0}></AboutProfileTabPanel>\n                    {/* <ProfileEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfileEventsTabPanel> */}\n                    <ProfilePostedEventsTabPanel  value={value} index={1}></ProfilePostedEventsTabPanel>\n                    <ProfileCertificatePanel value={value} index={2}></ProfileCertificatePanel>\n                </div>\n            </CardContent>\n        </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { Grid, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from '../AuthContext';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n}));\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateInfoTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const { currentUser, setCurrentUser } = React.useContext(AuthContext);\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const [colleges, setColleges] = React.useState([]);\n    const [image, setImage] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [userName, setUserName] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [designation, setDesignation] = React.useState(null);\n    const [collegeName, setCollegeName] = React.useState(null);\n    const [collegeId, setCollegeId] = React.useState(null);\n    const [collegesName, setCollegesName] = React.useState([]);\n    const [imageUrl, setImageurl] = React.useState(null);\n    const [imageUpdated, setImageUpdated] = React.useState(false);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [usernameError, setUserNameError] = React.useState(false);\n    const [updateButtonDisabled, setUpdateButtonDisabled] = React.useState(false);\n\n    React.useEffect(() => {\n        setEmail(currentUser.email);\n        setName(currentUser.name);\n        setUserName(currentUser.username);\n        setDesignation(currentUser.designation);\n        setCollegeName(currentUser.college_name);\n        setCollegeId(currentUser.college_id);\n        setBio(currentUser.bio);\n        setGender(currentUser.gender);\n        fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setColleges(value);\n                value.forEach((v) => {\n                    setCollegesName((collegesNames) => [...collegesNames, v.name])\n                })\n                // setCollegeNames()\n            })\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // console.log(user.college_name);\n\n    const handleClose = async (event, reason) => {\n\n        if (message === \"Updated Successfully\") {\n            // history.replace(\"/home\")\n            fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET'\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        setCurrentUser(value[0]);\n                    })\n                }\n            })\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            //   setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            //   const fileType = event.target.files[0].type;\n            setImageurl(url)\n            setImageUpdated(true);\n            //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    function handleName(event, value) {\n        setName(event.target.value);\n    }\n    function handleEmail(event, value) {\n        setEmail(value);\n    }\n    function handleGender(event, value) {\n        console.log(event.target.value);\n        setGender(event.target.value);\n    }\n    function handleDesig(event, value) {\n        setDesignation(event.target.value);\n    }\n    function handleCollege(event, value) {\n        setCollegeName(value);\n        colleges.forEach(c => {\n            if (c.name === value) {\n                //   props.collegeId(c._id)\n                setCollegeId(c._id);\n            }\n        })\n\n    }\n    // function handleUserName(event,value){\n    //     setUserName(event.target.value);\n    // }\n    function handleBio(event, value) {\n        // console.log(event.target.value)\n        setBio(event.target.value);\n    }\n\n    function handleUpdateButton(event) {\n        event.preventDefault();\n        setLoading(true);\n        console.log(bio);\n        // console.log(userName)\n\n        try {\n            var data = new FormData()\n            const payload = {\n                name: name,\n                email: email,\n                username: userName,\n                // college_name: collegeName,\n                college_id: collegeId,\n                designation: designation,\n                gender: gender,\n                // college_id: collegeId.value,\n                bio: bio,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL + '/api/users/updateprofile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (imageUpdated) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"Updated Successfully\",\n                                        type: \"success\",\n                                        autoHide: 1000\n                                    })\n                                }\n                                else {\n\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"Something went wrong try again\",\n                                        type: \"error\",\n                                        autoHide: 3000\n                                    })\n\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"Updated Successfully\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n                else {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: \"Something went wrong try again\",\n                        type: \"error\",\n                        autoHide: 3000\n                    })\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    function handleUsernameChange(event) {\n        setUserName(event.target.value);\n        const username = event.target.value;\n        var data = new FormData();\n        const payload = {\n            username: username\n        };\n        data = JSON.stringify(payload);\n        setUserNameError(false);\n        setUpdateButtonDisabled(false)\n        // setSignupButtonDisabled(false)\n        fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((result) => {\n            result.json().then(value => {\n                if (value.message === \"user already exists\") {\n                    setUserNameError(true);\n                    setUpdateButtonDisabled(true)\n                    //   setSignupButtonDisabled(true);\n                }\n            })\n        })\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={6000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    >\n                        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={12} alignContent=\"center\" alignItems=\"center\">\n                            <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                                <Badge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    badgeContent={<label htmlFor=\"contained-button-file\">\n                                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                            <EditIcon></EditIcon>\n                                        </IconButton>\n                                    </label>}>\n                                    <Avatar className={classes.large} sizes=\"100\" alt=\"\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${currentUser.profile_pic}`}></Avatar>\n                                </Badge>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                autoComplete=\"fullName\"\n                                name=\"fullName\"\n                                value={name || \"\"}\n                                onChange={handleName}\n                                id=\"fullName\"\n                                label=\"Full Name\"\n                                autoFocus\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                disabled\n                                id=\"email\"\n                                value={email}\n                                onChange={handleEmail}\n                                fullWidth\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                // variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"User Name\"\n                                value={userName}\n                                onChange={handleUsernameChange}\n                                name=\"username\"\n                                error={usernameError}\n                                helperText={usernameError && \"username already exists\"}\n                            />\n                            {/* <TextField\n                                // variant=\"outlined\"\n                                fullWidth\n                                required\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                value={userName}\n                                onChange={handleUserName}\n                            /> */}\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Autocomplete\n                                fullWidth\n                                id=\"college\"\n                                options={collegesName}\n                                getOptionLabel={(option) => option}\n                                // onChange={handleChange}\n                                value={collegeName}\n                                onChange={handleCollege}\n                                renderInput={(params) => <TextField name=\"college\" fullWidth required {...params} label=\"College\" />}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                                value={bio}\n                                onChange={handleBio}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n                                <Select\n                                    value={gender}\n                                    onChange={handleGender}\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'gender',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"designation\">You are</InputLabel>\n                                <Select\n                                    value={designation}\n                                    onChange={handleDesig}\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'designation',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        className={classes.button}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpdateButton}\n                        disabled={loading || updateButtonDisabled}\n                    // className={classes.submit}\n                    >{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Profile\"}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UpdateInfoTabPanel;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthContext from '../AuthContext';\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const {currentUser} = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error'\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [cPassword,setCPassword] = React.useState(null);\n    const [nPassword,setNPassword] = React.useState(null);\n\n\n    const handleClose = async (event, reason) => {\n        setCPassword(null);\n        setNPassword(null);\n\n        setState({ ...state, open: false });\n    };\n\n    function handleCurrentPasswordChange(event){\n        setCPassword(event.target.value);\n    }\n    function handleNewPasswordChange(event){\n        setNPassword(event.target.value);\n    }\n\n    function handleUpdatePassword(event) {\n        setLoading(true);\n        event.preventDefault();\n        // const { cPassword, nPassword } = event.target.elements;\n        // console.log(cPassword);\n        // console.log(nPassword);\n        try{\n            var data = new FormData()\n        const payload = {\n          email: currentUser.email,\n          cPassword: cPassword,\n          nPassword: nPassword\n        };\n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL+'/api/users/updatepassword', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then(response =>{\n            if (response.status === 200){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: result.message,\n                        type: \"success\"\n                      })\n                })\n            }\n            else if (response.status === 401){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message:result.error,\n                        type: \"error\"\n                      })\n                })\n                \n            }\n           \n        })\n\n\n\n            \n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: error.message,\n              type: \"error\"\n            })\n          }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={2000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    ><Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    \n                    <div className={classes.paper}>\n                        <form className={classes.form} onSubmit={handleUpdatePassword}>\n                            <Grid container spacing={2} justify=\"center\" >\n                            \n\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"cPassword\"\n                                        label=\"Current Password\"\n                                        type=\"password\"\n                                        id=\"cPassword\"\n                                        value={cPassword}\n                                        onChange={handleCurrentPasswordChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"nPassword\"\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        id=\"nPassword\"\n                                        value={nPassword}\n                                        onChange={handleNewPasswordChange}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                            // className={classes.submit}\n                            >\n                                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Password\"}\n                            </Button>\n                        </form>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\n// import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n// import TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import AuthContext from '../AuthContext';\n//function for alert\n// function Alert(props) {\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    // const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [loading, setLoading] = React.useState(false);\n\n\n\n\n    function handleLogoutAll(event) {\n        setLoading(true);\n        event.preventDefault();\n        try {\n            fetch(process.env.REACT_APP_API_URL + '/api/users/logoutall', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST'\n            }).then((result) => {\n                if (result.status === 200) {\n                    result.json().then((data) => {\n                        if (data.message === \"success\") {\n                            setLoading(false);\n                            localStorage.removeItem('token');\n                            localStorage.removeItem('tabIndex');\n                            props.history.replace(\"/\")\n                        }\n                    })\n                }\n                else {\n\n                }\n            })\n        }\n        catch (error) {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Button\n                            onClick={handleLogoutAll}\n                            className={classes.button}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                        >\n                            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Logout of All Devices\"}\n                        </Button>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport UpdateInfoTabPanel from './UpdateInfoTabPanel';\nimport UpdatePasswordTabPanel from './UpdatePasswordTabPanel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreSettingsTabPanel from './MoreSettingsTabPanel';\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n        flexGrow: 1,\n        // width: '100%',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n}));\n\nfunction UpdateProfile(props) {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function handleClose() {\n        props.handleClose();\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            style={{ minHeight: \"400px\" }}\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle id=\"scroll-dialog-title\">\n                <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <AppBar style={{ alignItems: 'center' }} position=\"static\" color=\"secondary\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\">\n                            <Tab label=\"Update info\" {...a11yProps(0)} />\n                            <Tab label=\"Change Password\" {...a11yProps(1)} />\n                            <Tab label=\"More Settings\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                <UpdateInfoTabPanel value={value} index={0}></UpdateInfoTabPanel>\n                <UpdatePasswordTabPanel value={value} index={1}></UpdatePasswordTabPanel>\n                <MoreSettingsTabPanel value={value} index={2}></MoreSettingsTabPanel>\n            </DialogContent>\n            <DialogActions alignItems=\"center\">\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default UpdateProfile;","import React from 'react';\nimport ProfileCard from '../Components/MainProfileCard';\nimport { Grid } from '@material-ui/core';\nimport UpdateProfileDialog from '../Components/UpdateProfileDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventsDialog from '../Components/EventsDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\n\nfunction EventsTabPanel(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [eOpen, setEOpen] = React.useState(false);\n    const {activeEvents} = React.useContext(ActiveEvents);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    function handleEditButton() {\n        setOpen(true);\n    }\n    function handleClose() {\n        setOpen(false);\n        setEOpen(false)\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setEOpen(true);\n\n    }\n    return (\n        <div>\n            <div>\n                <Grid container component=\"main\" >\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8}>\n                        <ProfileCard handleEditButton={handleEditButton}></ProfileCard>\n                        <UpdateProfileDialog open={open} handleClose={handleClose}></UpdateProfileDialog>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>\n                                        })\n                                    }\n                                </List>\n\n\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={eOpen}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EventsTabPanel;","import React from 'react';\n\n\n//MaterialUI imports\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [startDateError,setStartDateError] = React.useState(false);\n  const [endDateError,setEndDateError] = React.useState(false);\n  const [regEndDateError,setRegEndDateError] = React.useState(false);\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [eventTypes,setEventTypes] = React.useState([]);\n  React.useEffect(()=>{\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_types', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        value.forEach((v) => {\n          setEventTypes((eventTypes)=>[...eventTypes,v.title]);\n        })\n      })\n    })\n  },[token])\n\n\n  function handleEventNameChange(event) {\n    props.setName(event.target.value)\n  }\n\n  function handleDescChange(event) {\n    props.setDesc(event.target.value);\n  }\n\n  const handleStartDateChange = (date) => {\n    setStartDateError(false);\n    props.setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setEndDateError(false);\n    props.setEndDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDateError(false);\n    props.setRegEndDate(date);\n  };\n\n  function handleEventModeChange(event) {\n    props.setEventMode(event.target.value);\n  }\n  function handleeventTypsChange(event, value) {\n    props.setEventType(value);\n  }\n\n\n  function handleNext(event) {\n    event.preventDefault();\n    if(props.startDate === null){\n      setStartDateError(true)\n    }\n    else if(props.endDate === null){\n      setEndDateError(true);\n    }\n    else if(props.regEndDate === null){\n      setRegEndDateError(true)\n    }\n    else{\n      props.handleNext();\n    }\n    \n  }\n  function handleFeeTypeChange(event, value) {\n    props.setFeeType(value)\n  }\n  function handleRegistrationModeChange(event) {\n    if (event.target.value === \"form\") {\n      props.setSteps((steps) => [...steps, \"Registration Form\"])\n    }\n    else if (event.target.value === \"link\") {\n      props.setSteps(['About', 'More Details']);\n    }\n    props.setRegistrationMode(event.target.value);\n  }\n\n\n  return (\n    <form className={classes.form} onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventName\"\n            name=\"eventName\"\n            label=\"Name\"\n            fullWidth\n            value={props.name || \"\"}\n            onChange={handleEventNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"shortdesc\"\n            name=\"shortdesc\"\n            label=\"Short Description\"\n            fullWidth\n            value={props.desc || \"\"}\n            onChange={handleDescChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n            <DateTimePicker\n            inputProps={{required: true}}            \n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"startDate\"\n              label=\"Start Date\"\n              name=\"startDate\"\n              value={props.startDate}\n              onChange={handleStartDateChange}\n              error={startDateError}\n              helperText={startDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"endDate\"\n              label=\"End Date\"\n              name=\"endDate\"\n              value={props.endDate}\n              onChange={handleendDateChange}\n              error={endDateError}\n              helperText={endDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={12}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"regEndDate\"\n              label=\"Registration End Date\"\n              name=\"regEndDate\"\n              value={props.regEndDate}\n              onChange={handleRegEndDateChange}\n              error={regEndDateError}\n              helperText={regEndDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Mode</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Mode\"\n              inputProps={{\n                name: 'eventMode',\n                id: 'eventMode',\n              }}\n              value={props.eventMode || \"\"}\n              onChange={handleEventModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            fullWidth\n            id=\"combo-box-demo\"\n            options={eventTypes}\n            getOptionLabel={(option) => option}\n            onChange={handleeventTypsChange}\n            value={props.eventType}\n            renderInput={(params) => <TextField fullWidth required {...params} label=\"Type\" />}\n          />\n        </Grid>\n\n\n        <Grid item xs={12}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Registration\"\n              inputProps={{\n                name: 'registrationMode',\n                id: 'registaration mode',\n              }}\n              value={props.registrationMode || \"\"}\n              onChange={handleRegistrationModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"form\">Our Platform(Ellipse)</option>\n              <option value=\"link\">Other</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormLabel component=\"legend\">Entry Fee</FormLabel>\n          <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"Free\" onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n            <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n            <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      <div className={classes.buttons}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >Next\n        </Button>\n      </div>\n    </form>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function AlertDialog(props) {\n\n    const theme = useTheme();\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            >\n                <DialogTitle id=\"title\">{\"Terms and Conditions\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ul>\n                            <li>The information you provided for the event is true and is appropriate.\n                                In case we notice any incorrect information, the event will be suspended and further\n                                action would be taken against you.</li>\n                            <li>The information of participants is only used for event purpose and not for any other purpose. Legal action will\n                             be taken if this information is used elsewhere.</li>\n                            <li>ellipseapp.com reserves the right to update and change these Terms of Service regularly\n                               without notice to you or acceptance by you. </li>\n                        </ul>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport TermsandConditions from '../Components/EventPostTermsandConditions';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [imageName, setImageName] = React.useState(\"\");\n  // const eventThemes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n  const [eventTags,setEventTags] = React.useState([]);\n  const [requirements,setRequirements] = React.useState([]);\n  // const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  const [tandcOpen,setTandcOpen] = React.useState(false);\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if(v.type === \"EventTags\"){\n            setEventTags((eventTags)=> [...eventTags,v.title]);\n          }\n          else if(v.type === \"EventRequirements\"){\n            setRequirements((r)=>[...r,v.title]);\n          }\n        })\n      })\n    })\n  }, [token])\n\n\n  function handleeventTagsChange(event, values) {\n    props.setThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    props.setRequirements(values);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      props.setPoster(event.target.files[0]);\n      const fileName = event.target.files[0].name;\n      setImageName(fileName);\n    }\n  }\n  function handleAddressTypeChange(evemt, value) {\n    props.setAddressType(value);\n  }\n\n  function handleRegLinkChange(event) {\n    props.setRegLink(event.target.value);\n  }\n\n  function handleRegFees(event) {\n    props.setFees(event.target.value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // console.log(value);\n    props.setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        props.setCollegeId(c._id)\n      }\n    })\n  }\n  // function handleVenueCollegeChange(event, value) {\n  //   props.setVenueCollege(value);\n  // }\n\n  function handleAboutChange(event) {\n    props.setAbout(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    props.setParticipantsType(value)\n  }\n  function handleBuildingChange(event) {\n    props.setBuilding(event.target.value);\n  }\n  function handlePlatformChange(event){\n    props.setPlatformDetails(event.target.value)\n  }\n  function handleNext(event) {\n    event.preventDefault();\n    props.handleNext();\n  }\n\n  function handleTermsClick(){\n    setTandcOpen(true);\n  }\n\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} onSubmit={handleNext}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter everything about your event in detail\"\n              autoComplete='off'\n              required\n              id=\"about\"\n              name=\"about\"\n              label=\"About\"\n              fullWidth\n              onChange={handleAboutChange}\n              value={props.about || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Autocomplete\n              multiple\n              id=\"themes\"\n              options={eventTags.map((option) => option)}\n              freeSolo\n              value={props.eventThemes || []}\n              onChange={handleeventTagsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Event Tags\" placeholder=\"Event Tags\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <input\n              id=\"contained-button-file\"\n              required\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleChange}\n              style={{ display: \"none\" }}>\n\n            </input>\n\n            <TextField\n              autoComplete='off'\n              required\n              id=\"eventposter\"\n              name=\"eventposter\"\n              label=\"Event Poster\"\n              component=\"span\"\n              value={imageName}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <label htmlFor=\"contained-button-file\">\n                      <IconButton component=\"span\" >\n                        <CameraAltIcon></CameraAltIcon>\n                      </IconButton>\n                    </label>\n\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </Grid>\n          {props.registrationMode !== \"form\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regLink\"\n              name=\"regLink\"\n              label=\"Registration Link\"\n              fullWidth\n              value={props.regLink || \"\"}\n              onChange={handleRegLinkChange}\n            />\n          </Grid>}\n\n          {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regFees\"\n              name=\"regFees\"\n              label=\"Registration Fees\"\n              fullWidth\n              value={props.regFees || \"\"}\n              onChange={handleRegFees}\n            />\n          </Grid>}\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={requirements.map((option) => option)}\n              freeSolo\n              value={props.requirements || []}\n              onChange={handleRequirementsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              fullWidth\n              id=\"combo-box-demo\"\n              options={collegesNames}\n              value={props.college || []}\n              getOptionLabel={(option) => option}\n              onChange={handleCollegeChange}\n              renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component=\"legend\">Participation</FormLabel>\n            <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"open\" onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n              <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${props.college}`} />\n            </RadioGroup>\n          </Grid>\n          {props.eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              helperText=\"Enter links of your and you can also add or edit later in event edit\"\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              // required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={props.platformDetails || \"\"}\n            />\n          </Grid>}\n          {props.eventMode === \"Offline\" && <React.Fragment>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Venue</FormLabel>\n              <RadioGroup aria-label=\"address\" aria-disabled name=\"address\" defaultValue=\"college\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"College\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel  value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n                multiline={true}\n                helperText=\"Enter links of your and you can also add or edit later in event edit\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Room No,Building,College,State,Pincode\"\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Venue\"\n                fullWidth\n              />\n          </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Room No & Building\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                getOptionLabel={(option) => option}\n                value={props.venueCollege}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid> */}\n\n          </React.Fragment>}\n          {props.registrationMode !== \"form\" && <Grid item xs={12}>\n          <Typography>By posting the event.I accept the <Button onClick={handleTermsClick} color=\"primary\">Terms and Conditions</Button></Typography>\n          </Grid>\n          }\n        </Grid>\n        <div className={classes.buttons}>\n          <Button onClick={props.handleBack} className={classes.button}>\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >{props.registrationMode !== \"form\" ? \"POST\" : \"NEXT\"}\n          </Button>\n        </div>\n      </form>\n      <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n    </React.Fragment>\n  );\n}","import React from 'react';\n\n//Materail impports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid } from '@material-ui/core';\nimport {useTheme } from '@material-ui/core/styles';\n\n\n\n\n\nexport default function FormDialog(props) {\n  const theme = useTheme();\n  const [name, setName] = React.useState(null);\n  const [type, setType] = React.useState(null);\n  const fieldOptions = [];\n  const [selectedOptions, setSelectedOptions] = React.useState(['option1', 'option2']);\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n  function handleTypeChange(event) {\n    setType(event.target.value);\n  }\n  function handleOptionsChange(event, values) {\n    setSelectedOptions(values);\n  }\n  function handleAddButton() {\n    if (type !== \"radiobuttons\" && type !== \"checkboxes\" && type !== \"dropdown\") {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': [] } }, name);\n    }\n    else {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': selectedOptions } }, name);\n    }\n    props.handleClose()\n\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n          boxShadow: 'none',\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Field</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Field Name\"\n                name=\"name\"\n                fullWidth\n                value={name}\n                required\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'outlined-age-native-simple',\n                  }}\n                  value={props.eventMode}\n                  onChange={handleTypeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"short_text\">Short Text</option>\n                  <option value=\"paragraph\">Long Description</option>\n                  <option value=\"dropdown\">Drop Down</option>\n                  <option value=\"date\">Date & Time</option>\n                  <option value=\"radiobuttons\">Radio Button</option>\n                  <option value=\"checkboxes\">Check Box</option>\n                  <option value=\"link\">Link</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {(type === \"radiobuttons\" || type === \"checkboxes\" || type === \"dropdown\") &&\n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"tags-filled\"\n                  options={fieldOptions.map((option) => option)}\n                  freeSolo\n                  value={selectedOptions || []}\n                  onChange={handleOptionsChange}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Options\" placeholder=\"Options\" helperText=\"you can choose multiple options for your checkboxes or radio buttons enter one option and press enter\" />\n                  )}\n                />\n              </Grid>\n            }\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport TermsandConditions from '../Components/EventPostTermsandConditions';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(0),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    formControl: {\n        // marginTop: theme.spacing(3),\n    },\n    formgroup: {\n        marginTop: theme.spacing(1),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function AddressForm(props) {\n\n\n    const classes = useStyles();\n    // const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [tandcOpen, setTandcOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const fields = {\n        name: {\n            'title': 'Name',\n            'field': 'short_text',\n            'options': []\n        },\n        email: {\n            'title': 'Email',\n            'field': 'short_text',\n            'options': []\n        },\n        college: {\n            'title': 'College',\n            'field': 'short_text',\n            'options': []\n        },\n\n    }\n    const [selectedFields, setSelectedFields] = React.useState([fields['name'], fields['email']]);\n    const [state, setState] = React.useState({\n        name: true,\n        email: true,\n        college: false,\n    });\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        const sName = event.target.name;\n        if (event.target.checked) {\n            setSelectedFields(selectedFields => [...selectedFields, fields[sName]]);\n        }\n        else if (!event.target.checked) {\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== sName));\n        }\n\n    };\n    const { name, email, college } = state;\n    // console.log(selectedFields);\n    function handleAddMoreButton() {\n        setOpen(true);\n    }\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n    const handleDelete = (chipToDelete) => () => {\n        // console.log(chipToDelete.title)\n        if (chipToDelete.title === 'College') {\n            setState({ ...state, college: false })\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n        }\n        else if (chipToDelete.title !== 'Name' && chipToDelete.title !== 'Email') {\n            setState({ ...state, [chipToDelete.title.toLowercase]: false })\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n        }\n\n    };\n\n    async function handlePostButton(e) {\n        e.preventDefault();\n        await props.setFields(selectedFields);\n        props.handlePost(selectedFields);\n    }\n\n    function handleTermsClick() {\n        setTandcOpen(true);\n    }\n\n    return (\n        <React.Fragment>\n\n            <form className={classes.form} onSubmit={handlePostButton}>\n                <Grid container spacing={3}>\n                    <AddFieldDialog\n                        open={open}\n                        handleClose={handleClose}\n                        handleAdd={handleFieldAddButton}></AddFieldDialog>\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Fields for your Registration Form</FormLabel>\n                            <FormGroup className={classes.formgroup}>\n                                <FormControlLabel\n                                    control={<Checkbox disabled color=\"primary\" checked={name} onChange={handleChange} name=\"name\" />}\n                                    label=\"Name\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox disabled color=\"primary\" checked={email} onChange={handleChange} name=\"email\" />}\n                                    label=\"Email\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={college} onChange={handleChange} name=\"college\" />}\n                                    label=\"College\"\n                                />\n                                {/* <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={phno} onChange={handleChange} name=\"phno\" />}\n                                    label=\"Phone No\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={github} onChange={handleChange} name=\"github\" />}\n                                    label=\"Github\"\n                                /> */}\n                            </FormGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={handleAddMoreButton}>\n                            Add More\n                        </Button>\n                    </Grid>\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {selectedFields.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n                                            label={data.title}\n                                            onDelete={handleDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography>By posting the event.I accept the\n                        <Button color=\"primary\" onClick={handleTermsClick}>\n                                Terms and Conditions</Button></Typography>\n                    </Grid>\n                </Grid>\n                <div className={classes.buttons}>\n                    <Button onClick={props.handleBack} className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}>\n                    Post\n                    </Button>\n                </div>\n            </form>\n            <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n        </React.Fragment>\n    );\n}","import React from 'react';\n\n//Material UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n//Components imports\nimport EventPostDetails1 from '../Components/EventPostDetails1';\nimport EventPostDetails2 from '../Components/EventPostDetails2';\nimport EventPostDetails3 from '../Components/EventPostDetails3';\nimport AuthContext from '../AuthContext';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//function for copy right\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n        ellipseapp.com\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3),\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  stepper: {\n    padding: theme.spacing(3, 8, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(12),\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\n\nexport default function Checkout({ history }) {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const {currentUser} = React.useContext(AuthContext);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(['About', 'More Details']);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const [eventName, setEventName] = React.useState(null);\n  const [shortDesc, setShortDesc] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [registrationMode, setRegistrationMode] = React.useState(null);\n\n\n\n  const [regLink, setRegLink] = React.useState(null);\n  const [fees, setFees] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  const [image, setImage] = React.useState(null);\n  const [addressType, setAddressType] = React.useState(null);\n  const [collegeName, setCollegeName] = React.useState(currentUser.college_name);\n  const [collegeId, setCollegeId] = React.useState(currentUser.college_id)\n  const [building, setBuildingAdress] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(currentUser.name + \",\" + currentUser.college_name);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const [participantsType, setParticipantsType] = React.useState(\"open\");\n  const [fields, setFields] = React.useState([]);\n  const [platformDetails, setPlatformDetails] = React.useState('');\n\n\n\n\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <EventPostDetails1\n            name={eventName}\n            desc={shortDesc}\n            startDate={startDate}\n            endDate={endDate}\n            regEndDate={regEndDate}\n            eventMode={eventMode}\n            eventType={eventType}\n            about={about}\n            feeType={feeType}\n            registrationMode={registrationMode}\n            setName={setEventName}\n            setDesc={setShortDesc}\n            setStartDate={setStartDate}\n            setEndDate={setendDate}\n            setRegEndDate={setRegEndDate}\n            setEventMode={setEventMode}\n            setEventType={setEventType}\n            setRegistrationMode={setRegistrationMode}\n            setAbout={setAbout}\n            handleNext={handleNext}\n            setFeeType={setFeeType}\n            steps={steps}\n            setSteps={setSteps} />);\n      case 1:\n        return (\n          <EventPostDetails2\n            handleBack={handleBack}\n            handleEventPost={handleEventPost}\n            eventMode={eventMode}\n            feeType={feeType}\n            eventThemes={eventThemes}\n            eventPoster={image}\n            regLink={regLink}\n            regFees={fees}\n            about={about}\n            requirements={selectedrequirements}\n            college={collegeName}\n            building={building}\n            organizer={organizer}\n            registrationMode={registrationMode}\n            venueCollege={venueCollege}\n            participantsType={participantsType}\n            platformDetails={platformDetails}\n            setPlatformDetails={setPlatformDetails}\n            setThemes={setEventThemes}\n            setPoster={setImage}\n            setRegLink={setRegLink}\n            setFees={setFees}\n            setRequirements={setSelectedRequirements}\n            setOrganizer={setOrganizer}\n            setAddressType={setAddressType}\n            setCollegeName={setCollegeName}\n            setCollegeId={setCollegeId}\n            setBuilding={setBuildingAdress}\n            setVenueCollege={setVenueCollege}\n            setAbout={setAbout}\n            setParticipantsType={setParticipantsType}\n            handleNext={registrationMode === \"form\" ? handleNext : handlePostwithoutregFileds} />\n        );\n      case 2:\n        return (\n          <EventPostDetails3\n            handleBack={handleBack}\n            fields={fields}\n            setFields={setRegFields} handlePost={handleEventPost}>\n          </EventPostDetails3>);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n\n  const handleEventPost = (allFields) => {\n    var oAllowed = false;\n    if (participantsType === \"open\") {\n      oAllowed = true\n    }\n    setLoading(true);\n    try {\n      var data = new FormData();\n      const payload = {\n        user_id: currentUser.user_id,\n        name: eventName,\n        description: shortDesc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: fees,\n        about: about,\n        // organizer: organizer,\n        fee_type: feeType,\n        requirements: selectedrequirements,\n        college_name: collegeName,\n        college_id: collegeId,\n        venue_type: addressType,\n        venue: building,\n        reg_fields: allFields,\n        reg_mode: registrationMode,\n        o_allowed: oAllowed,\n        platform_details: platformDetails\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL + '/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data,\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            var data2 = new FormData();\n            data2.append(\"image\", image);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${value.eventId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data2,\n            }).then(response => {\n              if (response.status === 200) {\n                response.json().then(val => {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"Event added successfully.Manage your posted events from your profile page\",\n                    type: \"success\",\n                    autoHide: \"4000\"\n                  })\n                })\n              }\n            })\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n          })\n        }\n      })\n\n\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: '5000',\n      })\n    }\n  }\n\n  function setRegFields(f) {\n    setFields(f);\n  }\n\n  function handlePostwithoutregFileds() {\n    handleEventPost(null);\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function handleCloseButton() {\n    history.goBack();\n  }\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Event added successfully.Manage your posted events from your profile page\") {\n      history.replace(\"/home\");\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      {<Backdrop open={loading} className={classes.backdrop}><CircularProgress></CircularProgress></Backdrop>}\n      <main className={classes.layout}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleCloseButton}>\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Post your Event\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you.\n                </Typography>\n              </React.Fragment>\n            ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                </React.Fragment>\n              )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport Logo from '../Components/Images/logo.svg';\nimport { Button } from '@material-ui/core';\n\n\nimport { Redirect } from 'react-router';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n\n    grow: {\n        flexGrow: 1,\n        alignItems: 'center',\n    },\n    sectionDesktop: {\n\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    tabs: {\n        display: 'none',\n        [theme.breakpoints.up('lg')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginLeft: theme.spacing(4),\n        },\n    },\n    mobiletab: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    tabPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    flex_section: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'row',\n        // minHeight: 0\n    },\n\n    flex_col_scroll: {\n        flexGrow: 1,\n        overflow: 'auto',\n        // minHeight: '100vh'\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n        fontFamily: 'Gugi',\n        marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n    },\n    '@global': {\n        '*::-webkit-scrollbar': {\n            width: '0.5em',\n            height: '0.5em'\n        },\n        '*::-webkit-scrollbar-track': {\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '*::-webkit-scrollbar-thumb': {\n            backgroundColor: '#ad9d9d',\n            outline: '1px solid slategrey'\n        }\n    },\n    mobileTitle: {\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n\n    },\n    titleButton: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'inline-block',\n        },\n        margin: theme.spacing(0),\n        padding: theme.spacing(0),\n        textTransform: 'none'\n    },\n    eventName: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    }\n}));\n\nexport default function MiniDrawer(props) {\n    const classes = useStyles();\n    // const theme = useTheme();\n    const t = localStorage.getItem('theme');\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n    // const [value, setValue] = React.useState(0);\n    // const [searchedEvent, setSearchedEvent] = React.useState([]);\n\n    const isMenuOpen = Boolean(anchorEl);\n    // const [open, setOpen] = React.useState(false);\n    const token = localStorage.getItem('token');\n\n    const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n    // const [currentUser, setCurrentUser] = React.useState({});\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n\n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // setCurrentUser(value[0]);\n                    props.setUser(value[0])\n                    if (value[0].college_name === null) {\n                        setUserDetailsDone(false);\n                    }\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n\n        // eslint-disable-next-line\n    }, [token])\n\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        return <Redirect to=\"/userinfo\"></Redirect>\n    }\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        // setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n\n\n    function handleThemeChange(event) {\n        // console.log(event.target.checked);\n        setDarkThemeSelected(event.target.checked);\n        if (event.target.checked) {\n            localStorage.setItem('theme', 'dark');\n            window.location.reload(false);\n        }\n        else {\n            localStorage.setItem('theme', 'light');\n            window.location.reload(false);\n        }\n    }\n\n\n\n    function handleSignout(event) {\n\n        fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then((result) => {\n            result.json().then((data) => {\n                if (data.message === \"success\") {\n                    localStorage.removeItem('token');\n                    localStorage.removeItem('tabIndex');\n                    props.handleSignout()\n                }\n            })\n        })\n\n    }\n    function handleHomeClick() {\n        props.handleHomeClick()\n        // props.history.push(\"/home\")\n        // localStorage.setItem('tabIndex',2);\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}>\n            <MenuItem> Dark Theme <Switch\n                checked={darkThemeSelected}\n                onChange={handleThemeChange}\n                color=\"primary\"\n                name=\"checkedB\"\n                inputProps={{ 'aria-label': 'dark mode checkbox' }}\n            /></MenuItem>\n            <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n        </Menu>\n    );\n\n    const handleClose = () => {\n        setNotificationsOpen(false);\n    };\n\n    function handleNotificationClick() {\n        setNotificationsOpen(true);\n    }\n\n\n    const handleDrawerOpen = () => {\n        props.setDOpen(true);\n    };\n\n    function handleTitleButtonClick() {\n        localStorage.setItem('tabIndex', 0)\n        props.handleHomeClick()\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                color=\"secondary\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: props.dOpen,\n                })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: props.dOpen,\n                        })}>\n                        <MenuIcon color=\"primary\" />\n                    </IconButton>\n                    <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n                    <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n                        <Typography className={classes.title} variant=\"h5\" noWrap>\n                            Ellipse\n                        </Typography>\n                    </Button>\n                    <div className={classes.grow} />\n                    <Typography className={classes.eventName} variant=\"h5\" noWrap>{props.event.name}</Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton onClick={handleHomeClick}><HomeIcon></HomeIcon></IconButton>\n                        <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                            <Badge badgeContent={0} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\">\n                            <SettingsIcon></SettingsIcon>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMenu}\n            <NotificationsDialog open={notificationsOpen} handleClose={handleClose}></NotificationsDialog>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setAnnouncements(value);\n      })\n    })\n  }, [token, event._id])\n\n  const handleDeleteButton = (a) => () =>{\n    fetch(process.env.REACT_APP_API_URL+`/api/event/delete_announcement?id=${a._id}&event_id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n      }).then(response => {\n        response.json().then(value => {\n            setAnnouncements(value);\n        })\n      })\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Button onClick={handleDeleteButton(a)}>Delete</Button>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\n\n\n//Materail imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function AnnouncementForm(props) {\n  const theme = useTheme()\n  const token = localStorage.getItem('token');\n  const [title, setTitle] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [visibility, setVisibility] = React.useState(\"All\");\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleDescChange(event) {\n    setDesc(event.target.value);\n  }\n\n\n  function handleVisibilityChange(event, value) {\n    console.log(value);\n    setVisibility(value);\n  }\n  function handleAddButton() {\n    // console.log(visibility);\n    var visible_all = true;\n    if (visibility !== \"All\") {\n      visible_all = false;\n    }\n    try {\n      var data = new FormData();\n      const d = { event_id: props.id, title: title, description: desc, visible_all: visible_all }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL+`/api/event/add_announcement`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Added successfully',\n            type: \"success\",\n            autoHide: 2000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n    props.handleClose()\n\n  }\n  const handleClose = async (event, reason) => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Announcement</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                fullWidth\n                value={title}\n                required\n                onChange={handleTitleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                fullWidth\n                value={desc}\n                required\n                onChange={handleDescChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Announcement visibility</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={visibility} onChange={handleVisibilityChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"All\" control={<Radio color=\"default\" />} label=\"All\" />\n                <FormControlLabel value=\"Registered Users\" control={<Radio color=\"default\" />} label=\"Registered Users\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Add\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {  useTheme } from '@material-ui/core/styles';\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SendEmailForm(props) {\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const [content, setContent] = React.useState(null);\n\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleContentChange(event) {\n        setContent(event.target.value);\n    }\n\n    function handleAddButton() {\n        try {\n            var data = new FormData();\n            const d = { \n                event_id: props.id, \n                title: title, \n                content: content,\n                emails: props.emails}\n            data = JSON.stringify(d);\n            console.log(data);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/sendemail`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                response.json().then(value => {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Added successfully',\n                        type: \"success\",\n                        autoHide: 2000\n                    });\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n        props.handleClose()\n\n    }\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    // boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Content for your Email</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Enter everything about your event in detail\"\n                                autoComplete='off'\n                                required\n                                id=\"content\"\n                                name=\"content\"\n                                label=\"Content\"\n                                fullWidth\n                                onChange={handleContentChange}\n                                value={content || \"\"}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AddAnnouncementForm from './AddAnnouncementForm';\nimport SendEmailForm from './SendEmailForm';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [announcementDialog, setAnnouncementDialog] = React.useState(false);\n  const [sendEmailDialog, setSendEmailDialog] = React.useState(false);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            setRowValues(rowValues => [...rowValues, d.data])\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  function handleAddAnnouncement() {\n    setAnnouncementDialog(true);\n  }\n\n  function handleAnnoucementClose() {\n    setAnnouncementDialog(false);\n  }\n\n  // function handleSendEmail() {\n  //   console.log(selected);\n  //   setSendEmailDialog(true);\n  // }\n  function handleSendEmailClose() {\n    setSendEmailDialog(false);\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <SendEmailForm open={sendEmailDialog} emails={selected} handleClose={handleSendEmailClose}></SendEmailForm>\n      <AddAnnouncementForm open={announcementDialog} id={event._id} handleClose={handleAnnoucementClose}></AddAnnouncementForm>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button variant=\"outlined\" onClick={handleAddAnnouncement} className={classes.button}>Add Announcement</Button>\n          {/* <Button variant=\"contained\" onClick={handleSendEmail} className={classes.button}>Send Emails to Selected</Button> */}\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3} >\n\n        <Paper className={classes.fixedHeightPaper}>\n          <Typography>Total Registrations</Typography>\n          <Typography component=\"p\" variant=\"h4\">\n            {rowValues.length}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\n// import AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { TextField } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0.5)\n    },\n    root5: {\n        marginLeft: theme.spacing(0.5),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textField: {\n        zIndex: '100',\n        position: 'fixed',\n        bottom: '0px'\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    // console.log(event)\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            // console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div className={classes.textField}>\n                            {/* <TextField\n                                // disabled={props.loading}\n                                fullWidth\n                                placeholder=\"Type your message\"\n                                multiline\n                                // onChange={handleNewMessage}\n                                // value={newmessage || \"\"}\n                                rowsMax=\"3\"\n                            // onKeyUp={handleKeyPress}\n                            >\n\n                            </TextField> */}\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    // padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    // margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst EventEdit = (props) => {\n  var event = props.event;\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error'\n  });\n\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [regLink, setRegLink] = React.useState(null);\n  const [regFees, setRegFees] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  // const [image, setImage] = React.useState(null);\n  // const [imageName, setImageName] = React.useState(\"\");\n  // const [addressType,setAddressType] = React.useState(\"\");\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [regMode, setRegMode] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(null);\n  const [participantType, setParticipantsType] = React.useState(\"open\");\n  const [image, setImage] = React.useState(null);\n  const [imageUrl, setImageurl] = React.useState(null);\n  const [imageUpdated, setImageUpdated] = React.useState(false);\n  const [venue, setVenue] = React.useState(null);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const { vertical, horizontal, open, message, type } = state;\n  const [colleges, setColleges] = React.useState([]);\n  // const [collegesNames, setCollegesName] = React.useState([]);\n\n  const token = localStorage.getItem('token');\n  const [eventTags,setEventTags] = React.useState([]);\n  const [requirements,setRequirements] = React.useState([]);\n  const [eventTypes,setEventTypes] = React.useState([]);\n  const [platformDetails,setPlatformDetails] = React.useState('');\n\n\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  // const colleges = [\"VIT University\", \"GITAM University\", \"SRM University\"];\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        // value.forEach((v) => {\n        //   setCollegesName((collegesNames) => [...collegesNames, v.name])\n        // })\n      })\n    })\n  }, [token])\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setendDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDate(date)\n  };\n  React.useEffect(() => {\n    setEventThemes(event.tags);\n    setEventType(event.event_type);\n    setName(event.name);\n    setDesc(event.description);\n    setStartDate(event.start_time);\n    setendDate(event.finish_time);\n    setRegEndDate(event.registration_end_time);\n    setEventMode(event.event_mode);\n    setRegLink(event.reg_link);\n    setAbout(event.about);\n    setRegFees(event.fees);\n    setSelectedRequirements(event.requirements);\n    setFeeType(event.fee_type);\n    setCollegeName(event.college_name);\n    setRegMode(event.reg_mode);\n    setOrganizer(event.organizer);\n    setVenue(event.venue);\n    setVenueCollege(event.venue_college);\n    setPlatformDetails(event.platform_details)\n    // setParticipantsType(event.o_allowed)\n    if (event.o_allowed === true) {\n      setParticipantsType(\"open\")\n    }\n    else {\n      setParticipantsType(\"onlycollege\")\n    }\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if(v.type === \"EventTags\"){\n            setEventTags((eventTags)=> [...eventTags,v.title]);\n          }\n          else if(v.type === \"EventRequirements\"){\n            setRequirements((r)=>[...r,v.title]);\n          }\n          else{\n            setEventTypes((r)=>[...r,v.title]);\n          }\n        })\n      })\n    })\n\n  }, [token, event])\n\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Saved changes successfully\") {\n      // history.replace()\n      // history.replace(\"/otpverification\")\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  };\n\n  async function handleEventPost(e) {\n    e.preventDefault();\n    setLoading(true);\n    var oAllowed = false;\n    if (participantType === \"open\") {\n      oAllowed = true\n    }\n    // console\n    try {\n      // console.log(\"started\");\n      // getBase64(image, (result) => {\n      var data = new FormData();\n      const payload = {\n        eventId: event._id,\n        name: name,\n        description: desc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        // poster: result,\n        reg_link: regLink,\n        fee: regFees,\n        about: about,\n        fee_type: feeType,\n        college: collegeName,\n        organizer: organizer,\n        requirements: selectedrequirements,\n        o_allowed: oAllowed,\n        reg_mode: regMode,\n        venue: venue,\n        venue_college: venueCollege,\n        platform_details: platformDetails\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/updateevent', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            // console.log(value);\n            event = value.event;\n            if (imageUpdated) {\n              var data2 = new FormData()\n              data2.append(\"image\", image);\n              fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${event._id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: data2\n              }).then(res => {\n                if (res.status === 200) {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"successful\",\n                    type: \"success\",\n                    autoHide: 300\n                  })\n                }\n              })\n            }\n            else {\n              setLoading(false);\n              setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"Saved changes successfully\",\n                type: \"success\"\n              })\n            }\n            // history.replace(\"/home\")\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: value,\n              type: \"error\"\n            })\n          })\n        }\n      })\n\n      // })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleeventTypsChange(event, value) {\n    setEventType(value);\n  }\n\n  function handleeventTagsChange(event, values) {\n    setEventThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    setSelectedRequirements(values);\n  }\n\n  // function handleChange(event) {\n  //   if (event.target.files[0]) {\n  //     setImage(event.target.files[0]);\n  //     const fileName = event.target.files[0].name;\n  //     setImageName(fileName);\n  //   }\n\n  // }\n\n  function handleAddressTypeChange(evemt, value) {\n    // setAddressType(value);\n  }\n  function handleName(event) {\n    setName(event.target.value)\n  }\n  function handleDesc(event) {\n    setDesc(event.target.value);\n  }\n  function handleFeeTypeChange(event, value) {\n    // props.setFeeType(value)\n    setFeeType(value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // props.setCollegeName(value);\n    setCollegeName(value);\n  }\n  function handleEventMode(event) {\n    setEventMode(event.target.value);\n  }\n\n  function handleRegLink(event) {\n    setRegLink(event.target.value);\n  }\n  function handleFees(event) {\n    setRegFees(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    setParticipantsType(value)\n  }\n  function handleVenue(event) {\n    setVenue(event.target.value);\n  }\n  // function handleVenueCollegeChange(event, value) {\n  //   setVenueCollege(value);\n  // }\n\n  function handlePlatformChange(event){\n    setPlatformDetails(event.target.value);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n      //   setImageAsFile(imageFile => (image))\n      const url = URL.createObjectURL(event.target.files[0]);\n      //   const fileType = event.target.files[0].type;\n      setImageurl(url)\n      setImageUpdated(true);\n      //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n    }\n\n  }\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <form className={classes.form} novalidate onSubmit={handleEventPost}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} >\n              <input id=\"contained-button-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n              <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                badgeContent={<label htmlFor=\"contained-button-file\">\n                  <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <EditIcon></EditIcon>\n                  </IconButton>\n                </label>}>\n                <img height=\"160\" width=\"150\" alt=\"poster\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`} ></img>\n              </Badge>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventName\"\n                name=\"eventName\"\n                label=\"Event name\"\n                value={name || \"\"}\n                onChange={handleName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"shortdesc\"\n                name=\"shortdesc\"\n                label=\"Short Description\"\n                fullWidth\n                value={desc || \"\"}\n                onChange={handleDesc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"startDate\"\n                  label=\"Event Start Date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"endDate\"\n                  label=\"Event End Date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={handleendDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"regEndDate\"\n                  label=\"Registration End Date\"\n                  name=\"regEndDate\"\n                  value={regEndDate}\n                  onChange={handleRegEndDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"event mode\">Event Mode</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Event Mode\"\n                  value={eventMode || \"\"}\n                  onChange={handleEventMode}\n                  inputProps={{\n                    name: 'eventMode',\n                    id: 'event mode',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Online\">Online</option>\n                  <option value=\"Offline\">Offline</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"event type\"\n                options={eventTypes}\n                getOptionLabel={(option) => option}\n                value={eventType || \"\"}\n                onChange={handleeventTypsChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Event Type\" />}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"event themes\"\n                options={eventTags.map((option) => option)}\n                // defaultValue={[eventTypes[1]]}\n                freeSolo\n                value={eventThemes || []}\n                onChange={handleeventTagsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Event Themes\" placeholder=\"Event Themes\" />\n                )}\n              />\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <input\n                id=\"contained-button-file\"\n                required\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n                style={{ display: \"none\" }}>\n\n              </input>\n\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventposter\"\n                name=\"eventposter\"\n                label=\"Event Poster\"\n                component=\"span\"\n                value={imageName}\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"start\">\n                      <label htmlFor=\"contained-button-file\">\n                        <IconButton component=\"span\" >\n                          <CameraAltIcon></CameraAltIcon>\n                        </IconButton>\n                      </label>\n\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            </Grid> */}\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Entry Fee</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={feeType || \"\"} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n                <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n              </RadioGroup>\n            </Grid>\n            {regMode !== \"form\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  id=\"regLink\"\n                  name=\"regLink\"\n                  label=\"Registration Link\"\n                  fullWidth\n                  value={regLink || \"\"}\n                  onChange={handleRegLink}\n                />\n              </Grid>}\n            {feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"regFees\"\n                name=\"regFees\"\n                value={regFees || \"\"}\n                label=\"Registration Fees\"\n                onChange={handleFees}\n                fullWidth\n              // helperText={\"Enter 0 if your event is free\"}\n              />\n            </Grid>}\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                disabled\n                id=\"collegename\"\n                options={colleges}\n                getOptionLabel={(option) => option}\n                value={collegeName || \"\"}\n                onChange={handleCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth >\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  disabled\n                  label=\"Registration\"\n                  inputProps={{\n                    name: 'registrationMode',\n                    id: 'registration mode',\n                  }}\n                  value={regMode || \"\"}\n                // onChange={handleRegistrationModeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"form\">Our Platform(Ellipse)</option>\n                  <option value=\"link\">Other</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                id=\"organizer\"\n                name=\"organizer\"\n                label=\"Organizer\"\n                fullWidth\n                value={organizer || \"\"}\n              />\n            </Grid> */}\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"requirements\"\n                options={requirements.map((option) => option)}\n                freeSolo\n                value={selectedrequirements}\n                onChange={handleRequirementsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Participation</FormLabel>\n              <RadioGroup name=\"participanttype\" value={participantType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n                <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${collegeName}`} />\n              </RadioGroup>\n            </Grid>\n            {eventMode === \"Offline\" && <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup disabled aria-label=\"address\" name=\"address\" defaultValue=\"College/University\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel disabled value=\"College/University\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>}\n            {eventMode === \"Offline\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  multiline={true}\n                  helperText=\"Enter venue details (Ex: VIT, Vellore)\"\n                  rows=\"5\"\n                  variant='outlined'\n                  // required\n                  value={venue || \"\"}\n                  onChange={handleVenue}\n                  id=\"building\"\n                  name=\"building\"\n                  label=\"Room No & Building\"\n                  fullWidth\n                />\n              </Grid>\n            }\n            {/* {eventMode === \"Offline\" && <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                value={venueCollege}\n                getOptionLabel={(option) => option}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>} */}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter short description of your event\"\n                autoComplete='off'\n                // required\n                value={about || \"\"}\n                id=\"about\"\n                name=\"about\"\n                label=\"About\"\n                fullWidth\n              />\n            </Grid>\n            {eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              helperText=\"Enter link for the platform, you can also add it later\"\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              // required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={platformDetails || \"\"}\n            />\n          </Grid>}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save Changes\"}\n          </Button>\n        </form>\n      </div>\n\n      {/* </Grid> */}\n      {/* <Box mt={2}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}\n\nexport default withRouter(EventEdit);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClose = async (event, reason) => {\n    getParticipantsList()\n    setState({ ...state, open: false });\n  }\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getParticipantsList = () =>{\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          // const firstdata = value[0].data;\n          // const columnNames = Object.keys(firstdata);\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n      })\n    })\n  }\n\n\n\n  function handleGenerateCertificateButton() {\n    setLoading(true);\n    console.log(selected)\n    try {\n      var data = new FormData();\n      const d = { eventId: event._id, participants: selected }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/generate_certificates`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          \n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Generated successfully',\n            type: \"success\",\n            autoHide: 4000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button\n            variant=\"contained\"\n            onClick={handleGenerateCertificateButton}\n            className={classes.button}>{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Generate Certificates\"}</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n              if(d.certificate_status !== \"not_generated\"){\n                setRowValues(rowValues => [...rowValues, d.data])\n              }\n            \n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return (\n\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4} lg={9}>\n        {/* <Paper className={classes.buttonsPaper}>\n          <Button variant=\"contained\" onClick={handleGenerateCertificateButton} className={classes.button}>Generate Certificates</Button>\n        </Paper> */}\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CertificateSample from './Images/certificate_sample.png';\nimport Typography from '@material-ui/core/Typography';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n}));\n\nexport default function StickyHeadTable(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    }\n\n    React.useEffect(() => {\n        setTitle(event.certificate.title)\n    }, [event])\n\n    function handleUpdateButton() {\n        setLoading(true);\n        try {\n            if (title === \"\" || title === null) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"please fill the details\",\n                    type: \"error\",\n                    autoHide: 6000\n                })\n            }\n            else {\n                var data = new FormData();\n                const d = { eventId: event._id, title: title }\n                data = JSON.stringify(d);\n                fetch(process.env.REACT_APP_API_URL + `/api/event/update_certificate_title`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    // console.log(response);\n                    response.json().then(value => {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Generated successfully',\n                            type: \"success\",\n                            autoHide: 4000\n                        });\n                    })\n                })\n            }\n\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n    }\n\n\n    return (\n        <div className={classes.paper}>\n            <Grid container spacing={2}>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={open}\n                    autoHideDuration={autoHide}\n                    onClose={handleClose}\n                    key={vertical + horizontal}>\n                    <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                </Snackbar>\n                <Grid item xs={12}>\n                    <TextField\n                        autoComplete='off'\n                        required\n                        id=\"title\"\n                        name=\"title\"\n                        label=\"Certificate Title\"\n                        value={title || \"\"}\n                        onChange={(e) => setTitle(e.target.value)}\n                        fullWidth\n                        inputProps={{\n                            maxLength: 32,\n                        }}\n                        helperText=\"You can change the title of certificate as shown below in sample by default it is event name\"\n                    />\n                </Grid>\n                {/* <Grid item xs={6}>\n                </Grid> */}\n                <Grid item xs={12}>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        onClick={handleUpdateButton}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update\"}\n                    </Button>\n                </Grid>\n            </Grid>\n            <Typography style={{marginTop:\"10px\"}} variant=\"h4\">Sample Certificate</Typography>\n            <img width=\"100%\" alt=\"certificate sample\" src={CertificateSample}></img>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport AdminCertificateDashboard1 from './AdminCertificateDashboad1';\nimport AdminCertificateDashboard2 from './AdminCertificateDashboard2';\nimport AdminCertificateDashboard3 from './AdminCertificateDashboard3';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <div className={classes.root}>\n\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"Dashboard\"></Tab>\n                        <Tab label=\"Pending\" />\n                        <Tab label=\"Generated\" />\n                    </Tabs>\n                </Paper>\n                {\n                    value === 0 && <AdminCertificateDashboard3 event={event}></AdminCertificateDashboard3>\n                }\n                {\n                    value === 1 && <AdminCertificateDashboard1 event={event}></AdminCertificateDashboard1>\n                }\n                {\n                    value === 2 && <AdminCertificateDashboard2 event={event}></AdminCertificateDashboard2>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport { Button, Typography } from '@material-ui/core';\n\nimport EventDetailsNavigationBar from '../Components/EventDetailsNavigationBar';\nimport AnnouncementPanel from '../Components/EventsAnnouncementsPanel';\nimport AnnouncementEditPanel from '../Components/AnnouncementsEditPanel';\nimport AboutPanel from '../Components/AboutEventPanel';\nimport TimeLinePanel from '../Components/EventTimeLinePanel';\nimport DashboardPanel from '../Components/DashboardPanel';\nimport ChatPanel from '../Components/EventDetailsChatPanel';\nimport EventPost from './EventEdit';\nimport CertificateDashboard from '../Components/AdminCertificateDashboard';\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  \n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3),\n    },\n  },\n  eventName: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n  },\n  }\n\n}));\n\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  localStorage.removeItem('eventid')\n  const token = localStorage.getItem('token');\n  const id = props.match.params.eventId;\n  const t = localStorage.getItem('theme');\n\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [event, setEvent] = React.useState({});\n  const [adminAccess, setAdminAccess] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [selected, setSelected] = React.useState({\n    infoSelected: true,\n    dashBoardSelected: false,\n    timilineSelected: false,\n    announcementSelected: false,\n    settingsSelected: false,\n    editEventSelected: false,\n    chatSelected: false,\n    certificateSelected: false\n  })\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(val => {\n        setEvent(val.event);\n        \n      })\n    })\n    \n  }, [token,id])\n\n  // console.log(adminAccess)\n  React.useEffect(()=>{\n    if( event.user_id !== undefined && currentUser.user_id !== undefined){\n      if (event.user_id === currentUser.user_id) {\n        // console.log(event);\n        // console.log(currentUser)\n        setAdminAccess(true);\n      }\n    }\n    \n  },[currentUser,event])\n\n\n\n  // const handleDrawerOpen = () => {\n  //   setDrawerOpen(true);\n  // };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  function handleHomeClick() {\n    props.history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n\n\n\n  function infoClicked() {\n    setSelected({\n      infoSelected: true,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n\n  function dashBoardClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: true,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function timelineClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: true,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function announcementsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: true,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function settingsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: true,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function editEventClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: true,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function chatClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: true,\n      certificateSelected: false\n    })\n  }\n  function certificateClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: true\n    })\n  }\n  const {\n    infoSelected,\n    dashBoardSelected,\n    timilineSelected,\n    announcementSelected,\n    settingsSelected,\n    editEventSelected, chatSelected, certificateSelected } = selected;\n\n    function handleSignout(){\n      props.history.replace('/');\n    }\n\n    function handleRegClick() {\n      props.history.push('/event/register/' + event._id);\n      // props.handleReg(event._id);\n  \n    }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <EventDetailsNavigationBar event={event} handleSignout={handleSignout} handleHomeClick={handleHomeClick} setUser={setCurrentUser}  dOpen={drawerOpen} setDOpen={setDrawerOpen}></EventDetailsNavigationBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: drawerOpen,\n          [classes.drawerClose]: !drawerOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: drawerOpen,\n            [classes.drawerClose]: !drawerOpen,\n          }),\n        }}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon color=\"primary\"/> : <ChevronLeftIcon color=\"primary\"/>}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={infoClicked} selected={infoSelected}>\n            <ListItemIcon >\n              <InfoIcon color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n          <ListItem button onClick={timelineClicked} selected={timilineSelected}>\n            <ListItemIcon>\n              <TimelineIcon color=\"primary\"></TimelineIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Schedule\" />\n          </ListItem>\n          <ListItem button onClick={announcementsClicked} selected={announcementSelected}>\n            <ListItemIcon>\n              <AnnouncementIcon color=\"primary\"></AnnouncementIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Announcements\" />\n          </ListItem>\n          <ListItem button onClick={chatClicked} selected={chatSelected}>\n            <ListItemIcon>\n              <TelegramIcon color=\"primary\"></TelegramIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Chat\" />\n          </ListItem>\n        </List>\n        <Divider />\n        {\n          adminAccess && <List>\n            <ListItem button onClick={dashBoardClicked} selected={dashBoardSelected}>\n              <ListItemIcon >\n                <DashboardIcon color=\"primary\"/>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n            <ListItem button onClick={editEventClicked} selected={editEventSelected}>\n              <ListItemIcon>\n                <EditIcon color=\"primary\"></EditIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Edit Event\" />\n            </ListItem>\n            <ListItem button onClick={certificateClicked} selected={certificateSelected}>\n              <ListItemIcon>\n                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Certificates\" />\n            </ListItem>\n            <ListItem button onClick={settingsClicked} selected={settingsSelected}>\n              <ListItemIcon>\n                <SettingsIcon color=\"primary\"></SettingsIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n          </List>\n        }\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography className={classes.eventName} align='center' variant=\"h4\" style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>{event.name}</Typography>\n        {\n          infoSelected && event != null && <AboutPanel event={event}></AboutPanel>\n        }\n        {\n          editEventSelected && event != null && <EventPost event={event} ></EventPost>\n        }\n        {\n          timilineSelected && event != null && <TimeLinePanel event={event}></TimeLinePanel>\n        }\n        {\n          dashBoardSelected && event != null && <DashboardPanel event={event}></DashboardPanel>\n        }\n        {\n          chatSelected && event != null && <div className={classes.chat} ><ChatPanel user={currentUser} open={drawerOpen} event={event}></ChatPanel></div>\n        }\n        {\n          adminAccess && announcementSelected && event != null && <AnnouncementEditPanel event={event}></AnnouncementEditPanel>\n        }\n        {\n          !adminAccess && announcementSelected && event != null && <AnnouncementPanel event={event}></AnnouncementPanel>\n        }\n        {\n          adminAccess && certificateSelected && event != null && <CertificateDashboard event={event}></CertificateDashboard>\n        }\n        {\n            infoSelected && event.reg_mode === \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> \n             \n          }\n        {\n          infoSelected && event.reg_mode !== \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> : \n                <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n        }\n        {\n          adminAccess && settingsSelected && <Typography>Any queries contact us at support@ellipseapp.com</Typography>\n        }\n      </main> \n    </div>\n  );\n}\n\n\n\n\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function AlertDialog(props) {\n\n    const theme = useTheme();\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            >\n                <DialogTitle id=\"title\">{\"Terms and Conditions\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ul>\n                            <li>Provided registration data and your profile will be shared with event admin</li> \n                        </ul>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n// import axios from 'axios';\n\n//MaterialUI imports\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// import { set } from 'date-fns';\n// import AuthContext from '../AuthContext';\nimport TermsandConditions from '../Components/EventRegisterTermsandConditions';\nimport EventsContext from '../EventsContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n\n  const [canRegister, setCanRegister] = React.useState(true);\n  const [userMessage, setUserMessage] = React.useState(false);\n\n  const [formValues, setFormValues] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  // const [fields, setFields] = React.useState([]);\n  const [normalFields, setNormalFields] = React.useState([]);\n  const [dropDownFields, setDropDownFields] = React.useState([]);\n  const [checkboxFields, setCheckBoxFields] = React.useState([]);\n  const [radioFields, setRadioFields] = React.useState([]);\n  const [dateFields, setDateFields] = React.useState([]);\n  const [longDescFields, setLongDescFields] = React.useState([]);\n  const [linkFields, setLinkFields] = React.useState([]);\n\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const id = props.match.params.eventId;\n  const [backDropOpen, setBackDropOpen] = React.useState(true);\n  const [event, setEvent] = React.useState({});\n  const [checkedValues, setCheckedValues] = React.useState([]);\n  const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  const [tandcOpen, setTandcOpen] = React.useState(false);\n\n  const {currentUser} = React.useContext(AuthContext);\n  const {setAllEvents} = React.useContext(EventsContext);\n  const {setActiveEvents} = React.useContext(ActiveEventsContext);\n\n  function handleTermsClick() {\n    setTandcOpen(true);\n  }\n\n  React.useEffect(() => {\n    if (currentUser.designation === \"Student\" || currentUser.designation === \"Faculty\") {\n      // setUserType(true);\n    }\n    else {\n      setCanRegister(false);\n      setUserMessage(currentUser.designation + \" cannot register\")\n    }\n    if (currentUser.user_id === event.user_id) {\n      setCanRegister(false)\n      setUserMessage(\"An event organizer cannot register\")\n    }\n    const cDate = new Date();\n    const eDate = new Date(event.registration_end_time);\n    if (cDate > eDate) {\n      setCanRegister(false)\n      setUserMessage(\"Registration is closed for this event\")\n    }\n    // console.log(event.o_allowed)\n    if (event.o_allowed !== undefined) {\n      if (!event.o_allowed) {\n        console.log(event.o_allowed)\n        if (event.college_name === currentUser.college_name) {\n\n        } else {\n          setCanRegister(false)\n          setUserMessage(\"Only \" + event.college_name + \" can participate\")\n        }\n      }\n    }\n\n  }, [event, currentUser])\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      // console.log(response);\n      response.json().then(value => {\n        setEvent(value.event);\n        // setFields(value.event.regFields);\n        const allFields = value.event.reg_fields;\n        // console.log(allFields);\n        if (allFields != null) {\n          allFields.forEach(f => {\n            if (f.title === \"Name\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.name }))\n            }\n            else if (f.title === \"Email\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.email }));\n            }\n            else if (f.title === \"College\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.college_name }));\n            }\n            else {\n              setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n            }\n            if (f.field === \"checkbox\") {\n\n            }\n\n          })\n          // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n          setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n          setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n          setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n          setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n          setDateFields(allFields.filter((f) => f.field === \"date\"));\n          // setLongDescFields(allFields.filter((f) => f.field === \"long_desc\"));\n          setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n          setLinkFields(allFields.filter(f => f.field === \"link\"));\n\n        }\n        setBackDropOpen(false);\n      })\n    })\n  }, [token, id, currentUser])\n\n  function handleClose() {\n    if (message === \"Registration successful.Stay tunned with notifications and announcements\") {\n      props.history.push('/home')\n      fetch(process.env.REACT_APP_API_URL + '/api/events', {\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'GET'\n    }).then(response => {\n        if (response.status === 200) {\n            response.json().then(value => {\n                // console.log(value)\n                value.sort((a, b) => {\n                    return new Date(a.start_time) - new Date(b.start_time);\n                })\n                setAllEvents(value);\n                setActiveEvents(value.filter(e => {\n                    const cDate = new Date();\n                    const eDate = new Date(e.finish_time);\n                    return cDate < eDate && e.status !== \"pending\"\n                }))\n            })\n        }\n        else if (response.status === 401) {\n            localStorage.removeItem('token');\n        }\n\n    })\n    }\n    setState({ ...state, open: false });\n  }\n\n  function handleChange(event) {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  }\n  const handleChange2 = (name) => (event, values) => {\n    setFormValues({ ...formValues, [name]: values });\n\n  }\n  const handleChange3 = (name) => (event) => {\n    if (event.target.checked) {\n      setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n      const array = [];\n      checkedValues.forEach((v, i) => {\n        if (v[name]) {\n          array.push(v[name])\n        }\n      });\n      array.push(event.target.name);\n      setFormValues({ ...formValues, [name]: array });\n    }\n  }\n\n  const handleDateChange = (name) => (date) => {\n    setFormValues({ ...formValues, [name]: date })\n  };\n\n  const handleLondDescChange = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value })\n  }\n\n  function handleradioChange(event, value) {\n    setFormValues({ ...formValues, [event.target.name]: value });\n  }\n\n  function handleEventRegistration(e) {\n    e.preventDefault();\n    // setLoading(true);\n    // console.log(checkedValues);\n    // console.log(formValues);\n    const formkeys = Object.keys(formValues);\n    formkeys.forEach(v => {\n      if (formValues[v] === null) {\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please fill in all fields',\n          type: \"error\",\n          autoHide: 4000\n        });\n      }\n    })\n    try {\n      var data = new FormData();\n      const d = { data: formValues }\n      data = JSON.stringify(d);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        if (response.status === 200) {\n          response.json().then(value => {\n            // console.log(value);\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Registration successful.Stay tunned with notifications and announcements',\n              type: \"success\",\n              autoHide: 4000\n            });\n          })\n        }\n\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n\n  }\n\n  function handleBack() {\n    props.history.goBack();\n  }\n\n\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Backdrop className={classes.backdrop} open={backDropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleBack}>\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      {event != null &&\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Registration for \" + event.name}\n          </Typography>\n          <form className={classes.form} onSubmit={handleEventRegistration}>\n\n            <Grid container spacing={2}>\n              {normalFields.map((field, index) => {\n                if (field.title === \"College\") {\n                  return (\n                    <Grid item xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        id={field.title}\n                        options={colleges}\n                        getOptionLabel={(option) => option}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        disabled\n                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                      />\n                    </Grid>)\n                }\n                else if (field.title === \"Email\") {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        disabled\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n                else {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n\n              })}\n              {checkboxFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                      <FormLabel component=\"legend\">{field.title}</FormLabel>\n                      <FormGroup class={classes.formgroup}>\n                        {field.options.map((option) => {\n                          return <FormControlLabel\n                            control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                            label={option}\n                          />\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                    {/* <Autocomplete\n                      id={field.name}\n                      multiple\n                      // value={}\n                      onChange={handleChange2(field.name)}\n                      options={field.options.map((option) => option)}\n                      getOptionLabel={(option) => option}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.name} placeholder={field.name} />\n                      )}\n                    /> */}\n                  </Grid>\n                )\n              })}\n              {dropDownFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id={field.title}\n                      options={field.options.map((option) => option)}\n                      // freeSolo\n                      // onChange={handleeventTagsChange}\n                      onChange={handleChange2(field.title)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.title} placeholder={field.name} />\n                      )}\n                    />\n                  </Grid>\n                )\n              })}\n              {radioFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormLabel required component=\"legend\">{field.title}</FormLabel>\n                    <RadioGroup required aria-label=\"address\" name={field.title} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                      {field.options.map((option) => {\n                        return <FormControlLabel value={option} control={<Radio color=\"default\" />} label={option} />\n                      })}\n\n                      {/* <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" /> */}\n                    </RadioGroup>\n                  </Grid>\n                )\n              })}\n              {\n                dateFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                          // minDate={Date.now()}\n                          fullWidth\n                          required\n                          variant=\"inline\"\n                          format=\"dd MMM yyyy hh:mm a zzz\"\n                          margin=\"normal\"\n                          id=\"startDate\"\n                          label=\"Start Date\"\n                          name=\"startDate\"\n                          value={formValues[field.title]}\n                          onChange={handleDateChange(field.title)}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n\n                    </Grid>\n                  )\n                })\n              }\n              {\n                longDescFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        multiline={true}\n                        rows=\"5\"\n                        variant='outlined'\n                        placeholder={field.title}\n                        autoComplete='off'\n                        required\n                        id={field.title}\n                        name={field.title}\n                        label={field.title}\n                        fullWidth\n                        onChange={handleLondDescChange}\n                      // value={props.about}\n                      />\n                    </Grid>\n                  )\n                })\n              }\n              {\n                linkFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                })\n              }\n\n              <Grid item xs={12}>\n                <Typography>By posting the event.I accept the <Button onClick={handleTermsClick} color=\"primary\">Terms and Conditions</Button></Typography>\n              </Grid>\n            </Grid>\n            {canRegister && <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n              {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Register\"}\n            </Button>}\n            {\n              !canRegister && <Typography>{userMessage}</Typography>\n            }\n          </form>\n        </div>\n      }\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n      <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 2)\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const {allEvents} = React.useContext(EventsContext);\n    const {activeEvents} = React.useContext(ActiveEvents);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const postedEvents = allEvents.filter((val) => {\n    //     return val.user_id === user.user_id;\n    // });\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n    }\n\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\">\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={8} lg={8} >\n                        {/* <div className={classes.root2}> */}\n                        <Paper className={classes.root2}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"on\">\n                                <Tab label=\"Registered Events\" />\n                                <Tab label=\"Past Events\" />\n                            </Tabs>\n                        </Paper>\n                        <div className={classes.content}>\n                            {value === 0 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                            {\n                                regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                            }\n                                {regEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n\n                            </Grid>}\n                            {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                            {\n                                pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                            }\n                                {pastEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n                            </Grid>}\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AboutEventsPanel from '../Components/AboutEventPanel';\nimport { Dialog } from '@material-ui/core';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const id = props.match.params.eventId;\n    const [event, setEvent] = React.useState({});\n    const [open, setOpen] = React.useState(false);\n    if(token){\n        props.history.replace(`/event/${id}`)\n    }\n\n    const handleClickOpen = () => {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/signin\")\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+`/api/unregistered/event?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setEvent(value.event);\n            })\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/signin\")\n    }\n    function handleSignupClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <Typography\n                    align='center'\n                    variant=\"h4\"\n                    style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>\n                    {event.name + \"(Login to Register and Know More Info)\"}\n                </Typography>\n                <AboutEventsPanel notRegistered={true} event={event}></AboutEventsPanel>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Register</Button>\n            </div>\n            <Dialog\n                open={open}\n                maxWidth=\"md\"\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Login to Register for the Event/Contest\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root2: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(50),\n            height: theme.spacing(50),\n        },\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    root4: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const classes = useStyles();\n    const id = props.match.params.id;\n    const [details,setDetails] = React.useState({});\n    const [userFound,setUserFound] = React.useState(true);\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + `/api/event/verify_certificate?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if(response.status === 200){\n                response.json().then(value => {\n                    setUserFound(true)\n                    setDetails(value);\n                })\n            }\n            else{\n                setUserFound(false);\n            }\n            \n        })\n    }, [id])\n\n    function handleSigninClick() {\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            {userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                <VerifiedUserIcon fontSize=\"large\"></VerifiedUserIcon>\n                    <Typography variant=\"h4\">{details.participantname}</Typography>\n                    <Typography>{details.participant_college}</Typography>\n                    <Typography style={{marginTop:\"20px\"}}>Event Name: {details.event_name}</Typography>\n                    <Typography>Organizer: {details.organizer}</Typography>\n                    <Typography>Held on {details.date}</Typography>\n                    <Typography style={{marginTop:\"20px\"}}>participation by {details.participantname} has been confirmed</Typography>\n                </Box>\n            </Box>}\n            {!userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                <CancelIcon fontSize=\"large\"></CancelIcon>\n                    <Typography variant=\"h4\">Certificate NOT FOUND</Typography>\n                    \n                </Box>\n            </Box>}\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n// import Dashboard from '../Components/Images/dashboard.png';\n// import Profile from '../Components/Images/profile.png';\n// import AdminDashboard from '../Components/Images/AdminDashboard.png';\n// import Certificate from '../Components/Images/certificate.png';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport DeviceDesign from '../Components/Images/un5.svg';\nimport DeviceDesign2 from '../Components/Images/un6.svg';\nimport DeviceDesign3 from '../Components/Images/un7.svg';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst tutorialSteps = [\n    {\n        label: 'Find and register for all your College events from one App',\n        imgPath: DeviceDesign,\n    },\n    {\n        label: 'Post events and manage them with ease',\n        imgPath: DeviceDesign2,\n    },\n    {\n        label: 'Feature Rich dashboard for Event Administrators',\n        imgPath: DeviceDesign3,\n    },\n    {\n        label: 'Create announcements, Live chat with participants and generate event certificates',\n        imgPath: DeviceDesign2,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        flexGrow: 1,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0),\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: theme.spacing(0),\n        // alignContent: 'center'\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 300,\n        [theme.breakpoints.down('md')]: {\n            minHeight: 200,\n        },\n        paddingLeft: theme.spacing(0),\n        backgroundColor: theme.palette.primary.dark,\n    },\n    img: {\n        padding: theme.spacing(0),\n        maxHeight: 550,\n        display: 'block',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        width: '100%',\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(0),\n        },\n    },\n    paperLeft: {\n        margin: theme.spacing(0),\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            //   margin: theme.spacing(3, 1),\n        },\n\n    },\n    carouselCaption: {\n        fontSize: '2.5em',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '2.3em',\n        },\n    }\n}));\n\nfunction SwipeableTextMobileStepper(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const maxSteps = tutorialSteps.length;\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleStepChange = (step) => {\n        setActiveStep(step);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container component=\"main\" justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} md={6}>\n                    <AutoPlaySwipeableViews\n                    interval=\"5000\"\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={activeStep}\n                        onChangeIndex={handleStepChange}\n                        enableMouseEvents\n                    >\n                        {tutorialSteps.map((step, index) => (\n                            <div key={step.label}>\n                                {Math.abs(activeStep - index) <= 2 ? (\n                                    <img className={classes.img} src={step.imgPath} alt={step.label} />\n                                ) : null}\n                            </div>\n                        ))}\n                    </AutoPlaySwipeableViews>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Paper elevation={0} className={classes.header}>\n                        <Typography className={classes.carouselCaption} color=\"secondary\" align=\"center\">{tutorialSteps[activeStep].label}</Typography>\n                    </Paper>\n                    <Box className={classes.paperLeft} >\n                        <Button onClick={props.handleSignin} variant=\"contained\" color=\"secondary\">Get started</Button>\n                        <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n                            <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n                        </a>\n                    </Box>\n\n                </Grid>\n            </Grid>\n            <MobileStepper\n                steps={maxSteps}\n                position=\"static\"\n                variant=\"dots\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n                        Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                        Back\n                    </Button>\n                }\n            />\n        </div>\n    );\n}\n\nexport default SwipeableTextMobileStepper;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\n\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  //   const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n\n\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              //   onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        {/* <MenuItem onClick={handleReportClick}>Report</MenuItem> */}\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography noWrap variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {event.name}\n          </Typography>\n        }\n        subheader={\n          <React.Fragment>\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {event.description}\n            </Typography>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n          </React.Fragment>\n        }\n      />\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <MailIcon></MailIcon>\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={props.onClick}>\n            See More\n        </Button>\n          {\n            <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={props.onClick}>\n              Register\n            </Button>\n          }\n        </div>\n\n\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport NewHomePageCarousel from '../Pages/NewHomePageCarousel';\nimport Box from '@material-ui/core/Box';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\nimport Link from '@material-ui/core/Link';\nimport Copyright from \"../Components/copyright\";\nimport Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\n// import DeviceDesign from '../Components/Images/un.svg';\nimport HomePageEventCard from '../Components/HomePageEventCard';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n    body: {\n        margin: theme.spacing(0)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    img: {\n        padding: theme.spacing(10),\n        minHeight: 200,\n        display: 'block',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(3),\n        },\n    },\n    footer: {\n        backgroundColor: theme.palette.secondary.main,\n        marginTop: theme.spacing(3)\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 200,\n        // paddingLeft: theme.spacing(0),\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(10),\n        borderRadius: theme.spacing(2),\n        boxShadow: \"3\",\n        // height: 450,\n        // padding: theme.spacing(10),\n    },\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(3)\n    },\n    title: {\n        fontFamily: 'Gugi',\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold',\n        flexGrow: 1,\n    },\n}));\n\nexport default function UnregisteredPage(props) {\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [activeEvents, setActiveEvents] = React.useState([])\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/get_events', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            // console.log(response)\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value);\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setActiveEvents(value.filter(e => {\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }))\n                })\n            }\n\n        })\n    }, [])\n\n\n    function handleSigninClick() {\n        props.history.push(\"/signin\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h5\">\n                        Ellipse\n                    </Typography>\n                    <Button className={classes.button} variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button className={classes.button} variant=\"outlined\" size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <NewHomePageCarousel handleSignin={handleSigninClick}></NewHomePageCarousel>\n            </div>\n            <Grid style={{ minHeight: '100px' }} container component=\"main\">\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} ></Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    {\n                        activeEvents.map((e, index) => {\n                            return <HomePageEventCard onClick={handleSigninClick} event={e}></HomePageEventCard>\n                        })\n                    }\n                </Grid>\n\n            </Grid>\n            <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                {/* <Box display=\"flex\" justifyContent=\"center\">\n                    <Typography>Made with <FavoriteIcon fontSize=\"inherit\" color=\"primary\"></FavoriteIcon> for Students and Organizations</Typography><br></br>\n                </Box> */}\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                        {\"support@ellipseapp.com\"}\n                    </Link></Typography>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Copyright></Copyright>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                        {\"Privacy Policy\"}\n                    </Link>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n                        <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n                    </a>\n                </Box>\n            </Box>\n\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './Pages/signin';\nimport SignUp from './Pages/signup';\nimport ForgotPassword from './Pages/ForgotPassword';\nimport { AuthProvider } from \"./Auth\";\nimport OTPVer from './Pages/otpverification';\nimport UserInfo from './Pages/UserInfo';\nimport Layout from './Pages/Layout';\nimport CalenderPanel from './Pages/CalenderPanel';\nimport EventsTabPanel from './Pages/EventsTabpanel';\nimport ProfileTabPanel from './Pages/ProfileTabpanel';\nimport EventPostForm from './Pages/EventPostForm';\n// import ChatPage from './Pages/ChatPage';\nimport EventDetails from './Pages/EventDetails';\nimport EventRegisterForm from './Pages/EventRegistrationform';\nimport ExplorePanel from './Pages/ExplorePanel';\nimport UnregisteredPage from './Pages/UnregisteredPage';\nimport NetworkDetector from './NetworkDetector';\nimport VerifyCertificate from './Pages/VerifyCertificate';\nimport NewHomePage from './Pages/NewHomePage';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={NewHomePage} />\n            <Route exact path=\"/signin\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route exact path=\"/userinfo\" component={UserInfo}></Route>\n            <Route exact path=\"/otpverification\" component={OTPVer}></Route>\n            <Route exact path=\"/un/event/:eventId\" component={UnregisteredPage}></Route>\n            {/* <Route exact path=\"/resetforgotpassword\" component ={ForgotPassword2}></Route> */}\n            <Route exact path=\"/event/:eventId\" component={EventDetails} />\n            <Route exact path=\"/verify_certificate/:id\" component={VerifyCertificate}></Route>\n            <Layout>\n              <Route path=\"/home\" component={EventsTabPanel}></Route>\n              <Route exact path=\"/events\" component={CalenderPanel}></Route>\n              <Route exact path=\"/post\" component={EventPostForm}></Route>\n              <Route exact path=\"/profile\" component={ProfileTabPanel}></Route>\n              {/* <Route exact path=\"/chat\" component={ChatPage}></Route> */}\n\n              <Route exact path=\"/event/register/:eventId\" component={EventRegisterForm} />\n              <Route exact path=\"/yourevents\" component={ExplorePanel}></Route>\n            </Layout>\n          </Switch>\n\n\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\nexport default NetworkDetector(App);\n","//to detect if connected to network or not(this is in class based react rather than hooks as \n// i directly copied from other source)\n\nimport React, { Component } from 'react';\n\nexport default function (ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      if (condition === 'online') {\n        const webPing = setInterval(\n          () => {\n            fetch('//google.com', {\n              mode: 'no-cors',\n              })\n            .then(() => {\n              this.setState({ isDisconnected: false }, () => {\n                return clearInterval(webPing)\n              });\n            }).catch(() => this.setState({ isDisconnected: true }) )\n          }, 2000);\n        return;\n      }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div>\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n      type: \"dark\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#000000'\n      },\n      secondary: {\n        main: '#1C1C1E',\n      },\n      background:{\n        default: \"#000000\"\n      }\n    },\n    \n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n      type: \"light\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#ffffff'\n      },\n      secondary: {\n        main: '#e5e5e5'\n      },\n      background:{\n        default: \"#ffffff\"\n      }\n    },\n    \n    \n});\n\nexport {lightTheme,darkTheme};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {lightTheme,darkTheme} from './Components/theme'\nimport { CssBaseline } from '@material-ui/core';\nconst t = localStorage.getItem('theme');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={t === 'light' ? lightTheme: darkTheme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}