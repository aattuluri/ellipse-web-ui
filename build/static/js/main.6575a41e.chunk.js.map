{"version":3,"sources":["Components/Images/logo.svg","Components/Images/google-play-badge.png","Components/Images/logo300.svg","Themes/SigninPageStyles.js","Components/copyright.js","Pages/signin.js","Themes/SignupPageStyles.js","Pages/signup.js","Pages/ForgotPassword.js","Auth.js","Pages/otpverification.js","Pages/UserInfo.js","Themes/MainHomeStyles.js","Components/EventShareDialog.js","Components/AboutEventPanel.js","Components/EventTimeLinePanel.js","Components/EventsAnnouncementsPanel.js","Components/ChatMessage.js","AuthContext.js","Components/ChatTextField.js","Components/EventsChatPanel.js","Components/EventsDialog.js","EventsContext.js","Components/NotficationsDialog.js","Pages/NavigationBar.js","ActiveEventsContext.js","Pages/Layout.js","Pages/CalenderPanel.js","Components/EventReportDialog.js","Components/EventCard.js","Components/SortLeftPanel.js","Components/MobileSortPanel.js","Components/ImageDialog.js","Components/GridListEvents.js","Pages/EventsTabpanel.js","Components/ProfileEventCard.js","Components/ProfilePostedEventsTabPanel.js","Components/ProfileAboutDataBox.js","Components/ProfileAboutTabPanel.js","Components/MainProfileCard.js","Components/UpdateInfoTabPanel.js","Components/UpdatePasswordTabPanel.js","Components/UpdateProfileDialog.js","Pages/ProfileTabpanel.js","Components/EventPostDetails1.js","Components/EventPostDetails2.js","Components/AddFieldDialog.js","Components/EventPostDetails3.js","Pages/EventPostForm.js","Components/EventDetailsNavigationBar.js","Components/AddAnnouncementForm.js","Components/SendEmailForm.js","Components/DashboardPanel.js","Components/EventDetailsChatPanel.js","Pages/EventEdit.js","Pages/EventDetails.js","Pages/EventRegistrationform.js","Pages/ExplorePanel.js","Pages/UnregisteredPage.js","App.js","NetworkDetector.js","Components/theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","height","wrapper","margin","spacing","position","paperRight","flexDirection","alignItems","backgroundColor","palette","secondary","main","padding","paddingBottom","borderRadius","breakpoints","down","paperLeft","up","paperimage","avatar","marginTop","primary","form","width","submit","iPhoneImage","title","fontFamily","color","dark","fontWeight","hidden","image","maxHeight","maxWidth","Copyright","Typography","variant","align","Link","href","Date","getFullYear","Alert","props","elevation","withRouter","history","classes","React","useState","open","vertical","horizontal","message","type","autoHide","state","setState","loading","setLoading","token","setToken","isUserVerified","setIsUserVerified","email","setEmail","abortController","AbortController","handleClose","event","reason","a","localStorage","setItem","eventId","getItem","abort","push","FormData","payload2","data2","JSON","stringify","fetch","process","signal","headers","method","body","then","result","json","res","error","preventDefault","target","elements","password","payload","value","data","response","status","isVerified","useremail","to","Grid","container","component","className","CssBaseline","Snackbar","anchorOrigin","autoHideDuration","onClose","key","severity","item","xs","sm","md","Box","justifyContent","m","p","src","PhoneImage","alt","GoogleBadge","Avatar","onSubmit","TextField","name","required","fullWidth","id","label","autoComplete","autoFocus","Button","disabled","CircularProgress","size","paper","closeButton","right","top","nameError","setNameError","usernameError","setUserNameError","signupButtonDisabled","setSignupButtonDisabled","replace","fullName","username","terms","checked","val","tok","Container","inputProps","pattern","onInvalid","helperText","onInput","onChange","FormControlLabel","control","Checkbox","justify","mt","otp","setOtp","setPassword","loading2","setLoading2","console","log","nPassword","e","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","useEffect","Provider","textArea","imageUrl","setImageurl","setImage","colleges","setColleges","gender","designation","collegeId","bio","college_id","append","accept","files","url","URL","createObjectURL","style","Badge","overlap","badgeContent","htmlFor","IconButton","aria-label","sizes","multiline","rows","placeholder","FormControl","InputLabel","Select","native","map","coll","index","_id","outline","marginBottom","flexGrow","background","grow","mobileTitle","titleButton","mobileTitleButton","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","borderBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","tabs","mobiletab","tabPanel","flex_section","flex_col_scroll","overflow","rpaper","textAlign","text","light","postButton","EventShareDialog","useTheme","setTitle","copyToClipBoard","copyMe","navigator","clipboard","writeText","Dialog","PaperProps","boxShadow","aria-labelledby","DialogTitle","DialogContent","onClick","DialogActions","alignContent","media","buttonDiv","button","large","tab","AboutEventPanel","other","tags","timeLabel","setTimeLabel","calculateTimeLeft","difference","registration_end_time","timeLeft","start_time","finish_time","days","Math","floor","hours","minutes","seconds","setTimeLeft","x","setTimeout","getTimeLabel","cleanup","clearTimeout","timerComponents","Object","keys","forEach","interval","role","lg","poster_url","description","length","Chip","event_type","fee_type","event_mode","Array","join","secondaryTail","startDate","endDate","regEndDate","Timeline","TimelineItem","TimelineOppositeContent","toDateString","toLocaleTimeString","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","timiline","root3","root5","CustomizedTimeline","announcements","setAnnouncements","date","time","root2","whiteSpace","pos","inline","ChatMessage","userType","setUserType","adminId","ListItem","ListItemAvatar","ListItemText","Fragment","user_name","componentDecorator","decoratedHref","decoratedText","timeStyle","bottomBar","bottom","left","close","JustifyContent","sendButtonDisabled","setSendButtonDisabled","newmessage","setNewMessage","cl","setCl","undefined","clsx","rowsMax","onKeyUp","keyCode","shiftKey","handleSend","sendIcon","textDecorationColor","minWidth","root6","topBar","root4","progress","user","useContext","dialogOpen","setDialogOpen","reference","setReferenece","chatMessages","setChatMessages","counterDate","webSocket","setWebSocket","webConnect","ws","WebSocket","onopen","onmessage","mes","parse","cMes","msg","event_id","onclose","check","scrollIntoView","behavior","readyState","Fade","in","unmountOnExit","List","currentDate","messageDate","user_id","userName","user_pic","float","clear","ref","el","d","send","action","now","profile_pic","toISOString","a11yProps","icons","bottomTags","dialog","minHeight","field","dialogContent","EventsDialog","t","setValue","shareDialogOpen","setShareDialogOpen","scroll","aria-describedby","fontSize","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","dividers","registered","regMode","reg_mode","handleReg","reg_link","textDecoration","EventsContext","FormDialog","notificationms","setNotifications","Divider","n","anchorEl","setAnchorEl","darkThemeSelected","setDarkThemeSelected","searchedEvent","setSearchedEvent","notificationsCount","setNotificationCount","isMenuOpen","Boolean","setOpen","notificationsOpen","setNotificationsOpen","allEvents","tabIndex","parseInt","handleChange","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","Switch","window","location","reload","removeItem","handleeventClick","handleHomeClick","handleProfileClick","handleExploreClick","handleTitleButtonClick","AppBar","Toolbar","Logo","noWrap","Autocomplete","freeSolo","options","getOptionLabel","option","renderInput","params","square","icon","edge","aria-controls","aria-haspopup","currentTarget","ActiveEventsContext","backdrop","zIndex","drawer","Layout","setAllEvents","activeEvents","setActiveEvents","authorized","setAuthorized","userDetailsDone","setUserDetailsDone","college_name","sort","b","filter","Backdrop","subRpaper","fab","sideList","CalenderPanel","events","setEvents","selectedEvent","setSelectedEvent","registeredEvents","setRegisteredEvents","y","start","end","handlePostButtonClick","handleRegisterdEventClick","eventBackgroundColor","eventBorderColor","eventClick","info","defaultView","plugins","dayGridPlugin","buttonIcons","Fab","EventReportDialog","desc","setDesc","morePopup","Eventcard","anchorRef","useRef","imageLoaded","setImageLoaded","reportDialogOpen","setReportDialogOpen","current","contains","handleListKeyDown","prevOpen","handleReportClick","handleShareClick","focus","Card","CardHeader","onLoad","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","subheader","CardContent","CardActions","disableSpacing","click","filterTextField","filterButton","SortLeftPanel","handleModeToggle","currentIndex","modeChecked","indexOf","newChecked","splice","setModeChecked","handleFeeToggle","feeChecked","setFeeChecked","utils","DateFnsUtils","DatePicker","format","sortStartDate","handleSortDateChange","sortEndDate","handleEndSortDateChange","paddingTop","labelId","dense","ListItemIcon","disableRipple","RadioGroup","defaultValue","handleSortCollegeChange","Radio","handleSortApplyButton","handlesortDiscardButton","MobileSortPanel","KeyboardButtonProps","collegeName","ImageDialog","flexWrap","gridList","transform","titleBar","img","GridListEvents","collegeEvents","handleMoreButtonClick","GridList","cols","GridListTile","GridListTileBar","actionIcon","leftSubPaper","mobileFilterButton","skeleton","imageDialogOpen","setImageDialogOpen","setSortStartDate","setSortEndDate","sortCollegeType","setSortCollegeType","sortedEventsArray","setSortedEventsArray","isFiltered","setIsFiltered","feeSortChecked","setFeeSortChecked","modeSortChecked","setModeSortChecked","filterDialogOpen","setFilterDialogOpen","selectedImage","setSelectedImage","registerdEvents","handleClick","dateRangeSortedEvents","sortByDateRange","sortByMode","typeSortedEvents","feeSortedEvents","sortByCost","collegeSortedEvents","sortByCollege","sortByDate","dateSortedEvents","date1","date2","sEvents","sortedEvents","sEvent","getTime","tEvents","sDEvents","sevent","getDate","getMonth","includes","college","handleImageDialogOpen","handleRegistrationButton","Skeleton","animation","EventCard","startTime","endTime","eventMode","eventType","regEndTime","registrationEndTime","feeType","feesType","imageDialog","ImgMediaCard","CardMedia","gutterBottom","handleViewClick","pathname","ProfilePostsTabPanel","postedEvents","setSellectedEvent","mode","content","ProfileDataBox","setIcon","editIcon","handleEditButton","ProfileAboutDataBox","ProfilePostedEventsTabPanel","UpdateInfoTabPanel","setName","setUserName","setBio","setGender","setDesignation","setCollegeName","setCollegeId","collegesName","setCollegesName","imageUpdated","setImageUpdated","v","collegesNames","c","UpdatePasswordTabPanel","cPassword","setCPassword","setNPassword","UpdateProfile","accordion","EventsTabPanel","eOpen","setEOpen","ActiveEvents","UpdateProfileDialog","buttons","AddressForm","startDateError","setStartDateError","endDateError","setEndDateError","regEndDateError","setRegEndDateError","handleNext","DateTimePicker","minDate","setStartDate","setEndDate","setRegEndDate","setEventMode","setEventType","registrationMode","setSteps","steps","setRegistrationMode","FormLabel","setFeeType","imageName","setImageName","setAbout","about","multiple","eventThemes","values","setThemes","renderTags","getTagProps","setPoster","fileName","InputProps","endAdornment","InputAdornment","regLink","setRegLink","regFees","setFees","requirements","setRequirements","setParticipantsType","aria-disabled","evemt","setAddressType","setBuilding","building","venueCollege","setVenueCollege","handleBack","setType","selectedOptions","setSelectedOptions","handleAdd","formControl","formgroup","listStyle","chip","fields","selectedFields","setSelectedFields","sName","setFields","handlePost","addingField","fName","FormGroup","onDelete","chipToDelete","appBar","layout","stepper","Checkout","activeStep","setActiveStep","eventName","setEventName","shortDesc","setShortDesc","setendDate","fees","setEventThemes","selectedrequirements","setSelectedRequirements","addressType","setBuildingAdress","organizer","setOrganizer","participantsType","platformDetails","setPlatformDetails","handleEventPost","allFields","oAllowed","fee","venue_type","venue","reg_fields","o_allowed","platform_details","setRegFields","f","handlePostwithoutregFileds","goBack","Stepper","Step","StepLabel","step","eventPoster","Error","getStepContent","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","toolbar","mixins","MiniDrawer","setUser","handleSignout","dOpen","setDOpen","AnnouncementForm","visibility","setVisibility","visible_all","SendEmailForm","setContent","emails","buttonsPaper","fixedHeightPaper","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setHeaders","rowValues","setRowValues","selected","setSelected","announcementDialog","setAnnouncementDialog","sendEmailDialog","setSendEmailDialog","firstdata","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","newSelecteds","Email","indeterminate","column","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","textField","setRegFees","setRegMode","participantType","setVenue","eventTypes","venue_college","novalidate","flexShrink","drawerOpen","drawerClose","overflowX","match","setDrawerOpen","setEvent","adminAccess","setAdminAccess","infoSelected","dashBoardSelected","timilineSelected","announcementSelected","settingsSelected","editEventSelected","chatSelected","Drawer","direction","chat","formValues","setFormValues","normalFields","setNormalFields","dropDownFields","setDropDownFields","checkboxFields","setCheckBoxFields","radioFields","setRadioFields","dateFields","setDateFields","longDescFields","setLongDescFields","linkFields","setLinkFields","backDropOpen","setBackDropOpen","checkedValues","setCheckedValues","handleLondDescChange","handleradioChange","class","array","i","ExplorePanel","regEvents","pastEvents","handleEventClick","appbar","UnregisteredPage","DialogContentText","NetworkDetector","ComposedComponent","exact","path","Login","SignUp","ForgotPassword","UserInfo","OTPVer","EventDetails","EventPostForm","ProfileTabPanel","EventRegisterForm","isDisconnected","handleConnectionChange","onLine","webPing","setInterval","clearInterval","catch","this","addEventListener","removeEventListener","Component","darkTheme","createMuiTheme","default","lightTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6575a41e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.50ff3dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-play-badge.1a0c1f51.png\";","module.exports = __webpack_public_path__ + \"static/media/logo300.a7187bbb.svg\";","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        height: '100vh',\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n      },\n    paperRight: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(0),\n        paddingBottom: theme.spacing(4),\n        borderRadius: 30,\n        height: '80vh',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(0, 1),\n            paddingBottom: theme.spacing(2),\n          },\n    },\n    paperLeft: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(3, 1),\n          },\n          [theme.breakpoints.up('md')]: {\n            height: '80vh',\n          },\n          \n    },\n    paperimage: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(),\n        marginTop: theme.spacing(8),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '90%', \n        margin: theme.spacing(5),\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(2),\n          },\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    iPhoneImage: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n    },\n    title: {\n        \n        fontFamily: 'Gugi',\n        // marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n      },\n      hidden:{\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n      },\n      image: {\n        maxHeight: \"600px\",\n        maxWidth: '600px',\n        [theme.breakpoints.down('sm')]: {\n          display: 'none'\n        },\n      }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n          ellipseapp.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default Copyright;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../Themes/SigninPageStyles'\n// import AppleBadge from '../Components/Images/AppleBadge.png';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n// import iPhone from '../Components/Images/iPhone 11 Pro Max@2x.png';\nimport Copyright from \"../Components/copyright\";\nimport { withRouter, Redirect } from \"react-router\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PhoneImage from '../Components/Images/logo300.svg';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\n\n\n\nconst Signin = ({ history }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [user,setUser] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  const [isUserVerified, setIsUserVerified] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const abortController = new AbortController();\n  \n\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Signedin successfully\") {\n      localStorage.setItem('token', token);\n      if (isUserVerified) {\n        localStorage.setItem('token', token);\n        const eventId = localStorage.getItem('eventid');\n        if (eventId) {\n          abortController.abort()\n          history.push(`/event/${eventId}`)\n        }\n        else {\n          abortController.abort()\n          history.push('/home');\n        }\n\n      }\n      else {\n        try {\n          var data2 = new FormData();\n          const payload2 = {\n            email: email\n          };\n          data2 = JSON.stringify(payload2)\n          fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n            signal: abortController.signal,\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data2\n          }).then((result) => {\n            // console.log(result);\n            result.json().then((res) => {\n              if (res.message === \"success\") {\n                abortController.abort()\n                localStorage.setItem('token', token);\n                history.push('/otpverification')\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Signedin successfully',\n                  type: \"success\",\n                  autoHide: 300\n                });\n              }\n            })\n\n          })\n        } catch (error) {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: error.message,\n            type: \"error\",\n            autoHide: 3000\n          })\n        }\n\n      }\n\n    }\n    setState({ ...state, open: false });\n  };\n  async function handleSignin(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { email, password } = event.target.elements;\n    try {\n      var data = new FormData()\n      const payload = {\n        email: email.value,\n        password: password.value\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/users/login', {\n        signal: abortController.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then((response) => {\n        // console.log(response);\n        if (response.status === 200) {\n          // console.log\n          response.json().then((value) => {\n            setToken(value.token);\n            setIsUserVerified(value.isVerified);\n            setEmail(value.useremail);\n            // setUser(JSON.stringify(value.userDetails));\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Signedin successfully',\n              type: \"success\",\n              autoHide: 200\n            });\n          })\n        }\n        else {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: \"invalid credentials\",\n            type: \"error\", autoHide: 6000\n          })\n        }\n\n      })\n    } catch (error) {\n\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n    }\n  }\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} sm={12} md={7} elevation={6} >\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" m={1} p={1} className={classes.paperLeft}>\n        <img  src={PhoneImage} alt=\"logo\" height=\"500px\" width=\"500px\" className={classes.image}></img>\n          <Typography className={classes.title} component=\"h1\" variant=\"h2\">\n            Ellipse\n          </Typography>\n          <Typography component=\"h1\" variant=\"h6\">\n            Kill time for what matters\n          </Typography><br></br>\n          <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n        </Box>\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={5} elevation={6}>\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1} className={classes.paperRight}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={handleSignin}>\n            <TextField\n              name=\"email\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              name=\"password\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <div className={classes.wrapper}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={loading}\n                className={classes.submit}>\n                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign In\"}\n\n              </Button>\n            </div>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"/forgotpassword\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-end\">\n            <Copyright></Copyright>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\nexport default withRouter(Signin);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // backgroundColor: theme.palette.secondary.main,\n      padding: theme.spacing(3),\n      borderRadius: 30,\n  \n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(7),\n      [theme.breakpoints.down('md')]: {\n        top: theme.spacing(12),\n      }\n    }\n  }));\n\n  export default useStyles;","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = ({ history }) => {\n  const classes = useStyles();\n  const [token, setToken] = React.useState(\"\");\n  // const [currentUser, setCurrentUser] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUserNameError] = React.useState(false);\n  const [signupButtonDisabled, setSignupButtonDisabled] = React.useState(false);\n  const handleClose = async (event, reason) => {\n\n    if (message === \"Signedup successfully\") {\n      localStorage.setItem('token', token);\n      history.replace(\"/otpverification\")\n    }\n\n    setState({ ...state, open: false });\n  };\n  async function handleSignUp(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { fullName, email, password, username, terms } = event.target.elements;\n    try {\n      if (terms.checked) {\n        var data = new FormData()\n        const payload = {\n          name: fullName.value,\n          email: email.value,\n          password: password.value,\n          username: username.value\n        };\n        data = JSON.stringify(payload);\n        fetch(process.env.REACT_APP_API_URL + '/api/users/signup', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then((result) => {\n          if (result.status === 200) {\n            result.json().then((val) => {\n              setToken(val.token);\n              var data2 = new FormData();\n              const payload2 = {\n                email: val.useremail\n              };\n              data2 = JSON.stringify(payload2)\n              // console.log(token);\n              const tok = val.token;\n              fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                headers: {\n                  'Authorization': `Bearer ${tok}`,\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n              }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                  if (res.message === \"success\") {\n                    setState({\n                      open: true,\n                      vertical: 'top',\n                      horizontal: 'center',\n                      message: 'Signedup successfully',\n                      type: \"success\",\n                      autoHide: 300\n                    });\n                  }\n                })\n\n              })\n\n            })\n          }\n          else if (result.status === 401) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Email already registered',\n              type: \"error\",\n              autoHide: 3000\n            });\n          }\n        })\n      }\n\n      else {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please agress the terms and condiitons',\n          type: \"error\"\n        });\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleUsernameChange(event) {\n    const username = event.target.value;\n    var data = new FormData();\n    const payload = {\n      username: username\n    };\n    data = JSON.stringify(payload);\n    setUserNameError(false);\n    setSignupButtonDisabled(false)\n    fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((result) => {\n      result.json().then(value => {\n        if (value.message === \"user already exists\") {\n          setUserNameError(true);\n          setSignupButtonDisabled(true);\n        }\n      })\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fullName\"\n                name=\"fullName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                inputProps={{ pattern: \"[a-zA-Z ]+\" }}\n                onInvalid={() => { setNameError(true) }}\n                helperText={nameError && \"Name should only contain alphabet and spaces\"}\n                onInput={() => { setNameError(false) }}\n                error={nameError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"User Name\"\n                onChange={handleUsernameChange}\n                name=\"username\"\n                error={usernameError}\n                helperText={usernameError && \"username already exists\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" name=\"terms\" />}\n                label=\"I accept the terms and conditions\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || signupButtonDisabled}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign Up\"}\n          </Button>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n\n\n","import React from \"react\";\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst ForgotPassword = ({ history }) => {\n  const classes = useStyles();\n  // const token = localStorage.getItem('token');\n  const [email, setEmail] = React.useState(null);\n  const [otp, setOtp] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [loading2, setLoading2] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n\n  async function handlePasswordReset(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/sendverificationemail', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading(false)\n            // history.push('/resetforgotpassword')\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Check your email for OTP and enter below',\n              type: \"success\",\n              autoHide: 2000\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  async function handleForgotPassword(event) {\n    event.preventDefault();\n    setLoading2(true);\n    // const { email,} = event.target.elements;\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email,\n        otp: otp,\n        nPassword: password\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/forgotpassword', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n\n            // history.push('/resetforgotpassword')\n            setLoading2(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Succesfull Login to continue',\n              type: \"success\",\n              autoHide: 300\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading2(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  function handleClose() {\n    if (message === \"Succesfull Login to continue\") {\n      history.replace(\"/\");\n    }\n  }\n\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter your email to receive OTP\n        </Typography>\n        <form className={classes.form} onSubmit={handlePasswordReset}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}>\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send OTP\"}\n          </Button>\n        </form>\n        <form className={classes.form} onSubmit={handleForgotPassword}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"otp\"\n                label=\"OTP\"\n                name=\"otp\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"New Password\"\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading2}\n            className={classes.submit}>\n            {loading2 ? <CircularProgress color=\"primary\" size={24} /> : \"Reset Password\"}\n          </Button>\n\n\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Link href=\"/\" variant=\"body2\">\n              Instead? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(ForgotPassword);\n\n\n","import React, { useEffect, useState } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [token,setToken] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    // function storeUser(user){\n    //   setCurrentUser(user);\n    //   setPending(false)\n    // }\n    // console.log(localStorage.getItem('user'))\n    setCurrentUser(localStorage.getItem('user'));\n    setPending(false);\n\n    // app.auth().onAuthStateChanged((user) => {\n    //   setCurrentUser(user)\n    //   setPending(false)\n    // });\n  }, []);\n  // function add\n\n  if (pending) {\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OTPver = ({ history }) => {\n    const classes = useStyles();\n    // const [token, setToken] = React.useState(\"\");\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide} = state;\n\n    function handleClose() {\n        // console.log(\"message\")\n        if (message === \"verified\") {\n            history.replace(\"/userinfo\")\n        }\n    }\n\n    function handleVerification(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { otp } = event.target.elements;\n        try {\n            var data = new FormData();\n            const payload = {\n                otp: otp.value\n            };\n            // data.append(JSON.stringify(payload));\n            data = JSON.stringify(payload);\n            const token = localStorage.getItem(\"token\");\n            fetch(process.env.REACT_APP_API_URL+'/api/users/verifyotp', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n\n            }\n            ).then((result) => {\n                result.json().then(val => {\n                    // console.log(val.message);\n                    if (val.message === \"verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"verified\",\n                            type: 'success',\n                            autoHide: 300\n                        })\n\n                    }\n                    else if (val.message === \"Not verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"incorrect otp\",\n                            type: 'error',\n                            autoHide: 3000\n                        })\n                    }\n                    else {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Something went wrong try again\",\n                            type: 'error',\n                            autoHide: 3000\n                        })\n                    }\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n\n\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Email Verification\n                </Typography>\n                <form className={classes.form} onSubmit={handleVerification}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"otp\"\n                            label=\"Enter OTP\"\n                            name=\"otp\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(OTPver);\n\n\n","import React from 'react';\nimport Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textArea: {\n        width: theme.spacing(58),\n        margin: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.dark,\n    },\n\n}));\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UserInfo = ({ history }) => {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [currentUser, setCurrentUser] = React.useState(null);\n    const [imageUrl, setImageurl] = React.useState(\"\");\n    const [image, setImage] = React.useState(null);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide } = state;\n    const [colleges,setColleges] = React.useState([]);\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            const eventId = localStorage.getItem('eventid');\n        if(eventId){\n          history.push(`/event/${eventId}`)\n        }\n        else{\n            history.replace(\"/home\")\n        }\n            \n        }\n\n        setState({ ...state, open: false });\n    };\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'GET',\n                }).then(response =>{\n                  // console.log(response);\n                  response.json().then(value =>{\n                    // console.log(value);\n                    setColleges(value);\n                  })\n                })\n      },[token])\n  \n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            // setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            // const fileType = event.target.files[0].type;\n            setImageurl(url);\n            // setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    async function handleSignUp(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { gender, designation, collegeId, bio } = event.target.elements;\n\n        try {\n            var data = new FormData()\n            const payload = {\n                gender: gender.value,\n                designation: designation.value,\n                college_id: collegeId.value,\n                bio: bio.value,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/userdetails', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (image != null) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Welcome\n                </Typography>\n                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    badgeContent={<label htmlFor=\"contained-button-file\">\n                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <EditIcon></EditIcon>\n                        </IconButton>\n                    </label>}>\n                    <Avatar className={classes.avatar} sizes=\"100\" alt=\"\" src={imageUrl}></Avatar>\n                </Badge>\n\n                <form className={classes.form} onSubmit={handleSignUp}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                            // onChange={handleAboutChange}\n                            // value={props.about}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"WorkingProfessional\">Working Professional</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                        \n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Your College</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"College\"\n                                    inputProps={{\n                                        name: 'collegeId',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    {colleges.map((coll,index) =>{\n                                        return <option key={index} value={coll._id}>{coll.name}</option>\n                                    })}\n                                    \n                                    {/* <option value=\"GITAM University\">GITAM University</option>\n                                    <option value=\"SRM University\">SRM University</option> */}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(UserInfo);\n\n\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.5em',\n      height: '0.5em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 1px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: '#ad9d9d',\n      outline: '1px solid slategrey'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n    marginBottom: theme.spacing(5)\n\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n    alignItems: 'center',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  mobileTitle:{\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    \n  },\n  titleButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n    textTransform: 'none'\n  },\n  mobileTitleButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      width: 'fit-content'\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    width: '230px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    borderBottom: 'none',\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  sectionDesktop: {\n    \n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  tabs: {\n    \n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginLeft: theme.spacing(15),\n    },\n  },\n  mobiletab: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  tabPanel: {\n    marginBottom: theme.spacing(3),\n  },\n  flex_section: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    // minHeight: 0\n  },\n  \n  flex_col_scroll: {\n    flexGrow: 1,\n    overflow: 'auto',\n    // minHeight: '100vh'\n  },\n  rpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    margin: theme.spacing(2),\n    // borderRadius: theme.spacing(50)\n  },\n  postButton: {\n    borderRadius: theme.spacing(50)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        setTitle(`https://ellipseapp.com/un/event/${event._id}`)\n    }, [event._id])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { cleanup } from '@testing-library/react';\n\n//Materail imports\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\n// import AuthContext from '../AuthContext';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    }\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    const event = props.event;\n    const tags = event.tags;\n    const [timeLabel, setTimeLabel] = React.useState(\"Registration Ends in\")\n    const calculateTimeLeft = () => {\n\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let timeLeft = {};\n        if (difference < 0) {\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        if (difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const getTimeLabel = () => {\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let label = \"Registration ends in\"\n        if (difference < 0) {\n            label = \"Starts in\"\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            label = \"Ends in\"\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        return label;\n    }\n\n    const [timeLeft, setTimeLeft] = React.useState(calculateTimeLeft());\n\n    React.useEffect(() => {\n        const x = setTimeout(() => {\n            setTimeLabel(getTimeLabel());\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n\n        return () => {\n            cleanup();\n            clearTimeout(x);\n        }\n    });\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach(interval => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span key={interval}>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Grid container component=\"main\">\n                        <Grid item xs={12} sm={12} md={4} lg={4} >\n                            <img style={{ maxWidth: '250px' }} alt=\"event poster\" src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}  ></img>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <Typography>{event.description} This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.</Typography>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }}>{timeLabel}</Typography>\n                            <Typography variant=\"h5\">{timerComponents.length ? timerComponents : <span>Time's up!</span>}</Typography>\n                            {/* <Typography>Starts at {event.start_time}</Typography>\n                        <Typography>Ends at {event.finish_time}</Typography> */}\n                            <div style={{ marginTop: '10px' }}>\n                                <Chip variant=\"outlined\" color=\"inherit\" label={event.event_type}></Chip>\n\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.fee_type}></Chip>\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.event_mode}></Chip>\n                                {tags != null && tags.map(val => {\n                                    return <Chip key={val} style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                })}\n                            </div>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h4\">About</Typography>\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                {[...new Array(5)]\n                                    .map(\n                                        () => `Cras mattis consectetur purus sit amet fermentum. \n                                    Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n                                    Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                                    Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n                                    )\n                                    .join('\\n')}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                        </Grid>\n                        <Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport TimerIcon from '@material-ui/icons/Timer';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  large: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  tab: {\n    flexGrow: 1,\n    // maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const token = localStorage.getItem('token');\n  const event = props.event;\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  \n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Timeline align=\"alternate\">\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {regEndDate.toDateString()}{\" \"+regEndDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              \n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Registration Ends\n                  </Typography>\n                  <Typography>Your oppurtunity to participate came to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {startDate.toDateString()}{\" \"+startDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\" variant=\"outlined\"> \n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Starts\n                  </Typography>\n                  <Typography>Party begins</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n            <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {endDate.toDateString()}{\" \"+endDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector className={classes.secondaryTail} />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Ends\n                  </Typography>\n                  <Typography>Chill,event came to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            {/* <TimelineItem>\n              <TimelineSeparator>\n                <TimelineDot color=\"secondary\">\n                  <RepeatIcon />\n                </TimelineDot>\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Repeat\n            </Typography>\n                  <Typography>Because this is the life you love!</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem> */}\n          </Timeline>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setAnnouncements(value);\n      })\n    })\n  }, [token, event._id])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useEffect } from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { ListItemAvatar } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Linkify from 'react-linkify';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    useEffect(() => {\n        if (props.adminId === message.id) {\n            setUserType('Admin')\n        }\n    }, [props.adminId, message.id])\n\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar style={{ display: 'none' }} ><InfoIcon></InfoIcon></ListItemAvatar>\n            <ListItemText\n                primary={\n                    <React.Fragment>\n                        <Typography component=\"h6\" variant=\"body2\">\n                            {message.user_name}\n                        </Typography>\n\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                            {userType}\n                        </Typography>\n                    </React.Fragment>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" variant=\"body1\" color=\"textPrimary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{color:'red',fontWeight: 'bold'}} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                            {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                        </Typography>\n                        <Box>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                className={classes.date}\n                            >\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </React.Fragment>}\n            />\n        </ListItem>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n \nconst AuthContext = React.createContext(null);\n \nexport default AuthContext;","import React from 'react';\nimport clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        position: 'absolute',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    open: {\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(34),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    close: {\n        // width: '85%',\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(13),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    const [cl, setCl] = React.useState(classes.bottomBar);\n    React.useEffect(() => {\n        if (props.open !== undefined) {\n            setCl(clsx({\n                [classes.open]: props.open,\n                [classes.close]: !props.open,\n            }))\n        }\n        // eslint-disable-next-line\n    }, [props.open])\n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        if (newmessage !== null && newmessage !== \"\") {\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={cl} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport EventShareDialog from './EventShareDialog';\nimport AboutEventPanel from '../Components/AboutEventPanel';\nimport EventsTimeLinePanel from '../Components/EventTimeLinePanel';\nimport EvenstAnnouncementsPanel from '../Components/EventsAnnouncementsPanel';\nimport ChatPanel from '../Components/EventsChatPanel';\nimport { Typography } from '@material-ui/core';\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    }\n}));\n\nfunction EventsDialog(props) {\n    const event = props.event;\n    const t = localStorage.getItem('theme');\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    // const token = localStorage.getItem('token');\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleClose() {\n        props.handleClose();\n\n    }\n\n    function handleRegClick() {\n        props.handleReg(event);\n\n    }\n\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                {event.name}\n                <div className={classes.icons}>\n                    {/* <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                        <MailIcon></MailIcon>\n                    </IconButton> */}\n                    <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <Paper className={classes.root2}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"About\" {...a11yProps(0)} />\n                            <Tab label=\"Schedule\" {...a11yProps(1)} />\n                            <Tab label=\"Announcements\" {...a11yProps(2)} />\n                            <Tab label=\"Chat\" {...a11yProps(3)} />\n\n                        </Tabs>\n                    </Paper>\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent} dividers={true} >\n                <EventShareDialog\n                    event={event}\n                    open={shareDialogOpen}\n                    handleClose={handleShareClose}></EventShareDialog>\n                <AboutEventPanel\n                    value={value}\n                    index={0}\n                    event={props.event}></AboutEventPanel>\n                <EventsTimeLinePanel value={value} index={1} event={props.event}></EventsTimeLinePanel>\n                <EvenstAnnouncementsPanel value={value} index={2} event={props.event}></EvenstAnnouncementsPanel>\n                {value === 3 && (event.registered || event.regMode !== \"form\") && <ChatPanel value={value} index={3} event={props.event}></ChatPanel>}\n                {value === 3 && event.reg_mode === \"form\" && event.registered !== true && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n            </DialogContent>\n            <DialogActions className={classes.action}>\n                <Box className={classes.bottomBar} display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\" hidden={value !== 3}>\n                </Box>\n                <div\n                    role=\"tabpanel\"\n                    hidden={value === 3}>\n                    {value !== 3 && (\n                        <div className={classes.buttonDiv}>\n\n                            {\n                                event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                                    {event.registered ? \"Registered\" : \"Register\"}\n                                </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                                    </Button>\n                            }\n\n                        </div>\n                    )}\n                </div>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default EventsDialog;","import React from 'react';\n \nconst EventsContext = React.createContext(null);\n \nexport default EventsContext;","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// import CardContent from '@material-ui/core/CardContent';\n// import Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root3: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2)\n    },\n    root5:{\n        display: \"flex\",\n            justifyContent: \"flex-end\",\n      },\n      secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n      },\n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [notificationms,setNotifications] = React.useState([]);\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/get_notifications', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value)\n                    setNotifications(value);\n                })\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL + '/api/update_notification_status', {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'GET'\n          }).then((result) => {\n            result.json().then((data) => {\n            //   do nothing\n            })\n          })\n    }, [token])\n\n\n\n    return (\n        <div>\n            <Dialog scroll=\"paper\" open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.dialog }}>\n                <DialogTitle id=\"form-dialog-title\">Notifications</DialogTitle>\n                <Divider></Divider>\n                <DialogContent>\n                {\n                    notificationms.map((n,index)=>{\n                        const date = new Date(n.time)\n                       return <Box m={1} p={1} className={classes.root3}>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Typography className={classes.title}>\n                                {n.title}\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                {n.description}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.root5}>\n                            <Typography variant=\"body2\" >\n                                {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    })\n                }\n                    \n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EventIcon from '@material-ui/icons/Event';\nimport useStyles from '../Themes/MainHomeStyles';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport { Button } from '@material-ui/core';\nimport Logo from '../Components/Images/logo.svg';\n// import DarkLogo from '../Components/Images/dark_theme_logo.png';\n// import LightLogo from '../Components/Images/light_theme_logo.png';\n// import CuboidLogo from '../Components/Images/Cuboid logo.png'\n\n\n\n\n\n\nconst NavigationBar = function ({ history }) {\n\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const t = localStorage.getItem('theme');\n  const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n  // const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n  // const [allEvents, setAllEvents] = React.useState([]);\n  const [searchedEvent, setSearchedEvent] = React.useState([]);\n  const [notificationsCount,setNotificationCount] = React.useState(0);\n\n  const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  // const [calenderValue, setCalenderValue] = useState(new Date());\n  // const [loading, setLoading] = React.useState(false);\n  // const eventypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [open, setOpen] = React.useState(false);\n  const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n  const allEvents = React.useContext(EventsContext);\n  useEffect(() => {\n    if (localStorage.getItem('tabIndex') != null) {\n      const tabIndex = parseInt(localStorage.getItem('tabIndex'));\n      if (tabIndex != null) {\n        setValue(tabIndex);\n      }\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/get_unseen_notifications_count', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(data);\n      })\n    })\n  }, [token])\n\n\n  // function handleMorebuttonClick(event) {\n  //   event.preventDefault();\n  //   // history.push(\"/event/1\")\n  // }\n  function handleSearchChange(event, value) {\n    if (value) {\n      // console.log(value);\n      setSearchedEvent(value);\n      setOpen(true);\n    }\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('tabIndex', newValue);\n  };\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    // setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  \n  if (!token) {\n    history.replace('/');\n  }\n\n  function handleThemeChange(event) {\n    console.log(event.target.checked);\n    setDarkThemeSelected(event.target.checked);\n    if (event.target.checked) {\n      localStorage.setItem('theme', 'dark');\n      window.location.reload(false);\n    }\n    else {\n      localStorage.setItem('theme', 'light');\n      window.location.reload(false);\n    }\n  }\n\n\n\n  function handleSignout(event) {\n\n    fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then((result) => {\n      result.json().then((data) => {\n        if (data.message === \"success\") {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tabIndex');\n          history.replace(\"/\")\n        }\n      })\n    })\n\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\n      {/* <MenuItem onClick={handleMenuClose}>My account</MenuItem> */}\n      <MenuItem> Dark Theme <Switch\n        checked={darkThemeSelected}\n        onChange={handleThemeChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      /></MenuItem>\n      <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n    </Menu>\n  );\n\n  function handleeventClick(event) {\n    event.preventDefault();\n    history.push(\"/events\")\n    // localStorage.setItem('tabIndex',1);\n  }\n  function handleHomeClick() {\n    history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n  function handleProfileClick() {\n    history.push(\"/profile\")\n  }\n  function handleExploreClick() {\n    history.push(\"/yourevents\")\n  }\n  // function handleChatClick() {\n  //   history.push('/chat')\n  // }\n  const handleClose = () => {\n    setOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  function handleRegistrationButton(event) {\n    setOpen(false);\n    // setSelectedEvent(event);\n    // history.push('/event/register/' + event._id);\n  }\n\n  function handleNotificationClick() {\n    setNotificationsOpen(true);\n  }\n  function handleTitleButtonClick() {\n    localStorage.setItem('tabIndex', 0)\n    setValue(0)\n    history.push('/home')\n  }\n\n  return (\n    <div className={classes.grow}>\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Toolbar>\n            <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n            <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                options={allEvents}\n                getOptionLabel={(option) => option.name}\n                onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              />\n            </div>\n            <div className={classes.tabs}>\n              <Paper square className={classes.root}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  variant=\"fullWidth\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  aria-label=\"icon\"\n\n                >\n                  <Tab onClick={handleHomeClick} icon={<HomeIcon />} aria-label=\"home\" />\n                  <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                  {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"favorite\" /> */}\n                  <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"person\" />\n                  <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n                </Tabs>\n              </Paper>\n            </div>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                <Badge badgeContent={notificationsCount} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\">\n                <SettingsIcon></SettingsIcon>\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <div className={classes.mobiletab}>\n\n            <Paper square className={classes.root} position=\"sticky\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              // aria-label=\"icon tabs example\"\n              >\n                <Tab onClick={handleHomeClick} icon={< HomeIcon />} aria-label=\"home\" />\n                <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"messages\" /> */}\n                <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"explore\" />\n                <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n              </Tabs>\n            </Paper>\n          </div>\n        </AppBar>\n        <div>\n          {open && <EventsDialog\n            open={open}\n            event={searchedEvent}\n            handleReg={handleRegistrationButton}\n            handleClose={handleClose}>\n          </EventsDialog>}\n          <NotificationsDialog open={notificationsOpen} handleClose={handleClose}></NotificationsDialog>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default withRouter(NavigationBar);\n\n","import React from 'react';\n \nconst ActiveEventsContext = React.createContext(null);\n \nexport default ActiveEventsContext;","import React from 'react';\nimport { Redirect } from 'react-router';\n\n//Material Imports\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Components impoprts\nimport NavigationBar from './NavigationBar';\nimport EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n// import dot from 'dote'\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    root: {\n        background: 'white',\n        position: 'sticky',\n        top: 0,\n        bottom: 0,\n        zIndex: 5,\n    },\n}));\n\nfunction Layout(props) {\n\n\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [allEvents, setAllEvents] = React.useState([]);\n    const [activeEvents,setActiveEvents] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [open, setOpen] = React.useState(true);\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    \n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setCurrentUser(value[0]);\n                    if (value[0].college_name === null) {\n                        setUserDetailsDone(false);\n                    }\n                    setOpen(false);\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL+'/api/events', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setAllEvents(value);\n                    setActiveEvents(value.filter(e =>{\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate\n                    }))\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n\n        })\n\n    }, [token])\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        return <Redirect to=\"/userinfo\"></Redirect>\n    }\n\n    return (\n        <AuthContext.Provider value={currentUser}>\n            <EventsContext.Provider value={allEvents}>\n            <ActiveEventsContext.Provider value={activeEvents}>\n                {\n                    currentUser != null  && <div>\n                        <Paper className={classes.root}>\n                            <NavigationBar></NavigationBar>\n                        </Paper>\n                        <div>\n                            {props.children}\n                        </div>\n                    </div>\n                }\n                {\n                    currentUser == null && <Backdrop className={classes.backdrop} open={open}>\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n                }\n                </ActiveEventsContext.Provider>\n            </EventsContext.Provider>\n        </AuthContext.Provider>\n\n\n    );\n}\nexport default Layout;\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n// import { Typography } from '@material-ui/core';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport '../Themes/main.scss'\nimport EventsDialog from '../Components/EventsDialog';\n// import EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction CalenderPanel({history}) {\n    localStorage.setItem('tabIndex',1)\n    // const { children, value, url, index, ...other } = props;\n    // const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [events, setEvents] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const [registeredEvents,setRegisteredEvents] = React.useState([]);\n    // const [image, setImage] = React.useState(null);\n    const allEvents = React.useContext(ActiveEventsContext);\n\n    useEffect(() => {\n        allEvents.forEach(y => {\n            // console.log(y.start_time);\n            setEvents(events =>\n                [...events, { id: JSON.stringify(y), title: y.name, start: y.start_time, end: y.finish_time }]\n            )\n        })\n        setRegisteredEvents(allEvents.filter((value) => value.registered === true))\n\n    }, [allEvents])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n    \n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    function handleRegistrationButton(event) {\n        setOpen(false);\n        // setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n\n    function handleEventClick(info) {\n        setSelectedEvent(JSON.parse(info.event.id))\n        setOpen(true);\n    }\n    return (\n        <div>\n            {/* {value === index && ( */}\n            <div className={classes.root}>\n                <Grid container component=\"main\" >\n\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                        {/* <Typography index={0}>Filters</Typography> */}\n                        {/* <Calendar onChange={setCalenderValue} value={calenderValue} ></Calendar> */}\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8} >\n                        <FullCalendar\n                            eventBackgroundColor=\"#1C1C1E\"\n                            eventBorderColor=\"#00bdaa\"\n                            events={events}\n                            eventClick={handleEventClick}\n                            defaultView='dayGridMonth' plugins={[dayGridPlugin]} backgroundColor=\"black\" \n                            buttonIcons={false}></FullCalendar>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={false} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                        </Button>\n                            <List className={classes.sideList}>\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registeredEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        handleReg={handleRegistrationButton}\n                        ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CalenderPanel;\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const event = props.event;\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                event_id: event._id,\n                title: title,\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Report({event.name})</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\n\nimport EventReportDialog from './EventReportDialog';\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [reportDialogOpen, setReportDialogOpen] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n  function handleImageClick() {\n  }\n  function handleRegClick() {\n    props.handleReg(props.eventId);\n\n  }\n  function handleMoreButtonClick() {\n    props.click(props.eventId);\n  }\n  function handleReportClick() {\n    setReportDialogOpen(true);\n  }\n  function handleReportClose() {\n    setReportDialogOpen(false);\n  }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {props.name}\n          </Typography>\n        }\n        subheader={\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n            This impressive paella is a perfect party dish and a fun meal to cook together with your\n            guests. Add 1 cup of frozen peas along with the mussels, if you like.\n        </Typography>\n        }\n      />\n      <CardContent>\n        <EventReportDialog\n          event={event}\n          open={reportDialogOpen}\n          handleClose={handleReportClose}>\n\n        </EventReportDialog>\n        <EventShareDialog\n          event={event}\n          open={shareDialogOpen}\n          handleClose={handleShareClose}></EventShareDialog>\n        {/* <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n          Details\n        </Typography> */}\n        <Chip variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends at \" + regEndDate.toDateString()}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts at \" + startDate.toDateString()}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends at  \" + endDate.toDateString()}></Chip>\n        {/* <Grid container component=\"main\">\n          <Grid item xs={6} sm={6} md={6}>\n            <Typography variant=\"h6\" component=\"p\">\n            <PublicIcon></PublicIcon> {props.eventMode} \n            </Typography>\n            <Typography variant=\"h6\" component=\"p\">\n            <PublicIcon></PublicIcon> {props.eventType} \n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Last Date for Registration:\n            </Typography>\n            <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n              {startDate.toDateString()}\n            </Typography>\n\n          </Grid>\n          <Grid item xs={6} sm={6} md={6}>\n            <Timeline align='alternate'>\n            <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{startDate.toDateString()}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Starts</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{startDate.toDateString()}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Ends</Typography>\n          </TimelineContent>\n        </TimelineItem>\n            </Timeline>\n          </Grid>\n        </Grid> */}\n\n      </CardContent>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <MailIcon></MailIcon>\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={handleMoreButtonClick}>\n            See More\n        </Button>\n          {\n            event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> : \n                <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n          }\n\n        </div>\n\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(10),\n        zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        // top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n            // top: theme.spacing(20)\n        },\n    \n    },\n    root2: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        borderRadius: theme.spacing(2)\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50),\n        backgroundColor: theme.palette.primary.main\n    },\n\n}));\n\nfunction SortLeftPanel(props) {\n    const classes = useStyles();\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        // defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        // defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List className={classes.root}>\n                    {[\"Online\", \"Offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${user.college_name}`].map((value) => {\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default SortLeftPanel;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n\n    root: {\n        background: theme.palette.secondary.main,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none',\n        // },\n    },\n    \n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n\n}));\n\nfunction MobileSortPanel(props) {\n    const classes = useStyles();\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List >\n                    {[\"online\", \"offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${user.collegeName}`].map((value) => {\n                           \n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default MobileSortPanel;\n\n ","import React from 'react';\n\n// import { makeStyles } from '@material-ui/core/styles';\nimport { DialogContent, DialogTitle } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\n\n// const useStyles = makeStyles((theme) => ({\n  \n// }));\n\n\n\n\nfunction ImageDialog(props) {\n  // const classes = useStyles();\n\n  function handleClose() {\n    props.handleClose();\n\n}\n\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"#1C1C1E\",\n                    boxShadow: 'none',\n                },\n            }}>\n            <DialogTitle>Hello</DialogTitle>\n              <DialogContent>\n                <img src={props.image} alt=\"profile pic\"></img>\n              </DialogContent>\n            </Dialog>\n      </div>\n   );\n}\n\nexport default ImageDialog;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\n// import StarBorderIcon from '@material-ui/icons/StarBorder';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'auto',\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(2),\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    color: theme.palette.background.paper,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n    // height: theme.spacing\n  },\n  title: {\n    color: theme.palette.primary.main,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  img: {\n    height: 355,\n    maxWidth: 400,\n    overflow: 'hidden',\n    display: 'block',\n    width: '100%',\n  },\n}));\n\nexport default function GridListEvents(props) {\n\n\n  const collegeEvents = props.events;\n  const classes = useStyles();\n  // console.log(collegeEvents);\n\n  // const tileData = [\n  //   {\n  //     img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQkdYZmP_DK3N6RjjWwVGagR2BjlZCe0c2jTg&usqp=CAU\",\n  //     title: 'Image',\n  //     author: 'author',\n  //   },\n  //   {\n  //     img: \"https://firebasestorage.googleapis.com/v0/b/campusthreadflutter.appspot.com/o/ProfilePics%2FJYU8h8QvNjUPQQvPlsNUbx9BJtm2.jpeg?alt=media&token=0b0701ce-03bc-4246-9b1f-be1d604d807a\",\n  //     title: 'Image',\n  //     author: 'author',\n  //   },\n  //   {\n  //     img: \"https://firebasestorage.googleapis.com/v0/b/campusthreadflutter.appspot.com/o/ProfilePics%2FJYU8h8QvNjUPQQvPlsNUbx9BJtm2.jpeg?alt=media&token=0b0701ce-03bc-4246-9b1f-be1d604d807a\",\n  //     title: 'Image',\n  //     author: 'author',\n  //   },\n  // ];\n\n\n  const handleMoreButtonClick = (event) => () => {\n    // console.log(\"button clicked\");\n    props.click(event, \"\");\n  }\n\n  \n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5} >\n        {collegeEvents.map((event) => (\n          \n          <GridListTile key={event._id} rows={1}>\n            <img src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`} alt={event.name} className={classes.img} />\n            <GridListTileBar\n              title={event.name}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${event.name}`} onClick={handleMoreButtonClick(event)}>\n                  <InfoIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport EventCard from '../Components/EventCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withRouter} from \"react-router\";\nimport List from '@material-ui/core/List';\nimport EventsDialog from '../Components/EventsDialog';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SortLeftPanel from '../Components/SortLeftPanel';\nimport MobileSortPanel from '../Components/MobileSortPanel';\nimport ImageDialog from '../Components/ImageDialog';\n// import EventsContext from '../EventsContext';\nimport Skeleton from '@material-ui/lab/Skeleton';\n// import { Link } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\nimport GridListEvents from '../Components/GridListEvents';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\n\n// function a11yProps(index) {\n//     return {\n//         id: `scrollable-auto-tab-${index}`,\n//         'aria-controls': `scrollable-auto-tabpanel-${index}`,\n//     };\n// }\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '89vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        // color: theme.palette.primary.main\n        backgroundColor: theme.palette.primary.main\n    },\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        // height: '89vh',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        // bottom: 0,\n        // zIndex: 3,\n    },\n    leftSubPaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n        [theme.breakpoints.down('md')]: {\n            maxHeight: '78vh',\n        },\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    mobileFilterButton: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    skeleton: {\n        textDecorationColor: theme.palette.primary.dark,\n    }\n\n}));\n\nfunction EventsTabPanel({ history }) {\n    localStorage.setItem('tabIndex',0);\n    // const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [selectedEvent, setSelectedEvent] = React.useState(\"\");\n    const [sortStartDate, setSortStartDate] = React.useState(null);\n    const [sortEndDate, setSortEndDate] = React.useState(null);\n    // const [sortType, setSortType] = React.useState(null);\n    // const [sortEventMode, setSortEventMode] = React.useState(null);\n    const [sortCollegeType, setSortCollegeType] = React.useState(\"\");\n    const [sortedEventsArray, setSortedEventsArray] = React.useState([]);\n    const [isFiltered, setIsFiltered] = React.useState(false);\n    const [feeSortChecked, setFeeSortChecked] = React.useState([0]);\n    const [modeSortChecked, setModeSortChecked] = React.useState([0]);\n    const [filterDialogOpen, setFilterDialogOpen] = React.useState(false);\n    const [selectedImage, setSelectedImage] = React.useState(null);\n    const allEvents = React.useContext(ActiveEventsContext);\n    const [registerdEvents, setRegisteredEvents] = React.useState([]);\n\n    React.useEffect(() => {\n        // console.log(allEvents);\n        setRegisteredEvents(allEvents.filter((value) => value.registered === true))\n    }, [allEvents])\n    // console.log(registerdEvents);\n    if (!token) {\n        // return <Redirect to=\"/\" />;\n        history.replace(\"/\")\n    }\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClick = function (event, image) {\n        // console.log(id);\n        setSelectedEvent(event);\n        setSelectedImage(image);\n        setOpen(true);\n        // history.push('eventdetails')\n    }\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleSortDateChange = (date) => {\n        console.log(date);\n        setSortStartDate(date);\n    };\n    const handleEndSortDateChange = (date) => {\n        setSortEndDate(date);\n    }\n\n    // function handleSortEventModeChamge(event, value) {\n    //     console.log(event);\n    //     console.log(value);\n    // }\n    // console.log(allEvents);\n    function handleSortCollegeChange(event, value) {\n        setSortCollegeType(value);\n    }\n    async function handleSortApplyButton() {\n        // console.log(sortStartDate);\n        // console.log(modeSortChecked);\n        // console.log(sortCollegeType);\n        setFilterDialogOpen(false);\n        if (sortStartDate != null && sortEndDate != null) {\n            const dateRangeSortedEvents = sortByDateRange(sortStartDate, sortEndDate, allEvents);\n            setSortedEventsArray(dateRangeSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateRangeSortedEvents));\n                const typeSortedEvents = sortByMode(dateRangeSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(typeSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.college_name) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateRangeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.college_name) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateRangeSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (sortStartDate != null) {\n            const dateSortedEvents = await sortByDate(sortStartDate, allEvents)\n            setSortedEventsArray(dateSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateSortedEvents));\n                const typeSortedEvents = sortByMode(dateSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(dateSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.collegeName) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.collegeName) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (modeSortChecked.length > 1) {\n            const typeSortedEvents = sortByMode(allEvents);\n            console.log(sortByMode(allEvents));\n\n            setSortedEventsArray(typeSortedEvents);\n            setIsFiltered(true);\n            if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(typeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (feeSortChecked.length > 1) {\n            const feeSortedEvents = sortByCost(allEvents);\n            setSortedEventsArray(feeSortedEvents);\n            setIsFiltered(true);\n        }\n        else if (sortCollegeType === user.collegeName) {\n            const collegeSortedEvents = sortByCollege(allEvents);\n            setSortedEventsArray(collegeSortedEvents);\n            setIsFiltered(true);\n        }\n    }\n\n    function sortByDateRange(date1, date2, sEvents) {\n        var sortedEvents = [];\n        // console.log(typeof (date1));\n        // console.log(typeof (date1));\n        sEvents.forEach(sEvent => {\n            const d = new Date(sEvent.start_time);\n            if (date1.getTime() <= d.getTime() && d.getTime() <= date2.getTime()) {\n                sortedEvents.push(sEvent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByDate(date, tEvents) {\n        var sDEvents = [];\n        tEvents.forEach(async sevent => {\n            const x = `${date.getDate()}` + date.getMonth() + date.getFullYear();\n            const d = new Date(sevent.start_time);\n            const y = `${d.getDate()}` + d.getMonth() + d.getFullYear();\n            console.log(y);\n            if (x === y) {\n                console.log(sevent);\n                sDEvents.push(sevent);\n            }\n            console.log(sortedEventsArray);\n        })\n        console.log(sDEvents);\n        return sDEvents;\n    }\n    function sortByMode(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (modeSortChecked.includes(sevent.event_mode)) {\n                console.log(\"ddd\");\n                sortedEvents.push(sevent);\n            }\n        })\n        console.log(sortedEvents);\n        return sortedEvents;\n    }\n\n    function sortByCost(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (feeSortChecked.includes(sevent.fee_type)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCollege(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (user.collegeName === sevent.college) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function handlesortDiscardButton() {\n        setModeSortChecked([0])\n        setFeeSortChecked([0])\n        setSortedEventsArray([]);\n        setSortStartDate(null);\n        setSortEndDate(null);\n        setIsFiltered(false);\n        setFilterDialogOpen(false)\n        // setChecked(null);\n    }\n    function handlefilterButtonClicked() {\n        setFilterDialogOpen(true);\n    }\n    function handleFilterClose() {\n        setFilterDialogOpen(false);\n    }\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(image) {\n        // console.log(image);\n        // setSelectedImage(image);\n        // setImageDialogOpen(true);\n    }\n\n    function handleRegistrationButton(event) {\n        setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    return (\n        <div>\n            <Grid container component=\"main\" >\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} >\n                    <Paper className={classes.root}>\n                        <Paper className={classes.leftSubPaper}>\n                            <SortLeftPanel\n                                handleSortDateChange={handleSortDateChange}\n                                sortStartDate={sortStartDate}\n                                handleEndSortDateChange={handleEndSortDateChange}\n                                sortEndDate={sortEndDate}\n                                handleSortCollegeChange={handleSortCollegeChange}\n                                feeChecked={feeSortChecked}\n                                modeChecked={modeSortChecked}\n                                setFeeChecked={setFeeSortChecked}\n                                setModeChecked={setModeSortChecked}\n                                handleSortApplyButton={handleSortApplyButton}\n                                handlesortDiscardButton={handlesortDiscardButton}>\n                            </SortLeftPanel>\n                        </Paper>\n                    </Paper>\n                    <Button className={classes.mobileFilterButton} variant=\"outlined\" onClick={handlefilterButtonClicked} >Filters</Button>\n\n                </Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px' }}>\n                        Your College Events\n                    </Typography>\n                    <GridListEvents click={handleClick} events={allEvents.filter((event) => event.college_name === user.college_name)} ></GridListEvents>\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px',paddingBottom: '7px' }}>\n                        Active Events\n                    </Typography>\n\n                    {allEvents.length === 0 && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>}\n                    {\n                        isFiltered ? sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    eventId={event}\n                                >\n\n                                </EventCard>)\n                        }) : allEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                </Grid>\n                <Grid item xs={12} sm={12} md={4} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                            </Button>\n                            <List className={classes.root2}>\n                                \n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registerdEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                           \n\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n            </Grid>\n            <div>\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    imageUrl={selectedImage}\n                    handleClose={handleClose}\n                    handleReg={handleRegistrationButton}\n                >\n                    imageDialog={handleImageDialogOpen}\n                </EventsDialog>\n                <ImageDialog\n                    image={selectedImage}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose} url={user.imageUrl}>\n                </ImageDialog>\n                <Dialog\n                    open={filterDialogOpen}\n                    onClose={handleFilterClose}\n                    fullWidth={true}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                    maxWidth=\"sm\" PaperProps={{\n                        style: {\n                            backgroundColor: \"#1C1C1E\",\n                            boxShadow: 'none',\n                        },\n                    }}>\n                    <DialogTitle>Filters</DialogTitle>\n                    <DialogContent>\n                        <MobileSortPanel\n                            handleSortDateChange={handleSortDateChange}\n                            sortStartDate={sortStartDate}\n                            handleEndSortDateChange={handleEndSortDateChange}\n                            sortEndDate={sortEndDate}\n                            handleSortCollegeChange={handleSortCollegeChange}\n                            feeChecked={feeSortChecked}\n                            modeChecked={modeSortChecked}\n                            setFeeChecked={setFeeSortChecked}\n                            setModeChecked={setModeSortChecked}\n                            handleSortApplyButton={handleSortApplyButton}\n                            handlesortDiscardButton={handlesortDiscardButton}>\n                        </MobileSortPanel>\n                    </DialogContent>\n\n                </Dialog>\n\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default withRouter(EventsTabPanel);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport EventShareDialog from '../Components/EventShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n  }\n}));\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const [image, setImage] = React.useState(null);\n  // const token = localStorage.getItem('token');\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  function handleViewButtonClick() {\n    props.handleViewClick(props.event);\n  }\n\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n      <CardMedia\n        component=\"img\"\n        height=\"180\"\n        image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleShareClick}>\n          Share\n        </Button>\n        <Button onClick={handleViewButtonClick} size=\"small\" color=\"primary\">\n          {t === 'light' ? <Link target=\"_blank\" to={{ pathname: `/event/${event._id}`, state: { event: props.event } }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link> :\n            <Link target='_blank' to={{ pathname: `/event/${event._id}`, state: { event: props.event } }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link>}\n        </Button>\n      </CardActions>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n    </Card>\n  );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\n\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const [open, setOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const allEvents = React.useContext(EventsContext);\n    \n    const postedEvents = allEvents.filter((val)=>{\n        return val.user_id === user.user_id;\n    });\n\n    const [selectedEvent,setSellectedEvent] = React.useState(\"\");\n    function handleViewClick(event){\n        setSellectedEvent(event);\n        // setOpen(true);\n    } \n\n    function handleClose(){\n        setOpen(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {postedEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={4} key={index}>\n                    <ProfileEventCard event={event} handleViewClick={handleViewClick} name={event.name} image={url}></ProfileEventCard>\n                    </Grid>) \n                })}\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    handleClose={handleClose}\n                    name={selectedEvent.name}\n                    startTime={selectedEvent.start_time}\n                    endTime={selectedEvent.finish_time}\n                    regEndTime={selectedEvent.registrationEndTime}\n                    type={selectedEvent.eventType}\n                    tags={selectedEvent.tags}\n                    mode={selectedEvent.eventMode}\n                    feeType={selectedEvent.feesType}\n                    url={user.imageUrl}>\n                    {/* imageDialog={handleImageDialogOpen} */}\n                </EventsDialog>\n                    \n                </Grid>\n                \n                {/* <ProfileEventCard></ProfileEventCard> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WcIcon from '@material-ui/icons/Wc';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        paddingLeft: theme.spacing(4),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1.5),\n        padding: theme.spacing(1)\n    }\n\n}));\n\nfunction ProfileDataBox(props) {\n    const classes = useStyles();\n    const [icon,setIcon] = React.useState(<EmailIcon></EmailIcon>)\n    React.useEffect(()=>{\n        switch(props.name){\n            case 'Username':\n                setIcon(<PersonPinCircleIcon></PersonPinCircleIcon>)\n                break;\n            case 'Name':\n                setIcon(<PersonIcon></PersonIcon>)\n                break;\n            case 'College':\n                setIcon(<SchoolIcon></SchoolIcon>)\n                break;\n            case 'Gender':\n                setIcon(<WcIcon></WcIcon>)\n                break;\n            case 'Bio':\n                setIcon(<InfoIcon></InfoIcon>)\n                break;\n            case 'Designation':\n                setIcon(<WorkIcon></WorkIcon>)\n                break;\n            case 'Email':\n                setIcon(<EmailIcon></EmailIcon>)\n                break;\n            default:\n                setIcon(<InfoIcon></InfoIcon>)\n        }\n    },[props.name])\n\n    return (\n        <Box className={classes.root3}>\n            <Box className={classes.avatar}>\n                <Avatar>\n                    {icon}\n                </Avatar>\n            </Box>\n            <Box className={classes.content}>\n                <Box><Typography>{props.name}</Typography></Box>\n                <Box><Typography variant=\"body2\" color=\"textSecondary\">{props.value}</Typography></Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ProfileDataBox;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthContext from '../AuthContext';\nimport Box from '@material-ui/core/Box';\nimport ProfileAboutDataBox from './ProfileAboutDataBox';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    editIcon: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n}));\n\nfunction ProfilePostsTabPanel(props) {\n    const classes = useStyles()\n    const { children, value, url, index, ...other } = props;\n    const user = React.useContext(AuthContext);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Box>\n                        <Box className={classes.editIcon}>\n                            <IconButton onClick={props.handleEditButton}><EditIcon></EditIcon></IconButton>\n                        </Box>\n                        <ProfileAboutDataBox name=\"Name\" value={user.name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Email\" value={user.email}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Username\" value={user.username}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"College\" value={user.college_name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Designation\" value={user.designation}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Gender\" value={user.gender}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Bio\" value={user.bio}></ProfileAboutDataBox>\n                    </Box>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import ProfileEventsTabPanel from './ProfileRegEventsTabPanel';\nimport ProfilePostedEventsTabPanel from './ProfilePostedEventsTabPanel';\nimport AboutProfileTabPanel from './ProfileAboutTabPanel';\nimport AuthContext from '../AuthContext';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        borderRadius: theme.spacing(3)\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    }\n}));\n\n\n\n\nfunction Eventcard(props) {\n    localStorage.setItem('tabIndex', 3)\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <Grid container component=\"main\">\n                <CssBaseline />\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.large}\n                                sizes=\"100\" alt=\"\"\n                                src={process.env.REACT_APP_API_URL + `/api/image?id=${user.profile_pic}`}>\n                                <PersonIcon></PersonIcon>\n                            </Avatar>\n                        }\n                        action={\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={props.handleEditButton}>\n                                Edit Profile\n                            </Button>\n                        }\n                        title={\n                            <Typography variant=\"h4\">{user.name}</Typography>\n                        }\n                        subheader={user.bio}\n                    ></CardHeader>\n                </Grid>\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n            </Grid>\n\n            <CardContent>\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"About\" />\n                        {/* <Tab label=\"Registered Events\" /> */}\n                        <Tab label=\"Posted Events\" />\n                    </Tabs>\n                </Paper>\n                <div>\n                    <AboutProfileTabPanel handleEditButton={props.handleEditButton} value={value} index={0}></AboutProfileTabPanel>\n                    {/* <ProfileEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfileEventsTabPanel> */}\n                    <ProfilePostedEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfilePostedEventsTabPanel>\n                </div>\n            </CardContent>\n        </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { Grid, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from '../AuthContext';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n   \n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n}));\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateInfoTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const user = React.useContext(AuthContext);\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const [colleges, setColleges] = React.useState([]);\n    const [image, setImage] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [userName, setUserName] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [designation, setDesignation] = React.useState(null);\n    const [collegeName, setCollegeName] = React.useState(null);\n    const [collegeId,setCollegeId] = React.useState(null);\n    const [collegesName,setCollegesName] = React.useState([]);\n    const [imageUrl,setImageurl] = React.useState(null);\n    const [imageUpdated,setImageUpdated] = React.useState(false);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n\n    React.useEffect(() => {\n        setEmail(user.email);\n        setName(user.name);\n        setUserName(user.username);\n        setDesignation(user.designation);\n        setCollegeName(user.college_name);\n        setCollegeId(user.college_id);\n        setBio(user.bio);\n        setGender(user.gender);\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setColleges(value);\n                value.forEach((v)=>{\n                    setCollegesName((collegesNames)=>[...collegesNames,v.name])\n                  })\n                // setCollegeNames()\n            })\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // console.log(user.college_name);\n\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            // history.replace(\"/home\")\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n          setImage(event.target.files[0]);\n        //   setImageAsFile(imageFile => (image))\n          const url = URL.createObjectURL(event.target.files[0]);\n        //   const fileType = event.target.files[0].type;\n          setImageurl(url)\n          setImageUpdated(true);\n        //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    function handleName(event,value){\n        setName(event.target.value);\n    }\n    function handleEmail(event,value){\n        setEmail(value);\n    }\n    function handleGender(event,value){\n        console.log(event.target.value);\n        setGender(event.target.value);\n    }\n    function handleDesig(event,value){\n        setDesignation(event.target.value);\n    }\n    function handleCollege(event,value){\n        setCollegeName(value);\n        colleges.forEach(c=>{\n            if(c.name === value){\n            //   props.collegeId(c._id)\n            setCollegeId(c._id);\n            }\n          })\n        \n    }\n    function handleUserName(event,value){\n        setUserName(event.target.value);\n    }\n    function handleBio(event,value){\n        setBio(value);\n    }\n\n    function handleUpdateButton(event){\n        event.preventDefault();\n        setLoading(true);\n        // console.log(name);\n        // console.log(userName)\n\n        try {\n            var data = new FormData()\n            const payload = {\n                name: name,\n                email: email,\n                username: userName,\n                // college_name: collegeName,\n                college_id: collegeId,\n                designation : designation,\n                gender: gender,\n                // college_id: collegeId.value,\n                bio: bio,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/updateprofile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (imageUpdated) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n                    <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={12} alignContent=\"center\" alignItems=\"center\">\n                            <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                                <Badge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    badgeContent={<label htmlFor=\"contained-button-file\">\n                                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                            <EditIcon></EditIcon>\n                                        </IconButton>\n                                    </label>}>\n                                    <Avatar className={classes.large} sizes=\"100\" alt=\"\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL+`/api/image?id=${user.profile_pic}`}></Avatar>\n                                </Badge>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                autoComplete=\"fullName\"\n                                name=\"fullName\"\n                                value={name || \"\"}\n                                onChange={handleName}\n                                id=\"fullName\"\n                                label=\"Full Name\"\n                                autoFocus\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                            disabled\n                                id=\"email\"\n                                value={email}\n                                onChange={handleEmail}\n                                fullWidth\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                // variant=\"outlined\"\n                                fullWidth\n                                required\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                value={userName}\n                                onChange={handleUserName}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Autocomplete\n                                fullWidth\n                                id=\"college\"\n                                options={collegesName}\n                                getOptionLabel={(option) => option}\n                                // onChange={handleChange}\n                                value={collegeName}\n                                onChange={handleCollege}\n                                renderInput={(params) => <TextField name=\"college\" fullWidth required {...params} label=\"College\" />}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                                value={bio}\n                                onChange={handleBio}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    value={gender}\n                                    onChange={handleGender}\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    value={designation}\n                                    onChange={handleDesig}\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"WorkingProfessional\">Working Professional</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        className={classes.button}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpdateButton}\n                        disabled={loading}\n                    // className={classes.submit}\n                    >{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Profile\"}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UpdateInfoTabPanel;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthContext from '../AuthContext';\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const user = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error'\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [cPassword,setCPassword] = React.useState(null);\n    const [nPassword,setNPassword] = React.useState(null);\n\n\n    const handleClose = async (event, reason) => {\n        setCPassword(null);\n        setNPassword(null);\n\n        setState({ ...state, open: false });\n    };\n\n    function handleCurrentPasswordChange(event){\n        setCPassword(event.target.value);\n    }\n    function handleNewPasswordChange(event){\n        setNPassword(event.target.value);\n    }\n\n    function handleUpdatePassword(event) {\n        setLoading(true);\n        event.preventDefault();\n        // const { cPassword, nPassword } = event.target.elements;\n        // console.log(cPassword);\n        // console.log(nPassword);\n        try{\n            var data = new FormData()\n        const payload = {\n          email: user.email,\n          cPassword: cPassword,\n          nPassword: nPassword\n        };\n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL+'/api/users/updatepassword', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then(response =>{\n            if (response.status === 200){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: result.message,\n                        type: \"success\"\n                      })\n                })\n            }\n            else if (response.status === 401){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message:result.error,\n                        type: \"error\"\n                      })\n                })\n                \n            }\n           \n        })\n\n\n\n            \n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: error.message,\n              type: \"error\"\n            })\n          }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={2000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    ><Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    \n                    <div className={classes.paper}>\n                        <form className={classes.form} onSubmit={handleUpdatePassword}>\n                            <Grid container spacing={2} justify=\"center\" >\n                            \n\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"cPassword\"\n                                        label=\"Current Password\"\n                                        type=\"password\"\n                                        id=\"cPassword\"\n                                        value={cPassword}\n                                        onChange={handleCurrentPasswordChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"nPassword\"\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        id=\"nPassword\"\n                                        value={nPassword}\n                                        onChange={handleNewPasswordChange}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                            // className={classes.submit}\n                            >\n                                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Password\"}\n                            </Button>\n                        </form>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport UpdateInfoTabPanel from './UpdateInfoTabPanel';\nimport UpdatePasswordTabPanel from './UpdatePasswordTabPanel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    \n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n        flexGrow: 1,\n        // width: '100%',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n}));\n\nfunction UpdateProfile(props) {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function handleClose() {\n        props.handleClose();\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            style={{ minHeight: \"400px\" }}\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle id=\"scroll-dialog-title\">\n                <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <AppBar style={{ alignItems: 'center' }} position=\"static\" color=\"secondary\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\">\n                            <Tab label=\"Update info\" {...a11yProps(0)} />\n                            <Tab label=\"Change Password\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                <UpdateInfoTabPanel value={value} index={0}></UpdateInfoTabPanel>\n                <UpdatePasswordTabPanel value={value} index={1}></UpdatePasswordTabPanel>\n            </DialogContent>\n            <DialogActions alignItems=\"center\">\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default UpdateProfile;","import React from 'react';\nimport ProfileCard from '../Components/MainProfileCard';\nimport { Grid } from '@material-ui/core';\nimport UpdateProfileDialog from '../Components/UpdateProfileDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventsDialog from '../Components/EventsDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\n\nfunction EventsTabPanel(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [eOpen, setEOpen] = React.useState(false);\n    const activeEvents = React.useContext(ActiveEvents);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    function handleEditButton() {\n        setOpen(true);\n    }\n    function handleClose() {\n        setOpen(false);\n        setEOpen(false)\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setEOpen(true);\n\n    }\n    return (\n        <div>\n            <div>\n                <Grid container component=\"main\" >\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8}>\n                        <ProfileCard handleEditButton={handleEditButton}></ProfileCard>\n                        <UpdateProfileDialog open={open} handleClose={handleClose}></UpdateProfileDialog>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>\n                                        })\n                                    }\n                                </List>\n\n\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={eOpen}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EventsTabPanel;","import React from 'react';\n\n\n//MaterialUI imports\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const classes = useStyles();\n  const [startDateError,setStartDateError] = React.useState(false);\n  const [endDateError,setEndDateError] = React.useState(false);\n  const [regEndDateError,setRegEndDateError] = React.useState(false);\n  const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n\n  function handleEventNameChange(event) {\n    props.setName(event.target.value)\n  }\n\n  function handleDescChange(event) {\n    props.setDesc(event.target.value);\n  }\n\n  const handleStartDateChange = (date) => {\n    setStartDateError(false);\n    props.setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setEndDateError(false);\n    props.setEndDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDateError(false);\n    props.setRegEndDate(date);\n  };\n\n  function handleEventModeChange(event) {\n    props.setEventMode(event.target.value);\n  }\n  function handleeventTypsChange(event, value) {\n    props.setEventType(value);\n  }\n\n\n  function handleNext(event) {\n    event.preventDefault();\n    if(props.startDate === null){\n      setStartDateError(true)\n    }\n    else if(props.endDate === null){\n      setEndDateError(true);\n    }\n    else if(props.regEndDate === null){\n      setRegEndDateError(true)\n    }\n    else{\n      props.handleNext();\n    }\n    \n  }\n  function handleFeeTypeChange(event, value) {\n    props.setFeeType(value)\n  }\n  function handleRegistrationModeChange(event) {\n    if (event.target.value === \"form\") {\n      props.setSteps((steps) => [...steps, \"Registration Form\"])\n    }\n    else if (event.target.value === \"link\") {\n      props.setSteps(['About', 'More Details']);\n    }\n    props.setRegistrationMode(event.target.value);\n  }\n\n\n  return (\n    <form className={classes.form} onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventName\"\n            name=\"eventName\"\n            label=\"Name\"\n            fullWidth\n            value={props.name || \"\"}\n            onChange={handleEventNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"shortdesc\"\n            name=\"shortdesc\"\n            label=\"Short Description\"\n            fullWidth\n            value={props.desc || \"\"}\n            onChange={handleDescChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n            <DateTimePicker\n            inputProps={{required: true}}            \n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"startDate\"\n              label=\"Start Date\"\n              name=\"startDate\"\n              value={props.startDate}\n              onChange={handleStartDateChange}\n              error={startDateError}\n              helperText={startDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"endDate\"\n              label=\"End Date\"\n              name=\"endDate\"\n              value={props.endDate}\n              onChange={handleendDateChange}\n              error={endDateError}\n              helperText={endDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={12}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"regEndDate\"\n              label=\"Registration End Date\"\n              name=\"regEndDate\"\n              value={props.regEndDate}\n              onChange={handleRegEndDateChange}\n              error={regEndDateError}\n              helperText={regEndDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Mode</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Mode\"\n              inputProps={{\n                name: 'eventMode',\n                id: 'eventMode',\n              }}\n              value={props.eventMode || \"\"}\n              onChange={handleEventModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            fullWidth\n            id=\"combo-box-demo\"\n            options={eventTypes}\n            getOptionLabel={(option) => option}\n            onChange={handleeventTypsChange}\n            value={props.eventType}\n            renderInput={(params) => <TextField fullWidth required {...params} label=\"Type\" />}\n          />\n        </Grid>\n\n\n        <Grid item xs={12}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Registration\"\n              inputProps={{\n                name: 'registrationMode',\n                id: 'registaration mode',\n              }}\n              value={props.registrationMode || \"\"}\n              onChange={handleRegistrationModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"form\">Our Platform(Ellipse)</option>\n              <option value=\"link\">Other</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormLabel component=\"legend\">Entry Fee</FormLabel>\n          <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"Free\" onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n            <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n            <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      <div className={classes.buttons}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >Next\n        </Button>\n      </div>\n    </form>\n  );\n}","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [imageName, setImageName] = React.useState(\"\");\n  const eventThemes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n  // const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n  }, [token])\n\n\n  function handleeventTagsChange(event, values) {\n    props.setThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    props.setRequirements(values);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      props.setPoster(event.target.files[0]);\n      const fileName = event.target.files[0].name;\n      setImageName(fileName);\n    }\n  }\n  function handleAddressTypeChange(evemt, value) {\n    props.setAddressType(value);\n  }\n\n  function handleRegLinkChange(event) {\n    props.setRegLink(event.target.value);\n  }\n\n  function handleRegFees(event) {\n    props.setFees(event.target.value);\n  }\n\n  function handleCollegeChange(event, value) {\n    console.log(value);\n    props.setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        props.collegeId(c._id)\n      }\n    })\n  }\n  function handleVenueCollegeChange(event, value) {\n    props.setVenueCollege(value);\n  }\n\n  function handleAboutChange(event) {\n    props.setAbout(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    props.setParticipantsType(value)\n  }\n  function handleBuildingChange(event) {\n    props.setBuilding(event.target.value);\n  }\n  // function handlePlatformChange(event){\n  //   props.setPlatformDetails(event.target.value)\n  // }\n  function handleNext(event) {\n    event.preventDefault();\n    props.handleNext();\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} onSubmit={handleNext}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter everything about your event in detail\"\n              autoComplete='off'\n              required\n              id=\"about\"\n              name=\"about\"\n              label=\"About\"\n              fullWidth\n              onChange={handleAboutChange}\n              value={props.about || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Autocomplete\n              multiple\n              id=\"themes\"\n              options={eventThemes.map((option) => option)}\n              freeSolo\n              value={props.eventThemes || []}\n              onChange={handleeventTagsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Event Tags\" placeholder=\"Event Tags\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <input\n              id=\"contained-button-file\"\n              required\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleChange}\n              style={{ display: \"none\" }}>\n\n            </input>\n\n            <TextField\n              autoComplete='off'\n              required\n              id=\"eventposter\"\n              name=\"eventposter\"\n              label=\"Event Poster\"\n              component=\"span\"\n              value={imageName}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <label htmlFor=\"contained-button-file\">\n                      <IconButton component=\"span\" >\n                        <CameraAltIcon></CameraAltIcon>\n                      </IconButton>\n                    </label>\n\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </Grid>\n          {props.registrationMode !== \"form\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regLink\"\n              name=\"regLink\"\n              label=\"Registration Link\"\n              fullWidth\n              value={props.regLink || \"\"}\n              onChange={handleRegLinkChange}\n            />\n          </Grid>}\n\n          {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regFees\"\n              name=\"regFees\"\n              label=\"Registration Fees\"\n              fullWidth\n              value={props.regFees || \"\"}\n              onChange={handleRegFees}\n            />\n          </Grid>}\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={requirements.map((option) => option)}\n              freeSolo\n              value={props.requirements || []}\n              onChange={handleRequirementsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              fullWidth\n              id=\"combo-box-demo\"\n              options={collegesNames}\n              value={props.college || []}\n              getOptionLabel={(option) => option}\n              onChange={handleCollegeChange}\n              renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component=\"legend\">Participation</FormLabel>\n            <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"open\" onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n              <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${props.college}`} />\n            </RadioGroup>\n          </Grid>\n          {/* {props.eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={props.platformDetails || \"\"}\n            />\n          </Grid>} */}\n          {props.eventMode === \"Offline\" && <React.Fragment>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup aria-label=\"address\" aria-disabled name=\"address\" defaultValue=\"college\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"college\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Room No & Building\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                getOptionLabel={(option) => option}\n                value={props.venueCollege}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>\n\n          </React.Fragment>}\n          {props.registrationMode !== \"form\" && <Grid item xs={12}>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" name=\"terms\" />}\n              label=\"I accept the terms and conditions\"\n            />\n          </Grid>\n          }\n\n        </Grid>\n        <div className={classes.buttons}>\n          <Button onClick={props.handleBack} className={classes.button}>\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >{props.registrationMode !== \"form\" ? \"POST\" : \"NEXT\"}\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}","import React from 'react';\n\n//Materail impports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid } from '@material-ui/core';\nimport {useTheme } from '@material-ui/core/styles';\n\n\n\n\n\nexport default function FormDialog(props) {\n  const theme = useTheme();\n  const [name, setName] = React.useState(null);\n  const [type, setType] = React.useState(null);\n  const fieldOptions = [];\n  const [selectedOptions, setSelectedOptions] = React.useState(['option1', 'option2']);\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n  function handleTypeChange(event) {\n    setType(event.target.value);\n  }\n  function handleOptionsChange(event, values) {\n    setSelectedOptions(values);\n  }\n  function handleAddButton() {\n    if (type !== \"radiobuttons\" && type !== \"checkboxes\" && type !== \"dropdown\") {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': [] } }, name);\n    }\n    else {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': selectedOptions } }, name);\n    }\n    props.handleClose()\n\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n          boxShadow: 'none',\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Field</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Field Name\"\n                name=\"name\"\n                fullWidth\n                value={name}\n                required\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'outlined-age-native-simple',\n                  }}\n                  value={props.eventMode}\n                  onChange={handleTypeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"short_text\">Short Text</option>\n                  <option value=\"paragraph\">Long Description</option>\n                  <option value=\"dropdown\">Drop Down</option>\n                  <option value=\"date\">Date & Time</option>\n                  <option value=\"radiobuttons\">Radio Button</option>\n                  <option value=\"checkboxes\">Check Box</option>\n                  <option value=\"link\">Link</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {(type === \"radiobuttons\" || type === \"checkboxes\" || type === \"dropdown\") &&\n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"tags-filled\"\n                  options={fieldOptions.map((option) => option)}\n                  freeSolo\n                  value={selectedOptions || []}\n                  onChange={handleOptionsChange}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Options\" placeholder=\"Options\" helperText=\"you can choose multiple options for your checkboxes or radio buttons enter one option and press enter\" />\n                  )}\n                />\n              </Grid>\n            }\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(0),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    formControl: {\n        // marginTop: theme.spacing(3),\n    },\n    formgroup: {\n        marginTop: theme.spacing(1),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function AddressForm(props) {\n\n\n    const classes = useStyles();\n    // const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const fields = {\n        name: {\n            'title': 'Name',\n            'field': 'short_text',\n            'options': []\n        },\n        email: {\n            'title': 'Email',\n            'field': 'short_text',\n            'options': []\n        },\n        college: {\n            'title': 'College',\n            'field': 'short_text',\n            'options': []\n        },\n\n    }\n    const [selectedFields, setSelectedFields] = React.useState([]);\n    const [state, setState] = React.useState({\n        name: false,\n        email: false,\n        college: false,\n    });\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        const sName = event.target.name;\n        if (event.target.checked) {\n            setSelectedFields(selectedFields => [...selectedFields, fields[sName]]);\n        }\n        else if (!event.target.checked) {\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== sName));\n        }\n\n    };\n    const { name, email, college } = state;\n    // console.log(selectedFields);\n    function handleAddMoreButton() {\n        setOpen(true);\n    }\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n    const handleDelete = (chipToDelete) => () => {\n        setState({ ...state, [chipToDelete.name]: false })\n        setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    };\n\n    async function handlePostButton(e) {\n        e.preventDefault();\n        await props.setFields(selectedFields);\n        props.handlePost(selectedFields);\n    }\n\n    return (\n        <React.Fragment>\n\n            <form className={classes.form} onSubmit={handlePostButton}>\n                <Grid container spacing={3}>\n                    <AddFieldDialog\n                        open={open}\n                        handleClose={handleClose}\n                        handleAdd={handleFieldAddButton}></AddFieldDialog>\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Fields for your Registration Form</FormLabel>\n                            <FormGroup className={classes.formgroup}>\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={name} onChange={handleChange} name=\"name\" />}\n                                    label=\"Name\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={email} onChange={handleChange} name=\"email\" />}\n                                    label=\"Email\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={college} onChange={handleChange} name=\"college\" />}\n                                    label=\"College\"\n                                />\n                                {/* <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={phno} onChange={handleChange} name=\"phno\" />}\n                                    label=\"Phone No\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={github} onChange={handleChange} name=\"github\" />}\n                                    label=\"Github\"\n                                /> */}\n                            </FormGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={handleAddMoreButton}\n                        >\n                            Add More\n                        </Button>\n                    </Grid>\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {selectedFields.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n\n                                            label={data.title}\n                                            onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={<Checkbox color=\"primary\" name=\"terms\" />}\n                            label=\"I accept the terms and conditions\"\n                        />\n                    </Grid>\n                </Grid>\n                <div className={classes.buttons}>\n                    <Button onClick={props.handleBack} className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                    >Post\n                    </Button>\n                </div>\n            </form>\n        </React.Fragment>\n    );\n}","import React from 'react';\n\n//Material UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n//Components imports\nimport EventPostDetails1 from '../Components/EventPostDetails1';\nimport EventPostDetails2 from '../Components/EventPostDetails2';\nimport EventPostDetails3 from '../Components/EventPostDetails3';\nimport AuthContext from '../AuthContext';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//function for copy right\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3),\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  stepper: {\n    padding: theme.spacing(3, 8, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(12),\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\n\nexport default function Checkout({ history }) {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const user = React.useContext(AuthContext);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(['About', 'More Details']);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const [eventName, setEventName] = React.useState(null);\n  const [shortDesc, setShortDesc] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [registrationMode, setRegistrationMode] = React.useState(null);\n\n\n\n  const [regLink, setRegLink] = React.useState(null);\n  const [fees, setFees] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState(null);\n  const [image, setImage] = React.useState(null);\n  const [addressType, setAddressType] = React.useState(null);\n  const [collegeName, setCollegeName] = React.useState(user.college_name);\n  const [collegeId, setCollegeId] = React.useState(user.college_id)\n  const [building, setBuildingAdress] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(user.name + \",\" + user.college_name);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const [participantsType, setParticipantsType] = React.useState(\"open\");\n  const [fields, setFields] = React.useState([]);\n  const [platformDetails,setPlatformDetails] = React.useState(null);\n\n\n\n\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <EventPostDetails1\n            name={eventName}\n            desc={shortDesc}\n            startDate={startDate}\n            endDate={endDate}\n            regEndDate={regEndDate}\n            eventMode={eventMode}\n            eventType={eventType}\n            about={about}\n            feeType={feeType}\n            registrationMode={registrationMode}\n            setName={setEventName}\n            setDesc={setShortDesc}\n            setStartDate={setStartDate}\n            setEndDate={setendDate}\n            setRegEndDate={setRegEndDate}\n            setEventMode={setEventMode}\n            setEventType={setEventType}\n            setRegistrationMode={setRegistrationMode}\n            setAbout={setAbout}\n            handleNext={handleNext}\n            setFeeType={setFeeType}\n            steps={steps}\n            setSteps={setSteps} />);\n      case 1:\n        return (\n          <EventPostDetails2\n            handleBack={handleBack}\n            handleEventPost={handleEventPost}\n            eventMode={eventMode}\n            feeType={feeType}\n            eventThemes={eventThemes}\n            eventPoster={image}\n            regLink={regLink}\n            regFees={fees}\n            about={about}\n            requirements={selectedrequirements}\n            college={collegeName}\n            building={building}\n            organizer={organizer}\n            registrationMode={registrationMode}\n            venueCollege={venueCollege}\n            participantsType={participantsType}\n            platformDetails={platformDetails}\n            setPlatformDetails={setPlatformDetails}\n            setThemes={setEventThemes}\n            setPoster={setImage}\n            setRegLink={setRegLink}\n            setFees={setFees}\n            setRequirements={setSelectedRequirements}\n            setOrganizer={setOrganizer}\n            setAddressType={setAddressType}\n            setCollegeName={setCollegeName}\n            setCollegeId={setCollegeId}\n            setBuilding={setBuildingAdress}\n            setVenueCollege={setVenueCollege}\n            setAbout={setAbout}\n            setParticipantsType={setParticipantsType}\n            handleNext={registrationMode === \"form\" ? handleNext : handlePostwithoutregFileds} />\n        );\n      case 2:\n        return (\n          <EventPostDetails3\n            handleBack={handleBack}\n            fields={fields}\n            setFields={setRegFields} handlePost={handleEventPost}>\n          </EventPostDetails3>);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n\n  const handleEventPost = (allFields) => {\n    var oAllowed = false;\n    if (participantsType === \"open\") {\n      oAllowed = true\n    }\n    setLoading(true);\n    try {\n      var data = new FormData();\n      const payload = {\n        user_id: user.user_id,\n        name: eventName,\n        description: shortDesc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: fees,\n        about: about,\n        // organizer: organizer,\n        fee_type: feeType,\n        requirements: selectedrequirements,\n        college_name: collegeName,\n        college_id: collegeId,\n        venue_type: addressType,\n        venue: building,\n        reg_fields: allFields,\n        reg_mode: registrationMode,\n        o_allowed: oAllowed,\n        platform_details: platformDetails\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL+'/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data,\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            var data2 = new FormData();\n            data2.append(\"image\", image);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/uploadimage?id=${value.eventId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data2,\n            }).then(response => {\n              if (response.status === 200) {\n                response.json().then(val => {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"Event Added Successfully\",\n                    type: \"success\",\n                    autoHide: \"4000\"\n                  })\n                })\n              }\n            })\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n          })\n        }\n      })\n\n\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: '5000',\n      })\n    }\n  }\n\n  function setRegFields(f) {\n    setFields(f);\n  }\n\n  function handlePostwithoutregFileds() {\n    handleEventPost(null);\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function handleCloseButton() {\n    history.goBack();\n  }\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Event Added Successfully\") {\n      history.replace(\"/home\");\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      {<Backdrop open={loading} className={classes.backdrop}><CircularProgress></CircularProgress></Backdrop>}\n      <main className={classes.layout}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleCloseButton}>\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Post your Event\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you.\n                </Typography>\n              </React.Fragment>\n            ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                </React.Fragment>\n              )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport Logo from '../Components/Images/logo.svg';\nimport { Button } from '@material-ui/core';\n\n\nimport { Redirect } from 'react-router';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    \n    grow: {\n        flexGrow: 1,\n        alignItems: 'center',\n    },\n    sectionDesktop: {\n\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    tabs: {\n        display: 'none',\n        [theme.breakpoints.up('lg')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginLeft: theme.spacing(4),\n        },\n    },\n    mobiletab: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    tabPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    flex_section: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'row',\n        // minHeight: 0\n    },\n\n    flex_col_scroll: {\n        flexGrow: 1,\n        overflow: 'auto',\n        // minHeight: '100vh'\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n        fontFamily: 'Gugi',\n        marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n      },\n    '@global': {\n        '*::-webkit-scrollbar': {\n          width: '0.5em',\n          height: '0.5em'\n        },\n        '*::-webkit-scrollbar-track': {\n          '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '*::-webkit-scrollbar-thumb': {\n          backgroundColor: '#ad9d9d',\n          outline: '1px solid slategrey'\n        }\n      },\n      mobileTitle:{\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n        \n      },\n      titleButton: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'inline-block',\n        },\n        margin: theme.spacing(0),\n        padding: theme.spacing(0),\n        textTransform: 'none'\n      },\n}));\n\nexport default function MiniDrawer(props) {\n    const classes = useStyles();\n    // const theme = useTheme();\n    const t = localStorage.getItem('theme');\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n    // const [value, setValue] = React.useState(0);\n    // const [searchedEvent, setSearchedEvent] = React.useState([]);\n\n    const isMenuOpen = Boolean(anchorEl);\n    // const [open, setOpen] = React.useState(false);\n    const token = localStorage.getItem('token');\n\n    const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n    // const [currentUser, setCurrentUser] = React.useState({});\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    \n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // setCurrentUser(value[0]);\n                    props.setUser(value[0])\n                    if (value[0].college_name === null) {\n                        setUserDetailsDone(false);\n                    }\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n\n// eslint-disable-next-line\n    }, [token])\n\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        return <Redirect to=\"/userinfo\"></Redirect>\n    }\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        // setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n\n\n    function handleThemeChange(event) {\n        // console.log(event.target.checked);\n        setDarkThemeSelected(event.target.checked);\n        if (event.target.checked) {\n            localStorage.setItem('theme', 'dark');\n            window.location.reload(false);\n        }\n        else {\n            localStorage.setItem('theme', 'light');\n            window.location.reload(false);\n        }\n    }\n\n\n\n    function handleSignout(event) {\n\n        fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then((result) => {\n            result.json().then((data) => {\n                if (data.message === \"success\") {\n                    localStorage.removeItem('token');\n                    localStorage.removeItem('tabIndex');\n                    props.handleSignout()\n                }\n            })\n        })\n\n    }\n    function handleHomeClick() {\n        props.handleHomeClick()\n        // props.history.push(\"/home\")\n        // localStorage.setItem('tabIndex',2);\n      }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}>\n            <MenuItem> Dark Theme <Switch\n                checked={darkThemeSelected}\n                onChange={handleThemeChange}\n                color=\"primary\"\n                name=\"checkedB\"\n                inputProps={{ 'aria-label': 'dark mode checkbox' }}\n            /></MenuItem>\n            <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n        </Menu>\n    );\n\n\n\n\n    const handleClose = () => {\n        setNotificationsOpen(false);\n    };\n\n    \n\n    function handleNotificationClick() {\n        setNotificationsOpen(true);\n    }\n\n\n    const handleDrawerOpen = () => {\n        props.setDOpen(true);\n    };\n\n    function handleTitleButtonClick() {\n        localStorage.setItem('tabIndex', 0)\n        props.handleHomeClick()\n      }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                color=\"secondary\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: props.dOpen,\n                })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: props.dOpen,\n                        })}>\n                        <MenuIcon color=\"primary\" />\n                    </IconButton>\n                    <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n                    <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n                    <div className={classes.grow} />\n                    <Typography variant=\"h5\" noWrap>{props.event.name}</Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton onClick={handleHomeClick}><HomeIcon></HomeIcon></IconButton>\n                        <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                            <Badge badgeContent={0} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\">\n                            <SettingsIcon></SettingsIcon>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMenu}\n            <NotificationsDialog open={notificationsOpen} handleClose={handleClose}></NotificationsDialog>\n        </div>\n    );\n}\n\n\n\n\n\n","import React from 'react';\n\n\n//Materail imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function AnnouncementForm(props) {\n  const theme = useTheme()\n  const token = localStorage.getItem('token');\n  const [title, setTitle] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [visibility, setVisibility] = React.useState(\"All\");\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleDescChange(event) {\n    setDesc(event.target.value);\n  }\n\n\n  function handleVisibilityChange(event, value) {\n    console.log(value);\n    setVisibility(value);\n  }\n  function handleAddButton() {\n    console.log(visibility);\n    var visible_all = true;\n    if (visibility !== \"All\") {\n      visible_all = false;\n    }\n    try {\n      var data = new FormData();\n      const d = { event_id: props.id, title: title, description: desc, visible_all: visible_all }\n      data = JSON.stringify(d);\n      console.log(data);\n      fetch(process.env.REACT_APP_API_URL+`/api/event/add_announcement`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        console.log(response);\n        response.json().then(value => {\n          console.log(value);\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Added successfully',\n            type: \"success\",\n            autoHide: 2000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n    props.handleClose()\n\n  }\n  const handleClose = async (event, reason) => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Announcement</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                fullWidth\n                value={title}\n                required\n                onChange={handleTitleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                fullWidth\n                value={desc}\n                required\n                onChange={handleDescChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Announcement visibility</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={visibility} onChange={handleVisibilityChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"All\" control={<Radio color=\"default\" />} label=\"All\" />\n                <FormControlLabel value=\"Registered Users\" control={<Radio color=\"default\" />} label=\"Registered Users\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Add\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {  useTheme } from '@material-ui/core/styles';\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SendEmailForm(props) {\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const [content, setContent] = React.useState(null);\n\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleContentChange(event) {\n        setContent(event.target.value);\n    }\n\n    function handleAddButton() {\n        try {\n            var data = new FormData();\n            const d = { \n                event_id: props.id, \n                title: title, \n                content: content,\n                emails: props.emails}\n            data = JSON.stringify(d);\n            console.log(data);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/sendemail`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                response.json().then(value => {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Added successfully',\n                        type: \"success\",\n                        autoHide: 2000\n                    });\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n        props.handleClose()\n\n    }\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    // boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Content for your Email</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Enter everything about your event in detail\"\n                                autoComplete='off'\n                                required\n                                id=\"content\"\n                                name=\"content\"\n                                label=\"Content\"\n                                fullWidth\n                                onChange={handleContentChange}\n                                value={content || \"\"}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AddAnnouncementForm from './AddAnnouncementForm';\nimport SendEmailForm from './SendEmailForm';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [announcementDialog, setAnnouncementDialog] = React.useState(false);\n  const [sendEmailDialog, setSendEmailDialog] = React.useState(false);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            setRowValues(rowValues => [...rowValues, d.data])\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  function handleAddAnnouncement() {\n    setAnnouncementDialog(true);\n  }\n\n  function handleAnnoucementClose() {\n    setAnnouncementDialog(false);\n  }\n\n  function handleSendEmail() {\n    console.log(selected);\n    setSendEmailDialog(true);\n  }\n  function handleSendEmailClose() {\n    setSendEmailDialog(false);\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <SendEmailForm open={sendEmailDialog} emails={selected} handleClose={handleSendEmailClose}></SendEmailForm>\n      <AddAnnouncementForm open={announcementDialog} id={event._id} handleClose={handleAnnoucementClose}></AddAnnouncementForm>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button variant=\"outlined\" onClick={handleAddAnnouncement} className={classes.button}>Add Announcement</Button>\n          <Button variant=\"contained\" onClick={handleSendEmail} className={classes.button}>Send Emails to Selected</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3} >\n\n        <Paper className={classes.fixedHeightPaper}>\n          <Typography>Total Registrations</Typography>\n          <Typography component=\"p\" variant=\"h4\">\n            {rowValues.length}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n\n\n  );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\n// import AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { TextField } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0.5)\n    },\n    root5: {\n        marginLeft: theme.spacing(0.5),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textField: {\n        zIndex: '100',\n        position: 'fixed',\n        bottom: '0px'\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    // console.log(event)\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                console.log(value);\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div className={classes.textField}>\n                            {/* <TextField\n                                // disabled={props.loading}\n                                fullWidth\n                                placeholder=\"Type your message\"\n                                multiline\n                                // onChange={handleNewMessage}\n                                // value={newmessage || \"\"}\n                                rowsMax=\"3\"\n                            // onKeyUp={handleKeyPress}\n                            >\n\n                            </TextField> */}\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    // padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    // margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst EventEdit = (props) => {\n  var event = props.event;\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error'\n  });\n\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [regLink, setRegLink] = React.useState(null);\n  const [regFees, setRegFees] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  // const [image, setImage] = React.useState(null);\n  // const [imageName, setImageName] = React.useState(\"\");\n  // const [addressType,setAddressType] = React.useState(\"\");\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [regMode, setRegMode] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(null);\n  const [participantType, setParticipantsType] = React.useState(\"open\");\n  const [image, setImage] = React.useState(null);\n  const [imageUrl, setImageurl] = React.useState(null);\n  const [imageUpdated, setImageUpdated] = React.useState(false);\n  const [venue, setVenue] = React.useState(null);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const { vertical, horizontal, open, message, type } = state;\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n\n  const token = localStorage.getItem('token');\n\n\n  const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  // const colleges = [\"VIT University\", \"GITAM University\", \"SRM University\"];\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n  }, [token])\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setendDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDate(date)\n  };\n  React.useEffect(() => {\n    setEventThemes(event.tags);\n    setEventType(event.event_type);\n    setName(event.name);\n    setDesc(event.description);\n    setStartDate(event.start_time);\n    setendDate(event.finish_time);\n    setRegEndDate(event.registration_end_time);\n    setEventMode(event.event_mode);\n    setRegLink(event.reg_link);\n    setAbout(event.about);\n    setRegFees(event.fees);\n    setSelectedRequirements(event.requirements);\n    setFeeType(event.fee_type);\n    setCollegeName(event.college_name);\n    setRegMode(event.reg_mode);\n    setOrganizer(event.organizer);\n    setVenue(event.venue);\n    setVenueCollege(event.venue_college);\n    // setParticipantsType(event.o_allowed)\n    if (event.o_allowed === true) {\n      setParticipantsType(\"open\")\n    }\n    else {\n      setParticipantsType(\"onlycollege\")\n    }\n\n  }, [token, event])\n\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Saved changes successfully\") {\n      // history.replace()\n      // history.replace(\"/otpverification\")\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  };\n\n  async function handleEventPost(e) {\n    e.preventDefault();\n    setLoading(true);\n    var oAllowed = false;\n    if (participantType === \"open\") {\n      oAllowed = true\n    }\n    // console\n    try {\n      // console.log(\"started\");\n      // getBase64(image, (result) => {\n      var data = new FormData();\n      const payload = {\n        eventId: event._id,\n        name: name,\n        description: desc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        // poster: result,\n        reg_link: regLink,\n        fee: regFees,\n        about: about,\n        fee_type: feeType,\n        college: collegeName,\n        organizer: organizer,\n        requirements: selectedrequirements,\n        o_allowed: oAllowed,\n        reg_mode: regMode,\n        venue: venue,\n        venue_college: venueCollege\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/updateevent', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            // console.log(value);\n            event = value.event;\n            if (imageUpdated) {\n              var data2 = new FormData()\n              data2.append(\"image\", image);\n              fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${event._id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: data2\n              }).then(res => {\n                if (res.status === 200) {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"successful\",\n                    type: \"success\",\n                    autoHide: 300\n                  })\n                }\n              })\n            }\n            else {\n              setLoading(false);\n              setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"Saved changes successfully\",\n                type: \"success\"\n              })\n            }\n            // history.replace(\"/home\")\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: value,\n              type: \"error\"\n            })\n          })\n        }\n      })\n\n      // })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleeventTypsChange(event, value) {\n    setEventType(value);\n  }\n\n  function handleeventTagsChange(event, values) {\n    setEventThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    setSelectedRequirements(values);\n  }\n\n  // function handleChange(event) {\n  //   if (event.target.files[0]) {\n  //     setImage(event.target.files[0]);\n  //     const fileName = event.target.files[0].name;\n  //     setImageName(fileName);\n  //   }\n\n  // }\n\n  function handleAddressTypeChange(evemt, value) {\n    // setAddressType(value);\n  }\n  function handleName(event) {\n    setName(event.target.value)\n  }\n  function handleDesc(event) {\n    setDesc(event.target.value);\n  }\n  function handleFeeTypeChange(event, value) {\n    // props.setFeeType(value)\n    setFeeType(value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // props.setCollegeName(value);\n    setCollegeName(value);\n  }\n  function handleEventMode(event) {\n    setEventMode(event.target.value);\n  }\n\n  function handleRegLink(event) {\n    setRegLink(event.target.value);\n  }\n  function handleFees(event) {\n    setRegFees(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    setParticipantsType(value)\n  }\n  function handleVenue(event) {\n    setVenue(event.target.value);\n  }\n  function handleVenueCollegeChange(event, value) {\n    setVenueCollege(value);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n      //   setImageAsFile(imageFile => (image))\n      const url = URL.createObjectURL(event.target.files[0]);\n      //   const fileType = event.target.files[0].type;\n      setImageurl(url)\n      setImageUpdated(true);\n      //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n    }\n\n  }\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <form className={classes.form} novalidate onSubmit={handleEventPost}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} >\n              <input id=\"contained-button-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n              <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                badgeContent={<label htmlFor=\"contained-button-file\">\n                  <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <EditIcon></EditIcon>\n                  </IconButton>\n                </label>}>\n                <img height=\"160\" width=\"150\" alt=\"poster\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`} ></img>\n              </Badge>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventName\"\n                name=\"eventName\"\n                label=\"Event name\"\n                value={name || \"\"}\n                onChange={handleName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"shortdesc\"\n                name=\"shortdesc\"\n                label=\"Short Description\"\n                fullWidth\n                value={desc || \"\"}\n                onChange={handleDesc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"startDate\"\n                  label=\"Event Start Date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"endDate\"\n                  label=\"Event End Date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={handleendDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"regEndDate\"\n                  label=\"Registration End Date\"\n                  name=\"regEndDate\"\n                  value={regEndDate}\n                  onChange={handleRegEndDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Event Mode</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Event Mode\"\n                  value={eventMode || \"\"}\n                  onChange={handleEventMode}\n                  inputProps={{\n                    name: 'eventMode',\n                    id: 'outlined-age-native-simple',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Online\">Online</option>\n                  <option value=\"Offline\">Offline</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={eventTypes}\n                getOptionLabel={(option) => option}\n                value={eventType || \"\"}\n                onChange={handleeventTypsChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Event Type\" />}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"tags-filled\"\n                options={eventTypes.map((option) => option)}\n                // defaultValue={[eventTypes[1]]}\n                freeSolo\n                value={eventThemes || []}\n                onChange={handleeventTagsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Event Themes\" placeholder=\"Event Themes\" />\n                )}\n              />\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <input\n                id=\"contained-button-file\"\n                required\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n                style={{ display: \"none\" }}>\n\n              </input>\n\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventposter\"\n                name=\"eventposter\"\n                label=\"Event Poster\"\n                component=\"span\"\n                value={imageName}\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"start\">\n                      <label htmlFor=\"contained-button-file\">\n                        <IconButton component=\"span\" >\n                          <CameraAltIcon></CameraAltIcon>\n                        </IconButton>\n                      </label>\n\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            </Grid> */}\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Entry Fee</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={feeType || \"\"} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n                <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n              </RadioGroup>\n            </Grid>\n            {regMode !== \"form\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  id=\"regLink\"\n                  name=\"regLink\"\n                  label=\"Registration Link\"\n                  fullWidth\n                  value={regLink || \"\"}\n                  onChange={handleRegLink}\n                />\n              </Grid>}\n            {feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"regFees\"\n                name=\"regFees\"\n                value={regFees || \"\"}\n                label=\"Registration Fees\"\n                onChange={handleFees}\n                fullWidth\n              // helperText={\"Enter 0 if your event is free\"}\n              />\n            </Grid>}\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                disabled\n                id=\"combo-box-demo\"\n                options={colleges}\n                getOptionLabel={(option) => option}\n                value={collegeName || \"\"}\n                onChange={handleCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth >\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  disabled\n                  label=\"Registration\"\n                  inputProps={{\n                    name: 'registrationMode',\n                    id: 'outlined-age-native-simple',\n                  }}\n                  value={regMode || \"\"}\n                // onChange={handleRegistrationModeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"form\">Our Platform(Ellipse)</option>\n                  <option value=\"link\">Other</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                id=\"organizer\"\n                name=\"organizer\"\n                label=\"Organizer\"\n                fullWidth\n                value={organizer || \"\"}\n              />\n            </Grid> */}\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"tags-filled\"\n                options={requirements.map((option) => option)}\n                freeSolo\n                value={selectedrequirements}\n                onChange={handleRequirementsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Participation</FormLabel>\n              <RadioGroup name=\"participanttype\" value={participantType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n                <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${collegeName}`} />\n              </RadioGroup>\n            </Grid>\n            {eventMode === \"Offline\" && <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup disabled aria-label=\"address\" name=\"address\" defaultValue=\"College/University\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel disabled value=\"College/University\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>}\n            {eventMode === \"Offline\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  value={venue || \"\"}\n                  onChange={handleVenue}\n                  id=\"building\"\n                  name=\"building\"\n                  label=\"Room No & Building\"\n                  fullWidth\n                />\n              </Grid>\n            }\n            {eventMode === \"Offline\" && <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                value={venueCollege}\n                getOptionLabel={(option) => option}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter everything about your event in detail\"\n                autoComplete='off'\n                // required\n                value={about || \"\"}\n                id=\"about\"\n                name=\"about\"\n                label=\"About\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save Changes\"}\n          </Button>\n        </form>\n      </div>\n\n      {/* </Grid> */}\n      {/* <Box mt={2}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}\n\nexport default withRouter(EventEdit);\n\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\n\n\nimport EventDetailsNavigationBar from '../Components/EventDetailsNavigationBar';\nimport AnnouncementPanel from '../Components/EventsAnnouncementsPanel';\nimport AboutPanel from '../Components/AboutEventPanel';\nimport TimeLinePanel from '../Components/EventTimeLinePanel';\nimport DashboardPanel from '../Components/DashboardPanel';\nimport ChatPanel from '../Components/EventDetailsChatPanel';\nimport EventPost from './EventEdit';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  \n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3),\n    },\n  },\n\n}));\n\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const token = localStorage.getItem('token');\n  const id = props.match.params.eventId;\n\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [event, setEvent] = React.useState({});\n  const [adminAccess, setAdminAccess] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [selected, setSelected] = React.useState({\n    infoSelected: true,\n    dashBoardSelected: false,\n    timilineSelected: false,\n    announcementSelected: false,\n    settingsSelected: false,\n    editEventSelected: false,\n    chatSelected: false\n  })\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(val => {\n        setEvent(val.event);\n        \n      })\n    })\n    \n  }, [token,id])\n\n  console.log(adminAccess)\n  React.useEffect(()=>{\n    if( event.user_id !== undefined && currentUser.user_id !== undefined){\n      if (event.user_id === currentUser.user_id) {\n        // console.log(event);\n        // console.log(currentUser)\n        setAdminAccess(true);\n      }\n    }\n    \n  },[currentUser,event])\n\n\n\n  // const handleDrawerOpen = () => {\n  //   setDrawerOpen(true);\n  // };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  function handleHomeClick() {\n    props.history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n\n\n\n  function infoClicked() {\n    setSelected({\n      infoSelected: true,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n\n  function dashBoardClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: true,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n  function timelineClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: true,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n  function announcementsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: true,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n  function settingsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: true,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n  function editEventClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: true,\n      chatSelected: false\n    })\n  }\n  function chatClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: true\n    })\n  }\n  const {\n    infoSelected,\n    dashBoardSelected,\n    timilineSelected,\n    announcementSelected,\n    settingsSelected,\n    editEventSelected, chatSelected } = selected;\n\n    function handleSignout(){\n      props.history.replace('/');\n    }\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <EventDetailsNavigationBar event={event} handleSignout={handleSignout} handleHomeClick={handleHomeClick} setUser={setCurrentUser}  dOpen={drawerOpen} setDOpen={setDrawerOpen}></EventDetailsNavigationBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: drawerOpen,\n          [classes.drawerClose]: !drawerOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: drawerOpen,\n            [classes.drawerClose]: !drawerOpen,\n          }),\n        }}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon color=\"primary\"/> : <ChevronLeftIcon color=\"primary\"/>}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={infoClicked} selected={infoSelected}>\n            <ListItemIcon >\n              <InfoIcon color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n          <ListItem button onClick={timelineClicked} selected={timilineSelected}>\n            <ListItemIcon>\n              <TimelineIcon color=\"primary\"></TimelineIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Schedule\" />\n          </ListItem>\n          <ListItem button onClick={announcementsClicked} selected={announcementSelected}>\n            <ListItemIcon>\n              <AnnouncementIcon color=\"primary\"></AnnouncementIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Announcements\" />\n          </ListItem>\n          <ListItem button onClick={chatClicked} selected={chatSelected}>\n            <ListItemIcon>\n              <TelegramIcon color=\"primary\"></TelegramIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Chat\" />\n          </ListItem>\n        </List>\n        <Divider />\n        {\n          adminAccess && <List>\n            <ListItem button onClick={dashBoardClicked} selected={dashBoardSelected}>\n              <ListItemIcon >\n                <DashboardIcon color=\"primary\"/>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n            <ListItem button onClick={editEventClicked} selected={editEventSelected}>\n              <ListItemIcon>\n                <EditIcon color=\"primary\"></EditIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Edit Event\" />\n            </ListItem>\n            <ListItem button onClick={settingsClicked} selected={settingsSelected}>\n              <ListItemIcon>\n                <SettingsIcon color=\"primary\"></SettingsIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n          </List>\n        }\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* <Typography align='center' variant=\"h4\" style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>{event.name}</Typography> */}\n        {\n          infoSelected && event != null && <AboutPanel event={event}></AboutPanel>\n        }\n        {\n          editEventSelected && event != null && <EventPost event={event} ></EventPost>\n        }\n        {\n          timilineSelected && event != null && <TimeLinePanel event={event}></TimeLinePanel>\n        }\n        {\n          dashBoardSelected && event != null && <DashboardPanel event={event}></DashboardPanel>\n        }\n        {\n          chatSelected && event != null && <div className={classes.chat} ><ChatPanel user={currentUser} open={drawerOpen} event={event}></ChatPanel></div>\n        }\n        {\n          announcementSelected && event != null && <AnnouncementPanel event={event}></AnnouncementPanel>\n        }\n      </main>\n    </div>\n  );\n}\n\n\n\n\n\n","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n// import axios from 'axios';\n\n//MaterialUI imports\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// import { set } from 'date-fns';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const user = React.useContext(AuthContext);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n  const [formValues, setFormValues] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  // const [fields, setFields] = React.useState([]);\n  const [normalFields, setNormalFields] = React.useState([]);\n  const [dropDownFields, setDropDownFields] = React.useState([]);\n  const [checkboxFields, setCheckBoxFields] = React.useState([]);\n  const [radioFields, setRadioFields] = React.useState([]);\n  const [dateFields, setDateFields] = React.useState([]);\n  const [longDescFields, setLongDescFields] = React.useState([]);\n  // const [dateFields,setDateFields] = React.useState([]);\n  const [linkFields, setLinkFields] = React.useState([]);\n\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const id = props.match.params.eventId;\n  const [backDropOpen, setBackDropOpen] = React.useState(true);\n  const [event, setEvent] = React.useState(null);\n  const [checkedValues, setCheckedValues] = React.useState([]);\n  const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      console.log(response);\n      response.json().then(value => {\n        setEvent(value.event);\n        // setFields(value.event.regFields);\n        const allFields = value.event.reg_fields;\n        console.log(allFields);\n        if (allFields != null) {\n          allFields.forEach(f => {\n            if (f.title === \"Name\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.name }))\n            }\n            else if (f.title === \"Email\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.email }));\n            }\n            else if (f.title === \"College\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.college_name }));\n            }\n            else {\n              setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n            }\n            if (f.field === \"checkbox\") {\n\n            }\n\n          })\n          // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n          setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n          setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n          setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n          setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n          setDateFields(allFields.filter((f) => f.field === \"date\"));\n          // setLongDescFields(allFields.filter((f) => f.field === \"long_desc\"));\n          setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n          setLinkFields(allFields.filter(f => f.field === \"link\"));\n        \n        }\n        setBackDropOpen(false);\n      })\n    })\n  }, [token, id,user])\n\n  function handleClose() {\n    if (message === \"Registered successfully\") {\n      props.history.push('/home')\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  }\n\n  function handleChange(event) {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  }\n  const handleChange2 = (name) => (event, values) => {\n    setFormValues({ ...formValues, [name]: values });\n\n  }\n  const handleChange3 = (name) => (event) => {\n    if (event.target.checked) {\n      setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n      const array = [];\n      checkedValues.forEach((v, i) => {\n        if (v[name]) {\n          array.push(v[name])\n        }\n      });\n      array.push(event.target.name);\n      setFormValues({ ...formValues, [name]: array });\n    }\n  }\n\n  const handleDateChange = (name) => (date) => {\n    // console.log(name);\n    // console.log(date);\n    setFormValues({ ...formValues, [name]: date })\n  };\n\n  const handleLondDescChange = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value })\n  }\n\n  function handleradioChange(event, value) {\n    // console.log(event.target.name);\n    // console.log(value);\n    setFormValues({ ...formValues, [event.target.name]: value });\n    // props.setFeeType(value)\n  }\n\n  function handleEventRegistration(e) {\n    e.preventDefault();\n    // setLoading(true);\n    // console.log(checkedValues);\n    console.log(formValues);\n    const formkeys = Object.keys(formValues);\n    formkeys.forEach(v =>{\n      if(formValues[v] === null){\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please fill in all fields',\n          type: \"error\",\n          autoHide: 4000\n        });\n      }\n    })\n    try {\n      var data = new FormData();\n      const d = { data: formValues }\n      data = JSON.stringify(d);\n      fetch(process.env.REACT_APP_API_URL+`/api/event/register?id=${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        console.log(response);\n        response.json().then(value => {\n          console.log(value);\n          \n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Registered successfully',\n            type: \"success\",\n            autoHide: 200\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n\n  }\n\n  function handleBack() {\n    props.history.goBack();\n  }\n\n\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Backdrop className={classes.backdrop} open={backDropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleBack}>\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      {event != null &&\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Registration for \" + event.name}\n          </Typography>\n          <form className={classes.form} onSubmit={handleEventRegistration}>\n\n            <Grid container spacing={2}>\n              {normalFields.map((field, index) => {\n                if (field.title === \"College\") {\n                  return (\n                    <Grid item xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        id={field.title}\n                        options={colleges}\n                        getOptionLabel={(option) => option}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        disabled\n                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                      />\n                    </Grid>)\n                }\n                else if (field.title === \"Email\") {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        disabled\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n                else {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n\n              })}\n              {checkboxFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                      <FormLabel component=\"legend\">{field.title}</FormLabel>\n                      <FormGroup class={classes.formgroup}>\n                        {field.options.map((option) => {\n                          return <FormControlLabel\n                            control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                            label={option}\n                          />\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                    {/* <Autocomplete\n                      id={field.name}\n                      multiple\n                      // value={}\n                      onChange={handleChange2(field.name)}\n                      options={field.options.map((option) => option)}\n                      getOptionLabel={(option) => option}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.name} placeholder={field.name} />\n                      )}\n                    /> */}\n                  </Grid>\n                )\n              })}\n              {dropDownFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id={field.title}\n                      options={field.options.map((option) => option)}\n                      // freeSolo\n                      // onChange={handleeventTagsChange}\n                      onChange={handleChange2(field.title)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.title} placeholder={field.name} />\n                      )}\n                    />\n                  </Grid>\n                )\n              })}\n              {radioFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormLabel required component=\"legend\">{field.title}</FormLabel>\n                    <RadioGroup required aria-label=\"address\" name={field.title} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                    {field.options.map((option)=>{\n                      return <FormControlLabel value={option} control={<Radio color=\"default\" />} label={option} />\n                    })}\n                      \n                      {/* <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" /> */}\n                    </RadioGroup>\n                  </Grid>\n                )\n              })}\n              {\n                dateFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                          // minDate={Date.now()}\n                          fullWidth\n                          required\n                          variant=\"inline\"\n                          format=\"dd MMM yyyy hh:mm a zzz\"\n                          margin=\"normal\"\n                          id=\"startDate\"\n                          label=\"Start Date\"\n                          name=\"startDate\"\n                          value={formValues[field.title]}\n                          onChange={handleDateChange(field.title)}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n\n                    </Grid>\n                  )\n                })\n              }\n              {\n                longDescFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        multiline={true}\n                        rows=\"5\"\n                        variant='outlined'\n                        placeholder={field.title}\n                        autoComplete='off'\n                        required\n                        id={field.title}\n                        name={field.title}\n                        label={field.title}\n                        fullWidth\n                        onChange={handleLondDescChange}\n                      // value={props.about}\n                      />\n                    </Grid>\n                  )\n                })\n              }\n              {\n                linkFields.map((field,index)=>{\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                })\n              }\n\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox color=\"primary\" name=\"terms\" />}\n                  label=\"I accept the terms and conditions\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n              {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Register\"}\n            </Button>\n          </form>\n        </div>\n      }\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 2)\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const allEvents = React.useContext(EventsContext);\n    const activeEvents = React.useContext(ActiveEvents);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const postedEvents = allEvents.filter((val) => {\n    //     return val.user_id === user.user_id;\n    // });\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n    }\n\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\">\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={8} lg={8} >\n                        {/* <div className={classes.root2}> */}\n                        <Paper className={classes.root2}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"on\">\n                                <Tab label=\"Registered Events\" />\n                                <Tab label=\"Past Events\" />\n                            </Tabs>\n                        </Paper>\n                        <div className={classes.content}>\n                            {value === 0 && <Grid container component=\"main\" alignItems=\"center\" spacing={0}>\n                                {regEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n\n                            </Grid>}\n                            {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={0}>\n                                {pastEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n                            </Grid>}\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AboutEventsPanel from '../Components/AboutEventPanel';\nimport { Dialog } from '@material-ui/core';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const id = props.match.params.eventId;\n    const [event, setEvent] = React.useState({});\n    const [open, setOpen] = React.useState(false);\n    if(token){\n        \n        props.history.replace(`/event/${id}`)\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+`/api/event?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setEvent(value.event);\n            })\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <Typography\n                    align='center'\n                    variant=\"h4\"\n                    style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>\n                    {event.name + \"(Login to Register and Know More Info)\"}\n                </Typography>\n                <AboutEventsPanel event={event}></AboutEventsPanel>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Register</Button>\n            </div>\n            <Dialog\n                open={open}\n                maxWidth=\"md\"\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Login to Register for the Event/Contest\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './Pages/signin';\nimport SignUp from './Pages/signup';\nimport ForgotPassword from './Pages/ForgotPassword';\nimport { AuthProvider } from \"./Auth\";\nimport OTPVer from './Pages/otpverification';\nimport UserInfo from './Pages/UserInfo';\nimport Layout from './Pages/Layout';\nimport CalenderPanel from './Pages/CalenderPanel';\nimport EventsTabPanel from './Pages/EventsTabpanel';\nimport ProfileTabPanel from './Pages/ProfileTabpanel';\nimport EventPostForm from './Pages/EventPostForm';\n// import ChatPage from './Pages/ChatPage';\nimport EventDetails from './Pages/EventDetails';\nimport EventRegisterForm from './Pages/EventRegistrationform';\nimport ExplorePanel from './Pages/ExplorePanel';\nimport UnregisteredPage from './Pages/UnregisteredPage';\nimport NetworkDetector from './NetworkDetector';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/signin\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route exact path=\"/userinfo\" component={UserInfo}></Route>\n            <Route exact path=\"/otpverification\" component={OTPVer}></Route>\n            <Route exact path=\"/un/event/:eventId\" component={UnregisteredPage}></Route>\n            {/* <Route exact path=\"/resetforgotpassword\" component ={ForgotPassword2}></Route> */}\n            <Route exact path=\"/event/:eventId\" component={EventDetails} />\n            <Layout>\n              <Route path=\"/home\" component={EventsTabPanel}></Route>\n              <Route exact path=\"/events\" component={CalenderPanel}></Route>\n              <Route exact path=\"/post\" component={EventPostForm}></Route>\n              <Route exact path=\"/profile\" component={ProfileTabPanel}></Route>\n              {/* <Route exact path=\"/chat\" component={ChatPage}></Route> */}\n\n              <Route exact path=\"/event/register/:eventId\" component={EventRegisterForm} />\n              <Route exact path=\"/yourevents\" component={ExplorePanel}></Route>\n            </Layout>\n          </Switch>\n\n\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\nexport default NetworkDetector(App);\n","import React, { Component } from 'react';\n\nexport default function (ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      if (condition === 'online') {\n        const webPing = setInterval(\n          () => {\n            fetch('//google.com', {\n              mode: 'no-cors',\n              })\n            .then(() => {\n              this.setState({ isDisconnected: false }, () => {\n                return clearInterval(webPing)\n              });\n            }).catch(() => this.setState({ isDisconnected: true }) )\n          }, 2000);\n        return;\n      }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div>\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n      type: \"dark\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#000000'\n      },\n      secondary: {\n        main: '#1C1C1E',\n      },\n      background:{\n        default: \"#000000\"\n      }\n    },\n    \n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n      type: \"light\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#ffffff'\n      },\n      secondary: {\n        main: '#e5e5e5'\n      },\n      background:{\n        default: \"#ffffff\"\n      }\n    },\n    \n    \n});\n\nexport {lightTheme,darkTheme};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {lightTheme,darkTheme} from './Components/theme'\nimport { CssBaseline } from '@material-ui/core';\nconst t = localStorage.getItem('theme');\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={t === 'light' ? lightTheme: darkTheme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}