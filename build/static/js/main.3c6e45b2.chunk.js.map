{"version":3,"sources":["Themes/SigninPageStyles.js","Components/Images/google-play-badge.png","Components/copyright.js","Components/Images/logo300.svg","Components/SupportDialog.js","Pages/signin.js","Themes/SignupPageStyles.js","Pages/signup.js","Pages/ForgotPassword.js","Auth.js","Pages/otpverification.js","Pages/UserInfo.js","Themes/MainHomeStyles.js","Components/EventShareDialog.js","Components/ImageDialog.js","Components/AboutEventPanel.js","Components/EventTimeLinePanel.js","Components/EventsAnnouncementsPanel.js","AuthContext.js","Components/ChatTextField.js","WebSocketContext.js","WebSocketDataContext.js","Components/MessageBox1.js","Components/MessageBox2.js","Components/MessageDeleteDialog.js","Components/EventsChatPanel.js","Components/SubmissionForm.js","Components/EventSubmissionPanel.js","Components/TeamMemberListItem.js","Components/TeamMemberRequestListItem.js","Components/EditTeamDialog.js","Components/EventsTeamSubPanel1.js","Components/EventsTeamSubPanel2.js","Components/EventsTeamSubPanel3.js","Components/MessageBox3.js","Components/MessageBox4.js","Components/EventsTeamChatPanel.js","Components/EventsTeamPanel.js","Components/EventsDialog.js","EventsContext.js","Components/NotficationsDialog.js","Components/Images/logo.svg","Pages/NavigationBar.js","ActiveEventsContext.js","Pages/Layout.js","Pages/CalenderPanel.js","Components/SortLeftPanel.js","Components/MobileSortPanel.js","Components/FeedBackDialog.js","Components/ProfileEventCard.js","Components/EventReportDialog.js","Components/EventCard.js","Components/EventsMainTabPanel.js","Pages/EventsTabpanel.js","Components/ProfilePostedEventsTabPanel.js","Components/ProfileAboutDataBox.js","Components/ProfileAboutTabPanel.js","Components/CertificateCard.js","Components/ProfileCertificateTabPanel.js","Components/MainProfileCard.js","Components/UpdateInfoTabPanel.js","Components/UpdatePasswordTabPanel.js","Components/MoreSettingsTabPanel.js","Components/UpdateProfileDialog.js","Pages/ProfileTabpanel.js","Components/EventPostDetails1.js","Components/EventPostTermsandConditions.js","Components/EventPostDetails2.js","Components/AddFieldDialog.js","Components/AddRoundsDialog.js","Components/EventPostDetails3.js","Pages/EventPostForm.js","Components/MainChatTextField.js","Components/MessageBox5.js","Components/MessageReplyDialog.js","Components/MainChatPanel.js","Pages/ChatContactsPanel.js","Pages/ChatPage.js","Components/EventDetailsNavigationBar.js","Components/AnnouncementsEditPanel.js","Components/AddAnnouncementForm.js","Components/SendEmailForm.js","Components/DashboardPanel.js","Components/EventDetailsChatPanel.js","Pages/EventEdit.js","Components/AdminCertificateDashboad1.js","Components/AdminCertificateDashboard2.js","Components/Images/certificate_sample.png","Components/AdminCertificateDashboard3.js","Components/AdminCertificateDashboard.js","Pages/EventDetails.js","Components/EventRegisterTermsandConditions.js","Pages/EventRegistrationform.js","Pages/ExplorePanel.js","Pages/UnregisteredPage.js","Pages/VerifyCertificate.js","Components/Images/un5.svg","Components/Images/un6.svg","Components/Images/un7.svg","Pages/NewHomePageCarousel.js","Components/HomePageEventCard.js","Pages/NewHomePage.js","App.js","NetworkDetector.js","Components/theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","height","wrapper","margin","spacing","position","paperRight","flexDirection","alignItems","backgroundColor","palette","secondary","main","padding","paddingBottom","borderRadius","minHeight","breakpoints","down","paperLeft","up","paperimage","avatar","marginTop","primary","form","width","submit","iPhoneImage","title","fontFamily","color","dark","fontWeight","hidden","image","maxHeight","maxWidth","footer","Copyright","Typography","variant","align","Link","href","Date","getFullYear","EventReportDialog","props","useTheme","React","useState","setTitle","desc","setDesc","Dialog","open","fullWidth","PaperProps","style","boxShadow","onClose","handleClose","aria-labelledby","DialogTitle","id","DialogContent","Grid","container","item","xs","TextField","label","name","value","onChange","event","target","DialogActions","Button","onClick","rel","Alert","elevation","withRouter","history","classes","vertical","horizontal","message","type","autoHide","state","setState","loading","setLoading","token","setToken","isUserVerified","setIsUserVerified","email","setEmail","abortController","AbortController","browser","detect","supportOpen","setSupportOpen","timeout","ms","promise","Promise","resolve","reject","timer","setTimeout","Error","then","clearTimeout","catch","reason","a","localStorage","setItem","eventId","getItem","abort","push","FormData","payload2","data2","JSON","stringify","fetch","process","signal","headers","method","body","result","json","res","error","preventDefault","elements","password","payload","browser_name","device_os","os","data","response","status","isVerified","useremail","to","Fragment","component","className","CssBaseline","Snackbar","anchorOrigin","autoHideDuration","key","severity","sm","md","Box","justifyContent","m","p","src","PhoneImage","alt","GoogleBadge","Avatar","onSubmit","required","autoComplete","autoFocus","disabled","CircularProgress","size","paper","closeButton","right","top","nameError","setNameError","usernameError","setUserNameError","passwordError","setPasswordError","signupButtonDisabled","setSignupButtonDisabled","useEffect","url","callback","isScriptExist","document","getElementById","script","createElement","onload","appendChild","loadScriptByURL","window","grecaptcha","ready","execute","action","recaptcha_token","success","score","replace","fullName","username","terms","checked","val","tok","Container","inputProps","pattern","onInvalid","helperText","onInput","FormControlLabel","control","Checkbox","justify","mt","otp","setOtp","setPassword","loading2","setLoading2","console","log","nPassword","e","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","Provider","seconds","setSeconds","resendEnabled","setresetEnabled","removeItem","textArea","imageUrl","setImageurl","setImage","colleges","setColleges","gender","designation","collegeId","bio","college_id","append","accept","files","URL","createObjectURL","Badge","overlap","badgeContent","htmlFor","IconButton","aria-label","sizes","multiline","rows","placeholder","FormControl","InputLabel","Select","native","map","coll","index","_id","outline","marginBottom","flexGrow","background","grow","mobileTitle","titleButton","mobileTitleButton","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","borderBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","tabs","mobiletab","tabPanel","flex_section","flex_col_scroll","overflow","rpaper","textAlign","text","light","postButton","EventShareDialog","share_link","copyToClipBoard","copyMe","navigator","clipboard","writeText","imageBox","dialog","icons","ImageDialog","scroll","aria-describedby","fontSize","poster_url","alignContent","media","buttonDiv","button","large","tab","adminDetails","root0","AboutEventPanel","other","tags","requirements","setRequirements","timeLabel","setTimeLabel","setAdminDetails","imageDialogOpen","setImageDialogOpen","notRegistered","setNotRegistered","undefined","user_id","calculateTimeLeft","difference","registration_end_time","timeLeft","start_time","finish_time","days","Math","floor","hours","minutes","setTimeLeft","x","getTimeLabel","cleanup","timerComponents","Object","keys","forEach","interval","role","lg","description","length","Chip","event_type","fee_type","event_mode","isTeamed","team_size","min_team_size","max_team_size","about","venue","venue_college","fee","platform_details","profile_pic","college_name","secondaryTail","startDate","endDate","regEndDate","Timeline","TimelineItem","TimelineOppositeContent","toDateString","toLocaleTimeString","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","rounds","sDate","start_date","eDate","end_date","timiline","root3","root5","CustomizedTimeline","announcements","setAnnouncements","registered","ann","visible_all","date","time","root2","whiteSpace","pos","bottomBar","bottom","left","close","JustifyContent","sendButtonDisabled","setSendButtonDisabled","newmessage","setNewMessage","cl","setCl","clsx","rowsMax","onKeyUp","keyCode","shiftKey","handleSend","sendIcon","WebSocketContext","webSocketContext","setWebSocketContext","WebSocketDataContext","eventChatMessages","setEventChatMessages","teamChatMessages","setTeamChatMessages","teamUpdateStatus","setTeamUpdateStatus","deletedEventChatMessages","setDeletedEventChatMessages","deletedTeamChatMessages","setDeletedTeamChatMessages","inline","root6","textDecorationColor","ChatMessage","userType","setUserType","useContext","adminId","paddingTop","Divider","currentDate","messageDate","userName","user_pic","user_name","timeStyle","handleMessageDeleteButton","componentDecorator","decoratedHref","decoratedText","AlertDialog","setOpen","handleDeleteConfirmation","topBar","root4","progress","message2","message3","reference","setReferenece","chatMessages","setChatMessages","counterDate","openDeleteDialog","setOpenDeleteDialog","messageToBeDeleted","setMessageToBeDeleted","send","event_id","msg","mes","cMes","filter","scrollIntoView","behavior","Fade","in","unmountOnExit","MessageBox1","MessageBox2","d","now","toISOString","float","clear","ref","el","userMessage","setUserMessage","access","setAccess","editAccess","setEditAccess","formValues","setFormValues","uploadFiles","setUploadFiles","normalFields","setNormalFields","dropDownFields","setDropDownFields","checkboxFields","setCheckBoxFields","radioFields","setRadioFields","dateFields","setDateFields","longDescFields","setLongDescFields","linkFields","setLinkFields","fileUploadFields","setFileUploadFields","backDropOpen","setBackDropOpen","checkedValues","setCheckedValues","currentRound","round","roundStartDate","submission","setSubmission","individual","team","submissions","is_submitted","getSubmission","submission_id","registration","sub","fetchAll","handleChange","allFields","fields","f","field","handleLondDescChange","handleradioChange","handleFileSelect","Backdrop","backdrop","uploadedFilesIds","formkeys","fileFormKeys","count","v","includes","finalValues","data1","file_name","reg_id","is_teamed","event_round","team_id","Autocomplete","options","getOptionLabel","option","renderInput","params","formControl","FormLabel","FormGroup","class","formgroup","array","i","values","renderTags","getTagProps","RadioGroup","defaultValue","Radio","utils","DateFnsUtils","DateTimePicker","format","KeyboardButtonProps","sub_id","grid","minWidth","setRegistration","teamDetails","setTeamDetails","getData","team_name","cDate","Accordion","AccordionSummary","expandIcon","aria-controls","heading","AccordionDetails","link","Eventcard","memberDetails","setMemberDetails","ListItem","ListItemAvatar","ListItemText","college","admin","ListItemSecondaryAction","users","members","edge","updated_user_id","setAdmin","editDialogOpen","setEditDialogOpen","List","dense","TeamMemberListItem","received_requests","TeamMemberRequestListItem","root1","avatar2","teams","setTeams","sentRequests","setSentRequests","showMembers","setShowMembers","teamIndex","setTeamIndex","sent_requests","handleViewMwmbersClick","searchedTeam","find","t","avatarLetterStyle","handleViewClick","message_type","MessageBox3","MessageBox4","teamedUp","setTeamedUp","subIndexValue","teamed_up","a11yProps","bottomTags","dialogContent","mobileHead","desktopHead","EventsDialog","setValue","shareDialogOpen","setShareDialogOpen","chatAcess","setChatAcess","teamAccess","setTeamAccess","setSubIndexValue","handleShareClick","reg_mode","openTeams","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","dividers","EventsTeamPanel","EventSubmissionPanel","handleReg","reg_link","textDecoration","EventsContext","allEvents","setAllEvents","FormDialog","notificationms","setNotifications","handleNotificationClick","n","handleClick","anchorEl","setAnchorEl","darkThemeSelected","setDarkThemeSelected","searchedEvent","setSearchedEvent","notificationsCount","setNotificationCount","isMenuOpen","Boolean","notificationsOpen","setNotificationsOpen","tabIndex","parseInt","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","Switch","location","reload","handleeventClick","handleHomeClick","handleProfileClick","handleChatClick","handleTitleButtonClick","AppBar","Toolbar","Logo","noWrap","freeSolo","square","icon","aria-haspopup","currentTarget","ActiveEventsContext","activeEvents","setActiveEvents","zIndex","drawer","authorized","setAuthorized","userDetailsDone","setUserDetailsDone","allEventsValue","activeEventsValue","webSocketValue","webSocketDataContextValue","webConnect","ws","WebSocket","onopen","onmessage","parse","onclose","check","readyState","verified","sort","b","subRpaper","fab","sideList","CalenderPanel","events","setEvents","selectedEvent","setSelectedEvent","registeredEvents","setRegisteredEvents","y","start","end","handlePostButtonClick","handleRegisterdEventClick","eventBackgroundColor","eventBorderColor","eventClick","info","defaultView","plugins","dayGridPlugin","buttonIcons","Fab","filterTextField","filterButton","SortLeftPanel","handleModeToggle","currentIndex","modeChecked","indexOf","newChecked","splice","setModeChecked","handleFeeToggle","feeChecked","setFeeChecked","DatePicker","sortStartDate","handleSortDateChange","InputProps","endAdornment","InputAdornment","sortEndDate","handleEndSortDateChange","labelId","ListItemIcon","disableRipple","sortCollgeType","handleSortCollegeChange","handleSortApplyButton","handlesortDiscardButton","MobileSortPanel","collegeName","ImgMediaCard","Card","CardMedia","CardContent","gutterBottom","CardActions","pathname","toUpperCase","morePopup","anchorRef","useRef","imageLoaded","setImageLoaded","reportDialogOpen","setReportDialogOpen","CardHeader","imageDialog","onLoad","subheader","disableSpacing","click","accordion","content","ExplorePanel","ActiveEvents","regEvents","pastEvents","handleEventClick","isFiltered","sortedEventsArray","EventCard","startTime","endTime","eventMode","eventType","regEndTime","registrationEndTime","feeType","feesType","handleImageDialogOpen","handleRegistrationButton","mode","leftSubPaper","mobileFilterButton","skeleton","feedBackButton","setSortStartDate","setSortEndDate","sortCollegeType","setSortCollegeType","setSortedEventsArray","setIsFiltered","feeSortChecked","setFeeSortChecked","modeSortChecked","setModeSortChecked","filterDialogOpen","setFilterDialogOpen","registerdEvents","feedBackOpen","setFeedBackOpen","dateRangeSortedEvents","sortByDateRange","sortByMode","typeSortedEvents","feeSortedEvents","sortByCost","collegeSortedEvents","sortByCollege","sortByDate","dateSortedEvents","date1","date2","sEvents","sortedEvents","sEvent","getTime","tEvents","sDEvents","sevent","getDate","getMonth","ProfilePostsTabPanel","postedEvents","setSellectedEvent","ProfileDataBox","setIcon","editIcon","handleEditButton","ProfileAboutDataBox","eventName","setEventName","certificate_status","download","certificate_url","iconlarge","ProfilePostedEventsTabPanel","UpdateInfoTabPanel","setName","setUserName","setBio","setGender","setDesignation","setCollegeName","setCollegeId","collegesName","setCollegesName","imageUpdated","setImageUpdated","updateButtonDisabled","setUpdateButtonDisabled","collegesNames","c","UpdatePasswordTabPanel","cPassword","setCPassword","setNPassword","UpdateProfile","MoreSettingsTabPanel","EventsTabPanel","eOpen","setEOpen","UpdateProfileDialog","buttons","AddressForm","startDateError","setStartDateError","endDateError","setEndDateError","regEndDateError","setRegEndDateError","eventTypes","setEventTypes","handleNext","minDate","setStartDate","setEndDate","setRegEndDate","setEventMode","setEventType","registrationMode","setSteps","steps","setRegistrationMode","setFeeType","DialogContentText","eventTags","setEventTags","tandcOpen","setTandcOpen","r","setAbout","multiple","eventThemes","setThemes","setPoster","fileName","setImageName","imageName","regLink","setRegLink","regFees","setFees","setParticipantsType","setIsTeam","isTeam","minTeamSize","setMinTeamSize","maxTeamSize","setMaxTeamSize","setPlatformDetails","platformDetails","aria-disabled","evemt","setAddressType","setBuilding","building","handleBack","setType","selectedOptions","setSelectedOptions","handleAdd","flexWrap","listStyle","chip","setAction","setLink","selectedFields","setSelectedFields","onDelete","chipToDelete","roundsCount","addingField","fName","roundsDialogOpen","setRoundsDialogOpen","sName","setFields","handlePost","setRounds","toLowercase","appBar","layout","stepper","Checkout","activeStep","setActiveStep","shortDesc","setShortDesc","setendDate","fees","setEventThemes","selectedrequirements","setSelectedRequirements","addressType","setBuildingAdress","organizer","setOrganizer","venueCollege","setVenueCollege","participantsType","handleEventPost","oAllowed","venue_type","reg_fields","o_allowed","setRegFields","handlePostwithoutregFileds","goBack","Stepper","Step","StepLabel","step","eventPoster","poster","getStepContent","divider","handleReplyButton","repliedMessage","reply","setReply","ev","handleReplyConfirmation","textField","header","user","openReplyDialog","setOpenReplyDialog","messageToBeReplied","setMessagesToBeReplied","chatType","handleInfoButton","mobile","openDialog","replied_to","MessageBox5","nested","ChatPage","setChecked","handleToggle","userid","setChatType","setChatId","setAdminId","innerWidth","handleToggle2","selected","selectedChat","setSelectedChat","mobileChat","setMobileChat","ChatContactsPanel","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","toolbar","mixins","MiniDrawer","setUser","handleSignout","dOpen","setDOpen","handleDeleteButton","AnnouncementForm","visibility","setVisibility","SendEmailForm","setContent","emails","table","buttonsPaper","fixedHeightPaper","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setHeaders","rowValues","setRowValues","setSelected","announcementDialog","setAnnouncementDialog","sendEmailDialog","setSendEmailDialog","fileColumns","setFileColumns","firstdata","TableContainer","filename","Table","stickyHeader","TableHead","TableRow","TableCell","newSelecteds","Email","indeterminate","column","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","substr","split","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","dialogOpen","setDialogOpen","webSocket","setWebSocket","setRegFees","regMode","setRegMode","participantType","setVenue","setIsTeamed","teamSize","setTeamSize","novalidate","getParticipantsList","participants","certificate","maxLength","CertificateSample","flexShrink","drawerOpen","drawerClose","overflowX","match","setDrawerOpen","setEvent","adminAccess","setAdminAccess","infoSelected","dashBoardSelected","timilineSelected","announcementSelected","settingsSelected","editEventSelected","chatSelected","certificateSelected","Drawer","direction","chat","canRegister","setCanRegister","appbar","UnregisteredPage","details","setDetails","userFound","setUserFound","setDate","participantname","participant_college","event_name","AutoPlaySwipeableViews","autoPlay","SwipeableViews","tutorialSteps","imgPath","DeviceDesign","DeviceDesign2","DeviceDesign3","img","carouselCaption","SwipeableTextMobileStepper","maxSteps","axis","onChangeIndex","enableMouseEvents","abs","handleSignin","MobileStepper","nextButton","prevActiveStep","backButton","current","contains","handleListKeyDown","prevOpen","focus","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","handleSigninClick","NewHomePageCarousel","HomePageEventCard","NetworkDetector","ComposedComponent","exact","path","NewHomePage","Login","SignUp","ForgotPassword","UserInfo","OTPVer","EventDetails","VerifyCertificate","EventPostForm","ProfileTabPanel","EventRegisterForm","isDisconnected","handleConnectionChange","onLine","webPing","setInterval","clearInterval","this","addEventListener","removeEventListener","Component","darkTheme","createMuiTheme","default","lightTheme","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.3c6e45b2.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  paperRight: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    paddingBottom: theme.spacing(4),\n    borderRadius: 30,\n    // height: '80vh',\n    minHeight: '80vh',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(0, 1),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  paperLeft: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(3, 1),\n    },\n    [theme.breakpoints.up('md')]: {\n      height: '80vh',\n    },\n\n  },\n  paperimage: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(),\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '90%',\n    margin: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(2),\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  iPhoneImage: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  title: {\n\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  hidden: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  image: {\n    maxHeight: \"600px\",\n    maxWidth: '600px',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  footer: {\n    backgroundColor: theme.palette.secondary.main,\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport default useStyles;","export default __webpack_public_path__ + \"static/media/google-play-badge.561e4a2c.png\";","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n          ellipseapp.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default Copyright;","export default __webpack_public_path__ + \"static/media/logo300.123db6fb.svg\";","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n\n\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n    // console.log(title);\n    // console.log(desc);\n\n    return (\n        <div>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Support</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Full Name\"\n                                name=\"name\"\n                                fullWidth\n                                value={title || \"\"}\n                                // required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                // required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Link href={`mailto:support@ellipseapp.com?subject=${title}&body=${desc}`} target=\"_blank\" rel=\"noopener noreferrer\" variant=\"body2\">\n                        SEND\n                    </Link>\n                    \n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../Themes/SigninPageStyles'\n// import AppleBadge from '../Components/Images/AppleBadge.png';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n// import iPhone from '../Components/Images/iPhone 11 Pro Max@2x.png';\nimport Copyright from \"../Components/copyright\";\nimport { withRouter, Redirect } from \"react-router\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PhoneImage from '../Components/Images/logo300.svg';\n// import HomePageCarousel from '../Components/HomePageCarousel';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\nimport { detect } from 'detect-browser';\nimport SupportDialog from '../Components/SupportDialog';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nconst Signin = ({ history }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [user,setUser] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  const [isUserVerified, setIsUserVerified] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const abortController = new AbortController();\n  const browser = detect();\n  const [supportOpen,setSupportOpen] = React.useState(false);\n\n  //timeout function\n  function timeout(ms, promise) {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        reject(new Error('TIMEOUT'))\n      }, ms)\n\n      promise\n        .then(value => {\n          clearTimeout(timer)\n          resolve(value)\n        })\n        .catch(reason => {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Something went wrong Try Again',\n            type: \"error\",\n            autoHide: 4000\n          });\n          clearTimeout(timer)\n          reject(reason)\n        })\n    })\n  }\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Signedin successfully\") {\n      localStorage.setItem('token', token);\n      if (isUserVerified) {\n        localStorage.setItem('token', token);\n        const eventId = localStorage.getItem('eventid');\n        if (eventId) {\n          abortController.abort()\n          history.push(`/event/${eventId}`)\n        }\n        else {\n          abortController.abort()\n          history.push('/home');\n        }\n\n      }\n      else {\n        try {\n          var data2 = new FormData();\n          const payload2 = {\n            email: email\n          };\n          data2 = JSON.stringify(payload2)\n          fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n            signal: abortController.signal,\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data2\n          }).then((result) => {\n            // console.log(result);\n            result.json().then((res) => {\n              if (res.message === \"success\") {\n                abortController.abort()\n                localStorage.setItem('token', token);\n                history.push('/otpverification')\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Signedin successfully',\n                  type: \"success\",\n                  autoHide: 300\n                });\n              }\n            })\n\n          })\n        } catch (error) {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: error.message,\n            type: \"error\",\n            autoHide: 3000\n          })\n        }\n\n      }\n\n    }\n    setState({ ...state, open: false });\n  };\n  async function handleSignin(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { email, password } = event.target.elements;\n    try {\n      var data = new FormData()\n      const payload = {\n        email: email.value,\n        password: password.value,\n        type: 'browser',\n        browser_name: browser.name,\n        device_os: browser.os,\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      timeout(25000, fetch(process.env.REACT_APP_API_URL + '/api/users/login', {\n        signal: abortController.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      })).then((response) => {\n        // console.log(response);\n        if (response.status === 200) {\n          // console.log\n          response.json().then((value) => {\n            setToken(value.token);\n            setIsUserVerified(value.isVerified);\n            setEmail(value.useremail);\n            // setUser(JSON.stringify(value.userDetails));\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Signedin successfully',\n              type: \"success\",\n              autoHide: 200\n            });\n          })\n        }\n        else {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: \"invalid credentials\",\n            type: \"error\", autoHide: 6000\n          })\n        }\n\n      })\n    } catch (error) {\n\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n    }\n  }\n\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  const handleSupportButton = ()=>{\n    setSupportOpen(true);\n  }\n  const handleSupportClose = () =>{\n    setSupportOpen(false);\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          autoHideDuration={autoHide}\n          onClose={handleClose}\n          key={vertical + horizontal}>\n          <Alert onClose={handleClose} severity={type}>{message}</Alert>\n        </Snackbar>\n        <Grid item xs={12} sm={12} md={7} elevation={6} >\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" m={1} p={1} className={classes.paperLeft}>\n            <img src={PhoneImage} alt=\"logo\" height=\"500px\" width=\"500px\" className={classes.image}></img>\n            <Typography className={classes.title} component=\"h1\" variant=\"h2\">\n              Ellipse\n          </Typography>\n            <Typography component=\"h1\" variant=\"h6\">\n              Kill time for what matters\n          </Typography><br></br>\n            <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n              <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n            </a>\n\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={5} elevation={6}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1} className={classes.paperRight}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n          </Typography>\n            <form className={classes.form} onSubmit={handleSignin}>\n              <TextField\n                name=\"email\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                name=\"password\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n              <div className={classes.wrapper}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  className={classes.submit}>\n                  {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign In\"}\n\n                </Button>\n              </div>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"/forgotpassword\" variant=\"body2\">\n                    Forgot password?\n                </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/signup\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs>\n                  {/* <Link href=\"/forgotpassword\" variant=\"body2\">\n                    Forgot password?\n                </Link> */}\n                </Grid>\n                <Grid item>\n                  <Link onClick={handleSupportButton} variant=\"body2\">\n                    {\"Get Support\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-end\">\n              <Copyright></Copyright>\n            </Box>\n          </Box>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <HomePageCarousel></HomePageCarousel>\n            </Box>\n          </Box>\n          <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Made with <FavoriteIcon fontSize=\"inherit\" color=\"primary\"></FavoriteIcon> for Students and Organizations</Typography><br></br>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                {\"support@ellipseapp.com\"}\n              </Link></Typography>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Copyright></Copyright>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                {\"Privacy Policy\"}\n              </Link>\n            </Box>\n          </Box>\n        </Grid> */}\n        <SupportDialog open={supportOpen} handleClose={handleSupportClose}></SupportDialog>\n      </Grid>\n\n    </React.Fragment>\n  );\n}\nexport default withRouter(Signin);","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // backgroundColor: theme.palette.secondary.main,\n      padding: theme.spacing(3),\n      borderRadius: 30,\n  \n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(7),\n      [theme.breakpoints.down('md')]: {\n        top: theme.spacing(12),\n      }\n    }\n  }));\n\n  export default useStyles;","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { detect } from 'detect-browser';\nimport SupportDialog from '../Components/SupportDialog';\n// import { ReCaptcha } from 'react-recaptcha-google';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = ({ history }) => {\n  const classes = useStyles();\n  const [token, setToken] = React.useState(\"\");\n  // const [currentUser, setCurrentUser] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUserNameError] = React.useState(false);\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [signupButtonDisabled, setSignupButtonDisabled] = React.useState(false);\n  const browser = detect();\n  const [supportOpen, setSupportOpen] = React.useState(false);\n\n\n  React.useEffect(() => {\n    const loadScriptByURL = (id, url, callback) => {\n      const isScriptExist = document.getElementById(id);\n\n      if (!isScriptExist) {\n        var script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = url;\n        script.id = id;\n        script.onload = function () {\n          if (callback) callback();\n        };\n        document.body.appendChild(script);\n      }\n\n      if (isScriptExist && callback) callback();\n    }\n\n    // load the script by passing the URL\n    loadScriptByURL(\"recaptcha-key\", `https://www.google.com/recaptcha/api.js?render=${process.env.REACT_APP_SITE_KEY}`, function () {\n      // console.log(\"Script loaded!\");\n      window.grecaptcha.ready(function () {\n        window.grecaptcha.execute('6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P', { action: 'submit' }).then(recaptcha_token => {\n          // Add your logic to submit to your backend server here.\n          // console.log(recaptcha_token);\n          fetch(process.env.REACT_APP_API_URL +'/api/verify_recaptcha', {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              // \"name\": name,\n              // \"email\": email,\n              \"recaptcha_token\": recaptcha_token\n            })\n          }).then(res => {\n            // console.log(res);\n            if(res.status === 200){\n              res.json().then(result => {\n                // console.log(result)\n                if (result.success) {\n                  if (result.score < 0.5) {\n                    setSignupButtonDisabled(true)\n                  }\n                }\n              })\n            }\n            \n          });\n        });\n      });\n    });\n  }, []);\n\n  // const [cDemo,setCDemo] = React.useState(null);\n  // // const inputEl = useRef(null);\n\n  // React.useEffect(()=>{\n  //   // if (cDemo) {\n  //     console.log(\"started, just a second...\")\n  //     // this.captchaDemo.reset();\n  //     // this.captchaDemo.execute();\n  // // }\n  // },[])\n\n  //timeout function\n  function timeout(ms, promise) {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        reject(new Error('TIMEOUT'))\n      }, ms)\n\n      promise\n        .then(value => {\n          clearTimeout(timer)\n          resolve(value)\n        })\n        .catch(reason => {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Something went wrong Try Again',\n            type: \"error\",\n            autoHide: 4000\n          });\n          clearTimeout(timer)\n          reject(reason)\n        })\n    })\n  }\n  const handleClose = async (event, reason) => {\n\n    if (message === \"Signedup successfully\") {\n      localStorage.setItem('token', token);\n      history.replace(\"/otpverification\")\n    }\n\n    setState({ ...state, open: false });\n  };\n  async function handleSignUp(event) {\n    // grecaptcha.ready(function() {\n    //   grecaptcha.execute('reCAPTCHA_site_key', {action: 'submit'}).then(function(token) {\n    //       // Add your logic to submit to your backend server here.\n    //       console.log(token);\n    //       // fetch()\n    //   });\n    // });\n    event.preventDefault();\n    setLoading(true);\n    const { fullName, email, password, username, terms } = event.target.elements;\n    try {\n      if (terms.checked) {\n        var data = new FormData()\n        const payload = {\n          name: fullName.value,\n          email: email.value,\n          password: password.value,\n          username: username.value,\n          type: 'browser',\n          browser_name: browser.name,\n          device_os: browser.os,\n        };\n        data = JSON.stringify(payload);\n        timeout(25000, fetch(process.env.REACT_APP_API_URL + '/api/users/signup', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        })).then((result) => {\n          // console.log(result);\n          if (result.status === 200) {\n            result.json().then((val) => {\n              setToken(val.token);\n              var data2 = new FormData();\n              const payload2 = {\n                email: val.useremail\n              };\n              data2 = JSON.stringify(payload2)\n              // console.log(token);\n              const tok = val.token;\n              fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                headers: {\n                  'Authorization': `Bearer ${tok}`,\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n              }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                  if (res.message === \"success\") {\n                    setState({\n                      open: true,\n                      vertical: 'top',\n                      horizontal: 'center',\n                      message: 'Signedup successfully',\n                      type: \"success\",\n                      autoHide: 300\n                    });\n                  }\n                })\n              })\n            })\n          }\n          else if (result.status === 401) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Email already registered',\n              type: \"error\",\n              autoHide: 3000\n            });\n          }\n          else {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Something went wrong Try Again',\n              type: \"error\",\n              autoHide: 4000\n            });\n          }\n        })\n      }\n\n      else {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please agree to the terms and conditions',\n          type: \"error\"\n        });\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleUsernameChange(event) {\n    const username = event.target.value;\n    var data = new FormData();\n    const payload = {\n      username: username\n    };\n    data = JSON.stringify(payload);\n    setUserNameError(false);\n    setSignupButtonDisabled(false)\n    fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((result) => {\n      result.json().then(value => {\n        if (value.message === \"user already exists\") {\n          setUserNameError(true);\n          setSignupButtonDisabled(true);\n        }\n      })\n    })\n  }\n\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  const handleSupportButton = () => {\n    setSupportOpen(true);\n  }\n  const handleSupportClose = () => {\n    setSupportOpen(false);\n  }\n\n  // const onLoadRecaptcha = () => {\n\n  // }\n\n  // const verifyCallback = () => {\n\n  // }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        {/* <ReCaptcha\n            // ref={(el) => {setCDemo(el)}}\n            size=\"invisible\"\n            render=\"explicit\"\n            sitekey=\"6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P\"\n            onloadCallback={onLoadRecaptcha}\n            verifyCallback={verifyCallback}\n        /> */}\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fullName\"\n                name=\"fullName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                inputProps={{ pattern: \"[a-zA-Z ]+\" }}\n                onInvalid={() => { setNameError(true) }}\n                helperText={nameError && \"Name should only contain alphabet and spaces\"}\n                onInput={() => { setNameError(false) }}\n                error={nameError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"User Name\"\n                onChange={handleUsernameChange}\n                name=\"username\"\n                error={usernameError}\n                helperText={usernameError && \"username already exists\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                inputProps={{ pattern: \"^.{6,}$\" }}\n                onInvalid={() => { setPasswordError(true) }}\n                helperText={passwordError && \"Password should atleast be 6 characters\"}\n                onInput={() => { setPasswordError(false) }}\n                error={passwordError}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" name=\"terms\" />}\n                label={<Typography>By signing up I accept the <Link href='/Privacy_Policy.pdf'>Pivacy Policy and Terms of Service</Link></Typography>}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || signupButtonDisabled}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign Up\"}\n          </Button>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n\n            <Grid item>\n              <Link onClick={handleSupportButton} variant=\"body2\">\n                {\"Get Support\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n      <SupportDialog open={supportOpen} handleClose={handleSupportClose}></SupportDialog>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n","import React from \"react\";\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst ForgotPassword = ({ history }) => {\n  const classes = useStyles();\n  // const token = localStorage.getItem('token');\n  const [email, setEmail] = React.useState(null);\n  const [otp, setOtp] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [loading2, setLoading2] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [sendOTPButtonDisabled, setSendOTPButtonDisabled] = React.useState(false);\n\n  // React.useEffect(() => {\n  //   const loadScriptByURL = (id, url, callback) => {\n  //     const isScriptExist = document.getElementById(id);\n\n  //     if (!isScriptExist) {\n  //       var script = document.createElement(\"script\");\n  //       script.type = \"text/javascript\";\n  //       script.src = url;\n  //       script.id = id;\n  //       script.onload = function () {\n  //         if (callback) callback();\n  //       };\n  //       document.body.appendChild(script);\n  //     }\n\n  //     if (isScriptExist && callback) callback();\n  //   }\n\n  //   // load the script by passing the URL\n  //   loadScriptByURL(\"recaptcha-key\", `https://www.google.com/recaptcha/api.js?render=${process.env.REACT_APP_SITE_KEY}`, function () {\n  //     console.log(\"Script loaded!\");\n  //     window.grecaptcha.ready(function () {\n  //       window.grecaptcha.execute('6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P', { action: 'submit' }).then(recaptcha_token => {\n  //         // Add your logic to submit to your backend server here.\n  //         // console.log(recaptcha_token);\n  //         fetch(process.env.REACT_APP_API_URL +'/api/verify_recaptcha', {\n  //           method: 'POST',\n  //           headers: {\n  //             \"Content-Type\": \"application/json\"\n  //           },\n  //           body: JSON.stringify({\n  //             // \"name\": name,\n  //             // \"email\": email,\n  //             \"recaptcha_token\": recaptcha_token\n  //           })\n  //         }).then(res => {\n  //           if(res.status === 200){\n  //             res.json().then(result => {\n  //               // console.log(result)\n  //               if (result.success) {\n  //                 if (result.score < 0.5) {\n  //                   setSendOTPButtonDisabled(true);\n  //                 }\n  //               }\n  //             })\n  //           }\n            \n  //         });\n  //       });\n  //     });\n  //   });\n  // }, []);\n\n\n  async function handlePasswordReset(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading(false)\n            // history.push('/resetforgotpassword')\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Enter the OTP sent to your registered email address',\n              type: \"success\",\n              autoHide: 2000\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  async function handleForgotPassword(event) {\n    event.preventDefault();\n    setLoading2(true);\n    // const { email,} = event.target.elements;\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email,\n        otp: otp,\n        nPassword: password\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL + '/api/users/forgotpassword', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n\n            // history.push('/resetforgotpassword')\n            setLoading2(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Succesful! Login to continue',\n              type: \"success\",\n              autoHide: 300\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading2(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  function handleClose() {\n    if (message === \"Succesful! Login to continue\") {\n      history.replace(\"/\");\n    }\n    setState({ ...state, open: false });\n  }\n\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter your email to receive OTP\n        </Typography>\n        <form className={classes.form} onSubmit={handlePasswordReset}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}>\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send OTP\"}\n          </Button>\n        </form>\n        <form className={classes.form} onSubmit={handleForgotPassword}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"otp\"\n                label=\"OTP\"\n                name=\"otp\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"New Password\"\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading2}\n            className={classes.submit}>\n            {loading2 ? <CircularProgress color=\"primary\" size={24} /> : \"Reset Password\"}\n          </Button>\n\n\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Link href=\"/\" variant=\"body2\">\n              Instead? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(ForgotPassword);\n","import React, { useEffect, useState } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [token,setToken] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    // function storeUser(user){\n    //   setCurrentUser(user);\n    //   setPending(false)\n    // }\n    // console.log(localStorage.getItem('user'))\n    setCurrentUser(localStorage.getItem('user'));\n    setPending(false);\n\n    // app.auth().onAuthStateChanged((user) => {\n    //   setCurrentUser(user)\n    //   setPending(false)\n    // });\n  }, []);\n  // function add\n\n  if (pending) {\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OTPver = ({ history }) => {\n    const classes = useStyles();\n    const token = localStorage.getItem(\"token\");\n    // const [token, setToken] = React.useState(\"\");\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide} = state;\n    const [seconds,setSeconds] = React.useState(30);\n    const [resendEnabled,setresetEnabled] = React.useState(false)\n\n    React.useEffect(() => {\n        if (seconds > 0) {\n          setTimeout(() => setSeconds(seconds - 1), 1000);\n        } else {\n          setresetEnabled(true)\n        }\n        // eslint-disable-next-line\n      },[seconds]);\n\n    function handleClose() {\n        // console.log(\"message\")\n        if (message === \"Success! redirecting to Ellipse Home\") {\n            history.replace(\"/userinfo\")\n        }\n        setState({ ...state, open: false });\n    }\n\n    if(!token){\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    function handleVerification(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { otp } = event.target.elements;\n        try {\n            var data = new FormData();\n            const payload = {\n                otp: otp.value\n            };\n            // data.append(JSON.stringify(payload));\n            data = JSON.stringify(payload);\n\n            fetch(process.env.REACT_APP_API_URL+'/api/users/verifyotp', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n\n            }\n            ).then((result) => {\n                result.json().then(val => {\n                    // console.log(val.message);\n                    if (val.message === \"verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Success! redirecting to Ellipse Home\",\n                            type: 'success',\n                            autoHide: 1000\n                        })\n\n                    }\n                    else if (val.message === \"Not verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Invalid OTP, please check and try again\",\n                            type: 'error',\n                            autoHide: 5000\n                        })\n                    }\n                    else {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Something went wrong try again\",\n                            type: 'error',\n                            autoHide: 5000\n                        })\n                    }\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n\n\n\n    }\n\n\n    function handleResendOTP(){\n        try {\n            var data2 = new FormData();\n            const payload2 = {\n            //   email: value[0].email\n            };\n            data2 = JSON.stringify(payload2)\n            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemailwithauth', {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              },\n              method: 'POST',\n              body: data2\n            }).then((result) => {\n              // console.log(result);\n              result.json().then((res) => {\n                if (res.message === \"success\") {\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: \"Password sent succcessfully\",\n                        type: 'success',\n                        autoHide: 300\n                    })\n                }\n              })\n\n            })\n          } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n          }\n    }\n\n    function handlesigninButton(){\n        history.push('/signin')\n        localStorage.removeItem('token');\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Email Verification\n                </Typography>\n                <form className={classes.form} onSubmit={handleVerification}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"otp\"\n                            label=\"Enter OTP\"\n                            name=\"otp\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                    <Grid container>\n\n              <Grid item>\n              <Button disabled={!resendEnabled} onClick={handleResendOTP}>Resend OTP in {seconds}</Button>\n              </Grid>\n              <Grid item>\n              <Button  onClick={handlesigninButton}>Signin to Different account</Button>\n              </Grid>\n            </Grid>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(OTPver);\n","import React from 'react';\nimport Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textArea: {\n        width: theme.spacing(58),\n        margin: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.dark,\n    },\n\n}));\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UserInfo = ({ history }) => {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [currentUser, setCurrentUser] = React.useState(null);\n    const [imageUrl, setImageurl] = React.useState(\"\");\n    const [image, setImage] = React.useState(null);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide } = state;\n    const [colleges,setColleges] = React.useState([]);\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            const eventId = localStorage.getItem('eventid');\n        if(eventId){\n          history.push(`/event/${eventId}`)\n        }\n        else{\n            history.replace(\"/home\")\n        }\n            \n        }\n\n        setState({ ...state, open: false });\n    };\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'GET',\n                }).then(response =>{\n                  // console.log(response);\n                  response.json().then(value =>{\n                    // console.log(value);\n                    setColleges(value);\n                  })\n                })\n      },[token])\n\n      if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n  \n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            // setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            // const fileType = event.target.files[0].type;\n            setImageurl(url);\n            // setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    async function handleSignUp(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { gender, designation, collegeId, bio } = event.target.elements;\n\n        try {\n            var data = new FormData()\n            const payload = {\n                gender: gender.value,\n                designation: designation.value,\n                college_id: collegeId.value,\n                bio: bio.value,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/userdetails', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (image != null) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Welcome\n                </Typography>\n                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    badgeContent={<label htmlFor=\"contained-button-file\">\n                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <EditIcon></EditIcon>\n                        </IconButton>\n                    </label>}>\n                    <Avatar className={classes.avatar} sizes=\"100\" alt=\"\" src={imageUrl}></Avatar>\n                </Badge>\n\n                <form className={classes.form} onSubmit={handleSignUp}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                            // onChange={handleAboutChange}\n                            // value={props.about}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                        \n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Your College</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"College\"\n                                    inputProps={{\n                                        name: 'collegeId',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    {colleges.map((coll,index) =>{\n                                        return <option key={index} value={coll._id}>{coll.name}</option>\n                                    })}\n                                    \n                                    {/* <option value=\"GITAM University\">GITAM University</option>\n                                    <option value=\"SRM University\">SRM University</option> */}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(UserInfo);\n\n\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.5em',\n      height: '0.5em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 1px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: '#ad9d9d',\n      outline: '1px solid slategrey'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n    marginBottom: theme.spacing(5)\n\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n    alignItems: 'center',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  mobileTitle:{\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    \n  },\n  titleButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n    textTransform: 'none'\n  },\n  mobileTitleButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      width: 'fit-content'\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    width: '230px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    borderBottom: 'none',\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  sectionDesktop: {\n    \n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  tabs: {\n    \n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginLeft: theme.spacing(15),\n    },\n  },\n  mobiletab: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  tabPanel: {\n    marginBottom: theme.spacing(3),\n  },\n  flex_section: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    // minHeight: 0\n  },\n  \n  flex_col_scroll: {\n    flexGrow: 1,\n    overflow: 'auto',\n    // minHeight: '100vh'\n  },\n  rpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    margin: theme.spacing(2),\n    // borderRadius: theme.spacing(50)\n  },\n  postButton: {\n    borderRadius: theme.spacing(50)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        setTitle(event.share_link)\n    }, [event.share_link])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Share Link\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DialogContent, DialogTitle } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  imageBox:{\n    display: \"flex\",\n        justifyContent: \"center\",\n  },\n  dialog: {\n    // height: '800px',\n    minHeight: '90vh',\n    maxHeight: '90vh',\n},\n  image: {\n    maxWidth: \"100%\",\n  },\n  icons: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    // color: theme.palette.grey[500],\n\n},\ntitle:{\n  backgroundColor: theme.palette.secondary\n}\n}));\n\n\n\n\nfunction ImageDialog(props) {\n  const classes = useStyles();\n  const event = props.event;\n  function handleClose() {\n    props.handleClose();\n\n}\n\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"transparent\",\n                    boxShadow: 'none',\n                    \n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.title}>{event.name}\n            <div className={classes.icons}>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n            </div>\n            </DialogTitle>\n              <DialogContent>\n              <Box className={classes.imageBox}>\n              <img className={classes.image} src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  alt=\"profile pic\"></img>\n              </Box>\n                \n              </DialogContent>\n            </Dialog>\n      </div>\n   );\n}\n\nexport default ImageDialog;\n\n","import React from 'react';\nimport { cleanup } from '@testing-library/react';\n\n//Materail imports\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\n// import AuthContext from '../AuthContext';\nimport ImageDialog from '../Components/ImageDialog';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PersonIcon from '@material-ui/icons/Person';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    }\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const { children, value, url, index, ...other } = props;\n    const event = props.event;\n    const tags = event.tags;\n    // const requirements = event.requirements;\n    const [requirements, setRequirements] = React.useState([])\n    const [timeLabel, setTimeLabel] = React.useState(\"Registration Ends in\");\n    const [adminDetails, setAdminDetails] = React.useState({});\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    const [notRegistered, setNotRegistered] = React.useState(false);\n    React.useEffect(() => {\n        if (props.notRegistered) {\n            setNotRegistered(true)\n        }\n        else {\n            setNotRegistered(false)\n        }\n    }, [props])\n\n    React.useEffect(() => {\n        if (event.requirements !== undefined) {\n            setRequirements(event.requirements);\n        }\n        if (event._id !== undefined && event.user_id !== undefined) {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_organizer_details?eventId=${event._id}&userId=${event.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    setAdminDetails(value);\n                })\n            })\n        }\n    }, [event, token])\n    // console.log(event)\n    // console.log(requirements);\n\n    const calculateTimeLeft = () => {\n\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let timeLeft = {};\n        if (difference < 0) {\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        if (difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const getTimeLabel = () => {\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let label = \"Registration ends in\"\n        if (difference < 0) {\n            label = \"Starts in\"\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            label = \"Ends in\"\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        return label;\n    }\n\n    const [timeLeft, setTimeLeft] = React.useState(calculateTimeLeft());\n\n    React.useEffect(() => {\n        const x = setTimeout(() => {\n            setTimeLabel(getTimeLabel());\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n\n        return () => {\n            cleanup();\n            clearTimeout(x);\n        }\n    });\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach(interval => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span key={interval}>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        // setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Grid container component=\"main\">\n                        <Grid item xs={12} sm={12} md={4} lg={4} >\n                            <img\n                                onClick={handleImageDialogOpen}\n                                style={{ width: '200px', height: '180px' }}\n                                alt=\"event poster\"\n                                src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}></img>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <Typography>{event.description} </Typography>\n                            <Typography\n                                style={{ marginTop: \"20px\", marginBottom: '20' }}>\n                                {timeLabel}\n                            </Typography>\n                            <Typography\n                                variant=\"h5\">\n                                {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n                            </Typography>\n                            {/* <Typography>Starts at {event.start_time}</Typography>\n                        <Typography>Ends at {event.finish_time}</Typography> */}\n                            <div style={{ marginTop: '10px' }}>\n                                <Chip\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.event_type}></Chip>\n\n                                <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.fee_type}></Chip>\n                                <Chip style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.event_mode}></Chip>\n                                {event.isTeamed && <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={<Box display=\"flex\">\n                                        <Box><GroupIcon></GroupIcon></Box>\n                                        <Box\n                                            marginTop={0.7}\n                                            marginLeft={0.5}>\n                                            {\"  \" + event.team_size.min_team_size + \"-\" + event.team_size.max_team_size}\n                                        </Box>\n                                    </Box>}></Chip>}\n                                {!event.isTeamed && <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={\n                                        <Box display=\"flex\">\n                                            <Box><PersonIcon></PersonIcon></Box>\n                                            <Box marginTop={0.7}>Individual</Box>\n                                        </Box>}></Chip>}\n                                {tags != null && tags.map(val => {\n                                    return <Chip\n                                        key={val}\n                                        style={{ marginLeft: '5px' }}\n                                        variant=\"outlined\"\n                                        color=\"inherit\"\n                                        label={val}></Chip>\n                                })}\n                            </div>\n\n                        </Grid>\n                        <Grid item xs={12}>\n\n                            <Box>\n                                <Box className={classes.root0}>\n                                    <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h4\">About</Typography>\n                                </Box>\n                                <Box className={classes.root0}>\n                                    <Typography color=\"textSecondary\" variant=\"body2\">\n                                        {\n                                            event.about\n                                        }\n                                    </Typography>\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {requirements !== null && requirements.length !== 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Requirements</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {\n                                        requirements.length !== 0 && requirements.map(val => {\n                                            return <Chip key={val} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                        })\n                                    }\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Offline\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Venue Details</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue}</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue_college}</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.fee_type === \"Paid\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Fee Details</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.fee_type === \"Paid\" && <Typography color=\"textSecondary\" variant=\"body2\">{\"Rs \" + event.fee}</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Platform Details</Typography>}\n                                </Box>\n                                <Box className={classes.root0}>\n                                    {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"body2\">{event.platform_details}</Typography>}\n                                </Box>\n                                {!notRegistered && <Box className={classes.root0}>\n                                    <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Organised By</Typography>\n                                </Box>}\n                                {!notRegistered && <Box className={classes.root0}>\n                                    <Box className={classes.adminDetails}>\n                                        <Box>\n                                            <Avatar className={classes.avatar} alt={adminDetails.name} src={adminDetails.profile_pic !== null && process.env.REACT_APP_API_URL + `/api/image?id=${adminDetails.profile_pic}`} />\n                                        </Box>\n                                        <Box>\n                                            <Box>\n                                                <Typography variant=\"h5\">{adminDetails.name}</Typography>\n                                            </Box>\n                                            <Box>\n                                                <Typography color=\"textSecondary\" variant=\"body2\">{adminDetails.college_name}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>}\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12}>\n                        </Grid>\n                        <Grid>\n                        </Grid>\n                    </Grid>\n                    <ImageDialog\n                        // image={selectedImage}\n                        event={event}\n                        open={imageDialogOpen}\n                        handleClose={handleImageDialogClose}>\n                    </ImageDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n\n// This impressive paella is a perfect party dish and a fun meal\n//  to cook together with your guests. Add 1 cup of frozen peas along with \n// the mussels, if you like.","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport TimerIcon from '@material-ui/icons/Timer';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  large: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  tab: {\n    flexGrow: 1,\n    // maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const token = localStorage.getItem('token');\n  const event = props.event;\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Timeline align=\"alternate\">\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {regEndDate.toDateString()}{\" \" + regEndDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Registration Ends\n                  </Typography>\n                  <Typography>Your opportunity to participate comes to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {startDate.toDateString()}{\" \" + startDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\" variant=\"outlined\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Starts\n                  </Typography>\n                  <Typography>Party begins</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            {\n              event.rounds.map((value, index) => {\n                const sDate = new Date(value.start_date);\n                const eDate = new Date(value.end_date);\n                return (\n                  <React.Fragment>\n                    <TimelineItem>\n                      <TimelineOppositeContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {sDate.toDateString()}{\" \" + sDate.toLocaleTimeString()}\n                        </Typography>\n                      </TimelineOppositeContent>\n                      <TimelineSeparator>\n                        <TimelineDot color=\"primary\" variant=\"outlined\">\n                          <TimerIcon></TimerIcon>\n                        </TimelineDot>\n                        <TimelineConnector />\n                      </TimelineSeparator>\n\n                      <TimelineContent>\n                        <Paper elevation={3} className={classes.paper}>\n                          <Typography variant=\"h6\" component=\"h1\">\n                            {value.title + \" Starts\"}\n                          </Typography>\n                          {/* <Typography>Your opportunity to participate comes to an end</Typography> */}\n                        </Paper>\n                      </TimelineContent>\n                    </TimelineItem>\n                    <TimelineItem>\n                      <TimelineOppositeContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {eDate.toDateString()}{\" \" + eDate.toLocaleTimeString()}\n                        </Typography>\n                      </TimelineOppositeContent>\n                      <TimelineSeparator>\n                        <TimelineDot color=\"primary\" variant=\"outlined\">\n                          <TimerIcon></TimerIcon>\n                        </TimelineDot>\n                        <TimelineConnector />\n                      </TimelineSeparator>\n\n                      <TimelineContent>\n                        <Paper elevation={3} className={classes.paper}>\n                          <Typography variant=\"h6\" component=\"h1\">\n                            {value.title + \" Ends\"}\n                          </Typography>\n                          {/* <Typography>Your opportunity to participate comes to an end</Typography> */}\n                        </Paper>\n                      </TimelineContent>\n                    </TimelineItem>\n                  </React.Fragment>\n                )\n              })\n            }\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {endDate.toDateString()}{\" \" + endDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector className={classes.secondaryTail} />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Ends\n                  </Typography>\n                  <Typography>Chill time, event complete</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n          </Timeline>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if(event.registered){\n          setAnnouncements(value);\n        }\n        else{\n          value.forEach(ann => {\n            if(ann.visible_all){\n              setAnnouncements((announcements)=>[...announcements,ann])\n            }\n          });\n        }\n        \n      })\n    })\n  }, [token, event])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n        {\n                    announcements.length === 0 && <Typography>No Announcements</Typography>\n                }\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\n \nconst AuthContext = React.createContext({\n    currentUser: null,\n    setCurrentUser: ()=>{}\n});\n \nexport default AuthContext;","import React from 'react';\nimport clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        position: 'absolute',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    open: {\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(34),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    close: {\n        // width: '85%',\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(13),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    const [cl, setCl] = React.useState(classes.bottomBar);\n    React.useEffect(() => {\n        if (props.open !== undefined) {\n            setCl(clsx({\n                [classes.open]: props.open,\n                [classes.close]: !props.open,\n            }))\n        }\n        // eslint-disable-next-line\n    }, [props.open])\n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        // console.log(newmessage);\n        if (newmessage.length > 1) {\n            // console.log(newmessage.length);\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={cl} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\n \nconst WebSocketContext = React.createContext({\n    webSocketContext: null,\n    setWebSocketContext: ()=>{}\n});\n \nexport default WebSocketContext;","import React from 'react';\n \nconst WebSocketDataContext = React.createContext({\n    eventChatMessages: null,\n    setEventChatMessages: ()=>{},\n    teamChatMessages: [],\n    setTeamChatMessages: ()=>{},\n    teamUpdateStatus: [],\n    setTeamUpdateStatus: ()=>{},\n    deletedEventChatMessages: [],\n    setDeletedEventChatMessages: ()=>{},\n    deletedTeamChatMessages: [],\n    setDeletedTeamChatMessages: ()=>{}\n\n});\n \nexport default WebSocketDataContext;","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    React.useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            <Box display=\"flex\">\n                <Box flexGrow={1} paddingTop={1}>\n                    <Divider></Divider>\n                </Box>\n                <Typography variant=\"body2\">{props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}</Typography>\n                <Box flexGrow={1} paddingTop={1}>\n                    <Divider></Divider>\n                </Box>\n\n            </Box>\n\n            \n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{message.user_name + \"   \"+userType}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box>\n                            <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton>\n                            {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                                <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                            </IconButton>}\n                        </Box>\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                            {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                        </Typography>\n                    </Box>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    React.useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n            <Box className={classes.root5}>\n                <Avatar alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n            </Box>\n            <Box className={classes.root2} whiteSpace=\"normal\">\n                <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                    <Box flexGrow={1} className={classes.message}>\n                        <Box>\n                            <Typography variant=\"body1\">{message.user_name + \"   \"+userType}</Typography>\n                        </Box>\n                        <Box style={{ marginLeft: \"7px\" }}>\n                            <Typography component=\"span\"\n                                variant=\"body2\"\n                                style={{ fontSize: \"0.9em\" }}\n                                color=\"textSecondary\">\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <Box>\n                        <IconButton  style={{ padding: '0px', margin: '0px' }}>\n                            <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                        </IconButton>\n                        {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                            <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                        </IconButton>}\n                    </Box>\n                </Box>\n                <Box whiteSpace=\"normal\">\n                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                        <Linkify\n                            componentDecorator={(decoratedHref, decoratedText, key) => (\n                                <a target=\"blank\" style={{ color: 'red' }} href={decoratedHref} key={key}>\n                                    {decoratedText}\n                                </a>\n                            )}\n                        >{message.message}</Linkify>\n                        {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                    </Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog(props) {\n\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete this message?\"}</DialogTitle>\n        {/* <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent> */}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={props.handleDeleteConfirmation(props.message)} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n// import ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Avatar from '@material-ui/core/Avatar';\n// import { List } from '@material-ui/core';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Dialog from '@material-ui/core/Dialog';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageDeleteDialog from './MessageDeleteDialog';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    // const [showOptions, setShowOptiona] = React.useState(\"\");\n    const classes = useStyles();\n    var counterDate = null;\n    // const [webSocket, setWebSocket] = React.useState(null);\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { eventChatMessages } = React.useContext(WebSocketDataContext);\n    const { setEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedEventChatMessages, setDeletedEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"join_event_room\",\n                event_id: event._id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n    }, [webSocketContext, currentUser, event])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        eventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            //         // console.log(mes);\n            if (mes.event_id === event._id) {\n                // console.log(cMes);\n                setChatMessages(chatMessages => [...chatMessages, cMes]);\n                setEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        });\n        // eslint-disable-next-line\n    }, [eventChatMessages, event])\n\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                // webConnect();\n                setLoading(false);\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_event_message\",\n                event_id: event._id,\n                msg: {\n                    'id': currentUser.user_id + Date.now(),\n                    'user_id': currentUser.user_id,\n                    'user_name': currentUser.name,\n                    'user_pic': currentUser.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    React.useEffect(() => {\n        deletedEventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.event_id === event._id) {\n                setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                setDeletedEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        })\n\n        // eslint-disable-next-line\n    }, [deletedEventChatMessages])\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(mes);\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        webSocketContext.send(JSON.stringify({\n            action: \"delete_event_chat_message\",\n            event_id: event._id,\n            msg: mes\n        }));\n        setChatMessages(chatMessages.filter(m => { return m !== mes }))\n\n        setOpenDeleteDialog(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    return (\n                                        <MessageBox1 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox1>\n\n                                    );\n                                }\n                                return (\n                                    <MessageBox2 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox2>\n                                );\n\n                            })\n                        }\n                        \n                        <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n                    <div style={{ float: \"left\", clear: \"both\", marginBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\n\n// if (messageDate.toDateString() !== counterDate) {\n//     counterDate = messageDate.toDateString();\n//     if (value.user_id === currentUser.user_id) {\n//         return (<React.Fragment key={index}>\n\n//             <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n\n//             <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n//                 <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n//                     <ChatMessage adminId={event.user_id} message={value} ></ChatMessage>\n//                 </Box>\n//                 <Box className={classes.root5}>\n//                     <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//                 </Box>\n//             </Box></React.Fragment>);\n\n//     }\n//     else {\n//         return (<React.Fragment>\n\n\n//             <Box m={1} p={1} key={index} className={classes.root6}>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n\n\n//             <Box m={1} key={index} className={classes.root}>\n//                 <Box className={classes.root4}>\n//                     <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//                 </Box>\n//                 <Box className={classes.root2} whiteSpace=\"normal\" >\n//                     <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//                 </Box>\n//             </Box></React.Fragment>);\n//     }\n\n\n// }\n\n// if (value.user_id === currentUser.user_id) {\n//     return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n//         <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n//             <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//         </Box>\n//         <Box className={classes.root5}>\n//             <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//     </Box>);\n\n// }\n// else {\n//     return (<Box m={1} key={index} className={classes.root}>\n//         <Box className={classes.root4}>\n//             <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//         <Box className={classes.root2} whiteSpace=\"normal\">\n//             <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//         </Box>\n//     </Box>);\n// }\n\n\n// const webConnect = () => {\n    //     const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n    //     ws.onopen = () => {\n    //         // console.log(\"connected\")\n    //         setWebSocket(ws);\n    //         ws.send(JSON.stringify({\n    //             action: \"join_event_room\",\n    //             event_id: event._id,\n    //             msg: {\n    //                 'user_id': currentUser.user_id,\n    //             }\n    //         }));\n    //         ws.onmessage = (message) => {\n    //             const mes = JSON.parse(message.data);\n    //             const cMes = mes.msg;\n    //             // console.log(mes);\n    //             if (mes.event_id === event._id) {\n    //                 // console.log(cMes);\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n    //         setLoading(false)\n    //     }\n    //     ws.onclose = () => {\n\n    //         check();\n    //         // console.log(\"closed\");\n    //     }\n    // }\n\n       // const check = () => {\n    //     if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n    //         // console.log(\"checking\");\n    //         webConnect();\n    //     }\n    // }","import React from 'react';\nimport useStyles from '../Themes/SignupPageStyles';\n\n//MaterialUI imports\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n// import Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\n// import Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\n// import IconButton from '@material-ui/core/IconButton';\n// import CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// import { set } from 'date-fns';\n// import AuthContext from '../AuthContext';\n// import TermsandConditions from '../Components/EventRegisterTermsandConditions';\n// import EventsContext from '../EventsContext';\n// import ActiveEventsContext from '../ActiveEventsContext';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n\n    const [userMessage, setUserMessage] = React.useState(false);\n    const [access, setAccess] = React.useState(true);\n    const [editAccess,setEditAccess] = React.useState(false);\n\n    const [formValues, setFormValues] = React.useState(null);\n    const [uploadFiles, setUploadFiles] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    // const [fields, setFields] = React.useState([]);\n    const [normalFields, setNormalFields] = React.useState([]);\n    const [dropDownFields, setDropDownFields] = React.useState([]);\n    const [checkboxFields, setCheckBoxFields] = React.useState([]);\n    const [radioFields, setRadioFields] = React.useState([]);\n    const [dateFields, setDateFields] = React.useState([]);\n    const [longDescFields, setLongDescFields] = React.useState([]);\n    const [linkFields, setLinkFields] = React.useState([]);\n    const [fileUploadFields, setFileUploadFields] = React.useState([]);\n\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const [backDropOpen, setBackDropOpen] = React.useState(true);\n    // const [event, setEvent] = React.useState({});\n    const event = props.event;\n    const [checkedValues, setCheckedValues] = React.useState([]);\n    const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n    // const [tandcOpen, setTandcOpen] = React.useState(false);\n\n    const { currentUser } = React.useContext(AuthContext);\n\n    const currentRound = props.round;\n    const currentDate = new Date();\n    const roundStartDate = new Date(currentRound.start_date);\n    const [submission,setSubmission] = React.useState({});\n    // const roundEndDate = new Date(currentRound.end_date);\n\n    // function handleTermsClick() {\n    //     setTandcOpen(true);\n    // }\n\n    React.useEffect(() => {\n        if (roundStartDate >= currentDate) {\n            setAccess(false);\n            setUserMessage(\"Round Not yet started\");\n        }\n        // eslint-disable-next-line\n    }, [event, currentUser])\n\n    React.useEffect(() => {\n        if (!props.individual && props.team) {\n            if (props.team.submissions[props.index].is_submitted) {\n                setAccess(false);\n                setUserMessage(\"submission Already made\");\n                setEditAccess(true);\n                getSubmission(props.team.submissions[props.index].submission_id)\n            }\n        }\n        else if (props.registration) {\n            if (props.registration.submissions[props.index].is_submitted) {\n                setAccess(false);\n                setUserMessage(\"submission Already made\");\n                setEditAccess(true);\n                getSubmission(props.registration.submissions[props.index].submission_id)\n            }\n        }\n        // eslint-disable-next-line\n    }, [props])\n\n    const getSubmission = (id) => {\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_submission?id=${id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        console.log(value);\n                        const keys = Object.keys(value.submission);\n                        setSubmission(value);\n                        console.log(keys);\n                        keys.forEach((sub, index) => {\n                            setFormValues(formValues => ({ ...formValues, [sub]: value.submission[sub] }))\n                        })\n                    })\n                }\n\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    React.useEffect(() => {\n\n        const allFields = props.fields;\n        // console.log(allFields);\n        if (allFields != null) {\n            allFields.forEach(f => {\n                if (f.title === \"Name\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.name }))\n                }\n                else if (f.title === \"Email\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.email }));\n                }\n                else if (f.title === \"College\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.college_name }));\n                }\n                else {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n                }\n                if (f.field === \"checkbox\") {\n\n                }\n\n            })\n            // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n            setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n            setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n            setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n            setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n            setDateFields(allFields.filter((f) => f.field === \"date\"));\n            // setLongDescFields(allFields.filter((f) => f.field === \"long_desc\"));\n            setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n            setLinkFields(allFields.filter(f => f.field === \"link\"));\n            setFileUploadFields(allFields.filter(f => f.field === \"file_upload\"));\n\n        }\n        setBackDropOpen(false);\n    }, [token, currentUser, props.fields])\n\n    function handleClose() {\n        if (message === \"Successful.Stay tunned with notifications and announcements\") {\n            props.fetchAll();\n        }\n        setState({ ...state, open: false });\n    }\n\n    function handleChange(event) {\n        setFormValues({ ...formValues, [event.target.name]: event.target.value });\n    }\n    const handleChange2 = (name) => (event, values) => {\n        setFormValues({ ...formValues, [name]: values });\n\n    }\n    const handleChange3 = (name) => (event) => {\n        if (event.target.checked) {\n            setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n            const array = [];\n            checkedValues.forEach((v, i) => {\n                if (v[name]) {\n                    array.push(v[name])\n                }\n            });\n            array.push(event.target.name);\n            setFormValues({ ...formValues, [name]: array });\n        }\n    }\n\n    const handleDateChange = (name) => (date) => {\n        setFormValues({ ...formValues, [name]: date })\n    };\n\n    const handleLondDescChange = (event) => {\n        setFormValues({ ...formValues, [event.target.name]: event.target.value })\n    }\n\n    function handleradioChange(event, value) {\n        setFormValues({ ...formValues, [event.target.name]: value });\n    }\n\n    function handleEventRegistration(e) {\n        e.preventDefault();\n        setLoading(true);\n        var uploadedFilesIds = [];\n        const formkeys = Object.keys(formValues);\n        const fileFormKeys = Object.keys(uploadFiles);\n        // console.log(formkeys);\n        // console.log(fileFormKeys);\n        var count = 0;\n        formkeys.forEach(v => {\n            if (formValues[v] === null) {\n                if (v.includes(fileFormKeys)) {\n\n                } else {\n                    count = count + 1;\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Please fill in all fields',\n                        type: \"error\",\n                        autoHide: 4000\n                    });\n                }\n\n                // break;\n            }\n        })\n        if (fileFormKeys) {\n            fileFormKeys.forEach(f => {\n                if (uploadFiles[f] === null) {\n                    count = count + 1;\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Please fill in all fields',\n                        type: \"error\",\n                        autoHide: 4000\n                    });\n                    // break;\n                }\n            })\n        }\n\n        var finalValues = formValues;\n        if (count === 0) {\n            try {\n                if (fileFormKeys.length > 0) {\n                    fileFormKeys.forEach((key, index) => {\n                        var data1 = new FormData();\n                        data1.append('uploaded_file', uploadFiles[key]);\n                        fetch(process.env.REACT_APP_API_URL + `/api/event/register/upload_file?id=${event._id}`, {\n                            headers: {\n                                'Authorization': `Bearer ${token}`,\n                            },\n                            method: 'POST',\n                            body: data1\n                        }).then((response) => {\n                            if (response.status === 200) {\n                                response.json().then(value => {\n                                    setFormValues({ ...formValues, [key]: value.file_name })\n                                    finalValues[key] = value.file_name\n                                    uploadedFilesIds.push({ [key]: value.file_name });\n                                    if (uploadedFilesIds.length === fileFormKeys.length) {\n                                        // console.log(uploadedFilesIds);\n                                        // console.log(finalValues);\n                                        var data = new FormData();\n                                        const d = props.individual ? { event_id: event._id, reg_id: props.registration._id, submission: finalValues, is_teamed: false, event_round: currentRound.title } : { event_id: event._id, submission: finalValues, team_id: props.team_id, is_teamed: true, event_round: currentRound.title }\n                                        data = JSON.stringify(d);\n                                        fetch(process.env.REACT_APP_API_URL + `/api/event/team/add_submission`, {\n                                            headers: {\n                                                'Authorization': `Bearer ${token}`,\n                                                'Content-Type': 'application/json',\n                                                'Accept': 'application/json'\n                                            },\n                                            method: 'POST',\n                                            body: data\n                                        }).then(response => {\n                                            // console.log(response);\n                                            if (response.status === 200) {\n                                                response.json().then(value => {\n                                                    // console.log(value);\n\n                                                    setLoading(false);\n                                                    setState({\n                                                        open: true,\n                                                        vertical: 'top',\n                                                        horizontal: 'center',\n                                                        message: 'Successful.Stay tunned with notifications and announcements',\n                                                        type: \"success\",\n                                                        autoHide: 4000\n                                                    });\n                                                })\n                                            }\n\n                                        })\n                                    }\n                                })\n                            }\n                        })\n                    })\n                }\n                else {\n                    var data = new FormData();\n                    const d = props.individual ? { event_id: event._id, reg_id: props.registration._id, submission: finalValues, is_teamed: false, event_round: currentRound.title } : { event_id: event._id, submission: finalValues, team_id: props.team_id, is_teamed: true, event_round: currentRound.title }\n                    data = JSON.stringify(d);\n                    fetch(process.env.REACT_APP_API_URL + `/api/event/team/add_submission`, {\n                        headers: {\n                            'Authorization': `Bearer ${token}`,\n                            'Content-Type': 'application/json',\n                            'Accept': 'application/json'\n                        },\n                        method: 'POST',\n                        body: data\n                    }).then(response => {\n                        // console.log(response);\n                        if (response.status === 200) {\n                            response.json().then(value => {\n                                // console.log(value);\n\n                                setLoading(false);\n                                setState({\n                                    open: true,\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                    message: 'Successful.Stay tunned with notifications and announcements',\n                                    type: \"success\",\n                                    autoHide: 4000\n                                });\n                            })\n                        }\n\n                    })\n                }\n            }\n            catch (error) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: error.message,\n                    type: \"error\",\n                    autoHide: 6000\n                })\n\n            }\n        }\n\n\n    }\n\n    function handleFileSelect(event) {\n        console.log(event.target.name)\n        if (event.target.files[0]) {\n            setUploadFiles({ ...uploadFiles, [event.target.name]: event.target.files[0] });\n            // setImage(event.target.files[0]);\n            // setImageAsFile(imageFile => (image))\n            // const url = URL.createObjectURL(event.target.files[0]);\n            // const fileType = event.target.files[0].type;\n            // setImageurl(url);\n            // setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n    }\n\n\n    const handleEditButton = () => {\n        setLoading(true);\n        var uploadedFilesIds = [];\n        const formkeys = Object.keys(formValues);\n        const fileFormKeys = Object.keys(uploadFiles);\n        // console.log(formkeys);\n        // console.log(fileFormKeys);\n        var count = 0;\n        formkeys.forEach(v => {\n            if (formValues[v] === null) {\n                if (v.includes(fileFormKeys)) {\n\n                } else {\n                    count = count + 1;\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Please fill in all fields',\n                        type: \"error\",\n                        autoHide: 4000\n                    });\n                }\n\n                // break;\n            }\n        })\n        if (fileFormKeys) {\n            fileFormKeys.forEach(f => {\n                if (uploadFiles[f] === null) {\n                    count = count + 1;\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Please fill in all fields',\n                        type: \"error\",\n                        autoHide: 4000\n                    });\n                    // break;\n                }\n            })\n        }\n\n        var finalValues = formValues;\n        if (count === 0) {\n            try {\n                if (fileFormKeys.length > 0) {\n                    fileFormKeys.forEach((key, index) => {\n                        var data1 = new FormData();\n                        data1.append('uploaded_file', uploadFiles[key]);\n                        fetch(process.env.REACT_APP_API_URL + `/api/event/register/upload_file?id=${event._id}`, {\n                            headers: {\n                                'Authorization': `Bearer ${token}`,\n                            },\n                            method: 'POST',\n                            body: data1\n                        }).then((response) => {\n                            if (response.status === 200) {\n                                response.json().then(value => {\n                                    setFormValues({ ...formValues, [key]: value.file_name })\n                                    finalValues[key] = value.file_name\n                                    uploadedFilesIds.push({ [key]: value.file_name });\n                                    if (uploadedFilesIds.length === fileFormKeys.length) {\n                                        // console.log(uploadedFilesIds);\n                                        // console.log(finalValues);\n                                        var data = new FormData();\n                                        const d = { sub_id: submission._id, submission: finalValues, is_teamed: true }\n                                        data = JSON.stringify(d);\n                                        fetch(process.env.REACT_APP_API_URL + `/api/event/team/edit_submission`, {\n                                            headers: {\n                                                'Authorization': `Bearer ${token}`,\n                                                'Content-Type': 'application/json',\n                                                'Accept': 'application/json'\n                                            },\n                                            method: 'POST',\n                                            body: data\n                                        }).then(response => {\n                                            // console.log(response);\n                                            if (response.status === 200) {\n                                                response.json().then(value => {\n                                                    // console.log(value);\n\n                                                    setLoading(false);\n                                                    setState({\n                                                        open: true,\n                                                        vertical: 'top',\n                                                        horizontal: 'center',\n                                                        message: 'Successful.Stay tunned with notifications and announcements',\n                                                        type: \"success\",\n                                                        autoHide: 4000\n                                                    });\n                                                })\n                                            }\n\n                                        })\n                                    }\n                                })\n                            }\n                        })\n                    })\n                }\n                else {\n                    var data = new FormData();\n                    const d = { sub_id: submission._id, submission: finalValues, is_teamed: true }\n                    data = JSON.stringify(d);\n                    fetch(process.env.REACT_APP_API_URL + `/api/event/team/edit_submission`, {\n                        headers: {\n                            'Authorization': `Bearer ${token}`,\n                            'Content-Type': 'application/json',\n                            'Accept': 'application/json'\n                        },\n                        method: 'POST',\n                        body: data\n                    }).then(response => {\n                        // console.log(response);\n                        if (response.status === 200) {\n                            response.json().then(value => {\n                                // console.log(value);\n\n                                setLoading(false);\n                                setState({\n                                    open: true,\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                    message: 'Successful.Stay tunned with notifications and announcements',\n                                    type: \"success\",\n                                    autoHide: 4000\n                                });\n                            })\n                        }\n\n                    })\n                }\n            }\n            catch (error) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: error.message,\n                    type: \"error\",\n                    autoHide: 6000\n                })\n\n            }\n        }\n    }\n    \n    return (\n        <div>\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Backdrop className={classes.backdrop} open={backDropOpen}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <form className={classes.form} onSubmit={handleEventRegistration}>\n\n                <Grid container spacing={2}>\n                    {normalFields.map((field, index) => {\n                        if (field.title === \"College\") {\n                            return (\n                                <Grid item xs={12}>\n                                    <Autocomplete\n                                        fullWidth\n                                        id={field.title}\n                                        options={colleges}\n                                        getOptionLabel={(option) => option}\n                                        onChange={handleChange}\n                                        value={formValues[field.title]}\n                                        disabled\n                                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                                    />\n                                </Grid>)\n                        }\n                        else if (field.title === \"Email\") {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        disabled\n                                        // variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title]}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                </Grid>)\n                        }\n                        else {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        // variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title] || \"\"}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                </Grid>)\n                        }\n\n                    })}\n                    {checkboxFields.map((field, index) => {\n                        return (\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\" className={classes.formControl}>\n                                    <FormLabel component=\"legend\">{field.title}</FormLabel>\n                                    <FormGroup class={classes.formgroup}>\n                                        {field.options.map((option) => {\n                                            return <FormControlLabel\n                                                control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                                                label={option}\n                                            />\n                                        })}\n                                    </FormGroup>\n                                </FormControl>\n                            </Grid>\n                        )\n                    })}\n                    {dropDownFields.map((field, index) => {\n                        return (\n                            <Grid item xs={12}>\n                                <Autocomplete\n                                    id={field.title}\n                                    options={field.options.map((option) => option)}\n                                    // freeSolo\n                                    // onChange={handleeventTagsChange}\n                                    onChange={handleChange2(field.title)}\n                                    renderTags={(value, getTagProps) =>\n                                        value.map((option, index) => (\n                                            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                                        ))\n                                    }\n                                    renderInput={(params) => (\n                                        <TextField required {...params} name={field.name} label={field.title} placeholder={field.name} />\n                                    )}\n                                />\n                            </Grid>\n                        )\n                    })}\n                    {radioFields.map((field, index) => {\n                        console.log(field.options[0])\n                        return (\n                            <Grid item xs={12}>\n                                <FormLabel required component=\"legend\">{field.title}</FormLabel>\n                                <RadioGroup required aria-label=\"address\" name={field.title} defaultValue={field.options[0]} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                                    {field.options.map((option) => {\n                                        return <FormControlLabel required value={option} control={<Radio color=\"default\" />} label={option} />\n                                    })}\n\n                                    {/* <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" /> */}\n                                </RadioGroup>\n                            </Grid>\n                        )\n                    })}\n                    {\n                        dateFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <DateTimePicker\n                                            // minDate={Date.now()}\n                                            fullWidth\n                                            required\n                                            variant=\"inline\"\n                                            format=\"dd MMM yyyy hh:mm a zzz\"\n                                            margin=\"normal\"\n                                            id={field.title}\n                                            label={field.title}\n                                            name={field.title}\n                                            // defaultValue={Date.now()}\n                                            value={formValues[field.title] || \"\"}\n                                            onChange={handleDateChange(field.title)}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change date',\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider>\n\n                                </Grid>\n                            )\n                        })\n                    }\n                    {\n                        longDescFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        multiline={true}\n                                        rows=\"5\"\n                                        variant='outlined'\n                                        placeholder={field.title}\n                                        autoComplete='off'\n                                        required\n                                        id={field.title}\n                                        name={field.title}\n                                        label={field.title}\n                                        fullWidth\n                                        onChange={handleLondDescChange}\n                                        value={formValues[field.title] || \"\"}\n                                    // value={props.about}\n                                    />\n                                </Grid>\n                            )\n                        })\n                    }\n                    {\n                        linkFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        // variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title] || \"\"}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                </Grid>)\n                        })\n                    }\n                    {\n                        fileUploadFields.map((field, index) => {\n                            return <Grid item xs={12}>\n                                <Typography>{field.title}</Typography>\n                                <input id=\"contained-button-file\" name={field.title} required type=\"file\" onChange={handleFileSelect} ></input>\n                            </Grid>\n                        })\n                    }\n\n                    {/* <Grid item xs={12}>\n                        <Typography>By registering for the event.I accept the <Button onClick={handleTermsClick} color=\"primary\">Terms and Conditions</Button></Typography>\n                    </Grid> */}\n                </Grid>\n                {access && <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    className={classes.submit}\n                >\n                    {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Submit\"}\n                </Button>}\n                {\n                    !access && <Typography>{userMessage}</Typography>\n                }\n                {editAccess && <Button\n                    // type=\"submit\"\n                    onClick={handleEditButton}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    className={classes.submit}\n                >\n                    {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Edit\"}\n                </Button>}\n            </form>\n        </div>\n    )\n}\nexport default AboutEventPanel;\n\n","import React from 'react';\nimport { Typography, Box, Avatar} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\n// import AuthContext from '../AuthContext';\n// import WebSocketContext from '../WebSocketContext';\nimport SubmissionPanel from './SubmissionForm';\n// import ChatMessage from '../Components/ChatMessage';\n// import ChatTextField from './ChatTextField';\n\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Linkify from 'react-linkify';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        // marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n\n    grid: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        backgroundColor: \"rgb(0, 189, 170,0.1)\",\n        maxWidth: '99%',\n        marginTop: theme.spacing(2)\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n        maxHeight: \"300px\"\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    // const { currentUser } = React.useContext(AuthContext);\n    const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const [registration,setRegistration] = React.useState(null);\n    // const registration = props.registration;\n    const [teamDetails, setTeamDetails] = React.useState(null);\n    // const [admin, setAdmin] = React.useState(false);\n    const [loading,setLoading] = React.useState(false);\n\n    // const { webSocketContext } = React.useContext(WebSocketContext);\n\n\n    React.useEffect(() => {\n        // console.log(props.individual);\n        if(!props.individual){\n            setRegistration(props.registration);\n            fetchAll()\n            \n        }\n        else{\n            getData();\n        }\n        \n        // eslint-disable-next-line\n    }, [props])\n\n    const fetchAll = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_details?id=${props.registration.team_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setTeamDetails(value[0]);\n                    setLoading(false)\n                    // if (value[0].user_id === currentUser.user_id) {\n                    //     setAdmin(true);\n                    // }\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const getData = () =>{\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if(response.status === 200){\n                    response.json().then(value => {\n                        // console.log(value);\n                        setRegistration(value[0]);\n                        setLoading(false);\n                        // if(value[0].teamed_up){\n                            // setTeamedUp(value[0].teamed_up);\n                        // }\n                        \n                    })\n                }\n                \n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    // console.log(teamDetails);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <React.Fragment>\n                <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    {!props.individual && <div className={classes.grid}>\n                        {teamDetails !== null && <Grid container component=\"main\" >\n                            <Grid item xs={12} md={6}>\n                                <Typography>Team</Typography>\n                                <Box className={classes.root0}>\n                                    <Box className={classes.adminDetails}>\n                                        <Box>\n                                            <Avatar className={classes.avatar} alt={teamDetails.team_name} src=\"abc.jpg\"></Avatar>\n                                        </Box>\n                                        <Box>\n                                            <Box>\n                                                <Typography variant=\"h5\">{teamDetails.team_name}</Typography>\n                                            </Box>\n                                            <Box>\n                                                <Typography color=\"textSecondary\" variant=\"body2\">{teamDetails.description}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Grid>\n                        </Grid>}\n                    </div>}\n                    {!props.individual && <Grid container component=\"main\">\n                        {teamDetails!== null && <Grid item xs={12}>\n                            {\n                                event.rounds.map((value, index) => {\n                                    const cDate = new Date();\n                                    const sDate = new Date(value.start_date);\n                                    const eDate = new Date(value.end_date);\n                                    return <Accordion>\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1a-content\"\n                                            id=\"panel1a-header\">\n                                            <Typography className={classes.heading}>{value.title}</Typography>\n                                            <Typography color=\"textSecondary\" style={{marginLeft: '3px'}}>{cDate < sDate ? \"Starts on \"+sDate.toDateString()+\" \"+sDate.toLocaleTimeString() : \"Ends on \"+eDate.toDateString()+\" \"+eDate.toLocaleTimeString()}</Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            {value.action === 'link' ? <Typography component=\"span\" variant=\"body1\" color=\"textSecondary\" className={classes.inline}>\n                                                <Linkify\n                                                    componentDecorator={(decoratedHref, decoratedText, key) => (\n                                                        <a target=\"blank\" style={{ color: '#00bdaa', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                            {decoratedText}\n                                                        </a>\n                                                    )}\n                                                >{value.link}</Linkify>\n                                            </Typography> : <SubmissionPanel fetchAll={fetchAll} team_id={registration.team_id} index={index} team={teamDetails} event={event} round={value} fields={value.fields}></SubmissionPanel>}\n                                        </AccordionDetails>\n                                    </Accordion>\n                                })\n                            }\n                        </Grid>}\n                    </Grid>}\n                    {props.individual && <Grid container component=\"main\">\n                        {registration !== null && <Grid item xs={12}>\n                            {\n                                event.rounds.map((value, index) => {\n                                    const cDate = new Date();\n                                    const sDate = new Date(value.start_date);\n                                    const eDate = new Date(value.end_date);\n                                    return <Accordion>\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1a-content\"\n                                            id=\"panel1a-header\">\n                                            <Typography className={classes.heading}>{value.title}</Typography>\n                                            <Typography color=\"textSecondary\" style={{marginLeft: '3px'}}>{cDate < sDate ? \"Starts on \"+sDate.toDateString()+\" \"+sDate.toLocaleTimeString() : \"Ends on \"+eDate.toDateString()+\" \"+eDate.toLocaleTimeString()}</Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            {value.action === 'link' ? <Typography component=\"span\" variant=\"body1\" color=\"textSecondary\" className={classes.inline}>\n                                                <Linkify\n                                                    componentDecorator={(decoratedHref, decoratedText, key) => (\n                                                        <a target=\"blank\" style={{ color: '#00bdaa', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                            {decoratedText}\n                                                        </a>\n                                                    )}\n                                                >{value.link}</Linkify>\n                                            </Typography> : <SubmissionPanel fetchAll={getData} registration={registration} individual={props.individual} team_id={registration.team_id} index={index} team={teamDetails} event={event} round={value} fields={value.fields}></SubmissionPanel>}\n                                        </AccordionDetails>\n                                    </Accordion>\n                                })\n                            }\n                        </Grid>}\n                    </Grid>}\n                </React.Fragment>\n            )}\n        </div>\n    );\n}\nexport default AboutEventPanel;\n\n// {/* <ChatMessage adminId={event.user_id} message={value} ></ChatMessage> */}\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { Typography } from '@material-ui/core';\n\nimport AuthContext from '../AuthContext';\nimport WebSocketContext from '../WebSocketContext';\n\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     alignItems: \"center\",\n//     backgroundColor: theme.palette.secondary.main,\n//     marginBottom: theme.spacing(2),\n\n//   },\n\n// }));\n\n\n\n\nfunction Eventcard(props) {\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    //   const classes = useStyles();\n      const event = props.event;\n    const [memberDetails, setMemberDetails] = React.useState({});\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    React.useEffect(() => {\n        fetchAll()\n        // eslint-disable-next-line\n    }, [props])\n\n    const fetchAll = () =>{\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_member_details?id=${props.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    \n                    setMemberDetails(value);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    const handleRemoveButton = () =>{\n        const d = new Date();\n        var data = new FormData();\n        data = JSON.stringify({\n            event_id: event._id,\n            team_id: props.id._id,\n            user_id: props.user_id\n        });\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/remove_user_from_team`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((response) => {\n            response.json().then(value => {\n                // console.log(value);\n                props.fetchAll()\n                if (webSocketContext) {\n                    webSocketContext.send(JSON.stringify({\n                        action: \"team_status_update_message\",\n                        team_id: props.id._id,\n                        msg: {\n                            'id': props.user_id + Date.now(),\n                            'user_id': currentUser.user_id,\n                            'user_name': currentUser.name,\n                            'user_pic': currentUser.user_pic,\n                            'message_type': 'team_status_update_message',\n                            'message': memberDetails.name + \" was removed from the team\",\n                            'date': d.toISOString()\n                        }\n                    }));\n                    webSocketContext.send(JSON.stringify({\n                        action: \"team_status_update_status\",\n                        team_id: props.id._id,\n                        users: props.id.members,\n                        msg: {\n                          'id': currentUser.user_id + Date.now(),\n                          'user_id': currentUser.user_id,\n                          'user_name': currentUser.name,\n                          'user_pic': currentUser.profile_pic,\n                          'message_type': 'team_status_update_message',\n                          'message': currentUser.name + \" has left the team\",\n                          'date': d.toISOString()\n                        }\n                      }));\n                }\n            })\n        })\n    }\n\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar>\n                    <Avatar alt={memberDetails.name} src={memberDetails.user_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${memberDetails.user_pic}` : \"abc.jpg\"} />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n                primary={props.id === props.user_id ? memberDetails.name + \" (Team Leader)\" : memberDetails.name}\n                secondary={memberDetails.college}\n            />\n            {props.admin && !(currentUser.user_id === props.user_id) && <ListItemSecondaryAction>\n                <IconButton onClick={handleRemoveButton} edge=\"end\" aria-label=\"delete\">\n                    <RemoveCircleIcon></RemoveCircleIcon> <Typography>Remove</Typography>\n                </IconButton>\n            </ListItemSecondaryAction>}\n        </ListItem>\n    );\n}\n\nexport default Eventcard;\n\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Typography } from '@material-ui/core';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     alignItems: \"center\",\n//     backgroundColor: theme.palette.secondary.main,\n//     marginBottom: theme.spacing(2),\n\n//   },\n\n// }));\n\nfunction Eventcard(props) {\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    //   const classes = useStyles();\n    const event = props.event;\n    const [memberDetails, setMemberDetails] = React.useState({});\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    React.useEffect(() => {\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_member_details?id=${props.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setMemberDetails(value);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }, [props, token])\n\n    const handleAcceptButton = () => {\n        const d = new Date();\n        var data = new FormData();\n        data = JSON.stringify({\n            event_id: event._id,\n            team_id: props.id._id,\n            user_id: props.user_id\n        });\n        fetch(process.env.REACT_APP_API_URL + `/api/event/accept_user_teamup_request`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((response) => {\n            response.json().then(value => {\n                console.log(value);\n                props.fetchAll();\n\n                if (webSocketContext) {\n                    webSocketContext.send(JSON.stringify({\n                        action: \"team_status_update_message\",\n                        team_id: props.id._id,\n                        msg: {\n                            'id': props.user_id + Date.now(),\n                            'user_id': currentUser.user_id,\n                            'user_name': memberDetails.name,\n                            'user_pic': memberDetails.user_pic,\n                            'message_type': 'team_status_update_message',\n                            'message': memberDetails.name + \" has joined the team\",\n                            'date': d.toISOString()\n                        }\n                    }));\n                    webSocketContext.send(JSON.stringify({\n                        action: \"team_status_update_status\",\n                        team_id: props.id._id,\n                        users: [value.updated_user_id],\n                        msg: {\n                          'id': currentUser.user_id + Date.now(),\n                          'user_id': currentUser.user_id,\n                          'user_name': currentUser.name,\n                          'user_pic': currentUser.profile_pic,\n                          'message_type': 'team_status_update_message',\n                          'message': currentUser.name + \" has left the team\",\n                          'date': d.toISOString()\n                        }\n                      }));\n                }\n                \n            })\n        })\n    }\n\n\n\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar alt={memberDetails.name} src={memberDetails.user_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${memberDetails.user_pic}` : \"abc.lpg\"} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={memberDetails.name}\n                secondary={memberDetails.college}\n            />\n            <ListItemSecondaryAction>\n                {/* <IconButton edge=\"end\" aria-label=\"delete\">\n                          <DeleteIcon />\n                        </IconButton> */}\n                <IconButton onClick={handleAcceptButton} edge=\"end\" aria-label=\"delete\">\n                    <CheckCircleIcon></CheckCircleIcon><Typography>Accept</Typography>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n\n    );\n}\n\nexport default Eventcard;\n\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n\n    React.useEffect(() => {\n        // console.log(props.title)\n        setTitle(props.title);\n        setDesc(props.desc);\n    }, [props])\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData();\n            data = JSON.stringify({\n                team_id: props.team_id,\n                desc: desc\n            });\n            // console.log(data);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/edit_team`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then((response) => {\n                response.json().then(value => {\n                    setLoading(false)\n                    props.handleClose()\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Successfull',\n                        type: \"success\",\n                        autoHide: 3000\n                    });\n                })\n            })\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Name\"\n                                name=\"title\"\n                                fullWidth\n                                disabled\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Typography, Box, Avatar, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\n// import { cleanup } from '@testing-library/react';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport TeamMemberRequestListItem from './TeamMemberRequestListItem';\n\nimport AuthContext from '../AuthContext';\nimport TeamEditDialog from './EditTeamDialog';\nimport WebSocketContext from '../WebSocketContext';\n// import ChatMessage from '../Components/ChatMessage';\n// import ChatTextField from './ChatTextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  adminDetails: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    // marginTop: theme.spacing(2)\n  },\n  root0: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginRight: theme.spacing(1)\n  },\n\n  grid: {\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n    backgroundColor: \"rgb(0, 189, 170,0.1)\",\n    maxWidth: '99%',\n    marginTop: theme.spacing(2)\n\n  },\n  root3: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    minWidth: theme.spacing(30)\n  },\n  root6: {\n    display: \"flex\",\n    justifyContent: \"center\",\n\n  },\n  // stickyHeader: {\n  //     position: \"sticky\",\n  //     position: \"-webkit-sticky\",\n  //     top: 0,\n  // },\n\n  topBar: {\n    // display: 'fixed'\n    maxHeight: \"300px\"\n  },\n  root4: {\n    marginRight: theme.spacing(0)\n  },\n  root5: {\n    marginLeft: theme.spacing(0),\n    maxWidth: '65%',\n    overflow: 'auto',\n    //    textOverflow: \"ellipsis\"\n  },\n  root2: {\n    // backgroundColor: theme.palette.background.paper,\n    // borderRadius: theme.spacing(1),\n    textDecorationColor: theme.palette.secondary.light,\n    maxWidth: '65%',\n    minWidth: '20%',\n    overflow: 'auto',\n    marginLeft: theme.spacing(1)\n    // textOverflow: \"ellipsis\"\n  },\n  bottomBar: {\n    position: 'absolute',\n    // flexGrow: 1,\n    // zIndex: '5',\n    right: theme.spacing(4),\n    bottom: theme.spacing(4),\n    left: \"200px\",\n    padding: theme.spacing(0, 3),\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.spacing(5),\n  },\n  progress: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  message: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  }\n\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { currentUser } = React.useContext(AuthContext);\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  const token = localStorage.getItem('token');\n  const event = props.event;\n  const registration = props.registration;\n  const [teamDetails, setTeamDetails] = React.useState({});\n  const [admin, setAdmin] = React.useState(false);\n  const [editDialogOpen, setEditDialogOpen] = React.useState(false);\n\n  const { webSocketContext } = React.useContext(WebSocketContext);\n\n\n  React.useEffect(() => {\n    fetchAll()\n    // eslint-disable-next-line\n  }, [props.registration])\n\n//   if (webSocketContext) {\n//     // console.log(\"xyshs\")\n//     webSocketContext.onmessage = (message) => {\n//         const mes = JSON.parse(message.data);\n//         const cMes = mes.msg;\n//         console.log(mes);\n//         if(mes.action === \"receive_team_status_status\"){\n//             console.log(\"hurray\")\n//             // getData()\n//             fetchAll()\n//         }\n//         // if (mes.team_id === registration.team_id) {\n//         //     // console.log(cMes);\n//         //     // setChatMessages(chatMessages => [...chatMessages, cMes]);\n//         // }\n//     }\n// }\n\n\n\n  const fetchAll = () => {\n    try {\n      fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_details?id=${registration.team_id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET',\n      }).then(response => {\n        response.json().then(value => {\n          // console.log(value);\n          setTeamDetails(value[0]);\n\n          if (value[0].user_id === currentUser.user_id) {\n            setAdmin(true);\n          }\n        })\n      })\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const handleDeleteButton = () => {\n    // const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      team_id: teamDetails._id,\n    });\n    // console.log(data);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/delete_team`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      response.json().then(value => {\n        props.getData();\n        // console.log(value);\n        // props.fetchAll()\n\n      })\n    })\n  }\n\n  const handleLeaveButton = () => {\n    const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      team_id: teamDetails._id,\n      event_id: event._id\n    });\n    // console.log(data);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/leave_team`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then(value => {\n          // console.log(value);\n          props.getData();\n          // props.fetchAll()\n          if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_message\",\n              team_id: registration.team_id,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has left the team\",\n                'date': d.toISOString()\n              }\n            }));\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_status\",\n              team_id: registration.team_id,\n              users: teamDetails.members,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has left the team\",\n                'date': d.toISOString()\n              }\n            }));\n          }\n        })\n      }\n    })\n  }\n\n  const handleEditButton = () => {\n    setEditDialogOpen(true);\n  }\n\n  const handleClose = () => {\n    setEditDialogOpen(false);\n    fetchAll()\n  }\n\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <React.Fragment>\n          <div className={classes.grid}>\n            <Grid container component=\"main\" >\n              <Grid item xs={12} md={6}>\n                <Box className={classes.root0}>\n                  <Box className={classes.adminDetails}>\n                    <Box>\n                      <Avatar className={classes.avatar} alt={teamDetails.team_name} src=\"abc.jpg\"></Avatar>\n                    </Box>\n                    <Box>\n                      <Box>\n                        <Typography variant=\"h5\">{teamDetails.team_name}</Typography>\n                      </Box>\n                      <Box>\n                        <Typography color=\"textSecondary\" variant=\"body2\">{teamDetails.description}</Typography>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                  {!admin && <Button onClick={handleLeaveButton}>Leave</Button>}\n                  {admin && <Button onClick={handleEditButton}>Edit</Button>}\n                  {admin && <Button onClick={handleDeleteButton}>Delete</Button>}\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid container component=\"main\" >\n              <Grid item xs={12} md={6}>\n                <Typography color=\"textSecondary\" style={{ marginTop: \"7px\" }}>Team Members</Typography>\n                {teamDetails.members !== undefined && <List dense={true}>\n                  {teamDetails.members.map((v) => {\n                    return <TeamMemberListItem fetchAll={fetchAll} admin={admin} event={props.event} id={teamDetails} user_id={v}></TeamMemberListItem>\n                  })}\n                </List>}\n              </Grid>\n              <Grid item xs={12} md={6}>\n                {admin && <Typography color=\"textSecondary\" style={{ marginTop: \"7px\" }}>Team up Requests</Typography>}\n                {admin && <List dense={true}>\n                  {\n                    teamDetails.received_requests.map(v => {\n                      return <TeamMemberRequestListItem fetchAll={fetchAll} event={props.event} id={teamDetails} user_id={v}></TeamMemberRequestListItem>\n                    })\n                  }\n                </List>}\n              </Grid>\n            </Grid>\n            <TeamEditDialog open={editDialogOpen} handleClose={handleClose} team_id={teamDetails._id} title={teamDetails.team_name} desc={teamDetails.description}></TeamEditDialog>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\nexport default AboutEventPanel;\n\n// {/* <ChatMessage adminId={event.user_id} message={value} ></ChatMessage> */}\n","import React from 'react';\nimport { Box, Button, TextField} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(2),\n        maxWidth: \"260px\"\n    },\n\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n\n    const handleCreateButton = (e) =>{\n        e.preventDefault();\n        const { name, desc } = e.target.elements;\n        var data = new FormData();\n        data = JSON.stringify({\n            'team_name': name.value,\n            'desc': desc.value,\n            'event_id': event._id,\n        });\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/create_team`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then((response)=>{\n            response.json().then(value=>{\n                // console.log(value);\n                props.getData();\n            })\n        })\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <form onSubmit={handleCreateButton}>\n                    <TextField variant=\"outlined\" label=\"Team Name\" required name=\"name\" fullWidth margin=\"dense\"></TextField>\n                    <TextField variant=\"outlined\" label=\"Description\" required name=\"desc\" fullWidth margin=\"dense\"></TextField>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Button type=\"submit\" fullWidth color=\"primary\" className={classes.button} variant=\"contained\">Create</Button>\n                    </Box>\n                    </form>\n                    \n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport { Button, TextField, Typography, Box, } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n// import PeopleIcon from '@material-ui/icons/People';\nimport Grid from '@material-ui/core/Grid';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(0),\n  },\n\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(2),\n    maxWidth: \"260px\"\n  },\n  adminDetails: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    // marginTop: theme.spacing(2)\n  },\n  root0: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n\n\n  },\n  root1: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    backgroundColor: \"rgb(0, 189, 170,0.2)\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginRight: theme.spacing(1)\n  },\n  avatar2: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    marginRight: theme.spacing(1)\n  },\n  grid: {\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n    backgroundColor: \"rgb(0, 189, 170,0.2)\",\n    maxWidth: '99%'\n\n  },\n  progress: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  const token = localStorage.getItem('token');\n  const event = props.event;\n  const [teams, setTeams] = React.useState([]);\n  const [sentRequests, setSentRequests] = React.useState([]);\n  const [showMembers, setShowMembers] = React.useState(false);\n  const [teamIndex, setTeamIndex] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n\n  const { currentUser } = React.useContext(AuthContext);\n\n  const { webSocketContext } = React.useContext(WebSocketContext);\n\n  React.useEffect(() => {\n    getData();\n    // eslint-disable-next-line\n  }, [])\n\n  const getData = () => {\n    setLoading(true);\n    try {\n      fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_teams?id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET',\n      }).then(response => {\n        response.json().then(value => {\n          // console.log(value);\n          setTeams(value);\n          setLoading(false);\n        })\n      })\n    }\n    catch (e) {\n      console.log(e);\n    }\n    try {\n      fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET',\n      }).then(response => {\n        response.json().then(value => {\n          // console.log(value[0].sent_requests)\n          setSentRequests(value[0].sent_requests);\n        })\n      })\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const handleRequestButton = (id, team) => () => {\n    const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      event_id: event._id,\n      team_id: id,\n    });\n    fetch(process.env.REACT_APP_API_URL + `/api/event/user_teamup_request`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      response.json().then(value => {\n        // console.log(value);\n        // getData()\n        // setUpdated(true);\n        if (webSocketContext) {\n          webSocketContext.send(JSON.stringify({\n            action: \"team_status_update_message\",\n            team_id: id,\n            msg: {\n              'id': currentUser.user_id + Date.now(),\n              'user_id': currentUser.user_id,\n              'user_name': currentUser.name,\n              'user_pic': currentUser.profile_pic,\n              'message_type': 'team_status_update_message',\n              'message': currentUser.name + \" has requested to join the team\",\n              'date': d.toISOString()\n            }\n          }));\n          webSocketContext.send(JSON.stringify({\n            action: \"team_status_update_status\",\n            team_id: id,\n            users: team.members,\n            msg: {\n              'id': currentUser.user_id + Date.now(),\n              'user_id': currentUser.user_id,\n              'user_name': currentUser.name,\n              'user_pic': currentUser.profile_pic,\n              'message_type': 'team_status_update_message',\n              'message': currentUser.name + \" has requested to join the team\",\n              'date': d.toISOString()\n            }\n          }));\n          getData();\n        }\n      })\n    })\n  }\n\n  const handleWithdrawButton = (id, team) => () => {\n    console.log(id);\n    console.log(team);\n    var data = new FormData();\n    data = JSON.stringify({\n      event_id: event._id,\n      team_id: id,\n    });\n    fetch(process.env.REACT_APP_API_URL + `/api/event/user_teamwithdraw_request`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      response.json().then(value => {\n        // console.log(value);\n        // setUpdated(true);\n        const d = new Date();\n\n        if (webSocketContext) {\n          webSocketContext.send(JSON.stringify({\n            action: \"team_status_update_message\",\n            team_id: id,\n            msg: {\n              'id': currentUser.user_id + Date.now(),\n              'user_id': currentUser.user_id,\n              'user_name': currentUser.name,\n              'user_pic': currentUser.profile_pic,\n              'message_type': 'team_status_update_message',\n              'message': currentUser.name + \" has withdrawn the team join request\",\n              'date': d.toISOString()\n            }\n          }));\n          webSocketContext.send(JSON.stringify({\n            action: \"team_status_update_status\",\n            team_id: id,\n            users: team.members,\n            msg: {\n              'id': currentUser.user_id + Date.now(),\n              'user_id': currentUser.user_id,\n              'user_name': currentUser.name,\n              'user_pic': currentUser.profile_pic,\n              'message_type': 'team_status_update_message',\n              'message': currentUser.name + \" has withdrawen the team join request\",\n              'date': d.toISOString()\n            }\n          }));\n          getData();\n        }\n      })\n    })\n  }\n\n  const handleViewMwmbersClick = (v) => () => {\n\n    if (showMembers) {\n      setShowMembers(false);\n      setTeamIndex({});\n    }\n    else {\n      setShowMembers(true);\n      setTeamIndex(v);\n    }\n\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <div className={classes.progress}>\n            <Fade\n              in={loading}\n              unmountOnExit>\n              <CircularProgress />\n            </Fade>\n          </div>\n          <TextField variant=\"outlined\" label=\"Team id\" fullWidth margin=\"dense\"></TextField>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Button fullWidth color=\"primary\" className={classes.button} variant=\"contained\">Join</Button>\n          </Box>\n          <Typography >Sent Requests</Typography>\n          {\n            sentRequests.map((v) => {\n              const searchedTeam = teams.find(t => t._id === v);\n              if (searchedTeam) {\n                return <Grid container component=\"main\" className={classes.grid}>\n                  <Grid item xs={12} md={6}>\n                    <Box className={classes.root0}>\n                      <Box className={classes.adminDetails}>\n                        <Box>\n                          <Avatar className={classes.avatar} alt={searchedTeam.team_name}>{searchedTeam.team_name[0]}</Avatar>\n                        </Box>\n                        <Box>\n                          <Box>\n                            <Typography variant=\"h5\">{searchedTeam.team_name}</Typography>\n                          </Box>\n                          <Box>\n                            <Typography color=\"textSecondary\" variant=\"body2\">{searchedTeam.description}</Typography>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <Button>View Members</Button>\n                      <Button onClick={handleWithdrawButton(searchedTeam._id, searchedTeam)}>Withdraw</Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              }\n              else {\n                return null\n              }\n\n            })\n          }\n          {/* <Typography>No Sent Request</Typography> */}\n          <Typography>All Teams</Typography>\n          {/* <TextField label=\"Search(Team Name)\" variant=\"filled\" style={{height:\"40px\"}}></TextField> */}\n          {/* <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                // options={allEvents}\n                // getOptionLabel={(option) => option.name}\n                // onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              /> */}\n          {/* <div style={{margin:'0px',padding:'0px',height:'350px', overflowY:'auto'}}> */}\n          <div>\n            {\n              teams.map(v => {\n                if (!sentRequests.includes(v._id)) {\n                  return <Grid container component=\"main\" className={classes.grid}>\n                    <Grid item xs={12} md={6}>\n                      <Box className={classes.root0}>\n                        <Box className={classes.adminDetails}>\n                          <Box>\n                            <Avatar className={classes.avatar} alt={v.team_name}>{v.team_name[0]}</Avatar>\n                          </Box>\n                          <Box>\n                            <Box>\n                              <Typography variant=\"h5\">{v.team_name}</Typography>\n                            </Box>\n                            <Box>\n                              <Typography color=\"textSecondary\" variant=\"body2\">{v.description}</Typography>\n                              {showMembers && v === teamIndex && <div>\n                                {\n                                  v.members.map((value, index) => {\n                                    return <TeamMemberListItem admin={false} event={props.event} id={v} user_id={value}></TeamMemberListItem>\n                                  })\n                                }\n                              </div>}\n                            </Box>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Button onClick={handleViewMwmbersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                        <Button onClick={handleRequestButton(v._id, v)}>Request</Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                }\n                else {\n                  return null\n                }\n              })\n            }\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\n// import AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    avatarLetterStyle: {\n        fontFamily: 'Gugi',\n        fontWeight: 'bold',\n        fontSize: '1.3em',\n        marginTop: theme.spacing(0.5)\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            <Box display=\"flex\">\n                <Box flexGrow={1} paddingTop={1}>\n                    <Divider></Divider>\n                </Box>\n                <Typography\n                    variant=\"body2\">\n                    {props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}\n                </Typography>\n                <Box flexGrow={1} paddingTop={1}>\n                    <Divider></Divider>\n                </Box>\n\n            </Box>\n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar className={classes.avatar} color=\"primary\" alt={'EllipseBot'}>\n                        <Typography className={classes.avatarLetterStyle}>E</Typography>\n                    </Avatar>\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{\"EllipseBot  \"}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        {/* <Box>\n                            <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton>\n                            {currentUser.user_id === message.user_id && <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                            </IconButton>}\n                        </Box> */}\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                        </Typography>\n\n                    </Box>\n                    <Button onClick={props.handleViewClick} color=\"primary\">View Team</Button>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\n// import AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    avatarLetterStyle: {\n        fontFamily: 'Gugi',\n        fontWeight: 'bold',\n        fontSize: '1.3em',\n        marginTop: theme.spacing(0.5)\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n            <Box className={classes.root5}>\n                <Avatar className={classes.avatar} color=\"primary\" alt={'EllipseBot'}  >\n                    <Typography className={classes.avatarLetterStyle}>E</Typography>\n                </Avatar>\n            </Box>\n            <Box className={classes.root2} whiteSpace=\"normal\">\n                <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                    <Box flexGrow={1} className={classes.message}>\n                        <Box>\n                            <Typography variant=\"body1\">{\"EllipseBot  \"}</Typography>\n                        </Box>\n                        <Box style={{ marginLeft: \"7px\" }}>\n                            <Typography component=\"span\"\n                                variant=\"body2\"\n                                style={{ fontSize: \"0.9em\" }}\n                                color=\"textSecondary\">\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    {/* <Box>\n                        <IconButton style={{ padding: '0px', margin: '0px' }}>\n                            <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                        </IconButton>\n                        {currentUser.user_id === message.user_id && <IconButton style={{ padding: '0px', margin: '0px' }}>\n                            <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                        </IconButton>}\n                    </Box> */}\n                </Box>\n                <Box whiteSpace=\"normal\">\n                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                        <Linkify\n                            componentDecorator={(decoratedHref, decoratedText, key) => (\n                                <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                    {decoratedText}\n                                </a>\n                            )}\n                        >{message.message}</Linkify>\n                    </Typography>\n                </Box>\n                <Button onClick={props.handleViewClick} color=\"primary\">View Team</Button>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n// import ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Avatar from '@material-ui/core/Avatar';\n// import { List } from '@material-ui/core';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Dialog from '@material-ui/core/Dialog';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageBox3 from './MessageBox3';\nimport MessageBox4 from './MessageBox4';\nimport MessageDeleteDialog from './MessageDeleteDialog';\n\n// import socketIOClient from \"socket.io-client\";\n// const socket = socketIOClient(\"https://staging.ellipseapp.com\",{\n//     path: '/ws',\n//     // transports: ['websocket']\n// });\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [loading, setLoading] = React.useState(false);\n    const registration = props.registration;\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    // const [showOptions, setShowOptiona] = React.useState(\"\");\n    const classes = useStyles();\n    var counterDate = null;\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { teamChatMessages } = React.useContext(WebSocketDataContext);\n    const { setTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedTeamChatMessages, setDeletedTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"join_team_room\",\n                team_id: registration.team_id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n    }, [currentUser, registration, webSocketContext])\n\n    React.useEffect(() => {\n        teamChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            //         // console.log(mes);\n            if (mes.team_id === registration.team_id) {\n                // console.log(cMes);\n                setChatMessages(chatMessages => [...chatMessages, cMes]);\n                setTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n            }\n        });\n        // eslint-disable-next-line\n    }, [teamChatMessages, registration])\n\n    React.useEffect(() => {\n        deletedTeamChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.team_id === registration.team_id) {\n                setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                setDeletedTeamChatMessages(deletedTeamChatMessages.filter(m => { return m !== mes }));\n            }\n        })\n        // eslint-disable-next-line\n    }, [deletedTeamChatMessages])\n\n\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_team_chat_messages?id=${registration.team_id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                // webConnect();\n                setLoading(false)\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_team_message\",\n                team_id: registration.team_id,\n                msg: {\n                    'id': currentUser.user_id + Date.now(),\n                    'user_id': currentUser.user_id,\n                    'user_name': currentUser.name,\n                    'user_pic': currentUser.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(\"delete\")\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        \n            webSocketContext.send(JSON.stringify({\n                action: \"delete_team_chat_message\",\n                team_id: registration.team_id,\n                msg: mes\n            }));\n            setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        setOpenDeleteDialog(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.message_type === 'team_status_update_message') {\n                                        return (\n                                            <MessageBox3\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox3>\n                                        );\n                                    }\n                                    return (\n                                        <MessageBox1\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox1>\n                                    );\n                                }\n                                if (value.message_type === 'team_status_update_message') {\n                                    return (\n                                        <MessageBox4\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox4>\n                                    )\n                                }\n                                return (\n                                    <MessageBox2\n                                        handleMessageDeleteButton={handleMessageDeleteButton}\n                                        message={value}\n                                        currentDate={currentDate}\n                                        messageDate={messageDate}\n                                        index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        \n                    </Box>\n                    <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\n// import Paper from '@material-ui/core/Paper';\n// import Tabs from '@material-ui/core/Tabs';\n// import Tab from '@material-ui/core/Tab';\n\nimport SubmissionPanel from './EventSubmissionPanel';\nimport SubPanel1 from './EventsTeamSubPanel1';\nimport SubPanel2 from './EventsTeamSubPanel2';\nimport SubPanel3 from './EventsTeamSubPanel3';\nimport EventsTeamChatPanel from './EventsTeamChatPanel';\nimport { Typography } from '@material-ui/core';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(0),\n        alignContent: \"center\",\n        // position: 'fixed'\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // position: '-webkit-sticky',\n        // position: 'sticky'\n        // position: 'fixed'\n        // marginBottom: theme.spacing(2),\n        // padding: theme.spacing(1)\n\n    },\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    // const [subIndexValue, setSubIndexValue] = React.useState(0);\n    const [teamedUp, setTeamedUp] = React.useState(false);\n    const [registration, setRegistration] = React.useState({});\n    const subIndexValue = props.subIndexValue;\n\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const {teamUpdateStatus} = React.useContext(WebSocketDataContext);\n    // const handleChange = (event, newValue) => {\n    //     setSubIndexValue(newValue);\n    // };\n\n    React.useEffect(()=>{\n        getData()\n        // eslint-disable-next-line\n    },[teamUpdateStatus])\n\n    React.useEffect(() => {\n        getData();\n        // eslint-disable-next-line\n    }, [event,token])\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            if(registration !== {}){\n                // console.log(\"xxxxx\")\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_team_update_status\",\n                    team_id: registration.team_id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n        }\n    }, [registration,currentUser,webSocketContext])\n\n\n    // if (webSocketContext) {\n    //     // console.log(\"xyshs\")\n    //     webSocketContext.onmessage = (message) => {\n    //         const mes = JSON.parse(message.data);\n    //         const cMes = mes.msg;\n    //         console.log(mes);\n    //         if(mes.action === \"receive_team_status_status\"){\n    //             console.log(\"hurray\")\n    //             getData()\n    //         }\n    //         // if (mes.team_id === registration.team_id) {\n    //         //     // console.log(cMes);\n    //         //     // setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //         // }\n    //     }\n    // }\n\n    const getData = () =>{\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if(response.status === 200){\n                    response.json().then(value => {\n                        // console.log(value);\n                        setRegistration(value[0]);\n                        // if(value[0].teamed_up){\n                            setTeamedUp(value[0].teamed_up);\n                        // }\n                        \n                    })\n                }\n                \n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    {/* <Paper className={classes.root2}>\n                        <Tabs\n                            value={subIndexValue}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"Submissions\" />\n                            <Tab label=\"Your Team\" />\n                            <Tab label=\"Team Chat\"/>\n                            <Tab label=\"Create Team\" />\n                            <Tab label=\"Join Team\" />\n                        </Tabs>\n                    </Paper> */}\n                    <SubmissionPanel getData={getData} individual={false} value={subIndexValue} registration={registration} index={0} event={props.event}></SubmissionPanel>\n                    {teamedUp && <SubPanel1 getData={getData} value={subIndexValue} registration={registration} index={1} event={props.event}></SubPanel1>}\n                    {teamedUp && subIndexValue === 2 && <EventsTeamChatPanel value={subIndexValue} registration={registration} index={2} event={props.event}></EventsTeamChatPanel>}\n                    {!teamedUp && subIndexValue === (1 || 2) && <Typography>Join team or create a team</Typography>}\n                    {!teamedUp && <SubPanel2 value={subIndexValue} index={3} event={props.event} getData={getData}></SubPanel2>}\n                    {teamedUp && subIndexValue === 3 && <Typography>Team already created</Typography>}\n                    {!teamedUp && <SubPanel3 value={subIndexValue} index={4} event={props.event}></SubPanel3>}\n                    {teamedUp && subIndexValue === 4 && <Typography>Team created or joined, delete to join other teams</Typography>}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\n\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport EventShareDialog from './EventShareDialog';\nimport AboutEventPanel from '../Components/AboutEventPanel';\nimport EventsTimeLinePanel from '../Components/EventTimeLinePanel';\nimport EvenstAnnouncementsPanel from '../Components/EventsAnnouncementsPanel';\nimport ChatPanel from '../Components/EventsChatPanel';\nimport EventsTeamPanel from '../Components/EventsTeamPanel';\nimport EventSubmissionPanel from '../Components/EventSubmissionPanel';\nimport { Divider, Typography } from '@material-ui/core';\nimport AuthContext from '../AuthContext';\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n        },\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    },\n    mobileHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    },\n    desktopHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    }\n}));\n\nfunction EventsDialog(props) {\n    const event = props.event;\n    const t = localStorage.getItem('theme');\n    const [value, setValue] = React.useState(0);\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    // const token = localStorage.getItem('token');\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n    const [chatAcess, setChatAcess] = React.useState(false);\n    const [teamAccess, setTeamAccess] = React.useState(false);\n    const [subIndexValue, setSubIndexValue] = React.useState(0);\n    React.useEffect(() => {\n        // console.log(event.registered);\n        if (event.registered || event.reg_mode !== \"form\") {\n            setChatAcess(true);\n            setTeamAccess(true);\n        } else if (event.user_id === currentUser.user_id) {\n            setChatAcess(true);\n        }\n        else {\n            setChatAcess(false)\n        }\n        if(props.openTeams){\n            setValue(4);\n            setSubIndexValue(1);\n        }\n    }, [event, currentUser, props.openTeams])\n    // console.log(chatAcess);\n    const handleSubIndexChange = (event, newValue) => {\n        setSubIndexValue(newValue);\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleClose() {\n        props.handleClose();\n\n    }\n\n    function handleRegClick() {\n        props.handleReg(event);\n\n    }\n\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                <Box className={classes.mobileHead} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                    {/* <Box display=\"flex\" justifyContent=\"flex-start\">\n                        {event.name}\n                    </Box> */}\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                            <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon fontSize=\"large\" />\n                        </IconButton>\n                    </Box>\n                </Box>\n                {event.name}\n                {/* <Typography className={classes.mobileHead} style={{}} variant=\"h6\">{event.name}</Typography> */}\n\n                <div className={classes.icons}>\n                    {/* <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                        <MailIcon></MailIcon>\n                    </IconButton> */}\n                    <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n\n                <div className={classes.root}>\n                    <Paper className={classes.root2}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"About\" {...a11yProps(0)} />\n                            <Tab label=\"Schedule\" {...a11yProps(1)} />\n                            <Tab label=\"Announcements\" {...a11yProps(2)} />\n                            <Tab label=\"Chat\" {...a11yProps(3)} />\n                            {!event.isTeamed &&  <Tab label=\"Submission\" {...a11yProps(4)}></Tab>}\n                            {event.isTeamed && <Tab label=\"Participation\" {...a11yProps(4)}></Tab>}\n                            {/* <Tab label=\"Submission\"></Tab> */}\n                        </Tabs>\n                    </Paper>\n                    <Divider></Divider>\n                    {event.isTeamed && value === 4 && <Paper className={classes.root2}>\n                        <Tabs\n                            value={subIndexValue}\n                            onChange={handleSubIndexChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"Submissions\" />\n                            <Tab label=\"Your Team\" />\n                            <Tab label=\"Team Chat\" />\n                            <Tab label=\"Create Team\" />\n                            <Tab label=\"Join Team\" />\n                        </Tabs>\n                    </Paper>}\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent} dividers={true} >\n                <EventShareDialog\n                    event={event}\n                    open={shareDialogOpen}\n                    handleClose={handleShareClose}></EventShareDialog>\n                <AboutEventPanel\n                    value={value}\n                    index={0}\n                    event={props.event}></AboutEventPanel>\n                <EventsTimeLinePanel value={value} index={1} event={props.event}></EventsTimeLinePanel>\n                <EvenstAnnouncementsPanel value={value} index={2} event={props.event}></EvenstAnnouncementsPanel>\n                {value === 3 && chatAcess && <ChatPanel value={value} index={3} event={props.event}></ChatPanel>}\n                {value === 3 && !chatAcess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n                {teamAccess && event.isTeamed && <EventsTeamPanel subIndexValue={subIndexValue} value={value} index={4} event={props.event}></EventsTeamPanel>}\n                {chatAcess && value ===4 && !event.isTeamed && <EventSubmissionPanel individual={true} event ={props.event}></EventSubmissionPanel>}\n                {value === 4 && !teamAccess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n            </DialogContent>\n            <DialogActions className={classes.action}>\n                <Box className={classes.bottomBar} display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\" hidden={value !== 3}>\n                </Box>\n                <div\n                    role=\"tabpanel\"\n                    hidden={value === 3}>\n                    {value !== 3 && (\n                        <div className={classes.buttonDiv}>\n                            {\n                                event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                                    {event.registered ? \"Registered\" : \"Register\"}\n                                </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                                    </Button>\n                            }\n                        </div>\n                    )}\n\n                </div>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default EventsDialog;","import React from 'react';\n \nconst EventsContext = React.createContext({\n    allEvents: null,\n    setAllEvents: ()=>{}\n});\n \nexport default EventsContext;","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// import CardContent from '@material-ui/core/CardContent';\n// import Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\n// import { Redirect } from 'react-router';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root3: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2)\n    },\n    root5:{\n        display: \"flex\",\n            justifyContent: \"flex-end\",\n      },\n      secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n      },\n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [notificationms,setNotifications] = React.useState([]);\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/get_notifications_desc', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setNotifications(value);\n                })\n            }\n        })\n    }, [token])\n\n    const handleNotificationClick = (n) => () =>{\n        props.handleClick(n.event_id)\n    }\n\n\n    return (\n        <div>\n            <Dialog scroll=\"paper\" open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.dialog }}>\n                <DialogTitle id=\"form-dialog-title\">Notifications</DialogTitle>\n                <Divider></Divider>\n                <DialogContent>\n                {\n                    notificationms.map((n,index)=>{\n                        const date = new Date(n.time)\n                       return <Box onClick={handleNotificationClick(n)} m={1} p={1} className={classes.root3}>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Typography className={classes.title}>\n                                {n.title}\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                {n.description}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.root5}>\n                            <Typography variant=\"body2\" >\n                                {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    })\n                }  \n                {\n                    notificationms.length === 0 && <Typography>No Notifications</Typography>\n                }  \n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/logo.cc1ac587.svg\";","import React, { useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EventIcon from '@material-ui/icons/Event';\nimport useStyles from '../Themes/MainHomeStyles';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport { Button } from '@material-ui/core';\nimport Logo from '../Components/Images/logo.svg';\nimport TelegramIcon from '@material-ui/icons/Telegram'\n// import DarkLogo from '../Components/Images/dark_theme_logo.png';\n// import LightLogo from '../Components/Images/light_theme_logo.png';\n// import CuboidLogo from '../Components/Images/Cuboid logo.png'\n\n\n\n\n\n\nconst NavigationBar = function ({ history }) {\n\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const t = localStorage.getItem('theme');\n  const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n  // const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n  // const [allEvents, setAllEvents] = React.useState([]);\n  const [searchedEvent, setSearchedEvent] = React.useState([]);\n  const [notificationsCount,setNotificationCount] = React.useState(0);\n\n  const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  // const [calenderValue, setCalenderValue] = useState(new Date());\n  // const [loading, setLoading] = React.useState(false);\n  // const eventypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [open, setOpen] = React.useState(false);\n  const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n  const {allEvents} = React.useContext(EventsContext);\n  useEffect(() => {\n    if (localStorage.getItem('tabIndex') != null) {\n      const tabIndex = parseInt(localStorage.getItem('tabIndex'));\n      if (tabIndex != null) {\n        setValue(tabIndex);\n      }\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/get_unseen_notifications_count', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        // console.log(data);\n        setNotificationCount(data);\n      })\n    })\n  }, [token])\n\n\n  // function handleMorebuttonClick(event) {\n  //   event.preventDefault();\n  //   // history.push(\"/event/1\")\n  // }\n  function handleSearchChange(event, value) {\n    if (value) {\n      // console.log(value);\n      setSearchedEvent(value);\n      setOpen(true);\n    }\n  }\n\n  const handleNotificationCardClick = (value)=>{\n    if(value){\n      allEvents.forEach(event => {\n        if(event._id === value){\n          setSearchedEvent(event);\n          setOpen(true);\n        }\n      });\n    }\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('tabIndex', newValue);\n  };\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    // setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  \n  if (!token) {\n    history.replace('/');\n  }\n\n  function handleThemeChange(event) {\n    // console.log(event.target.checked);\n    setDarkThemeSelected(event.target.checked);\n    if (event.target.checked) {\n      localStorage.setItem('theme', 'dark');\n      window.location.reload(false);\n    }\n    else {\n      localStorage.setItem('theme', 'light');\n      window.location.reload(false);\n    }\n  }\n\n\n\n  function handleSignout(event) {\n\n    fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then((result) => {\n      result.json().then((data) => {\n        if (data.message === \"success\") {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tabIndex');\n          history.replace(\"/\")\n        }\n      })\n    })\n\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\n      {/* <MenuItem onClick={handleMenuClose}>My account</MenuItem> */}\n      <MenuItem> Dark Theme <Switch\n        checked={darkThemeSelected}\n        onChange={handleThemeChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      /></MenuItem>\n      <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n    </Menu>\n  );\n\n  function handleeventClick(event) {\n    event.preventDefault();\n    history.push(\"/events\")\n    // localStorage.setItem('tabIndex',1);\n  }\n  function handleHomeClick() {\n    history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n  function handleProfileClick() {\n    history.push(\"/profile\")\n  }\n  function handleExploreClick() {\n    history.push(\"/yourevents\")\n  }\n  function handleChatClick() {\n    history.push('/chat')\n  }\n  const handleClose = () => {\n    setOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  function handleRegistrationButton(event) {\n    setOpen(false);\n    // setSelectedEvent(event);\n    history.push('/event/register/' + event._id);\n  }\n\n  function handleNotificationClick() {\n    fetch(process.env.REACT_APP_API_URL + '/api/update_notification_status', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(0);\n      })\n    })\n    setNotificationsOpen(true);\n  }\n  function handleTitleButtonClick() {\n    localStorage.setItem('tabIndex', 0)\n    setValue(0)\n    history.push('/home')\n  }\n\n  return (\n    <div className={classes.grow}>\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Toolbar>\n            <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n            <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                options={allEvents}\n                getOptionLabel={(option) => option.name}\n                onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              />\n            </div>\n            <div className={classes.tabs}>\n              <Paper square className={classes.root}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  variant=\"fullWidth\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  aria-label=\"icon\"\n\n                >\n                  <Tab onClick={handleHomeClick} icon={<HomeIcon />} aria-label=\"home\" />\n                  <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                  <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"favorite\" />\n                  {/* <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"person\" /> */}\n                  <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n                </Tabs>\n              </Paper>\n            </div>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                <Badge badgeContent={notificationsCount} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\">\n                <SettingsIcon></SettingsIcon>\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <div className={classes.mobiletab}>\n\n            <Paper square className={classes.root} position=\"sticky\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              // aria-label=\"icon tabs example\"\n              >\n                <Tab onClick={handleHomeClick} icon={< HomeIcon />} aria-label=\"home\" />\n                <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"messages\" /> */}\n                <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"favorite\" />\n                <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n              </Tabs>\n            </Paper>\n          </div>\n        </AppBar>\n        <div>\n          {open && <EventsDialog\n            open={open}\n            event={searchedEvent}\n            handleReg={handleRegistrationButton}\n            handleClose={handleClose}>\n          </EventsDialog>}\n          <NotificationsDialog open={notificationsOpen} handleClick={handleNotificationCardClick} handleClose={handleClose}></NotificationsDialog>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default withRouter(NavigationBar);\n\n","import React from 'react';\n \nconst ActiveEventsContext = React.createContext({\n    activeEvents: null,\n    setActiveEvents: ()=>{}\n});\n \nexport default ActiveEventsContext;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\n\n//Material Imports\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Components impoprts\nimport NavigationBar from './NavigationBar';\nimport EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\n// import dot from 'dote'\n// import {detect}  from 'detect-browser';\n\n\n\n// import OS from 'os';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    root: {\n        background: 'white',\n        position: 'sticky',\n        top: 0,\n        bottom: 0,\n        zIndex: 5,\n    },\n}));\n\nfunction Layout(props) {\n\n\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [allEvents, setAllEvents] = React.useState([]);\n    const [activeEvents, setActiveEvents] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [open, setOpen] = React.useState(true);\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    const [webSocketContext, setWebSocketContext] = React.useState(null);\n    const [eventChatMessages, setEventChatMessages] = React.useState([]);\n    const [teamChatMessages, setTeamChatMessages] = React.useState([]);\n    const [teamUpdateStatus,setTeamUpdateStatus] = React.useState([]);\n    const [deletedEventChatMessages,setDeletedEventChatMessages] = React.useState([]);\n    const [deletedTeamChatMessages,setDeletedTeamChatMessages] = React.useState([]);\n\n    const value = { currentUser, setCurrentUser };\n    const allEventsValue = { allEvents, setAllEvents };\n    const activeEventsValue = { activeEvents, setActiveEvents };\n    const webSocketValue = { webSocketContext, setWebSocketContext };\n    const webSocketDataContextValue = { \n        eventChatMessages, setEventChatMessages, \n        teamChatMessages, setTeamChatMessages, \n        teamUpdateStatus, setTeamUpdateStatus, \n        deletedEventChatMessages, setDeletedEventChatMessages, \n        deletedTeamChatMessages, setDeletedTeamChatMessages };\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            // console.log(\"connected\");\n            // console.log(ws);\n            // // setWebSocket(ws);\n            setWebSocketContext(ws);\n        }\n        ws.onmessage = (message) => {\n            const mes = JSON.parse(message.data);\n            // const cMes = mes.msg;\n            // console.log(mes);\n            if(mes.action === \"receive_event_chat_message\"){\n                setEventChatMessages(chatMessages => [...chatMessages, mes]);\n            }\n            else if(mes.action === \"receive_team_message\"){\n                setTeamChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"receive_team_update_message\"){\n                setTeamUpdateStatus(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"delete_event_chat_message\"){\n                // console.log(mes);\n                setDeletedEventChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"delete_team_chat_message\"){\n                setDeletedTeamChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n            \n            // setEventChatMessages(mes);\n        }\n        ws.onclose = () => {\n\n            check();\n            // console.log(\"closed\");\n        }\n    }\n\n    const check = () => {\n        if (!webSocketContext || webSocketContext.readyState === WebSocket.readyState) {\n            // console.log(\"checking\");\n            webConnect();\n        }\n    }\n    // console.log(OS.hostname());\n    // const browser = detect();\n    // console.log(browser)\n\n\n    React.useEffect(() => {\n        webConnect()\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value);\n                    if (value[0].verified === false) {\n                        // setUserDetailsDone(false);\n                        try {\n                            var data2 = new FormData();\n                            const payload2 = {\n                                email: value[0].email\n                            };\n                            data2 = JSON.stringify(payload2)\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                    'Content-Type': 'application/json'\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then((result) => {\n                                // console.log(result);\n                                result.json().then((res) => {\n                                    if (res.message === \"success\") {\n                                        setOpen(false);\n                                        props.history.push(\"/otpverification\")\n                                    }\n                                })\n\n                            })\n                        } catch (error) {\n\n                        }\n\n                    }\n                    else if (value[0].college_name === null) {\n                        setOpen(false);\n                        props.history.push(\"/userinfo\")\n                    }\n                    else {\n                        setUserDetailsDone(true);\n                        setCurrentUser(value[0]);\n                    }\n\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL + '/api/events', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value)\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setAllEvents(value);\n                    setActiveEvents(value.filter(e => {\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }))\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // if(!currentUser.verified){\n\n    // }\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        if (currentUser.verified) {\n            return <Redirect to=\"/userinfo\"></Redirect>\n        } else {\n            // console.log(\"xyz\")\n            try {\n                var data2 = new FormData();\n                const payload2 = {\n                    email: currentUser.email\n                };\n                data2 = JSON.stringify(payload2)\n                fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data2\n                }).then((result) => {\n                    // console.log(result);\n                    result.json().then((res) => {\n                        if (res.message === \"success\") {\n                            return <Redirect to=\"/otpverification\"></Redirect>\n                        }\n                    })\n\n                })\n            } catch (error) {\n\n            }\n\n        }\n    }\n\n\n    return (\n        <AuthContext.Provider value={value}>\n            <WebSocketContext.Provider value={webSocketValue}>\n                <WebSocketDataContext.Provider value={webSocketDataContextValue}>\n                    <EventsContext.Provider value={allEventsValue}>\n                        <ActiveEventsContext.Provider value={activeEventsValue}>\n                            {\n                                currentUser != null && <div>\n                                    <Paper className={classes.root}>\n                                        <NavigationBar></NavigationBar>\n                                    </Paper>\n                                    <div>\n                                        {props.children}\n                                    </div>\n                                </div>\n                            }\n                            {\n                                currentUser == null && <Backdrop className={classes.backdrop} open={open}>\n                                    <CircularProgress color=\"inherit\" />\n                                </Backdrop>\n\n                            }\n                        </ActiveEventsContext.Provider>\n                    </EventsContext.Provider>\n                </WebSocketDataContext.Provider>\n            </WebSocketContext.Provider>\n        </AuthContext.Provider>\n\n\n    );\n}\nexport default withRouter(Layout);\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n// import { Typography } from '@material-ui/core';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport '../Themes/main.scss'\nimport EventsDialog from '../Components/EventsDialog';\n// import EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction CalenderPanel({history}) {\n    localStorage.setItem('tabIndex',1)\n    // const { children, value, url, index, ...other } = props;\n    // const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [events, setEvents] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const [registeredEvents,setRegisteredEvents] = React.useState([]);\n    // const [image, setImage] = React.useState(null);\n    const {activeEvents} = React.useContext(ActiveEventsContext);\n\n    useEffect(() => {\n        activeEvents.forEach(y => {\n            // console.log(y.start_time);\n            setEvents(events =>\n                [...events, { id: JSON.stringify(y), title: y.name, start: y.start_time, end: y.finish_time }]\n            )\n        })\n        setRegisteredEvents(activeEvents.filter((value) => value.registered === true))\n\n    }, [activeEvents])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n    \n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    function handleRegistrationButton(event) {\n        setOpen(false);\n        // setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n\n    function handleEventClick(info) {\n        setSelectedEvent(JSON.parse(info.event.id))\n        setOpen(true);\n    }\n    return (\n        <div>\n            {/* {value === index && ( */}\n            <div className={classes.root}>\n                <Grid container component=\"main\" >\n\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                        {/* <Typography index={0}>Filters</Typography> */}\n                        {/* <Calendar onChange={setCalenderValue} value={calenderValue} ></Calendar> */}\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8} >\n                        <FullCalendar\n                            eventBackgroundColor=\"#1C1C1E\"\n                            eventBorderColor=\"#00bdaa\"\n                            events={events}\n                            eventClick={handleEventClick}\n                            defaultView='dayGridMonth' plugins={[dayGridPlugin]} backgroundColor=\"black\" \n                            buttonIcons={false}></FullCalendar>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={false} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                        </Button>\n                            <List className={classes.sideList}>\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registeredEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n                </Grid>\n                <div>\n                    {open && <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        handleReg={handleRegistrationButton}\n                        ></EventsDialog>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CalenderPanel;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TodayIcon from '@material-ui/icons/Today';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(10),\n        zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        // top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n            // top: theme.spacing(20)\n        },\n\n    },\n    root2: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        borderRadius: theme.spacing(2)\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50),\n        backgroundColor: theme.palette.primary.main\n    },\n\n}));\n\nfunction SortLeftPanel(props) {\n    const classes = useStyles();\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const { currentUser } = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        // defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton><TodayIcon></TodayIcon></IconButton>\n\n                                </InputAdornment>\n                            )\n                        }}\n\n                    // KeyboardButtonProps={{\n                    //     'aria-label': 'change date',\n                    // }}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        // defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton><TodayIcon></TodayIcon></IconButton>\n\n                                </InputAdornment>\n                            )\n                        }}\n                    // KeyboardButtonProps={{\n                    //     'aria-label': 'change date',\n                    // }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List className={classes.root}>\n                    {[\"Online\", \"Offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" value={props.sortCollgeType} onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${currentUser.college_name}`].map((value) => {\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default SortLeftPanel;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n\n    root: {\n        background: theme.palette.secondary.main,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none',\n        // },\n    },\n    \n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n\n}));\n\nfunction MobileSortPanel(props) {\n    const classes = useStyles();\n    const {currentUser} = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List >\n                    {[\"online\", \"offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${currentUser.collegeName}`].map((value) => {\n                           \n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default MobileSortPanel;\n\n ","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    // const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    \n\n    // function handleTitleChange(event) {\n    //     setTitle(event.target.value);\n    // }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/send_feedback', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport EventShareDialog from '../Components/EventShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n  }\n}));\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const [image, setImage] = React.useState(null);\n  // const token = localStorage.getItem('token');\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  // function handleViewButtonClick() {\n  //   props.handleViewClick(props.event);\n  // }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n      <CardMedia\n        component=\"img\"\n        height=\"180\"\n        image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        \n      </CardContent>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleShareClick}>\n          Share\n        </Button>\n        <Button  size=\"small\" color=\"primary\">\n          {t === 'light' ? <Link target=\"_blank\" to={{ pathname: `/event/${event._id}` }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link> :\n            <Link target='_blank' to={{ pathname: `/event/${event._id}`}} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link>}\n        </Button>\n        <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {event.status.toUpperCase()}\n        </Typography>\n      </CardActions>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n    </Card>\n  );\n}","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const event = props.event;\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                event_id: event._id,\n                title: title,\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Report({event.name})</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\n// import Paper from '@material-ui/core/Paper';\n// import Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuList from '@material-ui/core/MenuList';\n// import ClickAwayListener from '@material-ui/core/ClickAwayListener';\n// import Grow from '@material-ui/core/Grow';\nimport Menu from '@material-ui/core/Menu';\n\n\nimport EventReportDialog from './EventReportDialog';\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  // const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [reportDialogOpen, setReportDialogOpen] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // const isMenuOpen = Boolean(anchorEl);\n  // const handleToggle = () => {\n  //   setOpen((prevOpen) => !prevOpen);\n  // };\n\n  // const handleClose = (event) => {\n  //   if (anchorRef.current && anchorRef.current.contains(event.target)) {\n  //     return;\n  //   }\n\n  //   // setOpen(false);\n  // };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // function handleListKeyDown(event) {\n  //   if (event.key === 'Tab') {\n  //     event.preventDefault();\n  //     setOpen(false);\n  //   }\n  // }\n\n  // const prevOpen = React.useRef(open);\n  // React.useEffect(() => {\n  //   if (prevOpen.current === true && open === false) {\n  //     anchorRef.current.focus();\n  //   }\n  //   prevOpen.current = open;\n  // }, [open]);\n  function handleImageClick() {\n    props.imageDialog(event)\n  }\n  function handleRegClick() {\n    props.handleReg(props.eventId);\n\n  }\n  function handleMoreButtonClick() {\n    props.click(props.eventId);\n  }\n  function handleReportClick() {\n    setReportDialogOpen(true);\n  }\n  function handleReportClose() {\n    setReportDialogOpen(false);\n  }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={Boolean(anchorEl) ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick}>\n              <MoreVertIcon />\n            </IconButton>\n            <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={'menu'}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n    >\n      <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n\n    </Menu>\n            {/* <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n                        \n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper> */}\n          </div>\n        }\n        title={\n          <Typography  variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {props.name}\n          </Typography>\n        }\n        subheader={\n          <React.Fragment>\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {event.description}\n            </Typography>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n          </React.Fragment>\n        }\n      />\n      <EventReportDialog\n        event={event}\n        open={reportDialogOpen}\n        handleClose={handleReportClose}>\n      </EventReportDialog>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n      <CardActions disableSpacing>\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={handleMoreButtonClick}>\n            See More\n        </Button>\n          {\n            event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                  <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n          }\n        </div>\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\n// import Fab from '@material-ui/core/Fab';\n// import AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\n// import Button from '@material-ui/core/Button';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import Avatar from '@material-ui/core/Avatar';\n// import Divider from '@material-ui/core/Divider';\n// import List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport EventCard from '../Components/EventCard';\nimport AuthContext from '../AuthContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(8),\n        bottom: 0,\n        [theme.breakpoints.down('md')]: {\n            top: theme.spacing(13),\n        },\n        zIndex: 5,\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 0)\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const { allEvents } = React.useContext(EventsContext);\n    const { activeEvents } = React.useContext(ActiveEvents);\n    const { currentUser } = React.useContext(AuthContext);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const postedEvents = allEvents.filter((val) => {\n    //     return val.user_id === user.user_id;\n    // });\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n\n\n    return (\n        <div>\n            <Paper className={classes.root2}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\">\n                    <Tab label=\"Active Events\" />\n                    <Tab label=\"Registered Events\" />\n                    <Tab label=\"Past Events\" />\n                </Tabs>\n            </Paper>\n            <div className={classes.content}>\n                {value === 0 && <React.Fragment>\n                    {\n                        activeEvents.length === 0 && <Typography align=\"center\">No events, check back later</Typography>\n                    }\n                    {\n                        props.isFiltered ? props.sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={props.handleClick}\n                                    url={currentUser.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={props.handleImageDialogOpen}\n                                    handleReg={props.handleRegistrationButton}\n                                    eventId={event}\n                                >\n                                </EventCard>)\n                        }) : activeEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={props.handleClick}\n                                    url={currentUser.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={props.handleImageDialogOpen}\n                                    handleReg={props.handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                </React.Fragment>}\n                {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                    {\n                        regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                    }\n                    {regEvents.map((event, index) => {\n                        return (<Grid item xs={12} sm={12} md={4} key={index}>\n                            <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                        </Grid>)\n                    })}\n\n                </Grid>}\n                {value === 2 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                    {\n                        pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                    }\n                    {pastEvents.map((event, index) => {\n                        return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                            <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                        </Grid>)\n                    })}\n                </Grid>}\n\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n// import EventCard from '../Components/EventCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withRouter } from \"react-router\";\nimport List from '@material-ui/core/List';\nimport EventsDialog from '../Components/EventsDialog';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SortLeftPanel from '../Components/SortLeftPanel';\nimport MobileSortPanel from '../Components/MobileSortPanel';\nimport ImageDialog from '../Components/ImageDialog';\n// import EventsContext from '../EventsContext';\n// import Skeleton from '@material-ui/lab/Skeleton';\n// import { Link } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\n// import GridListEvents from '../Components/GridListEvents';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\nimport FeedBackDialog from '../Components/FeedBackDialog';\nimport ExplorePanel from '../Components/EventsMainTabPanel';\n// function a11yProps(index) {\n//     return {\n//         id: `scrollable-auto-tab-${index}`,\n//         'aria-controls': `scrollable-auto-tabpanel-${index}`,\n//     };\n// }\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '89vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        // color: theme.palette.primary.main\n        backgroundColor: theme.palette.primary.main\n    },\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        // height: '89vh',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        // bottom: 0,\n        // zIndex: 3,\n    },\n    leftSubPaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n        [theme.breakpoints.down('md')]: {\n            maxHeight: '78vh',\n        },\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    mobileFilterButton: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    skeleton: {\n        textDecorationColor: theme.palette.primary.dark,\n    },\n    feedBackButton: {\n        borderRadius: theme.spacing(50),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        paddingBottom: theme.spacing(1)\n    }\n\n}));\n\nfunction EventsTabPanel({ history }) {\n    localStorage.setItem('tabIndex', 0);\n    // const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [selectedEvent, setSelectedEvent] = React.useState(\"\");\n    const [sortStartDate, setSortStartDate] = React.useState(null);\n    const [sortEndDate, setSortEndDate] = React.useState(null);\n    // const [sortType, setSortType] = React.useState(null);\n    // const [sortEventMode, setSortEventMode] = React.useState(null);\n    const [sortCollegeType, setSortCollegeType] = React.useState(\"All\");\n    const [sortedEventsArray, setSortedEventsArray] = React.useState([]);\n    const [isFiltered, setIsFiltered] = React.useState(false);\n    const [feeSortChecked, setFeeSortChecked] = React.useState([0]);\n    const [modeSortChecked, setModeSortChecked] = React.useState([0]);\n    const [filterDialogOpen, setFilterDialogOpen] = React.useState(false);\n    // const [selectedImage, setSelectedImage] = React.useState(null);\n    const { activeEvents } = React.useContext(ActiveEventsContext);\n    const [registerdEvents, setRegisteredEvents] = React.useState([]);\n    const [feedBackOpen, setFeedBackOpen] = React.useState(false);\n\n\n\n    React.useEffect(() => {\n        // console.log(allEvents);\n        setRegisteredEvents(activeEvents.filter((value) => value.registered === true))\n    }, [activeEvents])\n    // console.log(registerdEvents);\n    if (!token) {\n        // return <Redirect to=\"/\" />;\n        history.replace(\"/\")\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClick = function (event, image) {\n        // console.log(id);\n        setSelectedEvent(event);\n        // setSelectedImage(image);\n        setOpen(true);\n        // history.push('eventdetails')\n    }\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleSortDateChange = (date) => {\n        console.log(date);\n        setSortStartDate(date);\n    };\n    const handleEndSortDateChange = (date) => {\n        setSortEndDate(date);\n    }\n\n    const handleFeedBackButtonClick = () => {\n        setFeedBackOpen(true);\n    }\n\n    const closeFeedBckDialog = () => {\n        setFeedBackOpen(false);\n    }\n\n    // function handleSortEventModeChamge(event, value) {\n    //     console.log(event);\n    //     console.log(value);\n    // }\n    // console.log(allEvents);\n    function handleSortCollegeChange(event, value) {\n        setSortCollegeType(value);\n    }\n    async function handleSortApplyButton() {\n        // console.log(sortStartDate);\n        // console.log(modeSortChecked);\n        // console.log(sortCollegeType);\n        // console.log(sortCollegeType);\n        //     console.log(user);\n        setFilterDialogOpen(false);\n        if (sortStartDate != null && sortEndDate != null) {\n            const dateRangeSortedEvents = sortByDateRange(sortStartDate, sortEndDate, activeEvents);\n            setSortedEventsArray(dateRangeSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateRangeSortedEvents));\n                const typeSortedEvents = sortByMode(dateRangeSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(typeSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === currentUser.college_name) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateRangeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === currentUser.college_name) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === currentUser.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateRangeSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (sortStartDate != null) {\n            const dateSortedEvents = await sortByDate(sortStartDate, activeEvents)\n            setSortedEventsArray(dateSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateSortedEvents));\n                const typeSortedEvents = sortByMode(dateSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(dateSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === currentUser.collegeName) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === currentUser.collegeName) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === currentUser.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (modeSortChecked.length > 1) {\n            const typeSortedEvents = sortByMode(activeEvents);\n            // console.log(sortByMode(activeEvents));\n\n            setSortedEventsArray(typeSortedEvents);\n            setIsFiltered(true);\n            if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(typeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (feeSortChecked.length > 1) {\n            const feeSortedEvents = sortByCost(activeEvents);\n            setSortedEventsArray(feeSortedEvents);\n            setIsFiltered(true);\n        }\n        else if (sortCollegeType === currentUser.college_name) {\n            // console.log(sortCollegeType);\n            // console.log(currentUser.college_name);\n            const collegeSortedEvents = sortByCollege(activeEvents);\n            setSortedEventsArray(collegeSortedEvents);\n            setIsFiltered(true);\n        }\n    }\n\n    function sortByDateRange(date1, date2, sEvents) {\n        var sortedEvents = [];\n        // console.log(typeof (date1));\n        // console.log(typeof (date1));\n        sEvents.forEach(sEvent => {\n            const d = new Date(sEvent.start_time);\n            if (date1.getTime() <= d.getTime() && d.getTime() <= date2.getTime()) {\n                sortedEvents.push(sEvent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByDate(date, tEvents) {\n        var sDEvents = [];\n        tEvents.forEach(async sevent => {\n            const x = `${date.getDate()}` + date.getMonth() + date.getFullYear();\n            const d = new Date(sevent.start_time);\n            const y = `${d.getDate()}` + d.getMonth() + d.getFullYear();\n            console.log(y);\n            if (x === y) {\n                console.log(sevent);\n                sDEvents.push(sevent);\n            }\n            // console.log(sortedEventsArray);\n        })\n        // console.log(sDEvents);\n        return sDEvents;\n    }\n    function sortByMode(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (modeSortChecked.includes(sevent.event_mode)) {\n                console.log(\"ddd\");\n                sortedEvents.push(sevent);\n            }\n        })\n        // console.log(sortedEvents);\n        return sortedEvents;\n    }\n\n    function sortByCost(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (feeSortChecked.includes(sevent.fee_type)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCollege(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n\n            if (currentUser.college_name === sevent.college_name) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function handlesortDiscardButton() {\n        setModeSortChecked([0])\n        setFeeSortChecked([0])\n        setSortedEventsArray([]);\n        setSortStartDate(null);\n        setSortEndDate(null);\n        setIsFiltered(false);\n        setFilterDialogOpen(false);\n        setSortCollegeType(\"All\")\n        // setChecked(null);\n    }\n    function handlefilterButtonClicked() {\n        setFilterDialogOpen(true);\n    }\n    function handleFilterClose() {\n        setFilterDialogOpen(false);\n    }\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n\n    function handleRegistrationButton(event) {\n        setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    return (\n        <div>\n            <Grid container component=\"main\" >\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} >\n                    <Paper className={classes.root}>\n                        <Paper className={classes.leftSubPaper}>\n                            <SortLeftPanel\n                                handleSortDateChange={handleSortDateChange}\n                                sortStartDate={sortStartDate}\n                                handleEndSortDateChange={handleEndSortDateChange}\n                                sortEndDate={sortEndDate}\n                                handleSortCollegeChange={handleSortCollegeChange}\n                                feeChecked={feeSortChecked}\n                                modeChecked={modeSortChecked}\n                                sortCollgeType={sortCollegeType}\n                                setFeeChecked={setFeeSortChecked}\n                                setModeChecked={setModeSortChecked}\n                                handleSortApplyButton={handleSortApplyButton}\n                                handlesortDiscardButton={handlesortDiscardButton}>\n                            </SortLeftPanel>\n                        </Paper>\n                    </Paper>\n                    <Button className={classes.mobileFilterButton} variant=\"outlined\" onClick={handlefilterButtonClicked} >Filters</Button>\n                </Grid>\n\n                <Grid item xs={12} sm={12} md={9} lg={8} style={{ marginBottom: \"50px\" }}>\n                    <ExplorePanel\n                        isFiltered={isFiltered}\n                        sortedEventsArray={sortedEventsArray}\n                        handleClick={handleClick}\n                        handleImageDialogOpen={handleImageDialogOpen}\n                        handleRegistrationButton={handleRegistrationButton}></ExplorePanel>\n                    {/* <Typography variant=\"h5\" style={{ paddingTop: '5px' }}>\n                        Your College Events\n                    </Typography>\n                    <GridListEvents click={handleClick} events={allEvents.filter((event) => event.college_name === user.college_name)} ></GridListEvents> */}\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px', paddingBottom: '7px' }}>\n                        {/* Active Events */}\n                    </Typography>\n                    {/* {activeEvents.length === 0 && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>} */}\n\n                </Grid>\n                <Grid item xs={12} sm={12} md={4} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                            </Button>\n                            <List className={classes.root2}>\n\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registerdEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                            <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                <ListItemAvatar>\n                                                    <Avatar variant=\"square\"\n                                                        alt={event.name}\n                                                        src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText primary={event.name} />\n\n                                            </ListItem>\n                                            <Divider /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                            <Button\n                                onClick={handleFeedBackButtonClick}\n                                variant=\"outlined\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.feedBackButton}>\n                                Report Bug/Feedback\n                            </Button>\n                        </Paper>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n            <div>\n                <FeedBackDialog open={feedBackOpen} handleClose={closeFeedBckDialog}></FeedBackDialog>\n                {open && <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    // imageUrl={selectedImage}\n                    handleClose={handleClose}\n                    handleReg={handleRegistrationButton}\n                    imageDialog={handleImageDialogOpen}\n                >\n                </EventsDialog>}\n                <ImageDialog\n                    // image={selectedImage}\n                    event={selectedEvent}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose}>\n                </ImageDialog>\n                <Dialog\n                    open={filterDialogOpen}\n                    onClose={handleFilterClose}\n                    fullWidth={true}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                    maxWidth=\"sm\" PaperProps={{\n                        style: {\n                            backgroundColor: \"#1C1C1E\",\n                            boxShadow: 'none',\n                        },\n                    }}>\n                    <DialogTitle>Filters</DialogTitle>\n                    <DialogContent>\n                        <MobileSortPanel\n                            handleSortDateChange={handleSortDateChange}\n                            sortStartDate={sortStartDate}\n                            handleEndSortDateChange={handleEndSortDateChange}\n                            sortEndDate={sortEndDate}\n                            handleSortCollegeChange={handleSortCollegeChange}\n                            feeChecked={feeSortChecked}\n                            modeChecked={modeSortChecked}\n                            setFeeChecked={setFeeSortChecked}\n                            setModeChecked={setModeSortChecked}\n                            handleSortApplyButton={handleSortApplyButton}\n                            handlesortDiscardButton={handlesortDiscardButton}>\n                        </MobileSortPanel>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default withRouter(EventsTabPanel);\n\n","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\nimport { Typography } from '@material-ui/core';\n\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const [open, setOpen] = React.useState(false);\n    const {currentUser} = React.useContext(AuthContext);\n    const {allEvents} = React.useContext(EventsContext);\n    const postedEvents = allEvents.filter((val)=>{\n        return val.user_id === currentUser.user_id;\n    });\n\n    const [selectedEvent,setSellectedEvent] = React.useState(\"\");\n    function handleViewClick(event){\n        setSellectedEvent(event);\n        // setOpen(true);\n    } \n\n    function handleClose(){\n        setOpen(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    postedEvents.length === 0 && <Typography>No Posted Events</Typography>\n                }\n                {postedEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={4} key={index}>\n                    <ProfileEventCard event={event} handleViewClick={handleViewClick} name={event.name} image={url}></ProfileEventCard>\n                    </Grid>) \n                })}\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    handleClose={handleClose}\n                    name={selectedEvent.name}\n                    startTime={selectedEvent.start_time}\n                    endTime={selectedEvent.finish_time}\n                    regEndTime={selectedEvent.registrationEndTime}\n                    type={selectedEvent.eventType}\n                    tags={selectedEvent.tags}\n                    mode={selectedEvent.eventMode}\n                    feeType={selectedEvent.feesType}\n                    url={currentUser.imageUrl}>\n                    {/* imageDialog={handleImageDialogOpen} */}\n                </EventsDialog>\n                    \n                </Grid>\n                \n                {/* <ProfileEventCard></ProfileEventCard> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WcIcon from '@material-ui/icons/Wc';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        paddingLeft: theme.spacing(4),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1.5),\n        padding: theme.spacing(1)\n    }\n\n}));\n\nfunction ProfileDataBox(props) {\n    const classes = useStyles();\n    const [icon,setIcon] = React.useState(<EmailIcon></EmailIcon>)\n    React.useEffect(()=>{\n        switch(props.name){\n            case 'Username':\n                setIcon(<PersonPinCircleIcon></PersonPinCircleIcon>)\n                break;\n            case 'Name':\n                setIcon(<PersonIcon></PersonIcon>)\n                break;\n            case 'College':\n                setIcon(<SchoolIcon></SchoolIcon>)\n                break;\n            case 'Gender':\n                setIcon(<WcIcon></WcIcon>)\n                break;\n            case 'Bio':\n                setIcon(<InfoIcon></InfoIcon>)\n                break;\n            case 'Designation':\n                setIcon(<WorkIcon></WorkIcon>)\n                break;\n            case 'Email':\n                setIcon(<EmailIcon></EmailIcon>)\n                break;\n            default:\n                setIcon(<InfoIcon></InfoIcon>)\n        }\n    },[props.name])\n\n    return (\n        <Box className={classes.root3}>\n            <Box className={classes.avatar}>\n                <Avatar>\n                    {icon}\n                </Avatar>\n            </Box>\n            <Box className={classes.content}>\n                <Box><Typography>{props.name}</Typography></Box>\n                <Box><Typography variant=\"body2\" color=\"textSecondary\">{props.value}</Typography></Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ProfileDataBox;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthContext from '../AuthContext';\nimport Box from '@material-ui/core/Box';\nimport ProfileAboutDataBox from './ProfileAboutDataBox';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    editIcon: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n}));\n\nfunction ProfilePostsTabPanel(props) {\n    const classes = useStyles()\n    const { children, value, url, index, ...other } = props;\n    const {currentUser} = React.useContext(AuthContext);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Box>\n                        <Box className={classes.editIcon}>\n                            <IconButton onClick={props.handleEditButton}><EditIcon></EditIcon></IconButton>\n                        </Box>\n                        <ProfileAboutDataBox name=\"Name\" value={currentUser.name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Email\" value={currentUser.email}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Username\" value={currentUser.username}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"College\" value={currentUser.college_name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Designation\" value={currentUser.designation}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Gender\" value={currentUser.gender}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Bio\" value={currentUser.bio}></ProfileAboutDataBox>\n                    </Box>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main,\n    }\n}));\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const token = localStorage.getItem('token');\n    const [eventName,setEventName] = React.useState(\"\");\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/event/get_event_name?eventId=${event.event_id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n              setEventName(value)\n            })\n          })\n    },[event,token])\n\n    \n    function handleShareClick() {\n        \n    }\n\n    return (\n        <Card className={classes.root}>\n            {/* <CardActionArea> */}\n            {/* <CardMedia\n                component=\"img\"\n                height=\"180\"\n                image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n            /> */}\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {eventName}\n                </Typography>\n            </CardContent>\n\n            <CardActions>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    Download\n                </Button>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    View\n                </Button>\n                <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {event.certificate_status.toUpperCase()}\n                </Typography>\n            </CardActions>\n        </Card>\n    );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport CertificateCard from './CertificateCard';\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const token = localStorage.getItem('token');\n    \n    const [registerdEvents,setRegisteredEvents] = React.useState([]);\n\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/user/get_certificates`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n            //   console.log(value);\n              setRegisteredEvents(value);\n            })\n          })\n    },[token])\n\n    \n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    registerdEvents.length === 0 && <Typography>No Certificates Register for the event to get one</Typography>\n                }\n                {registerdEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={6} key={index}>\n                    <CertificateCard event={event}></CertificateCard>\n                    </Grid>) \n                })}\n                    \n                </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import ProfileEventsTabPanel from './ProfileRegEventsTabPanel';\nimport ProfilePostedEventsTabPanel from './ProfilePostedEventsTabPanel';\nimport AboutProfileTabPanel from './ProfileAboutTabPanel';\nimport AuthContext from '../AuthContext';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ProfileCertificatePanel from './ProfileCertificateTabPanel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        borderRadius: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          }\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n        [theme.breakpoints.down('md')]: {\n            width: theme.spacing(11),\n        height: theme.spacing(11),\n          }\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    iconlarge: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        [theme.breakpoints.down('md')]: {\n            width: theme.spacing(10),\n        height: theme.spacing(10),\n          }\n    },\n}));\n\n\n\n\nfunction Eventcard(props) {\n    localStorage.setItem('tabIndex', 3)\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const {currentUser} = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <Grid container component=\"main\">\n                <CssBaseline />\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.large}\n                                sizes=\"100\" alt=\"profile image\"\n                                src={currentUser.profile_pic !== null && process.env.REACT_APP_API_URL + `/api/image?id=${currentUser.profile_pic}`}\n                                >\n                                <PersonIcon className={classes.iconlarge} ></PersonIcon>\n                            </Avatar>\n                        }\n                        action={\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={props.handleEditButton}>\n                                Edit Profile\n                            </Button>\n                        }\n                        title={\n                            <Typography variant=\"h4\">{currentUser.name}</Typography>\n                        }\n                        subheader={currentUser.bio}\n                    ></CardHeader>\n                </Grid>\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n            </Grid>\n\n            <CardContent>\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"About\" />\n                        {/* <Tab label=\"Registered Events\" /> */}\n                        <Tab label=\"Posted Events\" />\n                        <Tab label=\"Certificates\"></Tab>\n                    </Tabs>\n                </Paper>\n                <div>\n                    <AboutProfileTabPanel handleEditButton={props.handleEditButton} value={value} index={0}></AboutProfileTabPanel>\n                    {/* <ProfileEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfileEventsTabPanel> */}\n                    <ProfilePostedEventsTabPanel  value={value} index={1}></ProfilePostedEventsTabPanel>\n                    <ProfileCertificatePanel value={value} index={2}></ProfileCertificatePanel>\n                </div>\n            </CardContent>\n        </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { Grid, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from '../AuthContext';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n}));\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateInfoTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const { currentUser, setCurrentUser } = React.useContext(AuthContext);\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const [colleges, setColleges] = React.useState([]);\n    const [image, setImage] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [userName, setUserName] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [designation, setDesignation] = React.useState(null);\n    const [collegeName, setCollegeName] = React.useState(null);\n    const [collegeId, setCollegeId] = React.useState(null);\n    const [collegesName, setCollegesName] = React.useState([]);\n    const [imageUrl, setImageurl] = React.useState(null);\n    const [imageUpdated, setImageUpdated] = React.useState(false);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [usernameError, setUserNameError] = React.useState(false);\n    const [updateButtonDisabled, setUpdateButtonDisabled] = React.useState(false);\n\n    React.useEffect(() => {\n        setEmail(currentUser.email);\n        setName(currentUser.name);\n        setUserName(currentUser.username);\n        setDesignation(currentUser.designation);\n        setCollegeName(currentUser.college_name);\n        setCollegeId(currentUser.college_id);\n        setBio(currentUser.bio);\n        setGender(currentUser.gender);\n        fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setColleges(value);\n                value.forEach((v) => {\n                    setCollegesName((collegesNames) => [...collegesNames, v.name])\n                })\n                // setCollegeNames()\n            })\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // console.log(user.college_name);\n\n    const handleClose = async (event, reason) => {\n\n        if (message === \"Updated Successfully\") {\n            // history.replace(\"/home\")\n            fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET'\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        setCurrentUser(value[0]);\n                    })\n                }\n            })\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            //   setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            //   const fileType = event.target.files[0].type;\n            setImageurl(url)\n            setImageUpdated(true);\n            //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    function handleName(event, value) {\n        setName(event.target.value);\n    }\n    function handleEmail(event, value) {\n        setEmail(value);\n    }\n    function handleGender(event, value) {\n        console.log(event.target.value);\n        setGender(event.target.value);\n    }\n    function handleDesig(event, value) {\n        setDesignation(event.target.value);\n    }\n    function handleCollege(event, value) {\n        setCollegeName(value);\n        colleges.forEach(c => {\n            if (c.name === value) {\n                //   props.collegeId(c._id)\n                setCollegeId(c._id);\n            }\n        })\n\n    }\n    // function handleUserName(event,value){\n    //     setUserName(event.target.value);\n    // }\n    function handleBio(event, value) {\n        // console.log(event.target.value)\n        setBio(event.target.value);\n    }\n\n    function handleUpdateButton(event) {\n        event.preventDefault();\n        setLoading(true);\n        // console.log(bio);\n        // console.log(userName)\n\n        try {\n            var data = new FormData()\n            const payload = {\n                name: name,\n                email: email,\n                username: userName,\n                // college_name: collegeName,\n                college_id: collegeId,\n                designation: designation,\n                gender: gender,\n                // college_id: collegeId.value,\n                bio: bio,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL + '/api/users/updateprofile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (imageUpdated) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"Updated Successfully\",\n                                        type: \"success\",\n                                        autoHide: 1000\n                                    })\n                                }\n                                else {\n\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"Something went wrong try again\",\n                                        type: \"error\",\n                                        autoHide: 3000\n                                    })\n\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"Updated Successfully\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n                else {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: \"Something went wrong try again\",\n                        type: \"error\",\n                        autoHide: 3000\n                    })\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    function handleUsernameChange(event) {\n        setUserName(event.target.value);\n        const username = event.target.value;\n        var data = new FormData();\n        const payload = {\n            username: username\n        };\n        data = JSON.stringify(payload);\n        setUserNameError(false);\n        setUpdateButtonDisabled(false)\n        // setSignupButtonDisabled(false)\n        fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((result) => {\n            result.json().then(value => {\n                if (value.message === \"user already exists\") {\n                    setUserNameError(true);\n                    setUpdateButtonDisabled(true)\n                    //   setSignupButtonDisabled(true);\n                }\n            })\n        })\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={6000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    >\n                        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={12} alignContent=\"center\" alignItems=\"center\">\n                            <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                                <Badge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    badgeContent={<label htmlFor=\"contained-button-file\">\n                                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                            <EditIcon></EditIcon>\n                                        </IconButton>\n                                    </label>}>\n                                    <Avatar className={classes.large} sizes=\"100\" alt=\"\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${currentUser.profile_pic}`}></Avatar>\n                                </Badge>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                autoComplete=\"fullName\"\n                                name=\"fullName\"\n                                value={name || \"\"}\n                                onChange={handleName}\n                                id=\"fullName\"\n                                label=\"Full Name\"\n                                autoFocus\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                disabled\n                                id=\"email\"\n                                value={email}\n                                onChange={handleEmail}\n                                fullWidth\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                // variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"User Name\"\n                                value={userName}\n                                onChange={handleUsernameChange}\n                                name=\"username\"\n                                error={usernameError}\n                                helperText={usernameError && \"username already exists\"}\n                            />\n                            {/* <TextField\n                                // variant=\"outlined\"\n                                fullWidth\n                                required\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                value={userName}\n                                onChange={handleUserName}\n                            /> */}\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Autocomplete\n                                fullWidth\n                                id=\"college\"\n                                options={collegesName}\n                                getOptionLabel={(option) => option}\n                                // onChange={handleChange}\n                                value={collegeName}\n                                onChange={handleCollege}\n                                renderInput={(params) => <TextField name=\"college\" fullWidth required {...params} label=\"College\" />}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                                value={bio}\n                                onChange={handleBio}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n                                <Select\n                                    value={gender}\n                                    onChange={handleGender}\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'gender',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"designation\">You are</InputLabel>\n                                <Select\n                                    value={designation}\n                                    onChange={handleDesig}\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'designation',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        className={classes.button}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpdateButton}\n                        disabled={loading || updateButtonDisabled}\n                    // className={classes.submit}\n                    >{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Profile\"}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UpdateInfoTabPanel;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthContext from '../AuthContext';\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const {currentUser} = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error'\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [cPassword,setCPassword] = React.useState(null);\n    const [nPassword,setNPassword] = React.useState(null);\n\n\n    const handleClose = async (event, reason) => {\n        setCPassword(null);\n        setNPassword(null);\n\n        setState({ ...state, open: false });\n    };\n\n    function handleCurrentPasswordChange(event){\n        setCPassword(event.target.value);\n    }\n    function handleNewPasswordChange(event){\n        setNPassword(event.target.value);\n    }\n\n    function handleUpdatePassword(event) {\n        setLoading(true);\n        event.preventDefault();\n        // const { cPassword, nPassword } = event.target.elements;\n        // console.log(cPassword);\n        // console.log(nPassword);\n        try{\n            var data = new FormData()\n        const payload = {\n          email: currentUser.email,\n          cPassword: cPassword,\n          nPassword: nPassword\n        };\n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL+'/api/users/updatepassword', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then(response =>{\n            if (response.status === 200){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: result.message,\n                        type: \"success\"\n                      })\n                })\n            }\n            else if (response.status === 401){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message:result.error,\n                        type: \"error\"\n                      })\n                })\n                \n            }\n           \n        })\n\n\n\n            \n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: error.message,\n              type: \"error\"\n            })\n          }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={2000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    ><Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    \n                    <div className={classes.paper}>\n                        <form className={classes.form} onSubmit={handleUpdatePassword}>\n                            <Grid container spacing={2} justify=\"center\" >\n                            \n\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"cPassword\"\n                                        label=\"Current Password\"\n                                        type=\"password\"\n                                        id=\"cPassword\"\n                                        value={cPassword}\n                                        onChange={handleCurrentPasswordChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"nPassword\"\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        id=\"nPassword\"\n                                        value={nPassword}\n                                        onChange={handleNewPasswordChange}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                            // className={classes.submit}\n                            >\n                                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Password\"}\n                            </Button>\n                        </form>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\nimport { withRouter} from \"react-router\";\n// import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n// import TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import AuthContext from '../AuthContext';\n//function for alert\n// function Alert(props) {\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    // const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [loading, setLoading] = React.useState(false);\n\n\n\n\n    function handleLogoutAll(event) {\n        setLoading(true);\n        event.preventDefault();\n        try {\n            fetch(process.env.REACT_APP_API_URL + '/api/users/logoutall', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST'\n            }).then((result) => {\n                if (result.status === 200) {\n                    result.json().then((data) => {\n                        if (data.message === \"success\") {\n                            setLoading(false);\n                            localStorage.removeItem('token');\n                            localStorage.removeItem('tabIndex');\n                            props.history.replace(\"/\")\n                        }\n                    })\n                }\n                else {\n\n                }\n            })\n        }\n        catch (error) {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Button\n                            onClick={handleLogoutAll}\n                            className={classes.button}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                        >\n                            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Logout of All Devices\"}\n                        </Button>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(UpdatePasswordTabPanel);","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport UpdateInfoTabPanel from './UpdateInfoTabPanel';\nimport UpdatePasswordTabPanel from './UpdatePasswordTabPanel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreSettingsTabPanel from './MoreSettingsTabPanel';\nimport { Box } from '@material-ui/core';\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        // position: 'absolute',\n        // right: theme.spacing(1),\n        // top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n        alignContent:'right',\n        marginRight:theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n        // width: '100%',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n}));\n\nfunction UpdateProfile(props) {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function handleClose() {\n        props.handleClose();\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            style={{ minHeight: \"400px\" }}\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle id=\"scroll-dialog-title\">\n                {/* <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div> */}\n                <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                    </Box>\n                </Box>\n                <div className={classes.root}>\n                    <AppBar style={{ alignItems: 'center' }} position=\"static\" color=\"secondary\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\">\n                            <Tab label=\"Update info\" {...a11yProps(0)} />\n                            <Tab label=\"Change Password\" {...a11yProps(1)} />\n                            <Tab label=\"More Settings\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                <UpdateInfoTabPanel value={value} index={0}></UpdateInfoTabPanel>\n                <UpdatePasswordTabPanel value={value} index={1}></UpdatePasswordTabPanel>\n                <MoreSettingsTabPanel value={value} index={2}></MoreSettingsTabPanel>\n            </DialogContent>\n            <DialogActions alignItems=\"center\">\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default UpdateProfile;","import React from 'react';\nimport ProfileCard from '../Components/MainProfileCard';\nimport { Grid } from '@material-ui/core';\nimport UpdateProfileDialog from '../Components/UpdateProfileDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventsDialog from '../Components/EventsDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\n\nfunction EventsTabPanel(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [eOpen, setEOpen] = React.useState(false);\n    const {activeEvents} = React.useContext(ActiveEvents);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    function handleEditButton() {\n        setOpen(true);\n    }\n    function handleClose() {\n        setOpen(false);\n        setEOpen(false)\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setEOpen(true);\n\n    }\n    return (\n        <div>\n            <div>\n                <Grid container component=\"main\" >\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8}>\n                        <ProfileCard handleEditButton={handleEditButton}></ProfileCard>\n                        <UpdateProfileDialog open={open} handleClose={handleClose}></UpdateProfileDialog>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>\n                                        })\n                                    }\n                                </List>\n\n\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={eOpen}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EventsTabPanel;","import React from 'react';\n\n\n//MaterialUI imports\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [startDateError,setStartDateError] = React.useState(false);\n  const [endDateError,setEndDateError] = React.useState(false);\n  const [regEndDateError,setRegEndDateError] = React.useState(false);\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [eventTypes,setEventTypes] = React.useState([]);\n  React.useEffect(()=>{\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_types', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        value.forEach((v) => {\n          setEventTypes((eventTypes)=>[...eventTypes,v.title]);\n        })\n      })\n    })\n  },[token])\n\n\n  function handleEventNameChange(event) {\n    props.setName(event.target.value)\n  }\n\n  function handleDescChange(event) {\n    props.setDesc(event.target.value);\n  }\n\n  const handleStartDateChange = (date) => {\n    setStartDateError(false);\n    props.setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setEndDateError(false);\n    props.setEndDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDateError(false);\n    props.setRegEndDate(date);\n  };\n\n  function handleEventModeChange(event) {\n    props.setEventMode(event.target.value);\n  }\n  function handleeventTypsChange(event, value) {\n    props.setEventType(value);\n  }\n\n\n  function handleNext(event) {\n    event.preventDefault();\n    if(props.startDate === null){\n      setStartDateError(true)\n    }\n    else if(props.endDate === null){\n      setEndDateError(true);\n    }\n    else if(props.regEndDate === null){\n      setRegEndDateError(true)\n    }\n    else{\n      props.handleNext();\n    }\n    \n  }\n  function handleFeeTypeChange(event, value) {\n    props.setFeeType(value)\n  }\n  function handleRegistrationModeChange(event) {\n    if (event.target.value === \"form\") {\n      props.setSteps((steps) => [...steps, \"Registration Form\"])\n    }\n    else if (event.target.value === \"link\") {\n      props.setSteps(['About', 'More Details']);\n    }\n    props.setRegistrationMode(event.target.value);\n  }\n\n\n  return (\n    <form className={classes.form} onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventName\"\n            name=\"eventName\"\n            label=\"Name\"\n            fullWidth\n            value={props.name || \"\"}\n            onChange={handleEventNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"shortdesc\"\n            name=\"shortdesc\"\n            label=\"Short Description\"\n            fullWidth\n            value={props.desc || \"\"}\n            onChange={handleDescChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n            <DateTimePicker\n            inputProps={{required: true}}            \n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"startDate\"\n              label=\"Start Date\"\n              name=\"startDate\"\n              value={props.startDate}\n              onChange={handleStartDateChange}\n              error={startDateError}\n              helperText={startDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"endDate\"\n              label=\"End Date\"\n              name=\"endDate\"\n              value={props.endDate}\n              onChange={handleendDateChange}\n              error={endDateError}\n              helperText={endDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={12}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"regEndDate\"\n              label=\"Registration End Date\"\n              name=\"regEndDate\"\n              value={props.regEndDate}\n              onChange={handleRegEndDateChange}\n              error={regEndDateError}\n              helperText={regEndDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Mode</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Mode\"\n              inputProps={{\n                name: 'eventMode',\n                id: 'eventMode',\n              }}\n              value={props.eventMode || \"\"}\n              onChange={handleEventModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            fullWidth\n            id=\"combo-box-demo\"\n            options={eventTypes}\n            getOptionLabel={(option) => option}\n            onChange={handleeventTypsChange}\n            value={props.eventType}\n            renderInput={(params) => <TextField fullWidth required {...params} label=\"Type\" />}\n          />\n        </Grid>\n\n\n        <Grid item xs={12}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Registration\"\n              inputProps={{\n                name: 'registrationMode',\n                id: 'registaration mode',\n              }}\n              value={props.registrationMode || \"\"}\n              onChange={handleRegistrationModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"form\">Our Platform(Ellipse)</option>\n              <option value=\"link\">Other</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormLabel component=\"legend\">Entry Fee</FormLabel>\n          <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"Free\" onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n            <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n            <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      <div className={classes.buttons}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >Next\n        </Button>\n      </div>\n    </form>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function AlertDialog(props) {\n\n    const theme = useTheme();\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            >\n                <DialogTitle id=\"title\">{\"Terms and Conditions\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ul>\n                            <li>The information you provided for the event is true and is appropriate.\n                                In case we notice any incorrect information, the event will be suspended and further\n                                action would be taken against you.</li>\n                            <li>The information of participants is only used for event purpose and not for any other purpose. Legal action will\n                             be taken if this information is used elsewhere.</li>\n                            <li>ellipseapp.com reserves the right to update and change these Terms of Service regularly\n                               without notice to you or acceptance by you. </li>\n                        </ul>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport TermsandConditions from '../Components/EventPostTermsandConditions';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  // const [imageName, setImageName] = React.useState(\"\");\n  // const eventThemes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n  const [eventTags,setEventTags] = React.useState([]);\n  const [requirements,setRequirements] = React.useState([]);\n  // const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  const [tandcOpen,setTandcOpen] = React.useState(false);\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if(v.type === \"EventTags\"){\n            setEventTags((eventTags)=> [...eventTags,v.title]);\n          }\n          else if(v.type === \"EventRequirements\"){\n            setRequirements((r)=>[...r,v.title]);\n          }\n        })\n      })\n    })\n  }, [token])\n\n\n  function handleeventTagsChange(event, values) {\n    props.setThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    props.setRequirements(values);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      props.setPoster(event.target.files[0]);\n      const fileName = event.target.files[0].name;\n      props.setImageName(fileName);\n    }\n  }\n  function handleAddressTypeChange(evemt, value) {\n    props.setAddressType(value);\n  }\n\n  function handleRegLinkChange(event) {\n    props.setRegLink(event.target.value);\n  }\n\n  function handleRegFees(event) {\n    props.setFees(event.target.value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // console.log(value);\n    props.setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        props.setCollegeId(c._id)\n      }\n    })\n  }\n  // function handleVenueCollegeChange(event, value) {\n  //   props.setVenueCollege(value);\n  // }\n\n  function handleAboutChange(event) {\n    props.setAbout(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    props.setParticipantsType(value)\n  }\n  function handleBuildingChange(event) {\n    props.setBuilding(event.target.value);\n  }\n  function handlePlatformChange(event){\n    props.setPlatformDetails(event.target.value)\n  }\n  function handleNext(event) {\n    event.preventDefault();\n    props.handleNext();\n  }\n\n  function handleTermsClick(){\n    setTandcOpen(true);\n  }\n\n  function handleTeamChange(event,value){\n    if(value === \"team\"){\n      props.setIsTeam(true);\n    }\n    else{\n      props.setIsTeam(false);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} onSubmit={handleNext}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter everything about your event in detail\"\n              autoComplete='off'\n              required\n              id=\"about\"\n              name=\"about\"\n              label=\"About\"\n              fullWidth\n              onChange={handleAboutChange}\n              value={props.about || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Autocomplete\n              multiple\n              id=\"themes\"\n              options={eventTags.map((option) => option)}\n              freeSolo\n              value={props.eventThemes || []}\n              onChange={handleeventTagsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Event Tags\" placeholder=\"Event Tags\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <input\n              id=\"contained-button-file\"\n              // required\n              type=\"file\"\n              // value={props.poster}\n              accept=\"image/*\"\n              onChange={handleChange}\n              style={{ display: \"none\" }}>\n            </input>\n\n            <TextField\n              autoComplete='off'\n              required\n              id=\"eventposter\"\n              name=\"eventposter\"\n              label=\"Event Poster\"\n              component=\"span\"\n              value={props.imageName || ''}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <label htmlFor=\"contained-button-file\">\n                      <IconButton component=\"span\" >\n                        <CameraAltIcon></CameraAltIcon>\n                      </IconButton>\n                    </label>\n\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </Grid>\n          {props.registrationMode !== \"form\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regLink\"\n              name=\"regLink\"\n              label=\"Registration Link\"\n              fullWidth\n              value={props.regLink || \"\"}\n              onChange={handleRegLinkChange}\n            />\n          </Grid>}\n\n          {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regFees\"\n              name=\"regFees\"\n              label=\"Registration Fees\"\n              fullWidth\n              value={props.regFees || \"\"}\n              onChange={handleRegFees}\n            />\n          </Grid>}\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={requirements.map((option) => option)}\n              freeSolo\n              value={props.requirements || []}\n              onChange={handleRequirementsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Prerequisites\" placeholder=\"Requirements\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              fullWidth\n              id=\"combo-box-demo\"\n              options={collegesNames}\n              value={props.college || []}\n              getOptionLabel={(option) => option}\n              onChange={handleCollegeChange}\n              renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component=\"legend\">Participation</FormLabel>\n            <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"open\" onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n              <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${props.college}`} />\n            </RadioGroup>\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel required component=\"legend\">Participation Type</FormLabel>\n            <RadioGroup required aria-label=\"address\" name=\"teamed\" defaultValue=\"individual\" onChange={handleTeamChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"individual\" control={<Radio color=\"default\" />} label=\"Individual\" />\n              <FormControlLabel value=\"team\" control={<Radio color=\"default\" />} label=\"Team\" />\n            </RadioGroup>\n          </Grid>\n          {props.isTeam && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              type=\"number\"\n              id=\"maxTeam\"\n              name=\"minTeam\"\n              label=\"Minimum Team Members\"\n              fullWidth\n              value={props.minTeamSize || \"\"}\n              onChange={(e)=>{props.setMinTeamSize(e.target.value)}}\n            />\n          </Grid>}\n          {props.isTeam && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              type=\"number\"\n              id=\"maxTeam\"\n              name=\"maxTeam\"\n              label=\"Maximum Team Members\"\n              fullWidth\n              value={props.maxTeamSize || \"\"}\n              onChange={(e)=>{props.setMaxTeamSize(e.target.value)}}\n            />\n          </Grid>}\n          {props.eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              helperText=\"Enter links of your and you can also add or edit later in event edit\"\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              // required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={props.platformDetails || \"\"}\n            />\n          </Grid>}\n          {props.eventMode === \"Offline\" && <React.Fragment>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Venue</FormLabel>\n              <RadioGroup aria-label=\"address\" aria-disabled name=\"address\" defaultValue=\"college\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"College\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel  value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n                multiline={true}\n                helperText=\"Enter links of your and you can also add or edit later in event edit\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Room No,Building,College,State,Pincode\"\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Venue\"\n                fullWidth\n              />\n          </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Room No & Building\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                getOptionLabel={(option) => option}\n                value={props.venueCollege}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid> */}\n          </React.Fragment>}\n          {props.registrationMode !== \"form\" && <Grid item xs={12}>\n          <Typography>By posting the event.I accept the <Button onClick={handleTermsClick} color=\"primary\">Terms and Conditions</Button></Typography>\n          </Grid>\n          }\n        </Grid>\n        <div className={classes.buttons}>\n          <Button onClick={props.handleBack} className={classes.button}>\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >{props.registrationMode !== \"form\" ? \"POST\" : \"NEXT\"}\n          </Button>\n        </div>\n      </form>\n      <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n    </React.Fragment>\n  );\n}","import React from 'react';\n\n//Materail impports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid } from '@material-ui/core';\nimport {useTheme } from '@material-ui/core/styles';\n\n\n\n\n\nexport default function FormDialog(props) {\n  const theme = useTheme();\n  const [name, setName] = React.useState(null);\n  const [type, setType] = React.useState(null);\n  const fieldOptions = [];\n  const [selectedOptions, setSelectedOptions] = React.useState(['option1', 'option2']);\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n  function handleTypeChange(event) {\n    setType(event.target.value);\n  }\n  function handleOptionsChange(event, values) {\n    setSelectedOptions(values);\n  }\n  function handleAddButton() {\n    if(name != null && type != null){\n      // console.log(type)\n      if (type !== \"radiobuttons\" && type !== \"checkboxes\" && type !== \"dropdown\") {\n        props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': [] } }, name);\n      }\n      else {\n        props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': selectedOptions } }, name);\n      }\n      setName(null);\n      setType(null);\n      setSelectedOptions(['option1', 'option2']);\n      props.handleClose()\n    }\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n          boxShadow: 'none',\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Field</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Field Name\"\n                name=\"name\"\n                fullWidth\n                value={name}\n                required\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'outlined-age-native-simple',\n                  }}\n                  value={type}\n                  onChange={handleTypeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"short_text\">Short Text</option>\n                  <option value=\"paragraph\">Long Description</option>\n                  <option value=\"dropdown\">Drop Down</option>\n                  <option value=\"date\">Date & Time</option>\n                  <option value=\"radiobuttons\">Radio Button</option>\n                  <option value=\"checkboxes\">Check Box</option>\n                  <option value=\"link\">Link</option>\n                  <option value=\"file_upload\">File Upload</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {(type === \"radiobuttons\" || type === \"checkboxes\" || type === \"dropdown\") &&\n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"tags-filled\"\n                  options={fieldOptions.map((option) => option)}\n                  freeSolo\n                  value={selectedOptions || []}\n                  onChange={handleOptionsChange}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Options\" placeholder=\"Options\" helperText=\"you can choose multiple options for your checkboxes or radio buttons enter one option and press enter\" />\n                  )}\n                />\n              </Grid>\n            }\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\n\n//Materail impports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n// import Select from '@material-ui/core/Select';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import { NextWeekOutlined } from '@material-ui/icons';\n\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [desc, setDesc] = React.useState('');\n    const [startDate, setStartDate] = React.useState(null);\n    const [endDate, setEndDate] = React.useState(null);\n    const [action, setAction] = React.useState('form');\n    const [link, setLink] = React.useState('');\n    const [open, setOpen] = React.useState(false);\n    const [selectedFields, setSelectedFields] = React.useState([]);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    function handleActionChange(event, value) {\n        setAction(value);\n    }\n\n    function handleAddButton() {\n        props.handleAdd({ \n            title: `Round ${props.roundsCount + 1}`, \n            desc: desc,\n            start_date: startDate,\n            end_date: endDate, \n            action: action, \n            link: link, \n            fields: selectedFields })\n        props.handleClose()\n        setDesc('');\n        setStartDate(null);\n        setEndDate(null);\n        setAction('form');\n        setLink('');\n        setSelectedFields([]);\n\n    }\n\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n\n    const handleDelete = (chipToDelete) => () => {\n        setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    };\n\n    return (\n        <div>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Rounds</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        {/* <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Name\"\n                                name=\"name\"\n                                fullWidth\n                                disabled\n                                value={name}\n                                required\n                                onChange={(e) => { setName(e.target.value) }}\n                            />\n                        </Grid> */}\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc}\n                                required\n                                onChange={(e) => { setDesc(e.target.value) }}\n                            />\n                        </Grid>\n                        \n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n                                <DateTimePicker\n                                    inputProps={{ required: true }}\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"startDate\"\n                                    label=\"Start Date\"\n                                    name=\"startDate\"\n                                    value={startDate}\n                                    onChange={(date) => { setStartDate(date) }}\n                                //   error={startDateError}\n                                //   helperText={startDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DateTimePicker\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"endDate\"\n                                    label=\"End Date\"\n                                    name=\"endDate\"\n                                    value={endDate}\n                                    onChange={(date) => { setEndDate(date) }}\n                                //   error={endDateError}\n                                //   helperText={endDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormLabel component=\"legend\">Action</FormLabel>\n                            <RadioGroup aria-label=\"address\" name=\"address\" value={action} onChange={handleActionChange} style={{ display: \"inline\" }}>\n                                <FormControlLabel value=\"form\" control={<Radio color=\"default\" />} label=\"Create Form\" />\n                                <FormControlLabel value=\"hackathon_template\" control={<Radio color=\"default\" />} label=\"Use Hackathon Template\" />\n                                <FormControlLabel value=\"link\" control={<Radio color=\"default\" />} label=\"Provide Link\" />\n                            </RadioGroup>\n                        </Grid>\n                        {action === \"link\" && <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"platform_link\"\n                                label=\"Platform Link\"\n                                name=\"platform_link\"\n                                fullWidth\n                                value={link}\n                                required\n                                onChange={(e) => { setLink(e.target.value) }}\n                            />\n                        </Grid>}\n                        {action === 'form' && <Grid item xs={12}>\n                            <Typography>Fields</Typography>\n                            <Paper component=\"ul\" className={classes.root}>\n                                {selectedFields.map((data) => {\n                                    return (\n                                        <li key={data.key}>\n                                            <Chip\n                                                label={data.title}\n                                                onDelete={handleDelete(data)}\n                                                className={classes.chip}\n                                            />\n                                        </li>\n                                    );\n                                })}\n                            </Paper>\n                        </Grid>}\n                        {action === \"form\" && <Grid item xs={12}>\n                            {/* <Typography>Fields</Typography> */}\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                onClick={() => { setOpen(true) }}>\n                                Add Field\n                        </Button>\n                        </Grid>}\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <AddFieldDialog\n                open={open}\n                handleAdd={handleFieldAddButton}\n                handleClose={handleClose}>\n            </AddFieldDialog>\n        </div>\n    );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport AddRoundsDialog from '../Components/AddRoundsDialog';\nimport TermsandConditions from '../Components/EventPostTermsandConditions';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(0),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    formControl: {\n        // marginTop: theme.spacing(3),\n    },\n    formgroup: {\n        marginTop: theme.spacing(1),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function AddressForm(props) {\n\n\n    const classes = useStyles();\n    // const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [roundsDialogOpen, setRoundsDialogOpen] = React.useState(false);\n    const [tandcOpen, setTandcOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n        setRoundsDialogOpen(false);\n    };\n\n    const fields = {\n        name: {\n            'title': 'Name',\n            'field': 'short_text',\n            'options': []\n        },\n        email: {\n            'title': 'Email',\n            'field': 'short_text',\n            'options': []\n        },\n        college: {\n            'title': 'College',\n            'field': 'short_text',\n            'options': []\n        },\n\n    }\n    const [selectedFields, setSelectedFields] = React.useState([fields['name'], fields['email']]);\n    const [state, setState] = React.useState({\n        name: true,\n        email: true,\n        college: false,\n    });\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        const sName = event.target.name;\n        if (event.target.checked) {\n            setSelectedFields(selectedFields => [...selectedFields, fields[sName]]);\n        }\n        else if (!event.target.checked) {\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== sName));\n        }\n\n    };\n    const { name, email, college } = state;\n    // console.log(selectedFields);\n    function handleAddMoreButton() {\n        setOpen(true);\n    }\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n    const handleDelete = (chipToDelete) => () => {\n        // console.log(chipToDelete.title)\n        if (chipToDelete.title === 'College') {\n            setState({ ...state, college: false })\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n        }\n        else if (chipToDelete.title !== 'Name' && chipToDelete.title !== 'Email') {\n            setState({ ...state, [chipToDelete.title.toLowercase]: false })\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n        }\n\n    };\n\n    const handleRoundDelete = (chipToDelete) => () => {\n        props.setRounds(rounds => rounds.filter((chip) => chip.title !== chipToDelete.title))\n    }\n\n    async function handlePostButton(e) {\n        e.preventDefault();\n        await props.setFields(selectedFields);\n        props.handlePost(selectedFields);\n    }\n\n    function handleTermsClick() {\n        setTandcOpen(true);\n    }\n\n    const handleAddRounds = (r) => {\n        props.setRounds(rounds => [...rounds, r]);\n    }\n\n    return (\n        <React.Fragment>\n            <form className={classes.form} onSubmit={handlePostButton}>\n                <Grid container spacing={3}>\n                    <AddFieldDialog\n                        open={open}\n                        handleClose={handleClose}\n                        handleAdd={handleFieldAddButton}></AddFieldDialog>\n                    <AddRoundsDialog\n                        roundsCount={props.rounds.length}\n                        open={roundsDialogOpen}\n                        handleClose={handleClose}\n                        handleAdd={handleAddRounds}>\n\n                    </AddRoundsDialog>\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Fields for your Registration Form</FormLabel>\n                            <FormGroup className={classes.formgroup}>\n                                <FormControlLabel\n                                    control={<Checkbox disabled color=\"primary\" checked={name} onChange={handleChange} name=\"name\" />}\n                                    label=\"Name\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox disabled color=\"primary\" checked={email} onChange={handleChange} name=\"email\" />}\n                                    label=\"Email\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={college} onChange={handleChange} name=\"college\" />}\n                                    label=\"College\"\n                                />\n                                {/* <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={phno} onChange={handleChange} name=\"phno\" />}\n                                    label=\"Phone No\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={github} onChange={handleChange} name=\"github\" />}\n                                    label=\"Github\"\n                                /> */}\n                            </FormGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={handleAddMoreButton}>\n                            Add More\n                        </Button>\n                    </Grid>\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {selectedFields.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n                                            label={data.title}\n                                            onDelete={handleDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Rounds(Optional)</FormLabel>\n\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={() => { setRoundsDialogOpen(true) }}>\n                            Add Rounds\n                        </Button>\n                    </Grid>\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {props.rounds.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n                                            label={data.title}\n                                            onDelete={handleRoundDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography>By posting the event.I accept the\n                        <Button color=\"primary\" onClick={handleTermsClick}>\n                                Terms and Conditions\n                        </Button>\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <div className={classes.buttons}>\n                    <Button onClick={props.handleBack} className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}>\n                        Post\n                    </Button>\n                </div>\n            </form>\n            <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n        </React.Fragment>\n    );\n}","import React from 'react';\n\n//Material UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n//Components imports\nimport EventPostDetails1 from '../Components/EventPostDetails1';\nimport EventPostDetails2 from '../Components/EventPostDetails2';\nimport EventPostDetails3 from '../Components/EventPostDetails3';\nimport AuthContext from '../AuthContext';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//function for copy right\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n        ellipseapp.com\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3),\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  stepper: {\n    padding: theme.spacing(3, 8, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(12),\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\n\nexport default function Checkout({ history }) {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const { currentUser } = React.useContext(AuthContext);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(['About', 'More Details']);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const [eventName, setEventName] = React.useState(null);\n  const [shortDesc, setShortDesc] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [registrationMode, setRegistrationMode] = React.useState(null);\n\n\n\n  const [regLink, setRegLink] = React.useState(null);\n  const [fees, setFees] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  const [image, setImage] = React.useState(null);\n  const [addressType, setAddressType] = React.useState(null);\n  const [collegeName, setCollegeName] = React.useState(currentUser.college_name);\n  const [collegeId, setCollegeId] = React.useState(currentUser.college_id)\n  const [building, setBuildingAdress] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(currentUser.name + \",\" + currentUser.college_name);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const [participantsType, setParticipantsType] = React.useState(\"open\");\n  const [fields, setFields] = React.useState([]);\n  const [platformDetails, setPlatformDetails] = React.useState('');\n  const [imageName, setImageName] = React.useState(null);\n  const [isTeam,setIsTeam] = React.useState(false);\n  const [minTeamSize,setMinTeamSize] = React.useState(1);\n  const [maxTeamSize,setMaxTeamSize] = React.useState(1);\n  const [rounds,setRounds] = React.useState([]);\n\n\n\n\n\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <EventPostDetails1\n            name={eventName}\n            desc={shortDesc}\n            startDate={startDate}\n            endDate={endDate}\n            regEndDate={regEndDate}\n            eventMode={eventMode}\n            eventType={eventType}\n            about={about}\n            feeType={feeType}\n            registrationMode={registrationMode}\n            setName={setEventName}\n            setDesc={setShortDesc}\n            setStartDate={setStartDate}\n            setEndDate={setendDate}\n            setRegEndDate={setRegEndDate}\n            setEventMode={setEventMode}\n            setEventType={setEventType}\n            setRegistrationMode={setRegistrationMode}\n            setAbout={setAbout}\n            handleNext={handleNext}\n            setFeeType={setFeeType}\n            steps={steps}\n            setSteps={setSteps} />);\n      case 1:\n        return (\n          <EventPostDetails2\n            handleBack={handleBack}\n            handleEventPost={handleEventPost}\n            eventMode={eventMode}\n            feeType={feeType}\n            eventThemes={eventThemes}\n            eventPoster={image}\n            regLink={regLink}\n            regFees={fees}\n            about={about}\n            requirements={selectedrequirements}\n            college={collegeName}\n            building={building}\n            organizer={organizer}\n            registrationMode={registrationMode}\n            venueCollege={venueCollege}\n            participantsType={participantsType}\n            platformDetails={platformDetails}\n            poster={image}\n            isTeam = {isTeam}\n            minTeamSize={minTeamSize}\n            maxTeamSize={maxTeamSize}\n            setIsTeam={setIsTeam}\n            setMinTeamSize={setMinTeamSize}\n            setMaxTeamSize={setMaxTeamSize}\n            imageName={imageName}\n            setImageName={setImageName}\n            setPlatformDetails={setPlatformDetails}\n            setThemes={setEventThemes}\n            setPoster={setImage}\n            setRegLink={setRegLink}\n            setFees={setFees}\n            setRequirements={setSelectedRequirements}\n            setOrganizer={setOrganizer}\n            setAddressType={setAddressType}\n            setCollegeName={setCollegeName}\n            setCollegeId={setCollegeId}\n            setBuilding={setBuildingAdress}\n            setVenueCollege={setVenueCollege}\n            setAbout={setAbout}\n            setParticipantsType={setParticipantsType}\n            handleNext={registrationMode === \"form\" ? handleNext : handlePostwithoutregFileds} />\n        );\n      case 2:\n        return (\n          <EventPostDetails3\n            handleBack={handleBack}\n            fields={fields}\n            setFields={setRegFields} \n            rounds={rounds}\n            setRounds={setRounds}\n            handlePost={handleEventPost}>\n          </EventPostDetails3>);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\nconsole.log(rounds)\n\n  const handleEventPost = (allFields) => {\n    var oAllowed = false;\n    if (participantsType === \"open\") {\n      oAllowed = true\n    }\n    setLoading(true);\n    try {\n      var data = new FormData();\n      const payload = {\n        user_id: currentUser.user_id,\n        name: eventName,\n        description: shortDesc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: fees,\n        about: about,\n        // organizer: organizer,\n        fee_type: feeType,\n        requirements: selectedrequirements,\n        college_name: collegeName,\n        college_id: collegeId,\n        venue_type: addressType,\n        venue: building,\n        reg_fields: allFields,\n        reg_mode: registrationMode,\n        o_allowed: oAllowed,\n        platform_details: platformDetails,\n        isTeamed: isTeam,\n        team_size: {min_team_size:minTeamSize,max_team_size:maxTeamSize},\n        rounds: rounds\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL + '/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data,\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            var data2 = new FormData();\n            data2.append(\"image\", image);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${value.eventId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data2,\n            }).then(response => {\n              if (response.status === 200) {\n                response.json().then(val => {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"Event added successfully.Manage your posted events from your profile page\",\n                    type: \"success\",\n                    autoHide: \"4000\"\n                  })\n                })\n              }\n              else {\n                setLoading(false);\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: \"Poster upload is not successfull try again in edit event in your events\",\n                  type: \"error\",\n                  autoHide: '5000',\n                })\n              }\n            })\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            // console.log(value);\n          })\n        }\n      })\n\n\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: '5000',\n      })\n    }\n  }\n\n  function setRegFields(f) {\n    setFields(f);\n  }\n\n  function handlePostwithoutregFileds() {\n    handleEventPost(null);\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n    setIsTeam(false)\n  };\n\n  function handleCloseButton() {\n    history.goBack();\n  }\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Event added successfully.Manage your posted events from your profile page\") {\n      history.replace(\"/home\");\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      {<Backdrop open={loading} className={classes.backdrop}><CircularProgress></CircularProgress></Backdrop>}\n      <main className={classes.layout}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleCloseButton}>\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Post your Event\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you.\n                </Typography>\n              </React.Fragment>\n            ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                </React.Fragment>\n              )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n// import clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        // position: 'absolute',\n        // right: theme.spacing(4),\n        // bottom: theme.spacing(4),\n        // left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n        \n    },\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    \n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        // console.log(newmessage);\n        if (newmessage.length > 1) {\n            // console.log(newmessage.length);\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={classes.bottomBar} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    // console.log(props.repliedMessage);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            {props.divider && <Divider></Divider>}\n            {props.divider && <Box m={1} p={1} key={props.index} position=\"sticky\" className={classes.root6}>\n                <Typography variant=\"body2\">{props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}</Typography>\n            </Box>}\n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar  alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{message.user_name + \"   \"}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box>\n                            <IconButton onClick={props.handleReplyButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton>\n                            {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                                <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                            </IconButton>}\n                        </Box>\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                        </Typography>\n                    </Box>\n                    <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                        <Box className={classes.root5}>\n                            <Avatar variant=\"square\" alt={props.repliedMessage[0].userName} src={props.repliedMessage[0].user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${props.repliedMessage[0].user_pic}`} />\n                        </Box>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                <Box flexGrow={1} className={classes.message}>\n                                    <Box>\n                                        <Typography variant=\"body1\">{props.repliedMessage[0].user_name + \"   \"}</Typography>\n                                    </Box>\n                                    <Box style={{ marginLeft: \"7px\" }}>\n                                        <Typography component=\"span\"\n                                            variant=\"body2\"\n                                            style={{ fontSize: \"0.9em\" }}\n                                            color=\"textSecondary\">\n                                            {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                            </Box>\n                            <Box>\n                                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                                    <Linkify\n                                        componentDecorator={(decoratedHref, decoratedText, key) => (\n                                            <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                {decoratedText}\n                                            </a>\n                                        )}\n                                    >{props.repliedMessage[0].message}</Linkify>\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\n\nexport default function AlertDialog(props) {\n\n    const [reply,setReply] = React.useState(null);\n\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  const handleSendButton = () => {\n    props.handleReplyConfirmation(reply)\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Reply Message\"}</DialogTitle>\n        <DialogContent>\n          <TextField name=\"reply\" value={reply} onChange={(ev)=>{setReply(ev.target.value)}} >\n\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSendButton} color=\"primary\" autoFocus>\n            send\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n// import ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport ChatTextField from './MainChatTextField';\nimport { cleanup } from '@testing-library/react';\nimport EventsContext from '../EventsContext';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Avatar from '@material-ui/core/Avatar';\nimport { IconButton, Typography } from '@material-ui/core';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Dialog from '@material-ui/core/Dialog';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport InfoIcon from '@material-ui/icons/Info';\nimport EventsDialog from '../Components/EventsDialog';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n// import { Divider, IconButton } from '@material-ui/core';\n// import { TextField } from '@material-ui/core';\n\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageBox3 from './MessageBox3';\nimport MessageBox4 from './MessageBox4';\nimport MessageBox5 from './MessageBox5';\nimport MessageDeleteDialog from './MessageDeleteDialog';\nimport MessageReplyDialog from './MessageReplyDialog';\n\n\n// import socketIOClient from \"socket.io-client\";\n// const socket = socketIOClient(\"https://staging.ellipseapp.com\",{\n//     path: '/ws',\n//     // transports: ['websocket']\n// });\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n        height: '100%'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    textField: {\n        textAlign: 'center',\n        position: 'fixed',\n        width: '75%',\n        bottom: 0,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        },\n    },\n    header: {\n        position: 'sticky',\n        top: 64,\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(2),\n        zIndex: 8,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const { allEvents } = React.useContext(EventsContext);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const team = props.event;\n    const [loading, setLoading] = React.useState(false);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [openReplyDialog, setOpenReplyDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n    const [messageToBeReplied, setMessagesToBeReplied] = React.useState({});\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { eventChatMessages } = React.useContext(WebSocketDataContext);\n    const { setEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { teamChatMessages } = React.useContext(WebSocketDataContext);\n    const { setTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedTeamChatMessages, setDeletedTeamChatMessages } = React.useContext(WebSocketDataContext);\n    const { deletedEventChatMessages, setDeletedEventChatMessages } = React.useContext(WebSocketDataContext);\n\n\n    React.useEffect(() => {\n\n    }, [])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            if (props.chatType === \"event\") {\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_event_room\",\n                    event_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n            else {\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_team_room\",\n                    team_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n        }\n    }, [webSocketContext, currentUser, event, props])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        if (props.chatType === \"event\") {\n            eventChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                    setEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n                }\n            });\n        }\n        else {\n            teamChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.team_id === event._id) {\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                    setTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n                }\n            });\n        }\n        // eslint-disable-next-line\n    }, [eventChatMessages, event, teamChatMessages])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        if (props.chatType === \"event\") {\n            deletedEventChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                    setDeletedEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n                }\n            })\n        }\n        else {\n            deletedTeamChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.team_id === event._id) {\n                    setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                    setDeletedTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n                }\n            })\n        }\n        // eslint-disable-next-line\n    }, [deletedEventChatMessages, deletedTeamChatMessages])\n\n\n    // if (webSocketContext) {\n    //     webSocketContext.onmessage = (message) => {\n    //         const mes = JSON.parse(message.data);\n    //         const cMes = mes.msg;\n    //         if (props.chatType === \"event\") {\n    //             if (mes.event_id === event._id) {\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n    //         else {\n    //             if (mes.team_id === event._id) {\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n\n    //     }\n    // }\n\n\n    React.useEffect(() => {\n        // console.log(props.chatType);\n        setLoading(true)\n        if (props.chatType === \"event\") {\n            fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setChatMessages(value);\n                    setLoading(false);\n                    // webConnect();\n                })\n            })\n        } else {\n            fetch(process.env.REACT_APP_API_URL + `/api/chat/load_team_chat_messages?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setChatMessages(value);\n                    setLoading(false);\n                    // webConnect();\n                })\n            })\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n\n\n    const handleSendClick = (message) => {\n        const d = new Date();\n        if (props.chatType === \"event\") {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_event_message\",\n                event_id: event._id,\n                msg: {\n                    'id': user.user_id + Date.now(),\n                    'user_id': user.user_id,\n                    'user_name': user.name,\n                    'user_pic': user.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n        else {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_team_message\",\n                team_id: event._id,\n                msg: {\n                    'id': user.user_id + Date.now(),\n                    'user_id': user.user_id,\n                    'user_name': user.name,\n                    'user_pic': user.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(mes);\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        if (props.chatType === \"event\") {\n            webSocketContext.send(JSON.stringify({\n                action: \"delete_event_chat_message\",\n                event_id: event._id,\n                msg: mes\n            }));\n            setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        }\n        else {\n            webSocketContext.send(JSON.stringify({\n                action: \"delete_team_chat_message\",\n                team_id: event._id,\n                msg: mes\n            }));\n            setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        }\n        setOpenDeleteDialog(false);\n    }\n\n    const handleReplyButton = (mes) => () => {\n        setMessagesToBeReplied(mes);\n        setOpenReplyDialog(true);\n    }\n\n    const handleReplyConfirmation = (mes) => {\n        const d = new Date();\n        webSocketContext.send(JSON.stringify({\n            action: \"send_event_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message_type': 'reply_text_message',\n                'message': mes,\n                'replied_to': messageToBeReplied.id,\n                'date': d.toISOString()\n            }\n        }));\n        setMessageToBeDeleted(\"\");\n        setOpenReplyDialog(false);\n    }\n\n    const handleInfoButton = (id) => () => {\n        setSelectedEvent(allEvents.filter((e => { return e._id === id }))[0]);\n        setOpen(true);\n    }\n\n    const handleBackButton = () => {\n        props.openDialog(false)\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.header}>\n                        <Box display=\"flex\">\n                            <Box >\n                                { props.mobile && <IconButton style={{ marginTop: '0px', padding: '0px' }} onClick={handleBackButton}>\n                                    <ArrowBackIosIcon></ArrowBackIosIcon>\n                                </IconButton>}\n                            </Box>\n                            <Box flexGrow={1}>\n                                <Typography>{props.chatType === \"event\" ? event.name : team.team_name}</Typography>\n                            </Box>\n                            <Box>\n                                <IconButton style={{ marginTop: '0px', padding: '0px' }} onClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}>\n                                    <InfoIcon></InfoIcon>\n                                </IconButton>\n                            </Box>\n                        </Box>\n                    </div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.message_type === 'team_status_update_message') {\n                                        return (\n                                            <MessageBox3\n                                                handleViewClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                handleReplyButton={handleReplyButton}\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox3>\n                                        );\n                                    }\n                                    else if (value.message_type === 'reply_text_message') {\n                                        const repliedMessage = chatMessages.filter(m => { return m.id === value.replied_to })\n                                        return (\n                                            <MessageBox5\n                                                divider={true}\n                                                repliedMessage={repliedMessage}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                handleReplyButton={handleReplyButton}\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox5>\n                                        );\n                                    }\n                                    return (\n                                        <MessageBox1\n                                            adminId={props.chatType === \"event\" ? event.user_id : \"\"}\n                                            message={value}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox1>\n                                    );\n\n                                }\n                                if (value.message_type === 'team_status_update_message') {\n                                    return (\n                                        <MessageBox4\n                                            handleViewClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox4>\n                                    )\n                                }\n                                else if (value.message_type === 'reply_text_message') {\n                                    const repliedMessage = chatMessages.filter(m => { return m.id === value.replied_to })\n                                    return (\n                                        <MessageBox5\n                                            divider={false}\n                                            repliedMessage={repliedMessage}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox5>\n                                    );\n                                }\n                                return (\n                                    <MessageBox2\n                                        message={value}\n                                        adminId={props.chatType === \"event\" ? event.user_id : \"\"}\n                                        currentDate={currentDate}\n                                        handleReplyButton={handleReplyButton}\n                                        handleMessageDeleteButton={handleMessageDeleteButton}\n                                        messageDate={messageDate}\n                                        index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n\n                    </Box>\n                    <div className={classes.textField}>\n                        <ChatTextField\n                            loading={loading}\n                            open={undefined}\n                            handleSend={handleSendClick}  ></ChatTextField>\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n\n                    <MessageReplyDialog\n                        open={openReplyDialog}\n                        message={messageToBeReplied}\n                        setOpen={setOpenReplyDialog}\n                        handleReplyConfirmation={handleReplyConfirmation}></MessageReplyDialog>\n                    {open && <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        openTeams={props.chatType === 'event' ? false : true}\n                    // handleReg={handleRegistrationButton}\n                    ></EventsDialog>}\n                </div>\n\n            )}\n        </div>\n    );\n}\n\n// return (\n//     <React.Fragment>\n//         {/* <Divider></Divider> */}\n//         <Box m={1} p={1} key={index} className={classes.root6}>\n//             <Box flexGrow={1} marginTop={1}>\n//                 <Divider></Divider>\n//             </Box>\n//             <Box>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n//             <Box flexGrow={1} marginTop={1}>\n//                 <Divider></Divider>\n//             </Box>\n//         </Box>\n//         <Box m={1} p={1} key={index + 1} className={classes.root3}>\n//             <Box className={classes.root5}>\n//                 <Avatar variant=\"square\" alt={value.userName} src={(value.user_pic !== null && value.user_pic !== \"\") && process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//             </Box>\n//             <Box className={classes.root2} whiteSpace=\"normal\">\n//                 <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n//                     <Box flexGrow={1} className={classes.message}>\n//                         <Box>\n//                             <Typography variant=\"body1\">{value.user_name + \"   \"}</Typography>\n//                         </Box>\n//                         <Box style={{ marginLeft: \"7px\" }}>\n//                             <Typography component=\"span\"\n//                                 variant=\"body2\"\n//                                 style={{ fontSize: \"0.9em\" }}\n//                                 color=\"textSecondary\">\n//                                 {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n//                             </Typography>\n//                         </Box>\n//                     </Box>\n//                     <Box>\n//                         <IconButton style={{ padding: '0px', margin: '0px' }}>\n//                             <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n//                         </IconButton>\n//                         {user.user_id === value.user_id && <IconButton onClick={handleMessageDeleteButton(value)} style={{ padding: '0px', margin: '0px' }}>\n//                             <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n//                         </IconButton>}\n//                     </Box>\n//                 </Box>\n\n//                 <Box>\n//                     <Typography variant=\"body2\"\n//                         style={{ fontSize: \"1.2em\" }}\n//                         color=\"textSecondary\">{value.message}</Typography>\n//                 </Box>\n//             </Box>\n//         </Box>\n//     </React.Fragment>\n// );\n\n\n// return (\n//     <Box m={1} p={1} key={index + 1} className={classes.root3}>\n//         <Box className={classes.root5}>\n//             <Avatar variant=\"square\" alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//         <Box className={classes.root2} whiteSpace=\"normal\">\n//             <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n//                 <Box flexGrow={1} className={classes.message}>\n//                     <Box>\n//                         <Typography variant=\"body1\">{value.user_name + \"   \"}</Typography>\n//                     </Box>\n//                     <Box style={{ marginLeft: \"7px\" }}>\n//                         <Typography component=\"span\"\n//                             variant=\"body2\"\n//                             style={{ fontSize: \"0.9em\" }}\n//                             color=\"textSecondary\">\n//                             {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n//                         </Typography>\n//                     </Box>\n//                 </Box>\n//                 <Box>\n//                     <IconButton style={{ padding: '0px', margin: '0px' }}>\n//                         <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n//                     </IconButton>\n//                     {user.user_id === value.user_id && <IconButton onClick={handleMessageDeleteButton(value)} style={{ padding: '0px', margin: '0px' }}>\n//                         <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n//                     </IconButton>}\n//                 </Box>\n//             </Box>\n//             <Box whiteSpace=\"normal\">\n//                 <Typography className={classes.inline} variant=\"body2\"\n//                     style={{ fontSize: \"1.2em\" }}\n//                     color=\"textSecondary\">{value.message}</Typography>\n//             </Box>\n//         </Box>\n//     </Box>\n// );\n\n\n\n// const webConnect = () => {\n//     const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n//     ws.onopen = () => {\n//         // console.log(\"connected\")\n//         setWebSocket(ws);\n//         if (props.chatType === \"event\") {\n//             ws.send(JSON.stringify({\n//                 action: \"join_event_room\",\n//                 event_id: event._id,\n//                 msg: {\n//                     'user_id': currentUser.user_id,\n//                 }\n//             }));\n//         }\n//         else {\n//             ws.send(JSON.stringify({\n//                 action: \"join_team_room\",\n//                 team_id: event._id,\n//                 msg: {\n//                     'user_id': currentUser.user_id,\n//                 }\n//             }));\n//         }\n\n//         ws.onmessage = (message) => {\n//             const mes = JSON.parse(message.data);\n//             const cMes = mes.msg;\n//             if (props.chatType === \"event\") {\n//                 if (mes.event_id === event._id) {\n//                     setChatMessages(chatMessages => [...chatMessages, cMes]);\n//                 }\n//             }\n//             else {\n//                 if (mes.team_id === event._id) {\n//                     setChatMessages(chatMessages => [...chatMessages, cMes]);\n//                 }\n//             }\n\n//         }\n//         setLoading(false)\n//     }\n//     ws.onclose = () => {\n//         check();\n//         console.log(\"closed\");\n//     }\n// }","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport ChatTextField from '../Components/MainChatTextField';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n// import KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n// import socketIOClient from \"socket.io-client\";\n// import socket from '../SocketClient';\n// import ExpandLess from '@material-ui/icons/ExpandLess';\n// import ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import StarBorder from '@material-ui/icons/StarBorder';\n// import Collapse from '@material-ui/core/Collapse';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import { Route } from 'react-router';\n// import ChatPanel from '../Components/ChatPanel';\nimport { IconButton, Paper, Typography } from '@material-ui/core';\nimport EventsContext from '../EventsContext';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n// import EventsContext from '../EventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'fixed',\n        width: '25%',\n        height: '93%',\n        backgroundColor: theme.palette.secondary.main,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            height: '86%'\n        },\n    },\n    root2: {\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nfunction ChatPage(props) {\n    // const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const theme = useTheme();\n    const classes = useStyles();\n    const { allEvents } = React.useContext(EventsContext);\n    const [teams, setTeams] = React.useState([]);\n    // const [open, setOpen] = React.useState(false);\n    const [checked, setChecked] = React.useState([0]);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/user/get_all_teams', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            // console.log(response);\n            if (response.status === 200) {\n                response.json().then(value => {\n\n                    setTeams(value);\n                    // console.log(value);\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                // setAuthorized(false);\n            }\n\n        })\n    }, [token])\n    const handleToggle = (value, userid) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // setOpen(!open);\n        props.setChatType('event')\n        props.setChatId(value);\n        props.setAdminId(userid);\n        if (theme.breakpoints.width('md') >= window.innerWidth) {\n            props.openDialog(true);\n        }\n        setChecked(newChecked);\n    };\n\n    const handleToggle2 = (value, userid) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // setOpen(!open);\n        props.setChatType('team')\n        props.setChatId(value);\n        props.setAdminId(userid);\n        setChecked(newChecked);\n        if (theme.breakpoints.width('md') >= window.innerWidth) {\n            props.openDialog(true);\n        }\n    };\n\n    // const handleClick = (v) => () => {\n    //     console.log(v);\n    //     // history.push('/chat/1')\n    // };\n\n\n    return (\n        // <div>\n        //     <div className={classes.root}>\n        //            {/* <Typography>Chat</Typography> */}\n        //            {/* <Typography>Chat</Typography>     */}\n        //     </div>\n\n        // </div>\n        <div>\n            <div className={classes.root}>\n                <Paper className={classes.root}>\n                    {/* <Box display=\"flex\" justifyContent=\"center\">\n                        <Box paddingRight={1} paddingLeft={1}>\n                            <IconButton>\n                                <Box >\n                                    <Box>\n                                        <PhoneIcon color=\"primary\" />\n                                    </Box>\n                                    <Box>\n                                        <Typography color=\"textSecondary\" variant=\"body2\">Events</Typography>\n                                    </Box>\n                                </Box>\n                            </IconButton>\n                        </Box>\n                        <Box paddingRight={1} paddingLeft={1}>\n                            <IconButton>\n                                <Box >\n                                    <Box>\n                                        <PhoneIcon color=\"primary\" />\n                                    </Box>\n                                    <Box>\n                                        <Typography color=\"textSecondary\" variant=\"body2\">Events</Typography>\n                                    </Box>\n                                </Box>\n                            </IconButton>\n                        </Box>\n                        <Box paddingRight={1} paddingLeft={1}>\n                            <IconButton>\n                                <Box >\n                                    <Box>\n                                        <PhoneIcon color=\"primary\" />\n                                    </Box>\n                                    <Box>\n                                        <Typography color=\"textSecondary\" variant=\"body2\">Events</Typography>\n                                    </Box>\n                                </Box>\n                            </IconButton>\n                        </Box>\n                    </Box> */}\n                    {/* <ChatTextField></ChatTextField> */}\n                    <List className={classes.root2}>\n                        {regEvents.map((value) => {\n                            const labelId = `checkbox-list-label-${value._id}`;\n                            return (\n                                <React.Fragment>\n                                    <ListItem key={value._id} role={undefined} dense button\n                                        selected={checked.indexOf(value) !== -1}\n                                        onClick={handleToggle(value, value.user_id)}>\n                                        <ListItemIcon>\n                                            <ListItemAvatar>\n                                                <Avatar\n                                                    alt={`Avatar n°${value + 1}`}\n                                                    src={process.env.REACT_APP_API_URL + `/api/image?id=${value.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={value.name} />\n                                        <ArrowForwardIosIcon></ArrowForwardIosIcon>\n                                        {/* {checked.indexOf(value._id) !== -1 ? <ExpandLess /> : <ExpandMore />} */}\n                                    </ListItem>\n                                    {/* <Collapse in={checked.indexOf(value._id) !== -1} timeout=\"auto\" unmountOnExit> */}\n                                    {/* <List component=\"div\" disablePadding>\n                                            <ListItem key={value} className={classes.nested} button onClick={handleClick(value)}>\n                                                <ListItemText primary=\"Not Registered\" />\n                                                <KeyboardArrowRightIcon></KeyboardArrowRightIcon>\n                                            </ListItem>\n                                        </List>\n                                        <List component=\"div\" disablePadding>\n                                            <ListItem button className={classes.nested}>\n                                                <ListItemText primary=\"Registered\" />\n                                                <KeyboardArrowRightIcon></KeyboardArrowRightIcon>\n                                            </ListItem>\n                                        </List> */}\n                                    {/* </Collapse> */}\n                                </React.Fragment>\n                            );\n                        })}\n                        {teams.map((value) => {\n                            const labelId = `checkbox-list-label-${value._id}`;\n                            return (\n                                <React.Fragment>\n                                    <ListItem key={value._id} role={undefined} dense button\n                                        selected={checked.indexOf(value) !== -1}\n                                        onClick={handleToggle2(value, value.user_id)}>\n                                        <ListItemIcon>\n                                            <ListItemAvatar>\n                                                <Avatar\n                                                    alt={value.team_name}\n                                                    src=\"abc.jpg\"\n                                                />\n                                            </ListItemAvatar>\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={value.team_name} />\n                                        <ArrowForwardIosIcon></ArrowForwardIosIcon>\n                                        {/* {checked.indexOf(value._id) !== -1 ? <ExpandLess /> : <ExpandMore />} */}\n                                    </ListItem>\n                                </React.Fragment>\n                            );\n                        })}\n                    </List>\n                </Paper>\n            </div>\n        </div>\n    );\n}\n\nexport default ChatPage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Paper from '@material-ui/core/Paper'\nimport ChatPanel from '../Components/MainChatPanel';\nimport ChatContactsPanel from '../Pages/ChatContactsPanel';\nimport AuthContext from '../AuthContext';\n// import MobileChatPanel from '../Components/MobileChatPanel';\n// import { Typography, Paper } from '@material-ui/core';\n// import socket from '../SocketClient';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.light\n\n    },\n    mobile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nfunction ChatPage({ history }) {\n    // const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [selectedChat, setSelectedChat] = React.useState(null);\n    const [adminId, setAdminId] = React.useState(null);\n    const [checked, setChecked] = React.useState([0]);\n    const [chatType, setChatType] = React.useState('');\n    const [mobileChat, setMobileChat] = React.useState(false);\n\n\n    return (\n        <div>\n            <div>\n                {!mobileChat && <Grid container >\n                    <Grid item xs={12} sm={12} md={3} lg={3}  >\n                        <ChatContactsPanel mobile={false} chatType={chatType} openDialog={setMobileChat} setChatType={setChatType} checked={checked} setChecked={setChecked} setAdminId={setAdminId} setChatId={setSelectedChat}></ChatContactsPanel>\n                    </Grid>\n                    <Grid item xs={9} sm={12} md={9} lg={9}>\n                        {selectedChat != null && <ChatPanel chatType={chatType} user={currentUser} adminId={adminId} event={selectedChat}></ChatPanel>}\n                    </Grid>\n                </Grid>}\n                {mobileChat && <Grid container>\n                    <Grid item xs={12}>\n                        <Paper className={classes.mobile}>\n                            <ChatContactsPanel></ChatContactsPanel>\n                            {selectedChat != null && <ChatPanel mobile={true} openDialog={setMobileChat} chatType={chatType} user={currentUser} adminId={adminId} event={selectedChat}></ChatPanel>}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default ChatPage;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport Logo from '../Components/Images/logo.svg';\nimport { Button } from '@material-ui/core';\n\n\nimport { Redirect } from 'react-router';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n\n    grow: {\n        flexGrow: 1,\n        alignItems: 'center',\n    },\n    sectionDesktop: {\n\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    tabs: {\n        display: 'none',\n        [theme.breakpoints.up('lg')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginLeft: theme.spacing(4),\n        },\n    },\n    mobiletab: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    tabPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    flex_section: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'row',\n        // minHeight: 0\n    },\n\n    flex_col_scroll: {\n        flexGrow: 1,\n        overflow: 'auto',\n        // minHeight: '100vh'\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n        fontFamily: 'Gugi',\n        marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n    },\n    '@global': {\n        '*::-webkit-scrollbar': {\n            width: '0.5em',\n            height: '0.5em'\n        },\n        '*::-webkit-scrollbar-track': {\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '*::-webkit-scrollbar-thumb': {\n            backgroundColor: '#ad9d9d',\n            outline: '1px solid slategrey'\n        }\n    },\n    mobileTitle: {\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n\n    },\n    titleButton: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'inline-block',\n        },\n        margin: theme.spacing(0),\n        padding: theme.spacing(0),\n        textTransform: 'none'\n    },\n    eventName: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    }\n}));\n\nexport default function MiniDrawer(props) {\n    const classes = useStyles();\n    // const theme = useTheme();\n    const t = localStorage.getItem('theme');\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n    // const [value, setValue] = React.useState(0);\n    // const [searchedEvent, setSearchedEvent] = React.useState([]);\n\n    const isMenuOpen = Boolean(anchorEl);\n    // const [open, setOpen] = React.useState(false);\n    const token = localStorage.getItem('token');\n\n    const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n    // const [currentUser, setCurrentUser] = React.useState({});\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n\n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // setCurrentUser(value[0]);\n                    props.setUser(value[0])\n                    if (value[0].college_name === null) {\n                        setUserDetailsDone(false);\n                    }\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n\n        // eslint-disable-next-line\n    }, [token])\n\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        return <Redirect to=\"/userinfo\"></Redirect>\n    }\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        // setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n\n\n    function handleThemeChange(event) {\n        // console.log(event.target.checked);\n        setDarkThemeSelected(event.target.checked);\n        if (event.target.checked) {\n            localStorage.setItem('theme', 'dark');\n            window.location.reload(false);\n        }\n        else {\n            localStorage.setItem('theme', 'light');\n            window.location.reload(false);\n        }\n    }\n\n\n\n    function handleSignout(event) {\n\n        fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then((result) => {\n            result.json().then((data) => {\n                if (data.message === \"success\") {\n                    localStorage.removeItem('token');\n                    localStorage.removeItem('tabIndex');\n                    props.handleSignout()\n                }\n            })\n        })\n\n    }\n    function handleHomeClick() {\n        props.handleHomeClick()\n        // props.history.push(\"/home\")\n        // localStorage.setItem('tabIndex',2);\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}>\n            <MenuItem> Dark Theme <Switch\n                checked={darkThemeSelected}\n                onChange={handleThemeChange}\n                color=\"primary\"\n                name=\"checkedB\"\n                inputProps={{ 'aria-label': 'dark mode checkbox' }}\n            /></MenuItem>\n            <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n        </Menu>\n    );\n\n    const handleClose = () => {\n        setNotificationsOpen(false);\n    };\n\n    function handleNotificationClick() {\n        setNotificationsOpen(true);\n    }\n\n\n    const handleDrawerOpen = () => {\n        props.setDOpen(true);\n    };\n\n    function handleTitleButtonClick() {\n        localStorage.setItem('tabIndex', 0)\n        props.handleHomeClick()\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                color=\"secondary\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: props.dOpen,\n                })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: props.dOpen,\n                        })}>\n                        <MenuIcon color=\"primary\" />\n                    </IconButton>\n                    <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n                    <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n                        <Typography className={classes.title} variant=\"h5\" noWrap>\n                            Ellipse\n                        </Typography>\n                    </Button>\n                    <div className={classes.grow} />\n                    <Typography className={classes.eventName} variant=\"h5\" noWrap>{props.event.name}</Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton onClick={handleHomeClick}><HomeIcon></HomeIcon></IconButton>\n                        <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                            <Badge badgeContent={0} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\">\n                            <SettingsIcon></SettingsIcon>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMenu}\n            <NotificationsDialog open={notificationsOpen} handleClose={handleClose}></NotificationsDialog>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setAnnouncements(value);\n      })\n    })\n  }, [token, event._id])\n\n  const handleDeleteButton = (a) => () =>{\n    fetch(process.env.REACT_APP_API_URL+`/api/event/delete_announcement?id=${a._id}&event_id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n      }).then(response => {\n        response.json().then(value => {\n            setAnnouncements(value);\n        })\n      })\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Button onClick={handleDeleteButton(a)}>Delete</Button>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\n\n\n//Materail imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function AnnouncementForm(props) {\n  const theme = useTheme()\n  const token = localStorage.getItem('token');\n  const [title, setTitle] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [visibility, setVisibility] = React.useState(\"All\");\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleDescChange(event) {\n    setDesc(event.target.value);\n  }\n\n\n  function handleVisibilityChange(event, value) {\n    console.log(value);\n    setVisibility(value);\n  }\n  function handleAddButton() {\n    // console.log(visibility);\n    var visible_all = true;\n    if (visibility !== \"All\") {\n      visible_all = false;\n    }\n    try {\n      var data = new FormData();\n      const d = { event_id: props.id, title: title, description: desc, visible_all: visible_all }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL+`/api/event/add_announcement`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Added successfully',\n            type: \"success\",\n            autoHide: 2000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n    props.handleClose()\n\n  }\n  const handleClose = async (event, reason) => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Announcement</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                fullWidth\n                value={title}\n                required\n                onChange={handleTitleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                fullWidth\n                value={desc}\n                required\n                onChange={handleDescChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Announcement visibility</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={visibility} onChange={handleVisibilityChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"All\" control={<Radio color=\"default\" />} label=\"All\" />\n                <FormControlLabel value=\"Registered Users\" control={<Radio color=\"default\" />} label=\"Registered Users\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Add\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {  useTheme } from '@material-ui/core/styles';\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SendEmailForm(props) {\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const [content, setContent] = React.useState(null);\n\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleContentChange(event) {\n        setContent(event.target.value);\n    }\n\n    function handleAddButton() {\n        try {\n            var data = new FormData();\n            const d = { \n                event_id: props.id, \n                title: title, \n                content: content,\n                emails: props.emails}\n            data = JSON.stringify(d);\n            console.log(data);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/sendemail`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                response.json().then(value => {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Added successfully',\n                        type: \"success\",\n                        autoHide: 2000\n                    });\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n        props.handleClose()\n\n    }\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    // boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Content for your Email</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Enter everything about your event in detail\"\n                                autoComplete='off'\n                                required\n                                id=\"content\"\n                                name=\"content\"\n                                label=\"Content\"\n                                fullWidth\n                                onChange={handleContentChange}\n                                value={content || \"\"}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button, IconButton } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AddAnnouncementForm from './AddAnnouncementForm';\nimport SendEmailForm from './SendEmailForm';\n\nimport { CSVLink } from \"react-csv\";\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n    // maxWidth: 880\n    // width: '100%',\n  },\n  table: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [announcementDialog, setAnnouncementDialog] = React.useState(false);\n  const [sendEmailDialog, setSendEmailDialog] = React.useState(false);\n  const [fileColumns, setFileColumns] = React.useState([]);\n  const event = props.event;\n\n  React.useEffect(() => {\n    event.reg_fields.forEach(v => {\n      if (v.field === \"file_upload\") {\n        setFileColumns([...fileColumns, v.title]);\n      }\n    })\n    // eslint-disable-next-line\n  }, [event,fileColumns])\n\n  // console.log(fileColumns);\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    setHeaders([]);\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, key: item, label: item, minWidth: 170 }]));\n          })\n          value.forEach(d => {\n            setRowValues(rowValues => [...rowValues, d.data]);\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  function handleAddAnnouncement() {\n    setAnnouncementDialog(true);\n  }\n\n  function handleAnnoucementClose() {\n    setAnnouncementDialog(false);\n  }\n\n  // function handleSendEmail() {\n  //   console.log(selected);\n  //   setSendEmailDialog(true);\n  // }\n  function handleSendEmailClose() {\n    setSendEmailDialog(false);\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <SendEmailForm open={sendEmailDialog} emails={selected} handleClose={handleSendEmailClose}></SendEmailForm>\n      <AddAnnouncementForm open={announcementDialog} id={event._id} handleClose={handleAnnoucementClose}></AddAnnouncementForm>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n\n          <Button variant=\"contained\" onClick={handleAddAnnouncement} className={classes.button}>Add Announcement</Button>\n          {/* <Button variant=\"contained\" onClick={()=>saveAsCsv({ fields, data, filename })} className={classes.button}>Add Announcement</Button> */}\n          {/* <Button variant=\"contained\" onClick={handleSendEmail} className={classes.button}>Send Emails to Selected</Button> */}\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3} >\n        <Paper className={classes.fixedHeightPaper}>\n          <Typography>Total Registrations</Typography>\n          <Typography component=\"p\" variant=\"h4\">\n            {rowValues.length}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Button variant=\"contained\" className={classes.button}><CSVLink filename={event.name + '.csv'} headers={headers} data={rowValues} style={{ color: '#000000' }}>Download as csv</CSVLink></Button>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                </TableRow>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        if (fileColumns.includes(column.id)) {\n                          return <TableCell key={column.id} align={column.align}>\n                            <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${row[column.id]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                          </TableCell>\n                        } else {\n                          const value = column.id === \"Email\" ? row[column.id].substr(0, 3) + '*****@' + row[column.id].split('@')[1] : row[column.id];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                              {column.format && typeof value === 'number' ? column.format(value) : value}\n                            </TableCell>\n                          );\n                        }\n\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\n// import ChatMessage from '../Components/ChatMessage';\n// import AuthContext from '../AuthContext';\n// import WebSocketContext from '../WebSocketContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport { Divider, IconButton } from '@material-ui/core';\n// import { TextField } from '@material-ui/core';\n\n// import socketIOClient from \"socket.io-client\";\n// const socket = socketIOClient(\"https://staging.ellipseapp.com\",{\n//     path: '/ws',\n//     // transports: ['websocket']\n// });\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    // console.log(event)\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            // console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        // socket.on('connect',()=>{\n        //     console.log(socket.id);\n        //     console.log(\"connected\");\n        // })\n        // // socket.on('error',())\n        // socket.emit('initial_room',event._id);\n        // socket.on('chatmessage',(message)=>{\n        //     const mes = JSON.parse(message);\n        //         const cMes = mes.msg;\n        //         if (mes.event_id === event._id) {\n        //             // console.log(cMes);\n        //             setChatMessages(chatMessages => [...chatMessages, cMes]);\n        //         }\n        // })\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                // setLoading(false)\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        // socket.emit(\"chatmessage\",JSON.stringify({\n        //     action: \"send_message\",\n        //     event_id: event._id,\n        //     msg: {\n        //         'id': user.user_id + Date.now(),\n        //         'user_id': user.user_id,\n        //         'user_name': user.name,\n        //         'user_pic': user.profile_pic,\n        //         'message': message,\n        //         'date': d.toISOString()\n        //     }\n        // }));\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message_type': 'normal_text_message',\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                const date = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    return (\n                                        <React.Fragment>\n                                            <Divider></Divider>\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n                                                <Box className={classes.root5}>\n                                                    <Avatar variant=\"square\" alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\">\n                                                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                                        <Box flexGrow={1} className={classes.message}>\n                                                            <Box>\n                                                                <Typography variant=\"body1\">{value.user_name + \"   \"}</Typography>\n                                                            </Box>\n                                                            <Box style={{ marginLeft: \"7px\" }}>\n                                                                <Typography component=\"span\"\n                                                                    variant=\"body2\"\n                                                                    style={{ fontSize: \"0.9em\" }}\n                                                                    color=\"textSecondary\">\n                                                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                                                </Typography>\n                                                            </Box>\n                                                        </Box>\n                                                        <Box>\n                                                    <IconButton style={{padding:'0px',margin:'0px'}}>\n                                                        <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                                                    </IconButton>\n                                                    {user.user_id === value.user_id && <IconButton style={{padding:'0px',margin:'0px'}}>\n                                                        <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                                                    </IconButton>}\n                                                </Box>\n                                                    </Box>\n\n                                                    <Box>\n                                                        <Typography variant=\"body2\"\n                                                            style={{ fontSize: \"1.2em\" }}\n                                                            color=\"textSecondary\">{value.message}</Typography>\n                                                    </Box>\n                                                </Box>\n                                            </Box>\n                                        </React.Fragment>\n                                    );\n                                }\n                                return (\n                                    <Box m={1} p={1} key={index + 1} className={classes.root3}>\n                                        <Box className={classes.root5}>\n                                            <Avatar variant=\"square\" alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                                <Box flexGrow={1} className={classes.message}>\n                                                    <Box>\n                                                        <Typography variant=\"body1\">{value.user_name + \"   \"}</Typography>\n                                                    </Box>\n                                                    <Box style={{ marginLeft: \"7px\" }}>\n                                                        <Typography component=\"span\"\n                                                            variant=\"body2\"\n                                                            style={{ fontSize: \"0.9em\" }}\n                                                            color=\"textSecondary\">\n                                                            {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                                        </Typography>\n                                                    </Box>\n                                                </Box>\n                                                <Box>\n                                                    <IconButton style={{padding:'0px',margin:'0px'}}>\n                                                        <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                                                    </IconButton>\n                                                    {user.user_id === value.user_id && <IconButton style={{padding:'0px',margin:'0px'}}>\n                                                        <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                                                    </IconButton>}\n                                                </Box>\n                                            </Box>\n                                            <Box whiteSpace=\"normal\">\n                                                <Typography className={classes.inline} variant=\"body2\"\n                                                    style={{ fontSize: \"1.2em\" }}\n                                                    color=\"textSecondary\">{value.message}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                );\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div className={classes.textField}>\n                            {/* <TextField\n                                // disabled={props.loading}\n                                fullWidth\n                                placeholder=\"Type your message\"\n                                multiline\n                                // onChange={handleNewMessage}\n                                // value={newmessage || \"\"}\n                                rowsMax=\"3\"\n                            // onKeyUp={handleKeyPress}\n                            >\n\n                            </TextField> */}\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    // padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    // margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst EventEdit = (props) => {\n  var event = props.event;\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error'\n  });\n\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [regLink, setRegLink] = React.useState(null);\n  const [regFees, setRegFees] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  // const [image, setImage] = React.useState(null);\n  // const [imageName, setImageName] = React.useState(\"\");\n  const [addressType, setAddressType] = React.useState(\"\");\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [regMode, setRegMode] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(null);\n  const [participantType, setParticipantsType] = React.useState(\"open\");\n  const [image, setImage] = React.useState(null);\n  const [imageUrl, setImageurl] = React.useState(null);\n  const [imageUpdated, setImageUpdated] = React.useState(false);\n  const [venue, setVenue] = React.useState(null);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const { vertical, horizontal, open, message, type } = state;\n  const [colleges, setColleges] = React.useState([]);\n  // const [collegesNames, setCollegesName] = React.useState([]);\n\n  const token = localStorage.getItem('token');\n  const [eventTags, setEventTags] = React.useState([]);\n  const [requirements, setRequirements] = React.useState([]);\n  const [eventTypes, setEventTypes] = React.useState([]);\n  const [platformDetails, setPlatformDetails] = React.useState('');\n  const [isTeamed, setIsTeamed] = React.useState(false);\n  const [teamSize, setTeamSize] = React.useState({});\n\n\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  // const colleges = [\"VIT University\", \"GITAM University\", \"SRM University\"];\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        // value.forEach((v) => {\n        //   setCollegesName((collegesNames) => [...collegesNames, v.name])\n        // })\n      })\n    })\n  }, [token])\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setendDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDate(date)\n  };\n  React.useEffect(() => {\n    setEventThemes(event.tags);\n    setEventType(event.event_type);\n    setName(event.name);\n    setDesc(event.description);\n    setStartDate(event.start_time);\n    setendDate(event.finish_time);\n    setRegEndDate(event.registration_end_time);\n    setEventMode(event.event_mode);\n    setRegLink(event.reg_link);\n    setAbout(event.about);\n    setRegFees(event.fees);\n    setSelectedRequirements(event.requirements);\n    setFeeType(event.fee_type);\n    setCollegeName(event.college_name);\n    setRegMode(event.reg_mode);\n    setOrganizer(event.organizer);\n    setVenue(event.venue);\n    setVenueCollege(event.venue_college);\n    setPlatformDetails(event.platform_details);\n    setAddressType(event.venue_type);\n    setIsTeamed(event.isTeamed);\n    setTeamSize(event.team_size);\n\n    // setParticipantsType(event.o_allowed)\n    if (event.o_allowed === true) {\n      setParticipantsType(\"open\")\n    }\n    else {\n      setParticipantsType(\"onlycollege\")\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if (v.type === \"EventTags\") {\n            setEventTags((eventTags) => [...eventTags, v.title]);\n          }\n          else if (v.type === \"EventRequirements\") {\n            setRequirements((r) => [...r, v.title]);\n          }\n          else {\n            setEventTypes((r) => [...r, v.title]);\n          }\n        })\n      })\n    })\n\n  }, [token, event])\n\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Saved changes successfully\") {\n      // history.replace()\n      // history.replace(\"/otpverification\")\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  };\n\n  async function handleEventPost(e) {\n    e.preventDefault();\n    setLoading(true);\n    var oAllowed = false;\n    if (participantType === \"open\") {\n      oAllowed = true\n    }\n    // console\n    try {\n      // console.log(\"started\");\n      // getBase64(image, (result) => {\n      var data = new FormData();\n      const payload = {\n        eventId: event._id,\n        name: name,\n        description: desc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        // poster: result,\n        reg_link: regLink,\n        fee: regFees,\n        about: about,\n        fee_type: feeType,\n        college: collegeName,\n        organizer: organizer,\n        requirements: selectedrequirements,\n        o_allowed: oAllowed,\n        reg_mode: regMode,\n        venue_type: addressType,\n        venue: venue,\n        venue_college: venueCollege,\n        platform_details: platformDetails\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/updateevent', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            // console.log(value);\n            event = value.event;\n            if (imageUpdated) {\n              var data2 = new FormData()\n              data2.append(\"image\", image);\n              fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${event._id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: data2\n              }).then(res => {\n                if (res.status === 200) {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"successful\",\n                    type: \"success\",\n                    autoHide: 300\n                  })\n                }\n              })\n            }\n            else {\n              setLoading(false);\n              setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"Saved changes successfully\",\n                type: \"success\"\n              })\n            }\n            // history.replace(\"/home\")\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: value,\n              type: \"error\"\n            })\n          })\n        }\n      })\n\n      // })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleeventTypsChange(event, value) {\n    setEventType(value);\n  }\n\n  function handleeventTagsChange(event, values) {\n    setEventThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    setSelectedRequirements(values);\n  }\n\n  // function handleChange(event) {\n  //   if (event.target.files[0]) {\n  //     setImage(event.target.files[0]);\n  //     const fileName = event.target.files[0].name;\n  //     setImageName(fileName);\n  //   }\n\n  // }\n\n  function handleAddressTypeChange(evemt, value) {\n    setAddressType(value);\n  }\n  function handleName(event) {\n    setName(event.target.value)\n  }\n  function handleDesc(event) {\n    setDesc(event.target.value);\n  }\n  function handleFeeTypeChange(event, value) {\n    // props.setFeeType(value)\n    setFeeType(value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // props.setCollegeName(value);\n    setCollegeName(value);\n  }\n  function handleEventMode(event) {\n    setEventMode(event.target.value);\n  }\n\n  function handleRegLink(event) {\n    setRegLink(event.target.value);\n  }\n  function handleFees(event) {\n    setRegFees(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    setParticipantsType(value)\n  }\n  function handleVenue(event) {\n    setVenue(event.target.value);\n  }\n  // function handleVenueCollegeChange(event, value) {\n  //   setVenueCollege(value);\n  // }\n\n  function handlePlatformChange(event) {\n    setPlatformDetails(event.target.value);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n      //   setImageAsFile(imageFile => (image))\n      const url = URL.createObjectURL(event.target.files[0]);\n      //   const fileType = event.target.files[0].type;\n      setImageurl(url)\n      setImageUpdated(true);\n      //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n    }\n\n  }\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <form className={classes.form} novalidate onSubmit={handleEventPost}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} >\n              <input id=\"contained-button-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n              <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                badgeContent={<label htmlFor=\"contained-button-file\">\n                  <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <EditIcon></EditIcon>\n                  </IconButton>\n                </label>}>\n                <img height=\"160\" width=\"150\" alt=\"poster\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`} ></img>\n              </Badge>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventName\"\n                name=\"eventName\"\n                label=\"Event name\"\n                value={name || \"\"}\n                onChange={handleName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"shortdesc\"\n                name=\"shortdesc\"\n                label=\"Short Description\"\n                fullWidth\n                value={desc || \"\"}\n                onChange={handleDesc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"startDate\"\n                  label=\"Event Start Date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"endDate\"\n                  label=\"Event End Date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={handleendDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"regEndDate\"\n                  label=\"Registration End Date\"\n                  name=\"regEndDate\"\n                  value={regEndDate}\n                  onChange={handleRegEndDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"event mode\">Event Mode</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Event Mode\"\n                  value={eventMode || \"\"}\n                  onChange={handleEventMode}\n                  inputProps={{\n                    name: 'eventMode',\n                    id: 'event mode',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Online\">Online</option>\n                  <option value=\"Offline\">Offline</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"event type\"\n                options={eventTypes}\n                getOptionLabel={(option) => option}\n                value={eventType || \"\"}\n                onChange={handleeventTypsChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Event Type\" />}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"event themes\"\n                options={eventTags.map((option) => option)}\n                // defaultValue={[eventTypes[1]]}\n                freeSolo\n                value={eventThemes || []}\n                onChange={handleeventTagsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Event Themes\" placeholder=\"Event Themes\" />\n                )}\n              />\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <input\n                id=\"contained-button-file\"\n                required\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n                style={{ display: \"none\" }}>\n\n              </input>\n\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventposter\"\n                name=\"eventposter\"\n                label=\"Event Poster\"\n                component=\"span\"\n                value={imageName}\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"start\">\n                      <label htmlFor=\"contained-button-file\">\n                        <IconButton component=\"span\" >\n                          <CameraAltIcon></CameraAltIcon>\n                        </IconButton>\n                      </label>\n\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            </Grid> */}\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Entry Fee</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={feeType || \"\"} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n                <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n              </RadioGroup>\n            </Grid>\n            {regMode !== \"form\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  id=\"regLink\"\n                  name=\"regLink\"\n                  label=\"Registration Link\"\n                  fullWidth\n                  value={regLink || \"\"}\n                  onChange={handleRegLink}\n                />\n              </Grid>}\n            {feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"regFees\"\n                name=\"regFees\"\n                value={regFees || \"\"}\n                label=\"Registration Fees\"\n                onChange={handleFees}\n                fullWidth\n              // helperText={\"Enter 0 if your event is free\"}\n              />\n            </Grid>}\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                disabled\n                id=\"collegename\"\n                options={colleges}\n                getOptionLabel={(option) => option}\n                value={collegeName || \"\"}\n                onChange={handleCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth >\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  disabled\n                  label=\"Registration\"\n                  inputProps={{\n                    name: 'registrationMode',\n                    id: 'registration mode',\n                  }}\n                  value={regMode || \"\"}\n                // onChange={handleRegistrationModeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"form\">Our Platform(Ellipse)</option>\n                  <option value=\"link\">Other</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                id=\"organizer\"\n                name=\"organizer\"\n                label=\"Organizer\"\n                fullWidth\n                value={organizer || \"\"}\n              />\n            </Grid> */}\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"requirements\"\n                options={requirements.map((option) => option)}\n                freeSolo\n                value={selectedrequirements}\n                onChange={handleRequirementsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Prerequisites\" placeholder=\"Requirements\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Participation</FormLabel>\n              <RadioGroup name=\"participanttype\" value={participantType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n                <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${collegeName}`} />\n              </RadioGroup>\n            </Grid>\n            {eventMode === \"Offline\" && <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={addressType} onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"College/University\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>}\n            <Grid item xs={12}>\n              <FormLabel required component=\"legend\">Participation Type</FormLabel>\n              <RadioGroup required aria-label=\"address\" name=\"teamed\" value={isTeamed ? \"team\" : \"individual\"} style={{ display: \"inline\" }}>\n                <FormControlLabel disabled value=\"individual\" control={<Radio color=\"default\" />} label=\"Individual\" />\n                <FormControlLabel disabled value=\"team\" control={<Radio color=\"default\" />} label=\"Team\" />\n              </RadioGroup>\n            </Grid>\n            {isTeamed && <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                type=\"number\"\n                id=\"maxTeam\"\n                name=\"minTeam\"\n                label=\"Minimum Team Members\"\n                fullWidth\n                value={teamSize.min_team_size || \"\"}\n              // onChange={(e)=>{props.setMinTeamSize(e.target.value)}}\n              />\n            </Grid>}\n            {isTeamed && <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                type=\"number\"\n                id=\"maxTeam\"\n                name=\"maxTeam\"\n                label=\"Maximum Team Members\"\n                fullWidth\n                value={teamSize.max_team_size || \"\"}\n              // onChange={(e)=>{props.setMaxTeamSize(e.target.value)}}\n              />\n            </Grid>}\n            {eventMode === \"Offline\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  multiline={true}\n                  helperText=\"Enter venue details (Ex: VIT, Vellore)\"\n                  rows=\"5\"\n                  variant='outlined'\n                  // required\n                  value={venue || \"\"}\n                  onChange={handleVenue}\n                  id=\"building\"\n                  name=\"building\"\n                  label=\"Room No & Building\"\n                  fullWidth\n                />\n              </Grid>\n            }\n            {/* {eventMode === \"Offline\" && <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                value={venueCollege}\n                getOptionLabel={(option) => option}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>} */}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter short description of your event\"\n                autoComplete='off'\n                // required\n                value={about || \"\"}\n                id=\"about\"\n                name=\"about\"\n                label=\"About\"\n                fullWidth\n              />\n            </Grid>\n            {eventMode === \"Online\" && <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                helperText=\"Enter link for the platform, you can also add it later\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter details about your online platform\"\n                autoComplete='off'\n                // required\n                id=\"platform\"\n                name=\"platform\"\n                label=\"Platform\"\n                fullWidth\n                onChange={handlePlatformChange}\n                value={platformDetails || \"\"}\n              />\n            </Grid>}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save Changes\"}\n          </Button>\n        </form>\n      </div>\n\n      {/* </Grid> */}\n      {/* <Box mt={2}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}\n\nexport default withRouter(EventEdit);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClose = async (event, reason) => {\n    getParticipantsList()\n    setState({ ...state, open: false });\n  }\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getParticipantsList = () =>{\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          // const firstdata = value[0].data;\n          // const columnNames = Object.keys(firstdata);\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n      })\n    })\n  }\n\n\n\n  function handleGenerateCertificateButton() {\n    setLoading(true);\n    console.log(selected)\n    try {\n      var data = new FormData();\n      const d = { eventId: event._id, participants: selected }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/generate_certificates`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          \n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Generated successfully',\n            type: \"success\",\n            autoHide: 4000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button\n            variant=\"contained\"\n            onClick={handleGenerateCertificateButton}\n            className={classes.button}>{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Generate Certificates\"}</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = column.id === \"Email\" ? row[column.id].substr(0,3)+'*****@'+row[column.id].split('@')[1] : row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n              if(d.certificate_status !== \"not_generated\"){\n                setRowValues(rowValues => [...rowValues, d.data])\n              }\n            \n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return (\n\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4} lg={9}>\n        {/* <Paper className={classes.buttonsPaper}>\n          <Button variant=\"contained\" onClick={handleGenerateCertificateButton} className={classes.button}>Generate Certificates</Button>\n        </Paper> */}\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = column.id === \"Email\" ? row[column.id].substr(0,3)+'*****@'+row[column.id].split('@')[1] : row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","export default __webpack_public_path__ + \"static/media/certificate_sample.6f46be5a.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CertificateSample from './Images/certificate_sample.png';\nimport Typography from '@material-ui/core/Typography';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n}));\n\nexport default function StickyHeadTable(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    }\n\n    React.useEffect(() => {\n        setTitle(event.certificate.title)\n    }, [event])\n\n    function handleUpdateButton() {\n        setLoading(true);\n        try {\n            if (title === \"\" || title === null) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"please fill the details\",\n                    type: \"error\",\n                    autoHide: 6000\n                })\n            }\n            else {\n                var data = new FormData();\n                const d = { eventId: event._id, title: title }\n                data = JSON.stringify(d);\n                fetch(process.env.REACT_APP_API_URL + `/api/event/update_certificate_title`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    // console.log(response);\n                    response.json().then(value => {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Generated successfully',\n                            type: \"success\",\n                            autoHide: 4000\n                        });\n                    })\n                })\n            }\n\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n    }\n\n\n    return (\n        <div className={classes.paper}>\n            <Grid container spacing={2}>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={open}\n                    autoHideDuration={autoHide}\n                    onClose={handleClose}\n                    key={vertical + horizontal}>\n                    <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                </Snackbar>\n                <Grid item xs={12}>\n                    <TextField\n                        autoComplete='off'\n                        required\n                        id=\"title\"\n                        name=\"title\"\n                        label=\"Certificate Title\"\n                        value={title || \"\"}\n                        onChange={(e) => setTitle(e.target.value)}\n                        fullWidth\n                        inputProps={{\n                            maxLength: 32,\n                        }}\n                        helperText=\"You can change the title of certificate as shown below in sample by default it is event name\"\n                    />\n                </Grid>\n                {/* <Grid item xs={6}>\n                </Grid> */}\n                <Grid item xs={12}>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        onClick={handleUpdateButton}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update\"}\n                    </Button>\n                </Grid>\n            </Grid>\n            <Typography style={{marginTop:\"10px\"}} variant=\"h4\">Sample Certificate</Typography>\n            <img width=\"100%\" alt=\"certificate sample\" src={CertificateSample}></img>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport AdminCertificateDashboard1 from './AdminCertificateDashboad1';\nimport AdminCertificateDashboard2 from './AdminCertificateDashboard2';\nimport AdminCertificateDashboard3 from './AdminCertificateDashboard3';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <div className={classes.root}>\n\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"Dashboard\"></Tab>\n                        <Tab label=\"Pending\" />\n                        <Tab label=\"Generated\" />\n                    </Tabs>\n                </Paper>\n                {\n                    value === 0 && <AdminCertificateDashboard3 event={event}></AdminCertificateDashboard3>\n                }\n                {\n                    value === 1 && <AdminCertificateDashboard1 event={event}></AdminCertificateDashboard1>\n                }\n                {\n                    value === 2 && <AdminCertificateDashboard2 event={event}></AdminCertificateDashboard2>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport { Button, Typography } from '@material-ui/core';\n\nimport EventDetailsNavigationBar from '../Components/EventDetailsNavigationBar';\nimport AnnouncementPanel from '../Components/EventsAnnouncementsPanel';\nimport AnnouncementEditPanel from '../Components/AnnouncementsEditPanel';\nimport AboutPanel from '../Components/AboutEventPanel';\nimport TimeLinePanel from '../Components/EventTimeLinePanel';\nimport DashboardPanel from '../Components/DashboardPanel';\nimport ChatPanel from '../Components/EventDetailsChatPanel';\nimport EventPost from './EventEdit';\nimport CertificateDashboard from '../Components/AdminCertificateDashboard';\n\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    width: '70%',\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3),\n    },\n  },\n  eventName: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  }\n\n}));\n\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  localStorage.removeItem('eventid')\n  const token = localStorage.getItem('token');\n  const id = props.match.params.eventId;\n  const t = localStorage.getItem('theme');\n\n  const [drawerOpen, setDrawerOpen] = React.useState(true);\n  const [event, setEvent] = React.useState({});\n  const [adminAccess, setAdminAccess] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [selected, setSelected] = React.useState({\n    infoSelected: true,\n    dashBoardSelected: false,\n    timilineSelected: false,\n    announcementSelected: false,\n    settingsSelected: false,\n    editEventSelected: false,\n    chatSelected: false,\n    certificateSelected: false\n  })\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(val => {\n        setEvent(val.event);\n\n      })\n    })\n\n  }, [token, id])\n\n  // console.log(adminAccess)\n  React.useEffect(() => {\n    if (event.user_id !== undefined && currentUser.user_id !== undefined) {\n      if (event.user_id === currentUser.user_id) {\n        // console.log(event);\n        // console.log(currentUser)\n        setAdminAccess(true);\n      }\n    }\n\n  }, [currentUser, event])\n\n\n\n  // const handleDrawerOpen = () => {\n  //   setDrawerOpen(true);\n  // };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  function handleHomeClick() {\n    props.history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n\n\n\n  function infoClicked() {\n    setSelected({\n      infoSelected: true,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n\n  function dashBoardClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: true,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function timelineClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: true,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function announcementsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: true,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function settingsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: true,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function editEventClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: true,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function chatClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: true,\n      certificateSelected: false\n    })\n  }\n  function certificateClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: true\n    })\n  }\n  const {\n    infoSelected,\n    dashBoardSelected,\n    timilineSelected,\n    announcementSelected,\n    settingsSelected,\n    editEventSelected, chatSelected, certificateSelected } = selected;\n\n  function handleSignout() {\n    props.history.replace('/');\n  }\n\n  function handleRegClick() {\n    props.history.push('/event/register/' + event._id);\n    // props.handleReg(event._id);\n\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <EventDetailsNavigationBar event={event} handleSignout={handleSignout} handleHomeClick={handleHomeClick} setUser={setCurrentUser} dOpen={drawerOpen} setDOpen={setDrawerOpen}></EventDetailsNavigationBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: drawerOpen,\n          [classes.drawerClose]: !drawerOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: drawerOpen,\n            [classes.drawerClose]: !drawerOpen,\n          }),\n        }}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon color=\"primary\" /> : <ChevronLeftIcon color=\"primary\" />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={infoClicked} selected={infoSelected}>\n            <ListItemIcon >\n              <InfoIcon color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n          <ListItem button onClick={timelineClicked} selected={timilineSelected}>\n            <ListItemIcon>\n              <TimelineIcon color=\"primary\"></TimelineIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Schedule\" />\n          </ListItem>\n          <ListItem button onClick={announcementsClicked} selected={announcementSelected}>\n            <ListItemIcon>\n              <AnnouncementIcon color=\"primary\"></AnnouncementIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Announcements\" />\n          </ListItem>\n          <ListItem button onClick={chatClicked} selected={chatSelected}>\n            <ListItemIcon>\n              <TelegramIcon color=\"primary\"></TelegramIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Chat\" />\n          </ListItem>\n        </List>\n        <Divider />\n        {\n          adminAccess && <List>\n            <ListItem button onClick={dashBoardClicked} selected={dashBoardSelected}>\n              <ListItemIcon >\n                <DashboardIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n            <ListItem button onClick={editEventClicked} selected={editEventSelected}>\n              <ListItemIcon>\n                <EditIcon color=\"primary\"></EditIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Edit Event\" />\n            </ListItem>\n            <ListItem button onClick={certificateClicked} selected={certificateSelected}>\n              <ListItemIcon>\n                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Certificates\" />\n            </ListItem>\n            <ListItem button onClick={settingsClicked} selected={settingsSelected}>\n              <ListItemIcon>\n                <SettingsIcon color=\"primary\"></SettingsIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n          </List>\n        }\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography className={classes.eventName} align='center' variant=\"h4\" style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>{event.name}</Typography>\n        {\n          infoSelected && event != null && <AboutPanel event={event}></AboutPanel>\n        }\n        {\n          editEventSelected && event != null && <EventPost event={event} ></EventPost>\n        }\n        {\n          timilineSelected && event != null && <TimeLinePanel event={event}></TimeLinePanel>\n        }\n        {\n          dashBoardSelected && event != null && <DashboardPanel event={event}></DashboardPanel>\n        }\n        {\n          chatSelected && event != null && <div className={classes.chat} ><ChatPanel user={currentUser} open={drawerOpen} event={event}></ChatPanel></div>\n        }\n        {\n          adminAccess && announcementSelected && event != null && <AnnouncementEditPanel event={event}></AnnouncementEditPanel>\n        }\n        {\n          !adminAccess && announcementSelected && event != null && <AnnouncementPanel event={event}></AnnouncementPanel>\n        }\n        {\n          adminAccess && certificateSelected && event != null && <CertificateDashboard event={event}></CertificateDashboard>\n        }\n        {\n          infoSelected && event.reg_mode === \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n            {event.registered ? \"Registered\" : \"Register\"}\n          </Button>\n\n        }\n        {\n          infoSelected && event.reg_mode !== \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n            {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n              <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n          </Button>\n        }\n        {\n          adminAccess && settingsSelected && <Typography>Any queries contact us at support@ellipseapp.com</Typography>\n        }\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function AlertDialog(props) {\n\n    const theme = useTheme();\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            >\n                <DialogTitle id=\"title\">{\"Terms and Conditions\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ul>\n                            <li>Provided registration data and your profile will be shared with event admin</li> \n                        </ul>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n// import axios from 'axios';\n\n//MaterialUI imports\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// import { set } from 'date-fns';\n// import AuthContext from '../AuthContext';\nimport TermsandConditions from '../Components/EventRegisterTermsandConditions';\nimport EventsContext from '../EventsContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n\n  const [canRegister, setCanRegister] = React.useState(true);\n  const [userMessage, setUserMessage] = React.useState(false);\n\n  const [formValues, setFormValues] = React.useState(null);\n  const [uploadFiles, setUploadFiles] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  // const [fields, setFields] = React.useState([]);\n  const [normalFields, setNormalFields] = React.useState([]);\n  const [dropDownFields, setDropDownFields] = React.useState([]);\n  const [checkboxFields, setCheckBoxFields] = React.useState([]);\n  const [radioFields, setRadioFields] = React.useState([]);\n  const [dateFields, setDateFields] = React.useState([]);\n  const [longDescFields, setLongDescFields] = React.useState([]);\n  const [linkFields, setLinkFields] = React.useState([]);\n  const [fileUploadFields, setFileUploadFields] = React.useState([]);\n\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const id = props.match.params.eventId;\n  const [backDropOpen, setBackDropOpen] = React.useState(true);\n  const [event, setEvent] = React.useState({});\n  const [checkedValues, setCheckedValues] = React.useState([]);\n  const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  const [tandcOpen, setTandcOpen] = React.useState(false);\n\n  const { currentUser } = React.useContext(AuthContext);\n  const { setAllEvents } = React.useContext(EventsContext);\n  const { setActiveEvents } = React.useContext(ActiveEventsContext);\n\n  function handleTermsClick() {\n    setTandcOpen(true);\n  }\n\n  React.useEffect(() => {\n    if (currentUser.designation === \"Student\" || currentUser.designation === \"Faculty\") {\n      // setUserType(true);\n    }\n    else {\n      setCanRegister(false);\n      setUserMessage(currentUser.designation + \" cannot register\")\n    }\n    if (event.status === 'pending') {\n      setCanRegister(false)\n      setUserMessage(\"Event is not accepted yet check back later\");\n    }\n    if (currentUser.user_id === event.user_id) {\n      setCanRegister(false)\n      setUserMessage(\"An event organizer cannot register\")\n    }\n    const cDate = new Date();\n    const eDate = new Date(event.registration_end_time);\n    if (cDate > eDate) {\n      setCanRegister(false)\n      setUserMessage(\"Registration is closed for this event\")\n    }\n    // console.log(event.o_allowed)\n    if (event.o_allowed !== undefined) {\n      if (!event.o_allowed) {\n        console.log(event.o_allowed)\n        if (event.college_name === currentUser.college_name) {\n\n        } else {\n          setCanRegister(false)\n          setUserMessage(\"Only \" + event.college_name + \" can participate\")\n        }\n      }\n    }\n\n  }, [event, currentUser])\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      // console.log(response);\n      response.json().then(value => {\n        setEvent(value.event);\n        // setFields(value.event.regFields);\n        const allFields = value.event.reg_fields;\n        // console.log(allFields);\n        if (allFields != null) {\n          allFields.forEach(f => {\n            if (f.title === \"Name\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.name }))\n            }\n            else if (f.title === \"Email\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.email }));\n            }\n            else if (f.title === \"College\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.college_name }));\n            }\n            else {\n              setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n            }\n            if (f.field === \"checkbox\") {\n\n            }\n\n          })\n          // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n          setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n          setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n          setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n          setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n          setDateFields(allFields.filter((f) => f.field === \"date\"));\n          // setLongDescFields(allFields.filter((f) => f.field === \"long_desc\"));\n          setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n          setLinkFields(allFields.filter(f => f.field === \"link\"));\n          setFileUploadFields(allFields.filter(f => f.field === \"file_upload\"));\n\n        }\n        setBackDropOpen(false);\n      })\n    })\n  }, [token, id, currentUser])\n\n  function handleClose() {\n    if (message === \"Registration successful.Stay tunned with notifications and announcements\") {\n      props.history.push('/home')\n      fetch(process.env.REACT_APP_API_URL + '/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET'\n      }).then(response => {\n        if (response.status === 200) {\n          response.json().then(value => {\n            // console.log(value)\n            value.sort((a, b) => {\n              return new Date(a.start_time) - new Date(b.start_time);\n            })\n            setAllEvents(value);\n            setActiveEvents(value.filter(e => {\n              const cDate = new Date();\n              const eDate = new Date(e.finish_time);\n              return cDate < eDate && e.status !== \"pending\"\n            }))\n          })\n        }\n        else if (response.status === 401) {\n          localStorage.removeItem('token');\n        }\n\n      })\n    }\n    setState({ ...state, open: false });\n  }\n\n  function handleChange(event) {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  }\n  const handleChange2 = (name) => (event, values) => {\n    setFormValues({ ...formValues, [name]: values });\n\n  }\n  const handleChange3 = (name) => (event) => {\n    if (event.target.checked) {\n      setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n      const array = [];\n      checkedValues.forEach((v, i) => {\n        if (v[name]) {\n          array.push(v[name])\n        }\n      });\n      array.push(event.target.name);\n      setFormValues({ ...formValues, [name]: array });\n    }\n  }\n\n  const handleDateChange = (name) => (date) => {\n    setFormValues({ ...formValues, [name]: date })\n  };\n\n  const handleLondDescChange = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value })\n  }\n\n  function handleradioChange(event, value) {\n    setFormValues({ ...formValues, [event.target.name]: value });\n  }\n\n  function handleEventRegistration(e) {\n    e.preventDefault();\n    var uploadedFilesIds = [];\n    const formkeys = Object.keys(formValues);\n    const fileFormKeys = Object.keys(uploadFiles);\n    var count = 0;\n    formkeys.forEach(v => {\n      if (formValues[v] === null) {\n        if (v.includes(fileFormKeys)) {\n\n        } else {\n          count = count + 1;\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Please fill in all fields',\n            type: \"error\",\n            autoHide: 4000\n          });\n        }\n\n        // break;\n      }\n    })\n    if (fileFormKeys) {\n      fileFormKeys.forEach(f => {\n        if (uploadFiles[f] === null) {\n          count = count + 1;\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Please fill in all fields',\n            type: \"error\",\n            autoHide: 4000\n          });\n          // break;\n        }\n      })\n    }\n\n    var finalValues = formValues;\n    if (count === 0) {\n      try {\n        console.log('a');\n        if (fileFormKeys.length > 0) {\n          console.log('b');\n          fileFormKeys.forEach((key, index) => {\n            console.log(index);\n            console.log(fileFormKeys.length)\n            var data1 = new FormData();\n            data1.append('uploaded_file', uploadFiles[key]);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/register/upload_file?id=${id}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data1\n            }).then((response) => {\n              if (response.status === 200) {\n                response.json().then(value => {\n                  console.log(value);\n                  setFormValues({ ...formValues, [key]: value.file_name })\n                  finalValues[key] = value.file_name\n                  uploadedFilesIds.push({ [key]: value.file_name });\n                  if (uploadedFilesIds.length === fileFormKeys.length) {\n                    // console.log(uploadedFilesIds);\n                    // console.log(finalValues);\n                    var data = new FormData();\n                    const d = { data: finalValues }\n                    data = JSON.stringify(d);\n                    fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n                      headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                      },\n                      method: 'POST',\n                      body: data\n                    }).then(response => {\n                      // console.log(response);\n                      if (response.status === 200) {\n                        response.json().then(value => {\n                          // console.log(value);\n\n                          setLoading(false);\n                          setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Registration successful.Stay tunned with notifications and announcements',\n                            type: \"success\",\n                            autoHide: 4000\n                          });\n                        })\n                      }\n\n                    })\n                  }\n                })\n              }\n            })\n          })\n        }\n        else {\n          var data = new FormData();\n          const d = { data: finalValues }\n          data = JSON.stringify(d);\n          fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n          }).then(response => {\n            // console.log(response);\n            if (response.status === 200) {\n              response.json().then(value => {\n                // console.log(value);\n\n                setLoading(false);\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Registration successful.Stay tunned with notifications and announcements',\n                  type: \"success\",\n                  autoHide: 4000\n                });\n              })\n            }\n\n          })\n        }\n\n\n      }\n      catch (error) {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: error.message,\n          type: \"error\",\n          autoHide: 6000\n        })\n\n      }\n    }\n\n\n  }\n\n  function handleBack() {\n    props.history.goBack();\n  }\n\n  function handleFileSelect(event) {\n    console.log(event.target.name)\n    if (event.target.files[0]) {\n      setUploadFiles({ ...uploadFiles, [event.target.name]: event.target.files[0] });\n      // setImage(event.target.files[0]);\n      // setImageAsFile(imageFile => (image))\n      // const url = URL.createObjectURL(event.target.files[0]);\n      // const fileType = event.target.files[0].type;\n      // setImageurl(url);\n      // setImageType(fileType.substr(fileType.indexOf('/') + 1));\n    }\n\n  }\n\n\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Backdrop className={classes.backdrop} open={backDropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleBack}>\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      {event != null &&\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Registration for \" + event.name}\n          </Typography>\n          <form className={classes.form} onSubmit={handleEventRegistration}>\n\n            <Grid container spacing={2}>\n              {normalFields.map((field, index) => {\n                if (field.title === \"College\") {\n                  return (\n                    <Grid item xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        id={field.title}\n                        options={colleges}\n                        getOptionLabel={(option) => option}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        disabled\n                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                      />\n                    </Grid>)\n                }\n                else if (field.title === \"Email\") {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        disabled\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n                else {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n\n              })}\n              {checkboxFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                      <FormLabel component=\"legend\">{field.title}</FormLabel>\n                      <FormGroup class={classes.formgroup}>\n                        {field.options.map((option) => {\n                          return <FormControlLabel\n                            control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                            label={option}\n                          />\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                    {/* <Autocomplete\n                      id={field.name}\n                      multiple\n                      // value={}\n                      onChange={handleChange2(field.name)}\n                      options={field.options.map((option) => option)}\n                      getOptionLabel={(option) => option}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.name} placeholder={field.name} />\n                      )}\n                    /> */}\n                  </Grid>\n                )\n              })}\n              {dropDownFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id={field.title}\n                      options={field.options.map((option) => option)}\n                      // freeSolo\n                      // onChange={handleeventTagsChange}\n                      onChange={handleChange2(field.title)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField required {...params} name={field.name} label={field.title} placeholder={field.name} />\n                      )}\n                    />\n                  </Grid>\n                )\n              })}\n              {radioFields.map((field, index) => {\n                console.log(field.options[0])\n                return (\n                  <Grid item xs={12}>\n                    <FormLabel required component=\"legend\">{field.title}</FormLabel>\n                    <RadioGroup required aria-label=\"address\" name={field.title} defaultValue={field.options[0]} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                      {field.options.map((option) => {\n                        return <FormControlLabel required value={option} control={<Radio color=\"default\" />} label={option} />\n                      })}\n\n                      {/* <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" /> */}\n                    </RadioGroup>\n                  </Grid>\n                )\n              })}\n              {\n                dateFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                          // minDate={Date.now()}\n                          fullWidth\n                          required\n                          variant=\"inline\"\n                          format=\"dd MMM yyyy hh:mm a zzz\"\n                          margin=\"normal\"\n                          id={field.title}\n                          label={field.title}\n                          name={field.title}\n                          // defaultValue={Date.now()}\n                          value={formValues[field.title]}\n                          onChange={handleDateChange(field.title)}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n\n                    </Grid>\n                  )\n                })\n              }\n              {\n                longDescFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        multiline={true}\n                        rows=\"5\"\n                        variant='outlined'\n                        placeholder={field.title}\n                        autoComplete='off'\n                        required\n                        id={field.title}\n                        name={field.title}\n                        label={field.title}\n                        fullWidth\n                        onChange={handleLondDescChange}\n                      // value={props.about}\n                      />\n                    </Grid>\n                  )\n                })\n              }\n              {\n                linkFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                })\n              }\n              {\n                fileUploadFields.map((field, index) => {\n                  return <Grid item xs={12}>\n                  <Typography>{field.title}</Typography>\n                    <input id=\"contained-button-file\" name={field.title} required type=\"file\" onChange={handleFileSelect} ></input>\n                  </Grid>\n                })\n              }\n\n              <Grid item xs={12}>\n                <Typography>By registering for the event.I accept the <Button onClick={handleTermsClick} color=\"primary\">Terms and Conditions</Button></Typography>\n              </Grid>\n            </Grid>\n            {canRegister && <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n              {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Register\"}\n            </Button>}\n            {\n              !canRegister && <Typography>{userMessage}</Typography>\n            }\n          </form>\n        </div>\n      }\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n      <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 2)\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const {allEvents} = React.useContext(EventsContext);\n    const {activeEvents} = React.useContext(ActiveEvents);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const postedEvents = allEvents.filter((val) => {\n    //     return val.user_id === user.user_id;\n    // });\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n    }\n\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\">\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={8} lg={8} >\n                        {/* <div className={classes.root2}> */}\n                        <Paper className={classes.root2}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"on\">\n                                <Tab label=\"Registered Events\" />\n                                <Tab label=\"Past Events\" />\n                            </Tabs>\n                        </Paper>\n                        <div className={classes.content}>\n                            {value === 0 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                            {\n                                regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                            }\n                                {regEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n\n                            </Grid>}\n                            {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                            {\n                                pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                            }\n                                {pastEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n                            </Grid>}\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AboutEventsPanel from '../Components/AboutEventPanel';\nimport { Dialog } from '@material-ui/core';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const id = props.match.params.eventId;\n    const [event, setEvent] = React.useState({});\n    const [open, setOpen] = React.useState(false);\n    if(token){\n        props.history.replace(`/event/${id}`)\n    }\n\n    const handleClickOpen = () => {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/signin\")\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+`/api/unregistered/event?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setEvent(value.event);\n            })\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/signin\")\n    }\n    function handleSignupClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <Typography\n                    align='center'\n                    variant=\"h4\"\n                    style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>\n                    {event.name + \"(Login to Register and Know More Info)\"}\n                </Typography>\n                <AboutEventsPanel notRegistered={true} event={event}></AboutEventsPanel>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Register</Button>\n            </div>\n            <Dialog\n                open={open}\n                maxWidth=\"md\"\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Login to Register for the Event/Contest\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport CancelIcon from '@material-ui/icons/Cancel';\n// import { Document, Page } from 'react-pdf';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root2: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(50),\n            height: theme.spacing(50),\n        },\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    root4: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const classes = useStyles();\n    const id = props.match.params.id;\n    const [details, setDetails] = React.useState({});\n    const [userFound, setUserFound] = React.useState(true);\n    const [date, setDate] = React.useState(null);\n//     const [numPages, setNumPages] = React.useState(null);\n//   const [pageNumber, setPageNumber] = React.useState(1);\n\n//   function onDocumentLoadSuccess({ numPages }) {\n//     setNumPages(numPages);\n//   }\n\n    React.useEffect(() => {\n        // const pdf = \n        fetch(process.env.REACT_APP_API_URL + `/api/event/verify_certificate?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setUserFound(true)\n                    setDetails(value);\n                    const d = new Date(value.date);\n                    setDate(d.toDateString());\n                })\n            }\n            else {\n                setUserFound(false);\n            }\n\n        })\n\n        // fetch(process.env.REACT_APP_API_URL + `/api/verify/get_certificate?id=${id}`, {\n        //     headers: {\n        //         // 'Authorization': `Bearer ${token}`,\n        //         // 'Content-Type': 'application/json',\n        //         // 'Accept': 'application/json'\n        //     },\n        //     method: 'GET',\n        //     responseType: 'blob'\n        // }).then(response =>{\n        //     const file = new Blob(\n        //         [response], \n        //         {type: 'application/pdf'});\n        //         const fileURL = window.URL.createObjectURL(file);\n        //         console.log(fileURL)\n        //         // window.open(fileURL);\n        // })\n    }, [id])\n\n    function handleSigninClick() {\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            {/* <iframe src={\"https://ellipseapp.com/api/user/certificate?id=FfSlio810858d83fb929979dd2e53c4be3a7e1\"}></iframe> */}\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            {userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                    <VerifiedUserIcon fontSize=\"large\"></VerifiedUserIcon>\n                    <Typography variant=\"h4\">{details.participantname}</Typography>\n                    <Typography>{details.participant_college}</Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>Event Name: {details.event_name}</Typography>\n                    <Typography>Organizer: {details.organizer}</Typography>\n                    <Typography>Held on {date}</Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>participation by {details.participantname} has been confirmed</Typography>\n                </Box>\n            </Box>}\n            {!userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                    <CancelIcon fontSize=\"large\"></CancelIcon>\n                    <Typography variant=\"h4\">Certificate NOT FOUND</Typography>\n                </Box>\n            </Box>}\n            {/* <object width=\"100%\" height=\"900px\" data={process.env.REACT_APP_API_URL + `/api/verify/get_certificate?id=${id}`} type=\"application/pdf\">\n                <iframe\n                    title=\"pdf document\"\n                    src={process.env.REACT_APP_API_URL + `/api/verify/get_certificate?id=${id}`}\n                />\n               \n            </object> */}\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/un5.2f31c04b.svg\";","export default __webpack_public_path__ + \"static/media/un6.11989350.svg\";","export default __webpack_public_path__ + \"static/media/un7.07dd0552.svg\";","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n// import Dashboard from '../Components/Images/dashboard.png';\n// import Profile from '../Components/Images/profile.png';\n// import AdminDashboard from '../Components/Images/AdminDashboard.png';\n// import Certificate from '../Components/Images/certificate.png';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport DeviceDesign from '../Components/Images/un5.svg';\nimport DeviceDesign2 from '../Components/Images/un6.svg';\nimport DeviceDesign3 from '../Components/Images/un7.svg';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst tutorialSteps = [\n    {\n        label: 'Find and register for all your College events from one App',\n        imgPath: DeviceDesign,\n    },\n    {\n        label: 'Post events and manage them with ease',\n        imgPath: DeviceDesign2,\n    },\n    {\n        label: 'Feature Rich dashboard for Event Administrators',\n        imgPath: DeviceDesign3,\n    },\n    {\n        label: 'Create announcements, Live chat with participants and generate event certificates',\n        imgPath: DeviceDesign2,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        flexGrow: 1,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0),\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: theme.spacing(0),\n        // alignContent: 'center'\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 300,\n        [theme.breakpoints.down('md')]: {\n            minHeight: 200,\n        },\n        paddingLeft: theme.spacing(0),\n        backgroundColor: theme.palette.primary.dark,\n    },\n    img: {\n        padding: theme.spacing(0),\n        maxHeight: 550,\n        display: 'block',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        width: '100%',\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(0),\n        },\n    },\n    paperLeft: {\n        margin: theme.spacing(0),\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            //   margin: theme.spacing(3, 1),\n        },\n\n    },\n    carouselCaption: {\n        fontSize: '2.5em',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '2.3em',\n        },\n    }\n}));\n\nfunction SwipeableTextMobileStepper(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const maxSteps = tutorialSteps.length;\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleStepChange = (step) => {\n        setActiveStep(step);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container component=\"main\" justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} md={6}>\n                    <AutoPlaySwipeableViews\n                    interval=\"5000\"\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={activeStep}\n                        onChangeIndex={handleStepChange}\n                        enableMouseEvents\n                    >\n                        {tutorialSteps.map((step, index) => (\n                            <div key={step.label}>\n                                {Math.abs(activeStep - index) <= 2 ? (\n                                    <img className={classes.img} src={step.imgPath} alt={step.label} />\n                                ) : null}\n                            </div>\n                        ))}\n                    </AutoPlaySwipeableViews>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Paper elevation={0} className={classes.header}>\n                        <Typography className={classes.carouselCaption} color=\"secondary\" align=\"center\">{tutorialSteps[activeStep].label}</Typography>\n                    </Paper>\n                    <Box className={classes.paperLeft} >\n                        <Button onClick={props.handleSignin} variant=\"contained\" color=\"secondary\">Get started</Button>\n                        <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n                            <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n                        </a>\n                    </Box>\n\n                </Grid>\n            </Grid>\n            <MobileStepper\n                steps={maxSteps}\n                position=\"static\"\n                variant=\"dots\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n                        Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                        Back\n                    </Button>\n                }\n            />\n        </div>\n    );\n}\n\nexport default SwipeableTextMobileStepper;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\n\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  //   const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n\n\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              //   onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        {/* <MenuItem onClick={handleReportClick}>Report</MenuItem> */}\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography noWrap variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {event.name}\n          </Typography>\n        }\n        subheader={\n          <React.Fragment>\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {event.description}\n            </Typography>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n          </React.Fragment>\n        }\n      />\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <MailIcon></MailIcon>\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={props.onClick}>\n            See More\n        </Button>\n          {\n            <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={props.onClick}>\n              Register\n            </Button>\n          }\n        </div>\n\n\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport NewHomePageCarousel from '../Pages/NewHomePageCarousel';\nimport Box from '@material-ui/core/Box';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\nimport Link from '@material-ui/core/Link';\nimport Copyright from \"../Components/copyright\";\nimport Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\n// import DeviceDesign from '../Components/Images/un.svg';\nimport HomePageEventCard from '../Components/HomePageEventCard';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n    body: {\n        margin: theme.spacing(0)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    img: {\n        padding: theme.spacing(10),\n        minHeight: 200,\n        display: 'block',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(3),\n        },\n    },\n    footer: {\n        backgroundColor: theme.palette.secondary.main,\n        marginTop: theme.spacing(3)\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 200,\n        // paddingLeft: theme.spacing(0),\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(10),\n        borderRadius: theme.spacing(2),\n        boxShadow: \"3\",\n        // height: 450,\n        // padding: theme.spacing(10),\n    },\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(3)\n    },\n    title: {\n        fontFamily: 'Gugi',\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold',\n        flexGrow: 1,\n    },\n}));\n\nexport default function UnregisteredPage(props) {\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [activeEvents, setActiveEvents] = React.useState([])\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/get_events', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            // console.log(response)\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value);\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setActiveEvents(value.filter(e => {\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }))\n                })\n            }\n\n        })\n    }, [])\n\n\n    function handleSigninClick() {\n        props.history.push(\"/signin\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h5\">\n                        Ellipse\n                    </Typography>\n                    <Button className={classes.button} variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button className={classes.button} variant=\"outlined\" size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <NewHomePageCarousel handleSignin={handleSigninClick}></NewHomePageCarousel>\n            </div>\n            <Grid style={{ minHeight: '100px' }} container component=\"main\">\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} ></Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    {\n                        activeEvents.map((e, index) => {\n                            return <HomePageEventCard onClick={handleSigninClick} event={e}></HomePageEventCard>\n                        })\n                    }\n                </Grid>\n\n            </Grid>\n            <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                {/* <Box display=\"flex\" justifyContent=\"center\">\n                    <Typography>Made with <FavoriteIcon fontSize=\"inherit\" color=\"primary\"></FavoriteIcon> for Students and Organizations</Typography><br></br>\n                </Box> */}\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                        {\"support@ellipseapp.com\"}\n                    </Link></Typography>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Copyright></Copyright>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                        {\"Privacy Policy\"}\n                    </Link>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n                        <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n                    </a>\n                </Box>\n            </Box>\n\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './Pages/signin';\nimport SignUp from './Pages/signup';\nimport ForgotPassword from './Pages/ForgotPassword';\nimport { AuthProvider } from \"./Auth\";\nimport OTPVer from './Pages/otpverification';\nimport UserInfo from './Pages/UserInfo';\nimport Layout from './Pages/Layout';\nimport CalenderPanel from './Pages/CalenderPanel';\nimport EventsTabPanel from './Pages/EventsTabpanel';\nimport ProfileTabPanel from './Pages/ProfileTabpanel';\nimport EventPostForm from './Pages/EventPostForm';\nimport ChatPage from './Pages/ChatPage';\nimport EventDetails from './Pages/EventDetails';\nimport EventRegisterForm from './Pages/EventRegistrationform';\nimport ExplorePanel from './Pages/ExplorePanel';\nimport UnregisteredPage from './Pages/UnregisteredPage';\nimport NetworkDetector from './NetworkDetector';\nimport VerifyCertificate from './Pages/VerifyCertificate';\nimport NewHomePage from './Pages/NewHomePage';\n// import { loadReCaptcha } from 'react-recaptcha-google'\n\nfunction App() {\n  // React.useEffect(()=>{\n  //       // loadReCaptcha();\n  //       window.grecaptcha.ready(function() {\n  //         window.grecaptcha.execute('6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P', {action: 'submit'}).then(es =>  {\n  //             // Add your logic to submit to your backend server here.\n  //             console.log(es);\n  //         });\n  //       });\n  // })\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={NewHomePage} />\n            <Route exact path=\"/signin\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route exact path=\"/userinfo\" component={UserInfo}></Route>\n            <Route exact path=\"/otpverification\" component={OTPVer}></Route>\n            <Route exact path=\"/un/event/:eventId\" component={UnregisteredPage}></Route>\n            <Route exact path=\"/event/:eventId\" component={EventDetails} />\n            {/* <Route exact path=\"/resetforgotpassword\" component ={ForgotPassword2}></Route> */}\n            \n            <Route exact path=\"/verify_certificate/:id\" component={VerifyCertificate}></Route>\n            <Layout>\n              <Route path=\"/home\" component={EventsTabPanel}></Route>\n              <Route exact path=\"/events\" component={CalenderPanel}></Route>\n              <Route exact path=\"/post\" component={EventPostForm}></Route>\n              <Route exact path=\"/profile\" component={ProfileTabPanel}></Route>\n              <Route exact path=\"/chat\" component={ChatPage}></Route>\n\n              <Route exact path=\"/event/register/:eventId\" component={EventRegisterForm} />\n              <Route exact path=\"/yourevents\" component={ExplorePanel}></Route>\n              \n            </Layout>\n          </Switch>\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\nexport default NetworkDetector(App);\n","\n\nimport React, { Component } from 'react';\n\nexport default function network(ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      if (condition === 'online') {\n        const webPing = setInterval(\n          () => {\n            fetch('//google.com', {\n              mode: 'no-cors',\n              })\n            .then(() => {\n              this.setState({ isDisconnected: false }, () => {\n                return clearInterval(webPing)\n              });\n            }).catch(() => this.setState({ isDisconnected: true }) )\n          }, 2000);\n        return;\n      }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div>\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n      type: \"dark\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#000000'\n      },\n      secondary: {\n        main: '#1C1C1E',\n      },\n      background:{\n        default: \"#000000\"\n      }\n    },\n    \n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n      type: \"light\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#ffffff'\n      },\n      secondary: {\n        main: '#e5e5e5'\n      },\n      background:{\n        default: \"#ffffff\"\n      }\n    },\n    \n    \n});\n\nexport {lightTheme,darkTheme};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {lightTheme,darkTheme} from './Components/theme'\nimport { CssBaseline } from '@material-ui/core';\nconst t = localStorage.getItem('theme');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={t === 'light' ? lightTheme: darkTheme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}