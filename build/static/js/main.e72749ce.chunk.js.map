{"version":3,"sources":["Components/Images/logo.svg","Components/Images/google-play-badge.png","Components/Images/logo300.svg","Components/Images/certificate_sample.png","Themes/SigninPageStyles.js","Components/copyright.js","Pages/signin.js","Themes/SignupPageStyles.js","Pages/signup.js","Pages/ForgotPassword.js","Auth.js","Pages/otpverification.js","Pages/UserInfo.js","Themes/MainHomeStyles.js","Components/EventShareDialog.js","Components/ImageDialog.js","Components/AboutEventPanel.js","Components/EventTimeLinePanel.js","Components/EventsAnnouncementsPanel.js","Components/ChatMessage.js","AuthContext.js","Components/ChatTextField.js","Components/EventsChatPanel.js","Components/EventsDialog.js","EventsContext.js","Components/NotficationsDialog.js","Pages/NavigationBar.js","ActiveEventsContext.js","Pages/Layout.js","Pages/CalenderPanel.js","Components/EventReportDialog.js","Components/EventCard.js","Components/SortLeftPanel.js","Components/MobileSortPanel.js","Components/FeedBackDialog.js","Pages/EventsTabpanel.js","Components/ProfileEventCard.js","Components/ProfilePostedEventsTabPanel.js","Components/ProfileAboutDataBox.js","Components/ProfileAboutTabPanel.js","Components/CertificateCard.js","Components/ProfileCertificateTabPanel.js","Components/MainProfileCard.js","Components/UpdateInfoTabPanel.js","Components/UpdatePasswordTabPanel.js","Components/UpdateProfileDialog.js","Pages/ProfileTabpanel.js","Components/EventPostDetails1.js","Components/EventPostDetails2.js","Components/AddFieldDialog.js","Components/EventPostDetails3.js","Pages/EventPostForm.js","Components/EventDetailsNavigationBar.js","Components/AnnouncementsEditPanel.js","Components/AddAnnouncementForm.js","Components/SendEmailForm.js","Components/DashboardPanel.js","Components/EventDetailsChatPanel.js","Pages/EventEdit.js","Components/AdminCertificateDashboad1.js","Components/AdminCertificateDashboard2.js","Components/AdminCertificateDashboard3.js","Components/AdminCertificateDashboard.js","Pages/EventDetails.js","Pages/EventRegistrationform.js","Pages/ExplorePanel.js","Pages/UnregisteredPage.js","Pages/VerifyCertificate.js","App.js","NetworkDetector.js","Components/theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","height","wrapper","margin","spacing","position","paperRight","flexDirection","alignItems","backgroundColor","palette","secondary","main","padding","paddingBottom","borderRadius","breakpoints","down","paperLeft","up","paperimage","avatar","marginTop","primary","form","width","submit","iPhoneImage","title","fontFamily","color","dark","fontWeight","hidden","image","maxHeight","maxWidth","Copyright","Typography","variant","align","Link","href","Date","getFullYear","Alert","props","elevation","withRouter","history","classes","React","useState","open","vertical","horizontal","message","type","autoHide","state","setState","loading","setLoading","token","setToken","isUserVerified","setIsUserVerified","email","setEmail","abortController","AbortController","handleClose","event","reason","a","localStorage","setItem","eventId","getItem","abort","push","FormData","payload2","data2","JSON","stringify","fetch","process","signal","headers","method","body","then","result","json","res","error","preventDefault","target","elements","password","payload","value","data","response","status","isVerified","useremail","to","Grid","container","component","className","CssBaseline","Snackbar","anchorOrigin","autoHideDuration","onClose","key","severity","item","xs","sm","md","Box","justifyContent","m","p","src","PhoneImage","alt","rel","GoogleBadge","Avatar","onSubmit","TextField","name","required","fullWidth","id","label","autoComplete","autoFocus","Button","disabled","CircularProgress","size","paper","closeButton","right","top","nameError","setNameError","usernameError","setUserNameError","signupButtonDisabled","setSignupButtonDisabled","replace","fullName","username","terms","checked","val","tok","Container","inputProps","pattern","onInvalid","helperText","onInput","onChange","FormControlLabel","control","Checkbox","justify","mt","otp","setOtp","setPassword","loading2","setLoading2","console","log","nPassword","e","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","useEffect","Provider","seconds","setSeconds","resendEnabled","setresetEnabled","setTimeout","onClick","textArea","imageUrl","setImageurl","setImage","colleges","setColleges","gender","designation","collegeId","bio","college_id","append","accept","files","url","URL","createObjectURL","style","Badge","overlap","badgeContent","htmlFor","IconButton","aria-label","sizes","multiline","rows","placeholder","FormControl","InputLabel","Select","native","map","coll","index","_id","outline","marginBottom","flexGrow","background","grow","mobileTitle","titleButton","mobileTitleButton","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","borderBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","tabs","mobiletab","tabPanel","flex_section","flex_col_scroll","overflow","rpaper","textAlign","text","light","postButton","EventShareDialog","useTheme","setTitle","share_link","copyToClipBoard","copyMe","navigator","clipboard","writeText","Dialog","PaperProps","boxShadow","aria-labelledby","DialogTitle","DialogContent","DialogActions","imageBox","dialog","minHeight","icons","ImageDialog","scroll","aria-describedby","fontSize","poster_url","alignContent","media","buttonDiv","button","large","tab","adminDetails","AboutEventPanel","other","tags","requirements","timeLabel","setTimeLabel","setAdminDetails","imageDialogOpen","setImageDialogOpen","undefined","user_id","calculateTimeLeft","difference","registration_end_time","timeLeft","start_time","finish_time","days","Math","floor","hours","minutes","setTimeLeft","x","getTimeLabel","cleanup","clearTimeout","timerComponents","Object","keys","forEach","interval","role","lg","description","length","Chip","event_type","fee_type","event_mode","about","venue","venue_college","fee","profile_pic","college_name","secondaryTail","startDate","endDate","regEndDate","Timeline","TimelineItem","TimelineOppositeContent","toDateString","toLocaleTimeString","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","timiline","root3","root5","CustomizedTimeline","announcements","setAnnouncements","registered","ann","visible_all","date","time","root2","whiteSpace","pos","inline","ChatMessage","userType","setUserType","adminId","ListItem","ListItemAvatar","ListItemText","Fragment","user_name","componentDecorator","decoratedHref","decoratedText","timeStyle","bottomBar","bottom","left","close","JustifyContent","sendButtonDisabled","setSendButtonDisabled","newmessage","setNewMessage","cl","setCl","clsx","rowsMax","onKeyUp","keyCode","shiftKey","handleSend","sendIcon","textDecorationColor","minWidth","root6","topBar","root4","progress","user","useContext","dialogOpen","setDialogOpen","reference","setReferenece","chatMessages","setChatMessages","counterDate","webSocket","setWebSocket","webConnect","ws","WebSocket","onopen","onmessage","mes","parse","cMes","msg","event_id","onclose","check","scrollIntoView","behavior","readyState","Fade","in","unmountOnExit","List","currentDate","messageDate","userName","user_pic","float","clear","ref","el","d","send","action","now","toISOString","a11yProps","bottomTags","field","dialogContent","EventsDialog","t","setValue","shareDialogOpen","setShareDialogOpen","chatAcess","setChatAcess","reg_mode","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","dividers","handleReg","reg_link","textDecoration","EventsContext","FormDialog","notificationms","setNotifications","handleNotificationClick","n","handleClick","Divider","anchorEl","setAnchorEl","darkThemeSelected","setDarkThemeSelected","searchedEvent","setSearchedEvent","notificationsCount","setNotificationCount","isMenuOpen","Boolean","setOpen","notificationsOpen","setNotificationsOpen","allEvents","tabIndex","parseInt","handleChange","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","Switch","window","location","reload","removeItem","handleeventClick","handleHomeClick","handleProfileClick","handleExploreClick","handleTitleButtonClick","AppBar","Toolbar","Logo","noWrap","Autocomplete","freeSolo","options","getOptionLabel","option","renderInput","params","square","icon","edge","aria-controls","aria-haspopup","currentTarget","ActiveEventsContext","backdrop","zIndex","drawer","setAllEvents","activeEvents","setActiveEvents","authorized","setAuthorized","userDetailsDone","setUserDetailsDone","verified","sort","b","filter","Backdrop","subRpaper","fab","sideList","CalenderPanel","events","setEvents","selectedEvent","setSelectedEvent","registeredEvents","setRegisteredEvents","y","start","end","handlePostButtonClick","handleRegisterdEventClick","eventBackgroundColor","eventBorderColor","eventClick","info","defaultView","plugins","dayGridPlugin","buttonIcons","Fab","EventReportDialog","desc","setDesc","morePopup","Eventcard","anchorRef","useRef","imageLoaded","setImageLoaded","reportDialogOpen","setReportDialogOpen","current","contains","handleListKeyDown","prevOpen","handleReportClick","handleShareClick","focus","Card","CardHeader","imageDialog","onLoad","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","subheader","CardContent","CardActions","disableSpacing","click","filterTextField","filterButton","SortLeftPanel","handleModeToggle","currentIndex","modeChecked","indexOf","newChecked","splice","setModeChecked","handleFeeToggle","feeChecked","setFeeChecked","utils","DateFnsUtils","DatePicker","format","sortStartDate","handleSortDateChange","sortEndDate","handleEndSortDateChange","paddingTop","labelId","dense","ListItemIcon","disableRipple","RadioGroup","defaultValue","handleSortCollegeChange","Radio","handleSortApplyButton","handlesortDiscardButton","MobileSortPanel","KeyboardButtonProps","collegeName","leftSubPaper","mobileFilterButton","skeleton","feedBackButton","setSortStartDate","setSortEndDate","sortCollegeType","setSortCollegeType","sortedEventsArray","setSortedEventsArray","isFiltered","setIsFiltered","feeSortChecked","setFeeSortChecked","modeSortChecked","setModeSortChecked","filterDialogOpen","setFilterDialogOpen","registerdEvents","feedBackOpen","setFeedBackOpen","dateRangeSortedEvents","sortByDateRange","sortByMode","typeSortedEvents","feeSortedEvents","sortByCost","collegeSortedEvents","sortByCollege","sortByDate","dateSortedEvents","date1","date2","sEvents","sortedEvents","sEvent","getTime","tEvents","sDEvents","sevent","getDate","getMonth","includes","college","handleImageDialogOpen","handleRegistrationButton","Skeleton","animation","EventCard","startTime","endTime","eventMode","eventType","regEndTime","registrationEndTime","feeType","feesType","ImgMediaCard","CardMedia","gutterBottom","handleViewClick","pathname","toUpperCase","ProfilePostsTabPanel","postedEvents","setSellectedEvent","mode","content","ProfileDataBox","setIcon","editIcon","handleEditButton","ProfileAboutDataBox","eventName","setEventName","certificate_status","download","certificate_url","ProfilePostedEventsTabPanel","UpdateInfoTabPanel","setName","setUserName","setBio","setGender","setDesignation","setCollegeName","setCollegeId","collegesName","setCollegesName","imageUpdated","setImageUpdated","v","collegesNames","c","UpdatePasswordTabPanel","cPassword","setCPassword","setNPassword","UpdateProfile","accordion","EventsTabPanel","eOpen","setEOpen","ActiveEvents","UpdateProfileDialog","buttons","AddressForm","startDateError","setStartDateError","endDateError","setEndDateError","regEndDateError","setRegEndDateError","eventTypes","setEventTypes","handleNext","DateTimePicker","minDate","setStartDate","setEndDate","setRegEndDate","setEventMode","setEventType","registrationMode","setSteps","steps","setRegistrationMode","FormLabel","setFeeType","imageName","setImageName","eventTags","setEventTags","setRequirements","r","setAbout","multiple","eventThemes","values","setThemes","renderTags","getTagProps","setPoster","fileName","InputProps","endAdornment","InputAdornment","regLink","setRegLink","regFees","setFees","setParticipantsType","aria-disabled","evemt","setAddressType","setBuilding","building","venueCollege","setVenueCollege","handleBack","setType","selectedOptions","setSelectedOptions","handleAdd","formControl","formgroup","flexWrap","listStyle","chip","fields","selectedFields","setSelectedFields","sName","setFields","handlePost","addingField","fName","FormGroup","onDelete","chipToDelete","appBar","layout","stepper","Checkout","activeStep","setActiveStep","shortDesc","setShortDesc","setendDate","fees","setEventThemes","selectedrequirements","setSelectedRequirements","addressType","setBuildingAdress","organizer","setOrganizer","participantsType","platformDetails","setPlatformDetails","handleEventPost","allFields","oAllowed","venue_type","reg_fields","o_allowed","platform_details","setRegFields","f","handlePostwithoutregFileds","goBack","Stepper","Step","StepLabel","step","eventPoster","Error","getStepContent","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","toolbar","mixins","MiniDrawer","setUser","handleSignout","dOpen","setDOpen","handleDeleteButton","AnnouncementForm","visibility","setVisibility","SendEmailForm","setContent","emails","buttonsPaper","fixedHeightPaper","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setHeaders","rowValues","setRowValues","selected","setSelected","announcementDialog","setAnnouncementDialog","sendEmailDialog","setSendEmailDialog","firstdata","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","newSelecteds","Email","indeterminate","column","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","textField","setRegFees","regMode","setRegMode","participantType","setVenue","novalidate","getParticipantsList","participants","certificate","maxLength","CertificateSample","ExplorePanel","flexShrink","drawerOpen","drawerClose","overflowX","match","setDrawerOpen","setEvent","adminAccess","setAdminAccess","infoSelected","dashBoardSelected","timilineSelected","announcementSelected","settingsSelected","editEventSelected","chatSelected","certificateSelected","Drawer","direction","chat","canRegister","setCanRegister","userMessage","setUserMessage","formValues","setFormValues","normalFields","setNormalFields","dropDownFields","setDropDownFields","checkboxFields","setCheckBoxFields","radioFields","setRadioFields","dateFields","setDateFields","longDescFields","setLongDescFields","linkFields","setLinkFields","backDropOpen","setBackDropOpen","checkedValues","setCheckedValues","handleLondDescChange","handleradioChange","class","array","i","regEvents","pastEvents","handleEventClick","appbar","UnregisteredPage","DialogContentText","details","setDetails","userFound","setUserFound","participantname","participant_college","event_name","NetworkDetector","ComposedComponent","exact","path","Login","SignUp","ForgotPassword","UserInfo","OTPVer","EventDetails","VerifyCertificate","EventPostForm","ProfileTabPanel","EventRegisterForm","isDisconnected","handleConnectionChange","onLine","webPing","setInterval","clearInterval","catch","this","addEventListener","removeEventListener","Component","darkTheme","createMuiTheme","default","lightTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e72749ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.50ff3dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-play-badge.1a0c1f51.png\";","module.exports = __webpack_public_path__ + \"static/media/logo300.a7187bbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/certificate_sample.987b5a91.png\";","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        height: '100vh',\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n      },\n    paperRight: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(0),\n        paddingBottom: theme.spacing(4),\n        borderRadius: 30,\n        height: '80vh',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(0, 1),\n            paddingBottom: theme.spacing(2),\n          },\n    },\n    paperLeft: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(3, 1),\n          },\n          [theme.breakpoints.up('md')]: {\n            height: '80vh',\n          },\n          \n    },\n    paperimage: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(),\n        marginTop: theme.spacing(8),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '90%', \n        margin: theme.spacing(5),\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(2),\n          },\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    iPhoneImage: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n    },\n    title: {\n        \n        fontFamily: 'Gugi',\n        // marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n      },\n      hidden:{\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n      },\n      image: {\n        maxHeight: \"600px\",\n        maxWidth: '600px',\n        [theme.breakpoints.down('sm')]: {\n          display: 'none'\n        },\n      }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n          ellipseapp.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default Copyright;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../Themes/SigninPageStyles'\n// import AppleBadge from '../Components/Images/AppleBadge.png';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n// import iPhone from '../Components/Images/iPhone 11 Pro Max@2x.png';\nimport Copyright from \"../Components/copyright\";\nimport { withRouter, Redirect } from \"react-router\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PhoneImage from '../Components/Images/logo300.svg';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\n\n\n\nconst Signin = ({ history }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [user,setUser] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  const [isUserVerified, setIsUserVerified] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const abortController = new AbortController();\n  \n\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Signedin successfully\") {\n      localStorage.setItem('token', token);\n      if (isUserVerified) {\n        localStorage.setItem('token', token);\n        const eventId = localStorage.getItem('eventid');\n        if (eventId) {\n          abortController.abort()\n          history.push(`/event/${eventId}`)\n        }\n        else {\n          abortController.abort()\n          history.push('/home');\n        }\n\n      }\n      else {\n        try {\n          var data2 = new FormData();\n          const payload2 = {\n            email: email\n          };\n          data2 = JSON.stringify(payload2)\n          fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n            signal: abortController.signal,\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data2\n          }).then((result) => {\n            // console.log(result);\n            result.json().then((res) => {\n              if (res.message === \"success\") {\n                abortController.abort()\n                localStorage.setItem('token', token);\n                history.push('/otpverification')\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Signedin successfully',\n                  type: \"success\",\n                  autoHide: 300\n                });\n              }\n            })\n\n          })\n        } catch (error) {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: error.message,\n            type: \"error\",\n            autoHide: 3000\n          })\n        }\n\n      }\n\n    }\n    setState({ ...state, open: false });\n  };\n  async function handleSignin(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { email, password } = event.target.elements;\n    try {\n      var data = new FormData()\n      const payload = {\n        email: email.value,\n        password: password.value\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/users/login', {\n        signal: abortController.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then((response) => {\n        // console.log(response);\n        if (response.status === 200) {\n          // console.log\n          response.json().then((value) => {\n            setToken(value.token);\n            setIsUserVerified(value.isVerified);\n            setEmail(value.useremail);\n            // setUser(JSON.stringify(value.userDetails));\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Signedin successfully',\n              type: \"success\",\n              autoHide: 200\n            });\n          })\n        }\n        else {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: \"invalid credentials\",\n            type: \"error\", autoHide: 6000\n          })\n        }\n\n      })\n    } catch (error) {\n\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n    }\n  }\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} sm={12} md={7} elevation={6} >\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" m={1} p={1} className={classes.paperLeft}>\n        <img  src={PhoneImage} alt=\"logo\" height=\"500px\" width=\"500px\" className={classes.image}></img>\n          <Typography className={classes.title} component=\"h1\" variant=\"h2\">\n            Ellipse\n          </Typography>\n          <Typography component=\"h1\" variant=\"h6\">\n            Kill time for what matters\n          </Typography><br></br>\n          <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.guna0027.ellipse\" target=\"_blank\">\n          <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n          </a>\n          \n        </Box>\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={5} elevation={6}>\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1} className={classes.paperRight}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={handleSignin}>\n            <TextField\n              name=\"email\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              name=\"password\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <div className={classes.wrapper}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={loading}\n                className={classes.submit}>\n                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign In\"}\n\n              </Button>\n            </div>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"/forgotpassword\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-end\">\n            <Copyright></Copyright>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\nexport default withRouter(Signin);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // backgroundColor: theme.palette.secondary.main,\n      padding: theme.spacing(3),\n      borderRadius: 30,\n  \n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(7),\n      [theme.breakpoints.down('md')]: {\n        top: theme.spacing(12),\n      }\n    }\n  }));\n\n  export default useStyles;","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = ({ history }) => {\n  const classes = useStyles();\n  const [token, setToken] = React.useState(\"\");\n  // const [currentUser, setCurrentUser] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUserNameError] = React.useState(false);\n  const [signupButtonDisabled, setSignupButtonDisabled] = React.useState(false);\n  const handleClose = async (event, reason) => {\n\n    if (message === \"Signedup successfully\") {\n      localStorage.setItem('token', token);\n      history.replace(\"/otpverification\")\n    }\n\n    setState({ ...state, open: false });\n  };\n  async function handleSignUp(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { fullName, email, password, username, terms } = event.target.elements;\n    try {\n      if (terms.checked) {\n        var data = new FormData()\n        const payload = {\n          name: fullName.value,\n          email: email.value,\n          password: password.value,\n          username: username.value\n        };\n        data = JSON.stringify(payload);\n        fetch(process.env.REACT_APP_API_URL + '/api/users/signup', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then((result) => {\n          if (result.status === 200) {\n            result.json().then((val) => {\n              setToken(val.token);\n              var data2 = new FormData();\n              const payload2 = {\n                email: val.useremail\n              };\n              data2 = JSON.stringify(payload2)\n              // console.log(token);\n              const tok = val.token;\n              fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                headers: {\n                  'Authorization': `Bearer ${tok}`,\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n              }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                  if (res.message === \"success\") {\n                    setState({\n                      open: true,\n                      vertical: 'top',\n                      horizontal: 'center',\n                      message: 'Signedup successfully',\n                      type: \"success\",\n                      autoHide: 300\n                    });\n                  }\n                })\n\n              })\n\n            })\n          }\n          else if (result.status === 401) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Email already registered',\n              type: \"error\",\n              autoHide: 3000\n            });\n          }\n        })\n      }\n\n      else {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please agress the terms and condiitons',\n          type: \"error\"\n        });\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleUsernameChange(event) {\n    const username = event.target.value;\n    var data = new FormData();\n    const payload = {\n      username: username\n    };\n    data = JSON.stringify(payload);\n    setUserNameError(false);\n    setSignupButtonDisabled(false)\n    fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((result) => {\n      result.json().then(value => {\n        if (value.message === \"user already exists\") {\n          setUserNameError(true);\n          setSignupButtonDisabled(true);\n        }\n      })\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fullName\"\n                name=\"fullName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                inputProps={{ pattern: \"[a-zA-Z ]+\" }}\n                onInvalid={() => { setNameError(true) }}\n                helperText={nameError && \"Name should only contain alphabet and spaces\"}\n                onInput={() => { setNameError(false) }}\n                error={nameError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"User Name\"\n                onChange={handleUsernameChange}\n                name=\"username\"\n                error={usernameError}\n                helperText={usernameError && \"username already exists\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" name=\"terms\" />}\n                label=\"I accept the terms and conditions\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || signupButtonDisabled}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign Up\"}\n          </Button>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n\n\n","import React from \"react\";\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst ForgotPassword = ({ history }) => {\n  const classes = useStyles();\n  // const token = localStorage.getItem('token');\n  const [email, setEmail] = React.useState(null);\n  const [otp, setOtp] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [loading2, setLoading2] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n\n  async function handlePasswordReset(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/sendverificationemail', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading(false)\n            // history.push('/resetforgotpassword')\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Check your email for OTP and enter below',\n              type: \"success\",\n              autoHide: 2000\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  async function handleForgotPassword(event) {\n    event.preventDefault();\n    setLoading2(true);\n    // const { email,} = event.target.elements;\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email,\n        otp: otp,\n        nPassword: password\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL+'/api/users/forgotpassword', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n\n            // history.push('/resetforgotpassword')\n            setLoading2(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Succesfull Login to continue',\n              type: \"success\",\n              autoHide: 300\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading2(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  function handleClose() {\n    if (message === \"Succesfull Login to continue\") {\n      history.replace(\"/\");\n    }\n  }\n\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter your email to receive OTP\n        </Typography>\n        <form className={classes.form} onSubmit={handlePasswordReset}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}>\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send OTP\"}\n          </Button>\n        </form>\n        <form className={classes.form} onSubmit={handleForgotPassword}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"otp\"\n                label=\"OTP\"\n                name=\"otp\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"New Password\"\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading2}\n            className={classes.submit}>\n            {loading2 ? <CircularProgress color=\"primary\" size={24} /> : \"Reset Password\"}\n          </Button>\n\n\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Link href=\"/\" variant=\"body2\">\n              Instead? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(ForgotPassword);\n\n\n","import React, { useEffect, useState } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [token,setToken] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    // function storeUser(user){\n    //   setCurrentUser(user);\n    //   setPending(false)\n    // }\n    // console.log(localStorage.getItem('user'))\n    setCurrentUser(localStorage.getItem('user'));\n    setPending(false);\n\n    // app.auth().onAuthStateChanged((user) => {\n    //   setCurrentUser(user)\n    //   setPending(false)\n    // });\n  }, []);\n  // function add\n\n  if (pending) {\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OTPver = ({ history }) => {\n    const classes = useStyles();\n    const token = localStorage.getItem(\"token\");\n    // const [token, setToken] = React.useState(\"\");\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide} = state;\n    const [seconds,setSeconds] = React.useState(30);\n    const [resendEnabled,setresetEnabled] = React.useState(false)\n\n    React.useEffect(() => {\n        if (seconds > 0) {\n          setTimeout(() => setSeconds(seconds - 1), 1000);\n        } else {\n          setresetEnabled(true)\n        }\n        // eslint-disable-next-line\n      },[seconds]);\n\n    function handleClose() {\n        // console.log(\"message\")\n        if (message === \"verified\") {\n            history.replace(\"/userinfo\")\n        }\n        setState({ ...state, open: false });\n    }\n\n    if(!token){\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    function handleVerification(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { otp } = event.target.elements;\n        try {\n            var data = new FormData();\n            const payload = {\n                otp: otp.value\n            };\n            // data.append(JSON.stringify(payload));\n            data = JSON.stringify(payload);\n            \n            fetch(process.env.REACT_APP_API_URL+'/api/users/verifyotp', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n\n            }\n            ).then((result) => {\n                result.json().then(val => {\n                    // console.log(val.message);\n                    if (val.message === \"verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"verified\",\n                            type: 'success',\n                            autoHide: 300\n                        })\n\n                    }\n                    else if (val.message === \"Not verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"incorrect otp\",\n                            type: 'error',\n                            autoHide: 3000\n                        })\n                    }\n                    else {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Something went wrong try again\",\n                            type: 'error',\n                            autoHide: 3000\n                        })\n                    }\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n\n\n\n    }\n\n\n    function handleResendOTP(){\n        try {\n            var data2 = new FormData();\n            const payload2 = {\n            //   email: value[0].email\n            };\n            data2 = JSON.stringify(payload2)\n            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemailwithauth', {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              },\n              method: 'POST',\n              body: data2\n            }).then((result) => {\n              // console.log(result);\n              result.json().then((res) => {\n                if (res.message === \"success\") {\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: \"Password sent succcessfully\",\n                        type: 'success',\n                        autoHide: 300\n                    })\n                }\n              })\n  \n            })\n          } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n          }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Email Verification\n                </Typography>\n                <form className={classes.form} onSubmit={handleVerification}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"otp\"\n                            label=\"Enter OTP\"\n                            name=\"otp\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                    <Grid container>\n             \n              <Grid item>\n              <Button disabled={!resendEnabled} onClick={handleResendOTP}>Resend OTP in {seconds}</Button>\n              </Grid>\n            </Grid>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(OTPver);\n\n\n","import React from 'react';\nimport Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textArea: {\n        width: theme.spacing(58),\n        margin: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.dark,\n    },\n\n}));\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UserInfo = ({ history }) => {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [currentUser, setCurrentUser] = React.useState(null);\n    const [imageUrl, setImageurl] = React.useState(\"\");\n    const [image, setImage] = React.useState(null);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide } = state;\n    const [colleges,setColleges] = React.useState([]);\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            const eventId = localStorage.getItem('eventid');\n        if(eventId){\n          history.push(`/event/${eventId}`)\n        }\n        else{\n            history.replace(\"/home\")\n        }\n            \n        }\n\n        setState({ ...state, open: false });\n    };\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'GET',\n                }).then(response =>{\n                  // console.log(response);\n                  response.json().then(value =>{\n                    // console.log(value);\n                    setColleges(value);\n                  })\n                })\n      },[token])\n\n      if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n  \n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            // setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            // const fileType = event.target.files[0].type;\n            setImageurl(url);\n            // setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    async function handleSignUp(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { gender, designation, collegeId, bio } = event.target.elements;\n\n        try {\n            var data = new FormData()\n            const payload = {\n                gender: gender.value,\n                designation: designation.value,\n                college_id: collegeId.value,\n                bio: bio.value,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/userdetails', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (image != null) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Welcome\n                </Typography>\n                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    badgeContent={<label htmlFor=\"contained-button-file\">\n                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <EditIcon></EditIcon>\n                        </IconButton>\n                    </label>}>\n                    <Avatar className={classes.avatar} sizes=\"100\" alt=\"\" src={imageUrl}></Avatar>\n                </Badge>\n\n                <form className={classes.form} onSubmit={handleSignUp}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                            // onChange={handleAboutChange}\n                            // value={props.about}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                        \n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Your College</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"College\"\n                                    inputProps={{\n                                        name: 'collegeId',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    {colleges.map((coll,index) =>{\n                                        return <option key={index} value={coll._id}>{coll.name}</option>\n                                    })}\n                                    \n                                    {/* <option value=\"GITAM University\">GITAM University</option>\n                                    <option value=\"SRM University\">SRM University</option> */}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(UserInfo);\n\n\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.5em',\n      height: '0.5em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 1px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: '#ad9d9d',\n      outline: '1px solid slategrey'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n    marginBottom: theme.spacing(5)\n\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n    alignItems: 'center',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  mobileTitle:{\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    \n  },\n  titleButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n    textTransform: 'none'\n  },\n  mobileTitleButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      width: 'fit-content'\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    width: '230px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    borderBottom: 'none',\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  sectionDesktop: {\n    \n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  tabs: {\n    \n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginLeft: theme.spacing(15),\n    },\n  },\n  mobiletab: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  tabPanel: {\n    marginBottom: theme.spacing(3),\n  },\n  flex_section: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    // minHeight: 0\n  },\n  \n  flex_col_scroll: {\n    flexGrow: 1,\n    overflow: 'auto',\n    // minHeight: '100vh'\n  },\n  rpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    margin: theme.spacing(2),\n    // borderRadius: theme.spacing(50)\n  },\n  postButton: {\n    borderRadius: theme.spacing(50)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        setTitle(event.share_link)\n    }, [event.share_link])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Share Link\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DialogContent, DialogTitle } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  imageBox:{\n    display: \"flex\",\n        justifyContent: \"center\",\n  },\n  dialog: {\n    // height: '800px',\n    minHeight: '90vh',\n    maxHeight: '90vh',\n},\n  image: {\n    maxWidth: \"100%\",\n  },\n  icons: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    // color: theme.palette.grey[500],\n\n},\ntitle:{\n  backgroundColor: theme.palette.secondary\n}\n}));\n\n\n\n\nfunction ImageDialog(props) {\n  const classes = useStyles();\n  const event = props.event;\n  function handleClose() {\n    props.handleClose();\n\n}\n\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"transparent\",\n                    boxShadow: 'none',\n                    \n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.title}>{event.name}\n            <div className={classes.icons}>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n            </div>\n            </DialogTitle>\n              <DialogContent>\n              <Box className={classes.imageBox}>\n              <img className={classes.image} src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  alt=\"profile pic\"></img>\n              </Box>\n                \n              </DialogContent>\n            </Dialog>\n      </div>\n   );\n}\n\nexport default ImageDialog;\n\n","import React from 'react';\nimport { cleanup } from '@testing-library/react';\n\n//Materail imports\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\n// import AuthContext from '../AuthContext';\nimport ImageDialog from '../Components/ImageDialog';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginTop: theme.spacing(2)\n    }\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const { children, value, url, index, ...other } = props;\n    const event = props.event;\n    const tags = event.tags;\n    const requirements = event.requirements;\n    const [timeLabel, setTimeLabel] = React.useState(\"Registration Ends in\");\n    const [adminDetails, setAdminDetails] = React.useState({});\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        if(event._id !== undefined && event.user_id !== undefined){\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_organizer_details?eventId=${event._id}&userId=${event.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    setAdminDetails(value);\n                })\n            })\n        }\n    }, [event,token])\n\n\n    const calculateTimeLeft = () => {\n\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let timeLeft = {};\n        if (difference < 0) {\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        if (difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const getTimeLabel = () => {\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let label = \"Registration ends in\"\n        if (difference < 0) {\n            label = \"Starts in\"\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            label = \"Ends in\"\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        return label;\n    }\n\n    const [timeLeft, setTimeLeft] = React.useState(calculateTimeLeft());\n\n    React.useEffect(() => {\n        const x = setTimeout(() => {\n            setTimeLabel(getTimeLabel());\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n\n        return () => {\n            cleanup();\n            clearTimeout(x);\n        }\n    });\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach(interval => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span key={interval}>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        // setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Grid container component=\"main\">\n                        <Grid item xs={12} sm={12} md={4} lg={4} >\n                            <img onClick={handleImageDialogOpen} style={{ maxWidth: '250px' }} alt=\"event poster\" src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  ></img>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <Typography>{event.description} </Typography>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }}>{timeLabel}</Typography>\n                            <Typography variant=\"h5\">{timerComponents.length ? timerComponents : <span>Time's up!</span>}</Typography>\n                            {/* <Typography>Starts at {event.start_time}</Typography>\n                        <Typography>Ends at {event.finish_time}</Typography> */}\n                            <div style={{ marginTop: '10px' }}>\n                                <Chip variant=\"outlined\" color=\"inherit\" label={event.event_type}></Chip>\n\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.fee_type}></Chip>\n                                <Chip style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={event.event_mode}></Chip>\n                                {tags != null && tags.map(val => {\n                                    return <Chip key={val} style={{ marginLeft: '5px' }} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                })}\n                            </div>\n\n                        </Grid>\n                        <Grid item xs={12}>\n\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h4\">About</Typography>\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                {\n                                    event.about\n                                }\n                                {/* {[...new Array(5)]\n                                    .map(\n                                        () => `Cras mattis consectetur purus sit amet fermentum. \n                                    Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n                                    Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                                    Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n                                    )\n                                    .join('\\n')} */}\n                            </Typography>\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Requirements</Typography>\n                            {\n                                requirements != null && requirements.map(val => {\n                                    return <Chip key={val} style={{ marginRight: '5px' }} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                })\n                            }\n                            {event.event_mode === \"Offline\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Venue Details</Typography>}\n                            {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue}</Typography>}\n                            {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue_college}</Typography>}\n                            {/* {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Platform Details</Typography>}\n                            {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">{}</Typography>} */}\n                            {event.fee_type === \"Paid\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Fee Details</Typography>}\n                            {event.fee_type === \"Paid\" && <Typography color=\"textSecondary\" variant=\"body2\">{\"Rs \" + event.fee}</Typography>}\n                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Organised By</Typography>\n                            <Box className={classes.adminDetails}>\n                                <Box>\n                                    <Avatar className={classes.avatar} alt={adminDetails.name} src={process.env.REACT_APP_API_URL + `/api/image?id=${adminDetails.profile_pic}`} />\n                                </Box>\n                                <Box>\n                                    <Box>\n                                        <Typography variant=\"h5\">{adminDetails.name}</Typography>\n                                    </Box>\n                                    <Box>\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{adminDetails.college_name}</Typography>\n                                    </Box>\n\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12}>\n                        </Grid>\n                        <Grid>\n                        </Grid>\n                    </Grid>\n                    <ImageDialog\n                    // image={selectedImage}\n                    event={event}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose}>\n                </ImageDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n\n// This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport TimerIcon from '@material-ui/icons/Timer';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  large: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  tab: {\n    flexGrow: 1,\n    // maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const token = localStorage.getItem('token');\n  const event = props.event;\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  \n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Timeline align=\"alternate\">\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {regEndDate.toDateString()}{\" \"+regEndDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              \n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Registration Ends\n                  </Typography>\n                  <Typography>Your oppurtunity to participate came to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n              <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {startDate.toDateString()}{\" \"+startDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\" variant=\"outlined\"> \n                <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Starts\n                  </Typography>\n                  <Typography>Party begins</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n            <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                {endDate.toDateString()}{\" \"+endDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector className={classes.secondaryTail} />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Ends\n                  </Typography>\n                  <Typography>Chill,event came to an end</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            {/* <TimelineItem>\n              <TimelineSeparator>\n                <TimelineDot color=\"secondary\">\n                  <RepeatIcon />\n                </TimelineDot>\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Repeat\n            </Typography>\n                  <Typography>Because this is the life you love!</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem> */}\n          </Timeline>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if(event.registered){\n          setAnnouncements(value);\n        }\n        else{\n          value.forEach(ann => {\n            if(ann.visible_all){\n              setAnnouncements((announcements)=>[...announcements,ann])\n            }\n          });\n        }\n        \n      })\n    })\n  }, [token, event])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useEffect } from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { ListItemAvatar } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Linkify from 'react-linkify';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar style={{ display: 'none' }} ><InfoIcon></InfoIcon></ListItemAvatar>\n            <ListItemText\n                primary={\n                    <React.Fragment>\n                        <Typography component=\"h6\" variant=\"body2\">\n                            {message.user_name+userType}\n                        </Typography>\n\n                        {/* <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                            {userType}\n                        </Typography> */}\n                    </React.Fragment>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" variant=\"body1\" color=\"textPrimary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{color:'red',fontWeight: 'bold'}} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                            {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                        </Typography>\n                        <Box>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                className={classes.date}\n                            >\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </React.Fragment>}\n            />\n        </ListItem>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n \nconst AuthContext = React.createContext(null);\n \nexport default AuthContext;","import React from 'react';\nimport clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        position: 'absolute',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    open: {\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(34),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    close: {\n        // width: '85%',\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(13),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    const [cl, setCl] = React.useState(classes.bottomBar);\n    React.useEffect(() => {\n        if (props.open !== undefined) {\n            setCl(clsx({\n                [classes.open]: props.open,\n                [classes.close]: !props.open,\n            }))\n        }\n        // eslint-disable-next-line\n    }, [props.open])\n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        if (newmessage !== null && newmessage !== \"\") {\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={cl} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage adminId={event.user_id} message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport EventShareDialog from './EventShareDialog';\nimport AboutEventPanel from '../Components/AboutEventPanel';\nimport EventsTimeLinePanel from '../Components/EventTimeLinePanel';\nimport EvenstAnnouncementsPanel from '../Components/EventsAnnouncementsPanel';\nimport ChatPanel from '../Components/EventsChatPanel';\nimport { Typography } from '@material-ui/core';\nimport AuthContext from '../AuthContext';\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    }\n}));\n\nfunction EventsDialog(props) {\n    const event = props.event;\n    const t = localStorage.getItem('theme');\n    const [value, setValue] = React.useState(0);\n    const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    // const token = localStorage.getItem('token');\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n    const [chatAcess, setChatAcess] = React.useState(false);\n\n    React.useEffect(() => {\n        if (event.registered || event.reg_mode !== \"form\") {\n            setChatAcess(true)\n        }else if(event.user_id === user.user_id){\n            setChatAcess(true)\n        }\n        else {\n            setChatAcess(false)\n        }\n    }, [event,user])\n\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleClose() {\n        props.handleClose();\n\n    }\n\n    function handleRegClick() {\n        props.handleReg(event);\n\n    }\n\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                {event.name}\n                <div className={classes.icons}>\n                    {/* <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                        <MailIcon></MailIcon>\n                    </IconButton> */}\n                    <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <Paper className={classes.root2}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"About\" {...a11yProps(0)} />\n                            <Tab label=\"Schedule\" {...a11yProps(1)} />\n                            <Tab label=\"Announcements\" {...a11yProps(2)} />\n                            <Tab label=\"Chat\" {...a11yProps(3)} />\n\n                        </Tabs>\n                    </Paper>\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent} dividers={true} >\n                <EventShareDialog\n                    event={event}\n                    open={shareDialogOpen}\n                    handleClose={handleShareClose}></EventShareDialog>\n                <AboutEventPanel\n                    value={value}\n                    index={0}\n                    event={props.event}></AboutEventPanel>\n                <EventsTimeLinePanel value={value} index={1} event={props.event}></EventsTimeLinePanel>\n                <EvenstAnnouncementsPanel value={value} index={2} event={props.event}></EvenstAnnouncementsPanel>\n                {value === 3 && chatAcess && <ChatPanel value={value} index={3} event={props.event}></ChatPanel>}\n                {value === 3 && !chatAcess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n            </DialogContent>\n            <DialogActions className={classes.action}>\n                <Box className={classes.bottomBar} display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\" hidden={value !== 3}>\n                </Box>\n                <div\n                    role=\"tabpanel\"\n                    hidden={value === 3}>\n                    {value !== 3 && (\n                        <div className={classes.buttonDiv}>\n\n                            {\n                                event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                                    {event.registered ? \"Registered\" : \"Register\"}\n                                </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                                    </Button>\n                            }\n\n                        </div>\n                    )}\n\n                </div>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default EventsDialog;","import React from 'react';\n \nconst EventsContext = React.createContext(null);\n \nexport default EventsContext;","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// import CardContent from '@material-ui/core/CardContent';\n// import Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\n// import { Redirect } from 'react-router';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root3: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2)\n    },\n    root5:{\n        display: \"flex\",\n            justifyContent: \"flex-end\",\n      },\n      secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n      },\n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [notificationms,setNotifications] = React.useState([]);\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/get_notifications', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value)\n                    setNotifications(value);\n                })\n            }\n        })\n    }, [token])\n\n    const handleNotificationClick = (n) => () =>{\n        props.handleClick(n.event_id)\n    }\n\n\n    return (\n        <div>\n            <Dialog scroll=\"paper\" open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.dialog }}>\n                <DialogTitle id=\"form-dialog-title\">Notifications</DialogTitle>\n                <Divider></Divider>\n                <DialogContent>\n                {\n                    notificationms.map((n,index)=>{\n                        const date = new Date(n.time)\n                       return <Box onClick={handleNotificationClick(n)} m={1} p={1} className={classes.root3}>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Typography className={classes.title}>\n                                {n.title}\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                {n.description}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.root5}>\n                            <Typography variant=\"body2\" >\n                                {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    })\n                }\n                    \n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EventIcon from '@material-ui/icons/Event';\nimport useStyles from '../Themes/MainHomeStyles';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport { Button } from '@material-ui/core';\nimport Logo from '../Components/Images/logo.svg';\n// import DarkLogo from '../Components/Images/dark_theme_logo.png';\n// import LightLogo from '../Components/Images/light_theme_logo.png';\n// import CuboidLogo from '../Components/Images/Cuboid logo.png'\n\n\n\n\n\n\nconst NavigationBar = function ({ history }) {\n\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const t = localStorage.getItem('theme');\n  const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n  // const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n  // const [allEvents, setAllEvents] = React.useState([]);\n  const [searchedEvent, setSearchedEvent] = React.useState([]);\n  const [notificationsCount,setNotificationCount] = React.useState(0);\n\n  const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  // const [calenderValue, setCalenderValue] = useState(new Date());\n  // const [loading, setLoading] = React.useState(false);\n  // const eventypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [open, setOpen] = React.useState(false);\n  const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n  const allEvents = React.useContext(EventsContext);\n  useEffect(() => {\n    if (localStorage.getItem('tabIndex') != null) {\n      const tabIndex = parseInt(localStorage.getItem('tabIndex'));\n      if (tabIndex != null) {\n        setValue(tabIndex);\n      }\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/get_unseen_notifications_count', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        // console.log(data);\n        setNotificationCount(data);\n      })\n    })\n  }, [token])\n\n\n  // function handleMorebuttonClick(event) {\n  //   event.preventDefault();\n  //   // history.push(\"/event/1\")\n  // }\n  function handleSearchChange(event, value) {\n    if (value) {\n      // console.log(value);\n      setSearchedEvent(value);\n      setOpen(true);\n    }\n  }\n\n  const handleNotificationCardClick = (value)=>{\n    if(value){\n      allEvents.forEach(event => {\n        if(event._id === value){\n          setSearchedEvent(event);\n          setOpen(true);\n        }\n      });\n    }\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('tabIndex', newValue);\n  };\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    // setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  \n  if (!token) {\n    history.replace('/');\n  }\n\n  function handleThemeChange(event) {\n    // console.log(event.target.checked);\n    setDarkThemeSelected(event.target.checked);\n    if (event.target.checked) {\n      localStorage.setItem('theme', 'dark');\n      window.location.reload(false);\n    }\n    else {\n      localStorage.setItem('theme', 'light');\n      window.location.reload(false);\n    }\n  }\n\n\n\n  function handleSignout(event) {\n\n    fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then((result) => {\n      result.json().then((data) => {\n        if (data.message === \"success\") {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tabIndex');\n          history.replace(\"/\")\n        }\n      })\n    })\n\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\n      {/* <MenuItem onClick={handleMenuClose}>My account</MenuItem> */}\n      <MenuItem> Dark Theme <Switch\n        checked={darkThemeSelected}\n        onChange={handleThemeChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      /></MenuItem>\n      <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n    </Menu>\n  );\n\n  function handleeventClick(event) {\n    event.preventDefault();\n    history.push(\"/events\")\n    // localStorage.setItem('tabIndex',1);\n  }\n  function handleHomeClick() {\n    history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n  function handleProfileClick() {\n    history.push(\"/profile\")\n  }\n  function handleExploreClick() {\n    history.push(\"/yourevents\")\n  }\n  // function handleChatClick() {\n  //   history.push('/chat')\n  // }\n  const handleClose = () => {\n    setOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  function handleRegistrationButton(event) {\n    setOpen(false);\n    // setSelectedEvent(event);\n    // history.push('/event/register/' + event._id);\n  }\n\n  function handleNotificationClick() {\n    fetch(process.env.REACT_APP_API_URL + '/api/update_notification_status', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(0);\n      })\n    })\n    setNotificationsOpen(true);\n  }\n  function handleTitleButtonClick() {\n    localStorage.setItem('tabIndex', 0)\n    setValue(0)\n    history.push('/home')\n  }\n\n  return (\n    <div className={classes.grow}>\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Toolbar>\n            <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n            <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                options={allEvents}\n                getOptionLabel={(option) => option.name}\n                onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              />\n            </div>\n            <div className={classes.tabs}>\n              <Paper square className={classes.root}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  variant=\"fullWidth\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  aria-label=\"icon\"\n\n                >\n                  <Tab onClick={handleHomeClick} icon={<HomeIcon />} aria-label=\"home\" />\n                  <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                  {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"favorite\" /> */}\n                  <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"person\" />\n                  <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n                </Tabs>\n              </Paper>\n            </div>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                <Badge badgeContent={notificationsCount} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\">\n                <SettingsIcon></SettingsIcon>\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <div className={classes.mobiletab}>\n\n            <Paper square className={classes.root} position=\"sticky\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              // aria-label=\"icon tabs example\"\n              >\n                <Tab onClick={handleHomeClick} icon={< HomeIcon />} aria-label=\"home\" />\n                <Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" />\n                {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"messages\" /> */}\n                <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"explore\" />\n                <Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" />\n              </Tabs>\n            </Paper>\n          </div>\n        </AppBar>\n        <div>\n          {open && <EventsDialog\n            open={open}\n            event={searchedEvent}\n            handleReg={handleRegistrationButton}\n            handleClose={handleClose}>\n          </EventsDialog>}\n          <NotificationsDialog open={notificationsOpen} handleClick={handleNotificationCardClick} handleClose={handleClose}></NotificationsDialog>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default withRouter(NavigationBar);\n\n","import React from 'react';\n \nconst ActiveEventsContext = React.createContext(null);\n \nexport default ActiveEventsContext;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\n\n//Material Imports\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Components impoprts\nimport NavigationBar from './NavigationBar';\nimport EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\n// import dot from 'dote'\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    root: {\n        background: 'white',\n        position: 'sticky',\n        top: 0,\n        bottom: 0,\n        zIndex: 5,\n    },\n}));\n\nfunction Layout(props) {\n\n\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [allEvents, setAllEvents] = React.useState([]);\n    const [activeEvents,setActiveEvents] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [open, setOpen] = React.useState(true);\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    \n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value);\n                    if (value[0].verified === false) {\n                        // setUserDetailsDone(false);\n                        try {\n                            var data2 = new FormData();\n                            const payload2 = {\n                              email: value[0].email\n                            };\n                            data2 = JSON.stringify(payload2)\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                              headers: {\n                                'Authorization': `Bearer ${token}`,\n                                'Content-Type': 'application/json'\n                              },\n                              method: 'POST',\n                              body: data2\n                            }).then((result) => {\n                              // console.log(result);\n                              result.json().then((res) => {\n                                if (res.message === \"success\") {\n                                    setOpen(false);\n                                    props.history.push(\"/otpverification\")\n                                }\n                              })\n                  \n                            })\n                          } catch (error) {\n                            \n                          }\n                        \n                    }\n                    else if(value[0].college_name === null){\n                        setOpen(false);\n                        props.history.push(\"/userinfo\")\n                    }\n                    else{\n                        setUserDetailsDone(true);\n                        setCurrentUser(value[0]);\n                    }\n                   \n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL+'/api/events', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setAllEvents(value);\n                    setActiveEvents(value.filter(e =>{\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }))\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n\n        })\n// eslint-disable-next-line\n    }, [token])\n    // if(!currentUser.verified){\n\n    // }\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        if(currentUser.verified){\n            return <Redirect to=\"/userinfo\"></Redirect>\n        }else{\n            console.log(\"xyz\")\n            try {\n                var data2 = new FormData();\n                const payload2 = {\n                  email: currentUser.email\n                };\n                data2 = JSON.stringify(payload2)\n                fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                  headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                  },\n                  method: 'POST',\n                  body: data2\n                }).then((result) => {\n                  // console.log(result);\n                  result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        return <Redirect to=\"/otpverification\"></Redirect>\n                    }\n                  })\n      \n                })\n              } catch (error) {\n                \n              }\n            \n        }\n        \n    }\n\n    return (\n        <AuthContext.Provider value={currentUser}>\n            <EventsContext.Provider value={allEvents}>\n            <ActiveEventsContext.Provider value={activeEvents}>\n                {\n                    currentUser != null  && <div>\n                        <Paper className={classes.root}>\n                            <NavigationBar></NavigationBar>\n                        </Paper>\n                        <div>\n                            {props.children}\n                        </div>\n                    </div>\n                }\n                {\n                    currentUser == null && <Backdrop className={classes.backdrop} open={open}>\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n                }\n                </ActiveEventsContext.Provider>\n            </EventsContext.Provider>\n        </AuthContext.Provider>\n\n\n    );\n}\nexport default withRouter(Layout) ;\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n// import { Typography } from '@material-ui/core';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport '../Themes/main.scss'\nimport EventsDialog from '../Components/EventsDialog';\n// import EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction CalenderPanel({history}) {\n    localStorage.setItem('tabIndex',1)\n    // const { children, value, url, index, ...other } = props;\n    // const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [events, setEvents] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const [registeredEvents,setRegisteredEvents] = React.useState([]);\n    // const [image, setImage] = React.useState(null);\n    const allEvents = React.useContext(ActiveEventsContext);\n\n    useEffect(() => {\n        allEvents.forEach(y => {\n            // console.log(y.start_time);\n            setEvents(events =>\n                [...events, { id: JSON.stringify(y), title: y.name, start: y.start_time, end: y.finish_time }]\n            )\n        })\n        setRegisteredEvents(allEvents.filter((value) => value.registered === true))\n\n    }, [allEvents])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n    \n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    function handleRegistrationButton(event) {\n        setOpen(false);\n        // setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n\n    function handleEventClick(info) {\n        setSelectedEvent(JSON.parse(info.event.id))\n        setOpen(true);\n    }\n    return (\n        <div>\n            {/* {value === index && ( */}\n            <div className={classes.root}>\n                <Grid container component=\"main\" >\n\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                        {/* <Typography index={0}>Filters</Typography> */}\n                        {/* <Calendar onChange={setCalenderValue} value={calenderValue} ></Calendar> */}\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8} >\n                        <FullCalendar\n                            eventBackgroundColor=\"#1C1C1E\"\n                            eventBorderColor=\"#00bdaa\"\n                            events={events}\n                            eventClick={handleEventClick}\n                            defaultView='dayGridMonth' plugins={[dayGridPlugin]} backgroundColor=\"black\" \n                            buttonIcons={false}></FullCalendar>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={false} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                        </Button>\n                            <List className={classes.sideList}>\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registeredEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        handleReg={handleRegistrationButton}\n                        ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CalenderPanel;\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const event = props.event;\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                event_id: event._id,\n                title: title,\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Report({event.name})</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\nimport EventReportDialog from './EventReportDialog';\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [reportDialogOpen, setReportDialogOpen] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  \n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n  function handleImageClick() {\n    props.imageDialog(event)\n  }\n  function handleRegClick() {\n    props.handleReg(props.eventId);\n\n  }\n  function handleMoreButtonClick() {\n    props.click(props.eventId);\n  }\n  function handleReportClick() {\n    setReportDialogOpen(true);\n  }\n  function handleReportClose() {\n    setReportDialogOpen(false);\n  }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {props.name}\n          </Typography>\n        }\n        subheader={\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n            {event.description}\n        </Typography>\n        }\n      />\n      <CardContent>\n        <EventReportDialog\n          event={event}\n          open={reportDialogOpen}\n          handleClose={handleReportClose}>\n\n        </EventReportDialog>\n        <EventShareDialog\n          event={event}\n          open={shareDialogOpen}\n          handleClose={handleShareClose}></EventShareDialog>\n        {/* <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n          Details\n        </Typography> */}\n        <Chip variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n        <Chip style={{ marginLeft: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n        {/* <Grid container component=\"main\">\n          <Grid item xs={6} sm={6} md={6}>\n            <Typography variant=\"h6\" component=\"p\">\n            <PublicIcon></PublicIcon> {props.eventMode} \n            </Typography>\n            <Typography variant=\"h6\" component=\"p\">\n            <PublicIcon></PublicIcon> {props.eventType} \n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Last Date for Registration:\n            </Typography>\n            <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n              {startDate.toDateString()}\n            </Typography>\n\n          </Grid>\n          <Grid item xs={6} sm={6} md={6}>\n            <Timeline align='alternate'>\n            <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{startDate.toDateString()}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Starts</Typography>\n          </TimelineContent>\n        </TimelineItem>\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography color=\"textSecondary\">{startDate.toDateString()}</Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>Ends</Typography>\n          </TimelineContent>\n        </TimelineItem>\n            </Timeline>\n          </Grid>\n        </Grid> */}\n\n      </CardContent>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <MailIcon></MailIcon>\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={handleMoreButtonClick}>\n            See More\n        </Button>\n          {\n            event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                  <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n          }\n\n        </div>\n        \n\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(10),\n        zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        // top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n            // top: theme.spacing(20)\n        },\n    \n    },\n    root2: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        borderRadius: theme.spacing(2)\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50),\n        backgroundColor: theme.palette.primary.main\n    },\n\n}));\n\nfunction SortLeftPanel(props) {\n    const classes = useStyles();\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        // defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        // defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        // KeyboardButtonProps={{\n                        //     'aria-label': 'change date',\n                        // }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List className={classes.root}>\n                    {[\"Online\", \"Offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${user.college_name}`].map((value) => {\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default SortLeftPanel;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n\n    root: {\n        background: theme.palette.secondary.main,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none',\n        // },\n    },\n    \n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n\n}));\n\nfunction MobileSortPanel(props) {\n    const classes = useStyles();\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List >\n                    {[\"online\", \"offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${user.collegeName}`].map((value) => {\n                           \n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default MobileSortPanel;\n\n ","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    // const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    \n\n    // function handleTitleChange(event) {\n    //     setTitle(event.target.value);\n    // }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/send_feedback', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack)</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport EventCard from '../Components/EventCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withRouter} from \"react-router\";\nimport List from '@material-ui/core/List';\nimport EventsDialog from '../Components/EventsDialog';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SortLeftPanel from '../Components/SortLeftPanel';\nimport MobileSortPanel from '../Components/MobileSortPanel';\nimport ImageDialog from '../Components/ImageDialog';\n// import EventsContext from '../EventsContext';\nimport Skeleton from '@material-ui/lab/Skeleton';\n// import { Link } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\n// import GridListEvents from '../Components/GridListEvents';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\nimport FeedBackDialog from '../Components/FeedBackDialog';\n// function a11yProps(index) {\n//     return {\n//         id: `scrollable-auto-tab-${index}`,\n//         'aria-controls': `scrollable-auto-tabpanel-${index}`,\n//     };\n// }\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '89vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        // color: theme.palette.primary.main\n        backgroundColor: theme.palette.primary.main\n    },\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        // height: '89vh',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        // bottom: 0,\n        // zIndex: 3,\n    },\n    leftSubPaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n        [theme.breakpoints.down('md')]: {\n            maxHeight: '78vh',\n        },\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    mobileFilterButton: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    skeleton: {\n        textDecorationColor: theme.palette.primary.dark,\n    },\n    feedBackButton: {\n        borderRadius: theme.spacing(50),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        paddingBottom: theme.spacing(1)\n    }\n\n}));\n\nfunction EventsTabPanel({ history }) {\n    localStorage.setItem('tabIndex',0);\n    // const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [selectedEvent, setSelectedEvent] = React.useState(\"\");\n    const [sortStartDate, setSortStartDate] = React.useState(null);\n    const [sortEndDate, setSortEndDate] = React.useState(null);\n    // const [sortType, setSortType] = React.useState(null);\n    // const [sortEventMode, setSortEventMode] = React.useState(null);\n    const [sortCollegeType, setSortCollegeType] = React.useState(\"\");\n    const [sortedEventsArray, setSortedEventsArray] = React.useState([]);\n    const [isFiltered, setIsFiltered] = React.useState(false);\n    const [feeSortChecked, setFeeSortChecked] = React.useState([0]);\n    const [modeSortChecked, setModeSortChecked] = React.useState([0]);\n    const [filterDialogOpen, setFilterDialogOpen] = React.useState(false);\n    // const [selectedImage, setSelectedImage] = React.useState(null);\n    const allEvents = React.useContext(ActiveEventsContext);\n    const [registerdEvents, setRegisteredEvents] = React.useState([]);\n    const [feedBackOpen,setFeedBackOpen] = React.useState(false);\n\n    \n\n    React.useEffect(() => {\n        // console.log(allEvents);\n        setRegisteredEvents(allEvents.filter((value) => value.registered === true))\n    }, [allEvents])\n    // console.log(registerdEvents);\n    if (!token) {\n        // return <Redirect to=\"/\" />;\n        history.replace(\"/\")\n    }\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClick = function (event, image) {\n        // console.log(id);\n        setSelectedEvent(event);\n        // setSelectedImage(image);\n        setOpen(true);\n        // history.push('eventdetails')\n    }\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleSortDateChange = (date) => {\n        console.log(date);\n        setSortStartDate(date);\n    };\n    const handleEndSortDateChange = (date) => {\n        setSortEndDate(date);\n    }\n\n    const handleFeedBackButtonClick = () =>{\n        setFeedBackOpen(true);\n    }\n\n    const closeFeedBckDialog = () =>{\n        setFeedBackOpen(false);\n    }\n\n    // function handleSortEventModeChamge(event, value) {\n    //     console.log(event);\n    //     console.log(value);\n    // }\n    // console.log(allEvents);\n    function handleSortCollegeChange(event, value) {\n        setSortCollegeType(value);\n    }\n    async function handleSortApplyButton() {\n        // console.log(sortStartDate);\n        // console.log(modeSortChecked);\n        // console.log(sortCollegeType);\n        setFilterDialogOpen(false);\n        if (sortStartDate != null && sortEndDate != null) {\n            const dateRangeSortedEvents = sortByDateRange(sortStartDate, sortEndDate, allEvents);\n            setSortedEventsArray(dateRangeSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateRangeSortedEvents));\n                const typeSortedEvents = sortByMode(dateRangeSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(typeSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.college_name) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateRangeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.college_name) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateRangeSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (sortStartDate != null) {\n            const dateSortedEvents = await sortByDate(sortStartDate, allEvents)\n            setSortedEventsArray(dateSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateSortedEvents));\n                const typeSortedEvents = sortByMode(dateSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(dateSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === user.collegeName) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === user.collegeName) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === user.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (modeSortChecked.length > 1) {\n            const typeSortedEvents = sortByMode(allEvents);\n            console.log(sortByMode(allEvents));\n\n            setSortedEventsArray(typeSortedEvents);\n            setIsFiltered(true);\n            if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(typeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (feeSortChecked.length > 1) {\n            const feeSortedEvents = sortByCost(allEvents);\n            setSortedEventsArray(feeSortedEvents);\n            setIsFiltered(true);\n        }\n        else if (sortCollegeType === user.collegeName) {\n            const collegeSortedEvents = sortByCollege(allEvents);\n            setSortedEventsArray(collegeSortedEvents);\n            setIsFiltered(true);\n        }\n    }\n\n    function sortByDateRange(date1, date2, sEvents) {\n        var sortedEvents = [];\n        // console.log(typeof (date1));\n        // console.log(typeof (date1));\n        sEvents.forEach(sEvent => {\n            const d = new Date(sEvent.start_time);\n            if (date1.getTime() <= d.getTime() && d.getTime() <= date2.getTime()) {\n                sortedEvents.push(sEvent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByDate(date, tEvents) {\n        var sDEvents = [];\n        tEvents.forEach(async sevent => {\n            const x = `${date.getDate()}` + date.getMonth() + date.getFullYear();\n            const d = new Date(sevent.start_time);\n            const y = `${d.getDate()}` + d.getMonth() + d.getFullYear();\n            console.log(y);\n            if (x === y) {\n                console.log(sevent);\n                sDEvents.push(sevent);\n            }\n            console.log(sortedEventsArray);\n        })\n        console.log(sDEvents);\n        return sDEvents;\n    }\n    function sortByMode(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (modeSortChecked.includes(sevent.event_mode)) {\n                console.log(\"ddd\");\n                sortedEvents.push(sevent);\n            }\n        })\n        console.log(sortedEvents);\n        return sortedEvents;\n    }\n\n    function sortByCost(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (feeSortChecked.includes(sevent.fee_type)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCollege(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (user.collegeName === sevent.college) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function handlesortDiscardButton() {\n        setModeSortChecked([0])\n        setFeeSortChecked([0])\n        setSortedEventsArray([]);\n        setSortStartDate(null);\n        setSortEndDate(null);\n        setIsFiltered(false);\n        setFilterDialogOpen(false)\n        // setChecked(null);\n    }\n    function handlefilterButtonClicked() {\n        setFilterDialogOpen(true);\n    }\n    function handleFilterClose() {\n        setFilterDialogOpen(false);\n    }\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n\n    function handleRegistrationButton(event) {\n        setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n\n    }\n\n    return (\n        <div>\n            <Grid container component=\"main\" >\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} >\n                    <Paper className={classes.root}>\n                        <Paper className={classes.leftSubPaper}>\n                            <SortLeftPanel\n                                handleSortDateChange={handleSortDateChange}\n                                sortStartDate={sortStartDate}\n                                handleEndSortDateChange={handleEndSortDateChange}\n                                sortEndDate={sortEndDate}\n                                handleSortCollegeChange={handleSortCollegeChange}\n                                feeChecked={feeSortChecked}\n                                modeChecked={modeSortChecked}\n                                setFeeChecked={setFeeSortChecked}\n                                setModeChecked={setModeSortChecked}\n                                handleSortApplyButton={handleSortApplyButton}\n                                handlesortDiscardButton={handlesortDiscardButton}>\n                            </SortLeftPanel>\n                        </Paper>\n                    </Paper>\n                    <Button className={classes.mobileFilterButton} variant=\"outlined\" onClick={handlefilterButtonClicked} >Filters</Button>\n                </Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    {/* <Typography variant=\"h5\" style={{ paddingTop: '5px' }}>\n                        Your College Events\n                    </Typography>\n                    <GridListEvents click={handleClick} events={allEvents.filter((event) => event.college_name === user.college_name)} ></GridListEvents> */}\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px',paddingBottom: '7px' }}>\n                        {/* Active Events */}\n                    </Typography>\n\n                    {allEvents.length === 0 && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>}\n                    {\n                        isFiltered ? sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    eventId={event}\n                                >\n\n                                </EventCard>)\n                        }) : allEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={handleClick}\n                                    url={user.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={handleImageDialogOpen}\n                                    handleReg={handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                </Grid>\n                <Grid item xs={12} sm={12} md={4} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper}>\n                        <Paper className={classes.subRpaper}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                            </Button>\n                            <List className={classes.root2}>\n                                \n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registerdEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                        <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                            <ListItemAvatar>\n                                                <Avatar  variant=\"square\"\n                                                    alt={event.name}\n                                                    src={process.env.REACT_APP_API_URL+`/api/image?id=${event.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText  primary={event.name} />\n                                            \n                                        </ListItem>\n                                        <Divider  /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                            <Button\n                                onClick={handleFeedBackButtonClick}\n                                variant=\"outlined\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.feedBackButton}\n                                 >\n                                Report Bug/Feedback\n                            </Button>\n                           \n\n                        </Paper>\n                    </Paper>\n\n                </Grid>\n            </Grid>\n            <div>\n            <FeedBackDialog open={feedBackOpen} handleClose={closeFeedBckDialog}></FeedBackDialog>\n                {open && <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    // imageUrl={selectedImage}\n                    handleClose={handleClose}\n                    handleReg={handleRegistrationButton}\n                    imageDialog={handleImageDialogOpen}\n                >\n                </EventsDialog>}\n                <ImageDialog\n                    // image={selectedImage}\n                    event={selectedEvent}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose}>\n                </ImageDialog>\n                <Dialog\n                    open={filterDialogOpen}\n                    onClose={handleFilterClose}\n                    fullWidth={true}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                    maxWidth=\"sm\" PaperProps={{\n                        style: {\n                            backgroundColor: \"#1C1C1E\",\n                            boxShadow: 'none',\n                        },\n                    }}>\n                    <DialogTitle>Filters</DialogTitle>\n                    <DialogContent>\n                        <MobileSortPanel\n                            handleSortDateChange={handleSortDateChange}\n                            sortStartDate={sortStartDate}\n                            handleEndSortDateChange={handleEndSortDateChange}\n                            sortEndDate={sortEndDate}\n                            handleSortCollegeChange={handleSortCollegeChange}\n                            feeChecked={feeSortChecked}\n                            modeChecked={modeSortChecked}\n                            setFeeChecked={setFeeSortChecked}\n                            setModeChecked={setModeSortChecked}\n                            handleSortApplyButton={handleSortApplyButton}\n                            handlesortDiscardButton={handlesortDiscardButton}>\n                        </MobileSortPanel>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default withRouter(EventsTabPanel);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport EventShareDialog from '../Components/EventShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n  }\n}));\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const [image, setImage] = React.useState(null);\n  // const token = localStorage.getItem('token');\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  function handleViewButtonClick() {\n    props.handleViewClick(props.event);\n  }\n\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n      <CardMedia\n        component=\"img\"\n        height=\"180\"\n        image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        \n      </CardContent>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleShareClick}>\n          Share\n        </Button>\n        <Button onClick={handleViewButtonClick} size=\"small\" color=\"primary\">\n          {t === 'light' ? <Link target=\"_blank\" to={{ pathname: `/event/${event._id}` }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link> :\n            <Link target='_blank' to={{ pathname: `/event/${event._id}`}} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link>}\n        </Button>\n        <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {event.status.toUpperCase()}\n        </Typography>\n      </CardActions>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n    </Card>\n  );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\nimport { Typography } from '@material-ui/core';\n\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const [open, setOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const user = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const allEvents = React.useContext(EventsContext);\n    \n    const postedEvents = allEvents.filter((val)=>{\n        return val.user_id === user.user_id;\n    });\n\n    const [selectedEvent,setSellectedEvent] = React.useState(\"\");\n    function handleViewClick(event){\n        setSellectedEvent(event);\n        // setOpen(true);\n    } \n\n    function handleClose(){\n        setOpen(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    postedEvents.length === 0 && <Typography>No Posted Events</Typography>\n                }\n                {postedEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={4} key={index}>\n                    <ProfileEventCard event={event} handleViewClick={handleViewClick} name={event.name} image={url}></ProfileEventCard>\n                    </Grid>) \n                })}\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    handleClose={handleClose}\n                    name={selectedEvent.name}\n                    startTime={selectedEvent.start_time}\n                    endTime={selectedEvent.finish_time}\n                    regEndTime={selectedEvent.registrationEndTime}\n                    type={selectedEvent.eventType}\n                    tags={selectedEvent.tags}\n                    mode={selectedEvent.eventMode}\n                    feeType={selectedEvent.feesType}\n                    url={user.imageUrl}>\n                    {/* imageDialog={handleImageDialogOpen} */}\n                </EventsDialog>\n                    \n                </Grid>\n                \n                {/* <ProfileEventCard></ProfileEventCard> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WcIcon from '@material-ui/icons/Wc';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        paddingLeft: theme.spacing(4),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1.5),\n        padding: theme.spacing(1)\n    }\n\n}));\n\nfunction ProfileDataBox(props) {\n    const classes = useStyles();\n    const [icon,setIcon] = React.useState(<EmailIcon></EmailIcon>)\n    React.useEffect(()=>{\n        switch(props.name){\n            case 'Username':\n                setIcon(<PersonPinCircleIcon></PersonPinCircleIcon>)\n                break;\n            case 'Name':\n                setIcon(<PersonIcon></PersonIcon>)\n                break;\n            case 'College':\n                setIcon(<SchoolIcon></SchoolIcon>)\n                break;\n            case 'Gender':\n                setIcon(<WcIcon></WcIcon>)\n                break;\n            case 'Bio':\n                setIcon(<InfoIcon></InfoIcon>)\n                break;\n            case 'Designation':\n                setIcon(<WorkIcon></WorkIcon>)\n                break;\n            case 'Email':\n                setIcon(<EmailIcon></EmailIcon>)\n                break;\n            default:\n                setIcon(<InfoIcon></InfoIcon>)\n        }\n    },[props.name])\n\n    return (\n        <Box className={classes.root3}>\n            <Box className={classes.avatar}>\n                <Avatar>\n                    {icon}\n                </Avatar>\n            </Box>\n            <Box className={classes.content}>\n                <Box><Typography>{props.name}</Typography></Box>\n                <Box><Typography variant=\"body2\" color=\"textSecondary\">{props.value}</Typography></Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ProfileDataBox;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthContext from '../AuthContext';\nimport Box from '@material-ui/core/Box';\nimport ProfileAboutDataBox from './ProfileAboutDataBox';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    editIcon: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n}));\n\nfunction ProfilePostsTabPanel(props) {\n    const classes = useStyles()\n    const { children, value, url, index, ...other } = props;\n    const user = React.useContext(AuthContext);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Box>\n                        <Box className={classes.editIcon}>\n                            <IconButton onClick={props.handleEditButton}><EditIcon></EditIcon></IconButton>\n                        </Box>\n                        <ProfileAboutDataBox name=\"Name\" value={user.name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Email\" value={user.email}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Username\" value={user.username}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"College\" value={user.college_name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Designation\" value={user.designation}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Gender\" value={user.gender}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Bio\" value={user.bio}></ProfileAboutDataBox>\n                    </Box>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main,\n    }\n}));\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const token = localStorage.getItem('token');\n    const [eventName,setEventName] = React.useState(\"\");\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/event/get_event_name?eventId=${event.event_id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n              setEventName(value)\n            })\n          })\n    },[event,token])\n\n    \n    function handleShareClick() {\n        \n    }\n\n    return (\n        <Card className={classes.root}>\n            {/* <CardActionArea> */}\n            {/* <CardMedia\n                component=\"img\"\n                height=\"180\"\n                image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n            /> */}\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {eventName}\n                </Typography>\n            </CardContent>\n\n            <CardActions>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    Download\n                </Button>\n                <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {event.certificate_status.toUpperCase()}\n                </Typography>\n            </CardActions>\n        </Card>\n    );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport CertificateCard from './CertificateCard';\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const token = localStorage.getItem('token');\n    \n    const [registerdEvents,setRegisteredEvents] = React.useState([]);\n\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/user/get_certificates`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n            //   console.log(value);\n              setRegisteredEvents(value);\n            })\n          })\n    },[token])\n\n    \n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    registerdEvents.length === 0 && <Typography>No Posted Events</Typography>\n                }\n                {registerdEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={6} key={index}>\n                    <CertificateCard event={event}></CertificateCard>\n                    </Grid>) \n                })}\n                    \n                </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import ProfileEventsTabPanel from './ProfileRegEventsTabPanel';\nimport ProfilePostedEventsTabPanel from './ProfilePostedEventsTabPanel';\nimport AboutProfileTabPanel from './ProfileAboutTabPanel';\nimport AuthContext from '../AuthContext';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ProfileCertificatePanel from './ProfileCertificateTabPanel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        borderRadius: theme.spacing(3)\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    }\n}));\n\n\n\n\nfunction Eventcard(props) {\n    localStorage.setItem('tabIndex', 3)\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <Grid container component=\"main\">\n                <CssBaseline />\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.large}\n                                sizes=\"100\" alt=\"\"\n                                src={process.env.REACT_APP_API_URL + `/api/image?id=${user.profile_pic}`}>\n                                <PersonIcon></PersonIcon>\n                            </Avatar>\n                        }\n                        action={\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={props.handleEditButton}>\n                                Edit Profile\n                            </Button>\n                        }\n                        title={\n                            <Typography variant=\"h4\">{user.name}</Typography>\n                        }\n                        subheader={user.bio}\n                    ></CardHeader>\n                </Grid>\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n            </Grid>\n\n            <CardContent>\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"About\" />\n                        {/* <Tab label=\"Registered Events\" /> */}\n                        <Tab label=\"Posted Events\" />\n                        <Tab label=\"Certificates\"></Tab>\n                    </Tabs>\n                </Paper>\n                <div>\n                    <AboutProfileTabPanel handleEditButton={props.handleEditButton} value={value} index={0}></AboutProfileTabPanel>\n                    {/* <ProfileEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfileEventsTabPanel> */}\n                    <ProfilePostedEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfilePostedEventsTabPanel>\n                    <ProfileCertificatePanel url={user.imageUrl} value={value} index={2}></ProfileCertificatePanel>\n                </div>\n            </CardContent>\n        </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { Grid, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from '../AuthContext';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n   \n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n}));\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateInfoTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const user = React.useContext(AuthContext);\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const [colleges, setColleges] = React.useState([]);\n    const [image, setImage] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [userName, setUserName] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [designation, setDesignation] = React.useState(null);\n    const [collegeName, setCollegeName] = React.useState(null);\n    const [collegeId,setCollegeId] = React.useState(null);\n    const [collegesName,setCollegesName] = React.useState([]);\n    const [imageUrl,setImageurl] = React.useState(null);\n    const [imageUpdated,setImageUpdated] = React.useState(false);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n\n    React.useEffect(() => {\n        setEmail(user.email);\n        setName(user.name);\n        setUserName(user.username);\n        setDesignation(user.designation);\n        setCollegeName(user.college_name);\n        setCollegeId(user.college_id);\n        setBio(user.bio);\n        setGender(user.gender);\n        fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setColleges(value);\n                value.forEach((v)=>{\n                    setCollegesName((collegesNames)=>[...collegesNames,v.name])\n                  })\n                // setCollegeNames()\n            })\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // console.log(user.college_name);\n\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            // history.replace(\"/home\")\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n          setImage(event.target.files[0]);\n        //   setImageAsFile(imageFile => (image))\n          const url = URL.createObjectURL(event.target.files[0]);\n        //   const fileType = event.target.files[0].type;\n          setImageurl(url)\n          setImageUpdated(true);\n        //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    function handleName(event,value){\n        setName(event.target.value);\n    }\n    function handleEmail(event,value){\n        setEmail(value);\n    }\n    function handleGender(event,value){\n        console.log(event.target.value);\n        setGender(event.target.value);\n    }\n    function handleDesig(event,value){\n        setDesignation(event.target.value);\n    }\n    function handleCollege(event,value){\n        setCollegeName(value);\n        colleges.forEach(c=>{\n            if(c.name === value){\n            //   props.collegeId(c._id)\n            setCollegeId(c._id);\n            }\n          })\n        \n    }\n    function handleUserName(event,value){\n        setUserName(event.target.value);\n    }\n    function handleBio(event,value){\n        setBio(value);\n    }\n\n    function handleUpdateButton(event){\n        event.preventDefault();\n        setLoading(true);\n        // console.log(name);\n        // console.log(userName)\n\n        try {\n            var data = new FormData()\n            const payload = {\n                name: name,\n                email: email,\n                username: userName,\n                // college_name: collegeName,\n                college_id: collegeId,\n                designation : designation,\n                gender: gender,\n                // college_id: collegeId.value,\n                bio: bio,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL+'/api/users/updateprofile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (imageUpdated) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n                    <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={12} alignContent=\"center\" alignItems=\"center\">\n                            <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                                <Badge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    badgeContent={<label htmlFor=\"contained-button-file\">\n                                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                            <EditIcon></EditIcon>\n                                        </IconButton>\n                                    </label>}>\n                                    <Avatar className={classes.large} sizes=\"100\" alt=\"\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL+`/api/image?id=${user.profile_pic}`}></Avatar>\n                                </Badge>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                autoComplete=\"fullName\"\n                                name=\"fullName\"\n                                value={name || \"\"}\n                                onChange={handleName}\n                                id=\"fullName\"\n                                label=\"Full Name\"\n                                autoFocus\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                            disabled\n                                id=\"email\"\n                                value={email}\n                                onChange={handleEmail}\n                                fullWidth\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                // variant=\"outlined\"\n                                fullWidth\n                                required\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                value={userName}\n                                onChange={handleUserName}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Autocomplete\n                                fullWidth\n                                id=\"college\"\n                                options={collegesName}\n                                getOptionLabel={(option) => option}\n                                // onChange={handleChange}\n                                value={collegeName}\n                                onChange={handleCollege}\n                                renderInput={(params) => <TextField name=\"college\" fullWidth required {...params} label=\"College\" />}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                                value={bio}\n                                onChange={handleBio}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    value={gender}\n                                    onChange={handleGender}\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    value={designation}\n                                    onChange={handleDesig}\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"WorkingProfessional\">Working Professional</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        className={classes.button}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpdateButton}\n                        disabled={loading}\n                    // className={classes.submit}\n                    >{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Profile\"}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UpdateInfoTabPanel;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthContext from '../AuthContext';\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const user = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error'\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [cPassword,setCPassword] = React.useState(null);\n    const [nPassword,setNPassword] = React.useState(null);\n\n\n    const handleClose = async (event, reason) => {\n        setCPassword(null);\n        setNPassword(null);\n\n        setState({ ...state, open: false });\n    };\n\n    function handleCurrentPasswordChange(event){\n        setCPassword(event.target.value);\n    }\n    function handleNewPasswordChange(event){\n        setNPassword(event.target.value);\n    }\n\n    function handleUpdatePassword(event) {\n        setLoading(true);\n        event.preventDefault();\n        // const { cPassword, nPassword } = event.target.elements;\n        // console.log(cPassword);\n        // console.log(nPassword);\n        try{\n            var data = new FormData()\n        const payload = {\n          email: user.email,\n          cPassword: cPassword,\n          nPassword: nPassword\n        };\n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL+'/api/users/updatepassword', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then(response =>{\n            if (response.status === 200){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: result.message,\n                        type: \"success\"\n                      })\n                })\n            }\n            else if (response.status === 401){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message:result.error,\n                        type: \"error\"\n                      })\n                })\n                \n            }\n           \n        })\n\n\n\n            \n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: error.message,\n              type: \"error\"\n            })\n          }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={2000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    ><Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    \n                    <div className={classes.paper}>\n                        <form className={classes.form} onSubmit={handleUpdatePassword}>\n                            <Grid container spacing={2} justify=\"center\" >\n                            \n\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"cPassword\"\n                                        label=\"Current Password\"\n                                        type=\"password\"\n                                        id=\"cPassword\"\n                                        value={cPassword}\n                                        onChange={handleCurrentPasswordChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"nPassword\"\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        id=\"nPassword\"\n                                        value={nPassword}\n                                        onChange={handleNewPasswordChange}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                            // className={classes.submit}\n                            >\n                                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Password\"}\n                            </Button>\n                        </form>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport UpdateInfoTabPanel from './UpdateInfoTabPanel';\nimport UpdatePasswordTabPanel from './UpdatePasswordTabPanel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    \n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root: {\n        flexGrow: 1,\n        // width: '100%',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n}));\n\nfunction UpdateProfile(props) {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function handleClose() {\n        props.handleClose();\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            style={{ minHeight: \"400px\" }}\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle id=\"scroll-dialog-title\">\n                <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                <div className={classes.root}>\n                    <AppBar style={{ alignItems: 'center' }} position=\"static\" color=\"secondary\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\">\n                            <Tab label=\"Update info\" {...a11yProps(0)} />\n                            <Tab label=\"Change Password\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                <UpdateInfoTabPanel value={value} index={0}></UpdateInfoTabPanel>\n                <UpdatePasswordTabPanel value={value} index={1}></UpdatePasswordTabPanel>\n            </DialogContent>\n            <DialogActions alignItems=\"center\">\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default UpdateProfile;","import React from 'react';\nimport ProfileCard from '../Components/MainProfileCard';\nimport { Grid } from '@material-ui/core';\nimport UpdateProfileDialog from '../Components/UpdateProfileDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventsDialog from '../Components/EventsDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\n\nfunction EventsTabPanel(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [eOpen, setEOpen] = React.useState(false);\n    const activeEvents = React.useContext(ActiveEvents);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    function handleEditButton() {\n        setOpen(true);\n    }\n    function handleClose() {\n        setOpen(false);\n        setEOpen(false)\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setEOpen(true);\n\n    }\n    return (\n        <div>\n            <div>\n                <Grid container component=\"main\" >\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8}>\n                        <ProfileCard handleEditButton={handleEditButton}></ProfileCard>\n                        <UpdateProfileDialog open={open} handleClose={handleClose}></UpdateProfileDialog>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>\n                                        })\n                                    }\n                                </List>\n\n\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={eOpen}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EventsTabPanel;","import React from 'react';\n\n\n//MaterialUI imports\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [startDateError,setStartDateError] = React.useState(false);\n  const [endDateError,setEndDateError] = React.useState(false);\n  const [regEndDateError,setRegEndDateError] = React.useState(false);\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [eventTypes,setEventTypes] = React.useState([]);\n  React.useEffect(()=>{\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_types', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        value.forEach((v) => {\n          setEventTypes((eventTypes)=>[...eventTypes,v.title]);\n        })\n      })\n    })\n  },[token])\n\n\n  function handleEventNameChange(event) {\n    props.setName(event.target.value)\n  }\n\n  function handleDescChange(event) {\n    props.setDesc(event.target.value);\n  }\n\n  const handleStartDateChange = (date) => {\n    setStartDateError(false);\n    props.setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setEndDateError(false);\n    props.setEndDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDateError(false);\n    props.setRegEndDate(date);\n  };\n\n  function handleEventModeChange(event) {\n    props.setEventMode(event.target.value);\n  }\n  function handleeventTypsChange(event, value) {\n    props.setEventType(value);\n  }\n\n\n  function handleNext(event) {\n    event.preventDefault();\n    if(props.startDate === null){\n      setStartDateError(true)\n    }\n    else if(props.endDate === null){\n      setEndDateError(true);\n    }\n    else if(props.regEndDate === null){\n      setRegEndDateError(true)\n    }\n    else{\n      props.handleNext();\n    }\n    \n  }\n  function handleFeeTypeChange(event, value) {\n    props.setFeeType(value)\n  }\n  function handleRegistrationModeChange(event) {\n    if (event.target.value === \"form\") {\n      props.setSteps((steps) => [...steps, \"Registration Form\"])\n    }\n    else if (event.target.value === \"link\") {\n      props.setSteps(['About', 'More Details']);\n    }\n    props.setRegistrationMode(event.target.value);\n  }\n\n\n  return (\n    <form className={classes.form} onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventName\"\n            name=\"eventName\"\n            label=\"Name\"\n            fullWidth\n            value={props.name || \"\"}\n            onChange={handleEventNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"shortdesc\"\n            name=\"shortdesc\"\n            label=\"Short Description\"\n            fullWidth\n            value={props.desc || \"\"}\n            onChange={handleDescChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n            <DateTimePicker\n            inputProps={{required: true}}            \n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"startDate\"\n              label=\"Start Date\"\n              name=\"startDate\"\n              value={props.startDate}\n              onChange={handleStartDateChange}\n              error={startDateError}\n              helperText={startDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"endDate\"\n              label=\"End Date\"\n              name=\"endDate\"\n              value={props.endDate}\n              onChange={handleendDateChange}\n              error={endDateError}\n              helperText={endDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={12}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"regEndDate\"\n              label=\"Registration End Date\"\n              name=\"regEndDate\"\n              value={props.regEndDate}\n              onChange={handleRegEndDateChange}\n              error={regEndDateError}\n              helperText={regEndDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Mode</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Mode\"\n              inputProps={{\n                name: 'eventMode',\n                id: 'eventMode',\n              }}\n              value={props.eventMode || \"\"}\n              onChange={handleEventModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            fullWidth\n            id=\"combo-box-demo\"\n            options={eventTypes}\n            getOptionLabel={(option) => option}\n            onChange={handleeventTypsChange}\n            value={props.eventType}\n            renderInput={(params) => <TextField fullWidth required {...params} label=\"Type\" />}\n          />\n        </Grid>\n\n\n        <Grid item xs={12}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Registration\"\n              inputProps={{\n                name: 'registrationMode',\n                id: 'registaration mode',\n              }}\n              value={props.registrationMode || \"\"}\n              onChange={handleRegistrationModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"form\">Our Platform(Ellipse)</option>\n              <option value=\"link\">Other</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormLabel component=\"legend\">Entry Fee</FormLabel>\n          <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"Free\" onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n            <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n            <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      <div className={classes.buttons}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >Next\n        </Button>\n      </div>\n    </form>\n  );\n}","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [imageName, setImageName] = React.useState(\"\");\n  // const eventThemes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n  const [eventTags,setEventTags] = React.useState([]);\n  const [requirements,setRequirements] = React.useState([]);\n  // const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if(v.type === \"EventTags\"){\n            setEventTags((eventTags)=> [...eventTags,v.title]);\n          }\n          else if(v.type === \"EventRequirements\"){\n            setRequirements((r)=>[...r,v.title]);\n          }\n        })\n      })\n    })\n  }, [token])\n\n\n  function handleeventTagsChange(event, values) {\n    props.setThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    props.setRequirements(values);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      props.setPoster(event.target.files[0]);\n      const fileName = event.target.files[0].name;\n      setImageName(fileName);\n    }\n  }\n  function handleAddressTypeChange(evemt, value) {\n    props.setAddressType(value);\n  }\n\n  function handleRegLinkChange(event) {\n    props.setRegLink(event.target.value);\n  }\n\n  function handleRegFees(event) {\n    props.setFees(event.target.value);\n  }\n\n  function handleCollegeChange(event, value) {\n    console.log(value);\n    props.setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        props.setCollegeId(c._id)\n      }\n    })\n  }\n  function handleVenueCollegeChange(event, value) {\n    props.setVenueCollege(value);\n  }\n\n  function handleAboutChange(event) {\n    props.setAbout(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    props.setParticipantsType(value)\n  }\n  function handleBuildingChange(event) {\n    props.setBuilding(event.target.value);\n  }\n  // function handlePlatformChange(event){\n  //   props.setPlatformDetails(event.target.value)\n  // }\n  function handleNext(event) {\n    event.preventDefault();\n    props.handleNext();\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} onSubmit={handleNext}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter everything about your event in detail\"\n              autoComplete='off'\n              required\n              id=\"about\"\n              name=\"about\"\n              label=\"About\"\n              fullWidth\n              onChange={handleAboutChange}\n              value={props.about || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Autocomplete\n              multiple\n              id=\"themes\"\n              options={eventTags.map((option) => option)}\n              freeSolo\n              value={props.eventThemes || []}\n              onChange={handleeventTagsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Event Tags\" placeholder=\"Event Tags\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <input\n              id=\"contained-button-file\"\n              required\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleChange}\n              style={{ display: \"none\" }}>\n\n            </input>\n\n            <TextField\n              autoComplete='off'\n              required\n              id=\"eventposter\"\n              name=\"eventposter\"\n              label=\"Event Poster\"\n              component=\"span\"\n              value={imageName}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <label htmlFor=\"contained-button-file\">\n                      <IconButton component=\"span\" >\n                        <CameraAltIcon></CameraAltIcon>\n                      </IconButton>\n                    </label>\n\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </Grid>\n          {props.registrationMode !== \"form\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regLink\"\n              name=\"regLink\"\n              label=\"Registration Link\"\n              fullWidth\n              value={props.regLink || \"\"}\n              onChange={handleRegLinkChange}\n            />\n          </Grid>}\n\n          {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regFees\"\n              name=\"regFees\"\n              label=\"Registration Fees\"\n              fullWidth\n              value={props.regFees || \"\"}\n              onChange={handleRegFees}\n            />\n          </Grid>}\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={requirements.map((option) => option)}\n              freeSolo\n              value={props.requirements || []}\n              onChange={handleRequirementsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              fullWidth\n              id=\"combo-box-demo\"\n              options={collegesNames}\n              value={props.college || []}\n              getOptionLabel={(option) => option}\n              onChange={handleCollegeChange}\n              renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component=\"legend\">Participation</FormLabel>\n            <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"open\" onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n              <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${props.college}`} />\n            </RadioGroup>\n          </Grid>\n          {/* {props.eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={props.platformDetails || \"\"}\n            />\n          </Grid>} */}\n          {props.eventMode === \"Offline\" && <React.Fragment>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup aria-label=\"address\" aria-disabled name=\"address\" defaultValue=\"college\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"college\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Room No & Building\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                getOptionLabel={(option) => option}\n                value={props.venueCollege}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>\n\n          </React.Fragment>}\n          {props.registrationMode !== \"form\" && <Grid item xs={12}>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" name=\"terms\" />}\n              label=\"I accept the terms and conditions\"\n            />\n          </Grid>\n          }\n\n        </Grid>\n        <div className={classes.buttons}>\n          <Button onClick={props.handleBack} className={classes.button}>\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >{props.registrationMode !== \"form\" ? \"POST\" : \"NEXT\"}\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}","import React from 'react';\n\n//Materail impports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid } from '@material-ui/core';\nimport {useTheme } from '@material-ui/core/styles';\n\n\n\n\n\nexport default function FormDialog(props) {\n  const theme = useTheme();\n  const [name, setName] = React.useState(null);\n  const [type, setType] = React.useState(null);\n  const fieldOptions = [];\n  const [selectedOptions, setSelectedOptions] = React.useState(['option1', 'option2']);\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n  function handleTypeChange(event) {\n    setType(event.target.value);\n  }\n  function handleOptionsChange(event, values) {\n    setSelectedOptions(values);\n  }\n  function handleAddButton() {\n    if (type !== \"radiobuttons\" && type !== \"checkboxes\" && type !== \"dropdown\") {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': [] } }, name);\n    }\n    else {\n      props.handleAdd({ [name]: { 'title': name, 'field': type, 'options': selectedOptions } }, name);\n    }\n    props.handleClose()\n\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n          boxShadow: 'none',\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Field</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Field Name\"\n                name=\"name\"\n                fullWidth\n                value={name}\n                required\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Type</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'outlined-age-native-simple',\n                  }}\n                  value={props.eventMode}\n                  onChange={handleTypeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"short_text\">Short Text</option>\n                  <option value=\"paragraph\">Long Description</option>\n                  <option value=\"dropdown\">Drop Down</option>\n                  <option value=\"date\">Date & Time</option>\n                  <option value=\"radiobuttons\">Radio Button</option>\n                  <option value=\"checkboxes\">Check Box</option>\n                  <option value=\"link\">Link</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {(type === \"radiobuttons\" || type === \"checkboxes\" || type === \"dropdown\") &&\n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"tags-filled\"\n                  options={fieldOptions.map((option) => option)}\n                  freeSolo\n                  value={selectedOptions || []}\n                  onChange={handleOptionsChange}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Options\" placeholder=\"Options\" helperText=\"you can choose multiple options for your checkboxes or radio buttons enter one option and press enter\" />\n                  )}\n                />\n              </Grid>\n            }\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(0),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    formControl: {\n        // marginTop: theme.spacing(3),\n    },\n    formgroup: {\n        marginTop: theme.spacing(1),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nexport default function AddressForm(props) {\n\n\n    const classes = useStyles();\n    // const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const fields = {\n        name: {\n            'title': 'Name',\n            'field': 'short_text',\n            'options': []\n        },\n        email: {\n            'title': 'Email',\n            'field': 'short_text',\n            'options': []\n        },\n        college: {\n            'title': 'College',\n            'field': 'short_text',\n            'options': []\n        },\n\n    }\n    const [selectedFields, setSelectedFields] = React.useState([]);\n    const [state, setState] = React.useState({\n        name: false,\n        email: false,\n        college: false,\n    });\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        const sName = event.target.name;\n        if (event.target.checked) {\n            setSelectedFields(selectedFields => [...selectedFields, fields[sName]]);\n        }\n        else if (!event.target.checked) {\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== sName));\n        }\n\n    };\n    const { name, email, college } = state;\n    // console.log(selectedFields);\n    function handleAddMoreButton() {\n        setOpen(true);\n    }\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n    const handleDelete = (chipToDelete) => () => {\n        setState({ ...state, [chipToDelete.name]: false })\n        setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    };\n\n    async function handlePostButton(e) {\n        e.preventDefault();\n        await props.setFields(selectedFields);\n        props.handlePost(selectedFields);\n    }\n\n    return (\n        <React.Fragment>\n\n            <form className={classes.form} onSubmit={handlePostButton}>\n                <Grid container spacing={3}>\n                    <AddFieldDialog\n                        open={open}\n                        handleClose={handleClose}\n                        handleAdd={handleFieldAddButton}></AddFieldDialog>\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Fields for your Registration Form</FormLabel>\n                            <FormGroup className={classes.formgroup}>\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={name} onChange={handleChange} name=\"name\" />}\n                                    label=\"Name\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={email} onChange={handleChange} name=\"email\" />}\n                                    label=\"Email\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={college} onChange={handleChange} name=\"college\" />}\n                                    label=\"College\"\n                                />\n                                {/* <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={phno} onChange={handleChange} name=\"phno\" />}\n                                    label=\"Phone No\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={github} onChange={handleChange} name=\"github\" />}\n                                    label=\"Github\"\n                                /> */}\n                            </FormGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={handleAddMoreButton}\n                        >\n                            Add More\n                        </Button>\n                    </Grid>\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {selectedFields.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n\n                                            label={data.title}\n                                            onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={<Checkbox color=\"primary\" name=\"terms\" />}\n                            label=\"I accept the terms and conditions\"\n                        />\n                    </Grid>\n                </Grid>\n                <div className={classes.buttons}>\n                    <Button onClick={props.handleBack} className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                    >Post\n                    </Button>\n                </div>\n            </form>\n        </React.Fragment>\n    );\n}","import React from 'react';\n\n//Material UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n//Components imports\nimport EventPostDetails1 from '../Components/EventPostDetails1';\nimport EventPostDetails2 from '../Components/EventPostDetails2';\nimport EventPostDetails3 from '../Components/EventPostDetails3';\nimport AuthContext from '../AuthContext';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//function for copy right\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n        ellipseapp.com\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3),\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  stepper: {\n    padding: theme.spacing(3, 8, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(12),\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\n\nexport default function Checkout({ history }) {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const user = React.useContext(AuthContext);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(['About', 'More Details']);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const [eventName, setEventName] = React.useState(null);\n  const [shortDesc, setShortDesc] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [registrationMode, setRegistrationMode] = React.useState(null);\n\n\n\n  const [regLink, setRegLink] = React.useState(null);\n  const [fees, setFees] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState(null);\n  const [image, setImage] = React.useState(null);\n  const [addressType, setAddressType] = React.useState(null);\n  const [collegeName, setCollegeName] = React.useState(user.college_name);\n  const [collegeId, setCollegeId] = React.useState(user.college_id)\n  const [building, setBuildingAdress] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(user.name + \",\" + user.college_name);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const [participantsType, setParticipantsType] = React.useState(\"open\");\n  const [fields, setFields] = React.useState([]);\n  const [platformDetails,setPlatformDetails] = React.useState(null);\n\n\n\n\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <EventPostDetails1\n            name={eventName}\n            desc={shortDesc}\n            startDate={startDate}\n            endDate={endDate}\n            regEndDate={regEndDate}\n            eventMode={eventMode}\n            eventType={eventType}\n            about={about}\n            feeType={feeType}\n            registrationMode={registrationMode}\n            setName={setEventName}\n            setDesc={setShortDesc}\n            setStartDate={setStartDate}\n            setEndDate={setendDate}\n            setRegEndDate={setRegEndDate}\n            setEventMode={setEventMode}\n            setEventType={setEventType}\n            setRegistrationMode={setRegistrationMode}\n            setAbout={setAbout}\n            handleNext={handleNext}\n            setFeeType={setFeeType}\n            steps={steps}\n            setSteps={setSteps} />);\n      case 1:\n        return (\n          <EventPostDetails2\n            handleBack={handleBack}\n            handleEventPost={handleEventPost}\n            eventMode={eventMode}\n            feeType={feeType}\n            eventThemes={eventThemes}\n            eventPoster={image}\n            regLink={regLink}\n            regFees={fees}\n            about={about}\n            requirements={selectedrequirements}\n            college={collegeName}\n            building={building}\n            organizer={organizer}\n            registrationMode={registrationMode}\n            venueCollege={venueCollege}\n            participantsType={participantsType}\n            platformDetails={platformDetails}\n            setPlatformDetails={setPlatformDetails}\n            setThemes={setEventThemes}\n            setPoster={setImage}\n            setRegLink={setRegLink}\n            setFees={setFees}\n            setRequirements={setSelectedRequirements}\n            setOrganizer={setOrganizer}\n            setAddressType={setAddressType}\n            setCollegeName={setCollegeName}\n            setCollegeId={setCollegeId}\n            setBuilding={setBuildingAdress}\n            setVenueCollege={setVenueCollege}\n            setAbout={setAbout}\n            setParticipantsType={setParticipantsType}\n            handleNext={registrationMode === \"form\" ? handleNext : handlePostwithoutregFileds} />\n        );\n      case 2:\n        return (\n          <EventPostDetails3\n            handleBack={handleBack}\n            fields={fields}\n            setFields={setRegFields} handlePost={handleEventPost}>\n          </EventPostDetails3>);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n\n  const handleEventPost = (allFields) => {\n    var oAllowed = false;\n    if (participantsType === \"open\") {\n      oAllowed = true\n    }\n    setLoading(true);\n    try {\n      var data = new FormData();\n      const payload = {\n        user_id: user.user_id,\n        name: eventName,\n        description: shortDesc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: fees,\n        about: about,\n        // organizer: organizer,\n        fee_type: feeType,\n        requirements: selectedrequirements,\n        college_name: collegeName,\n        college_id: collegeId,\n        venue_type: addressType,\n        venue: building,\n        reg_fields: allFields,\n        reg_mode: registrationMode,\n        o_allowed: oAllowed,\n        platform_details: platformDetails\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL+'/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data,\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            var data2 = new FormData();\n            data2.append(\"image\", image);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/uploadimage?id=${value.eventId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data2,\n            }).then(response => {\n              if (response.status === 200) {\n                response.json().then(val => {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"Event Added Successfully\",\n                    type: \"success\",\n                    autoHide: \"4000\"\n                  })\n                })\n              }\n            })\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n          })\n        }\n      })\n\n\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: '5000',\n      })\n    }\n  }\n\n  function setRegFields(f) {\n    setFields(f);\n  }\n\n  function handlePostwithoutregFileds() {\n    handleEventPost(null);\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function handleCloseButton() {\n    history.goBack();\n  }\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Event Added Successfully\") {\n      history.replace(\"/home\");\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      {<Backdrop open={loading} className={classes.backdrop}><CircularProgress></CircularProgress></Backdrop>}\n      <main className={classes.layout}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleCloseButton}>\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Post your Event\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you.\n                </Typography>\n              </React.Fragment>\n            ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                </React.Fragment>\n              )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Switch from '@material-ui/core/Switch';\nimport Logo from '../Components/Images/logo.svg';\nimport { Button } from '@material-ui/core';\n\n\nimport { Redirect } from 'react-router';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    \n    grow: {\n        flexGrow: 1,\n        alignItems: 'center',\n    },\n    sectionDesktop: {\n\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    tabs: {\n        display: 'none',\n        [theme.breakpoints.up('lg')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginLeft: theme.spacing(4),\n        },\n    },\n    mobiletab: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    tabPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    flex_section: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'row',\n        // minHeight: 0\n    },\n\n    flex_col_scroll: {\n        flexGrow: 1,\n        overflow: 'auto',\n        // minHeight: '100vh'\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n        fontFamily: 'Gugi',\n        marginLeft: theme.spacing(1),\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold'\n      },\n    '@global': {\n        '*::-webkit-scrollbar': {\n          width: '0.5em',\n          height: '0.5em'\n        },\n        '*::-webkit-scrollbar-track': {\n          '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '*::-webkit-scrollbar-thumb': {\n          backgroundColor: '#ad9d9d',\n          outline: '1px solid slategrey'\n        }\n      },\n      mobileTitle:{\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n        \n      },\n      titleButton: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'inline-block',\n        },\n        margin: theme.spacing(0),\n        padding: theme.spacing(0),\n        textTransform: 'none'\n      },\n}));\n\nexport default function MiniDrawer(props) {\n    const classes = useStyles();\n    // const theme = useTheme();\n    const t = localStorage.getItem('theme');\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n    // const [value, setValue] = React.useState(0);\n    // const [searchedEvent, setSearchedEvent] = React.useState([]);\n\n    const isMenuOpen = Boolean(anchorEl);\n    // const [open, setOpen] = React.useState(false);\n    const token = localStorage.getItem('token');\n\n    const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n    // const [currentUser, setCurrentUser] = React.useState({});\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    \n\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // setCurrentUser(value[0]);\n                    props.setUser(value[0])\n                    if (value[0].college_name === null) {\n                        setUserDetailsDone(false);\n                    }\n\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n\n// eslint-disable-next-line\n    }, [token])\n\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n    if (!userDetailsDone) {\n        return <Redirect to=\"/userinfo\"></Redirect>\n    }\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        // setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n\n\n    function handleThemeChange(event) {\n        // console.log(event.target.checked);\n        setDarkThemeSelected(event.target.checked);\n        if (event.target.checked) {\n            localStorage.setItem('theme', 'dark');\n            window.location.reload(false);\n        }\n        else {\n            localStorage.setItem('theme', 'light');\n            window.location.reload(false);\n        }\n    }\n\n\n\n    function handleSignout(event) {\n\n        fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n        }).then((result) => {\n            result.json().then((data) => {\n                if (data.message === \"success\") {\n                    localStorage.removeItem('token');\n                    localStorage.removeItem('tabIndex');\n                    props.handleSignout()\n                }\n            })\n        })\n\n    }\n    function handleHomeClick() {\n        props.handleHomeClick()\n        // props.history.push(\"/home\")\n        // localStorage.setItem('tabIndex',2);\n      }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}>\n            <MenuItem> Dark Theme <Switch\n                checked={darkThemeSelected}\n                onChange={handleThemeChange}\n                color=\"primary\"\n                name=\"checkedB\"\n                inputProps={{ 'aria-label': 'dark mode checkbox' }}\n            /></MenuItem>\n            <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n        </Menu>\n    );\n\n\n\n\n    const handleClose = () => {\n        setNotificationsOpen(false);\n    };\n\n    \n\n    function handleNotificationClick() {\n        setNotificationsOpen(true);\n    }\n\n\n    const handleDrawerOpen = () => {\n        props.setDOpen(true);\n    };\n\n    function handleTitleButtonClick() {\n        localStorage.setItem('tabIndex', 0)\n        props.handleHomeClick()\n      }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                color=\"secondary\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: props.dOpen,\n                })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: props.dOpen,\n                        })}>\n                        <MenuIcon color=\"primary\" />\n                    </IconButton>\n                    <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n                    <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n                    <div className={classes.grow} />\n                    <Typography variant=\"h5\" noWrap>{props.event.name}</Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton onClick={handleHomeClick}><HomeIcon></HomeIcon></IconButton>\n                        <IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                            <Badge badgeContent={0} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\">\n                            <SettingsIcon></SettingsIcon>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMenu}\n            <NotificationsDialog open={notificationsOpen} handleClose={handleClose}></NotificationsDialog>\n        </div>\n    );\n}\n\n\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setAnnouncements(value);\n      })\n    })\n  }, [token, event._id])\n\n  const handleDeleteButton = (a) => () =>{\n    fetch(process.env.REACT_APP_API_URL+`/api/event/delete_announcement?id=${a._id}&event_id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n      }).then(response => {\n        response.json().then(value => {\n            setAnnouncements(value);\n        })\n      })\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Button onClick={handleDeleteButton(a)}>Delete</Button>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\n\n\n//Materail imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function AnnouncementForm(props) {\n  const theme = useTheme()\n  const token = localStorage.getItem('token');\n  const [title, setTitle] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [visibility, setVisibility] = React.useState(\"All\");\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleDescChange(event) {\n    setDesc(event.target.value);\n  }\n\n\n  function handleVisibilityChange(event, value) {\n    console.log(value);\n    setVisibility(value);\n  }\n  function handleAddButton() {\n    // console.log(visibility);\n    var visible_all = true;\n    if (visibility !== \"All\") {\n      visible_all = false;\n    }\n    try {\n      var data = new FormData();\n      const d = { event_id: props.id, title: title, description: desc, visible_all: visible_all }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL+`/api/event/add_announcement`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Added successfully',\n            type: \"success\",\n            autoHide: 2000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n    props.handleClose()\n\n  }\n  const handleClose = async (event, reason) => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Announcement</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                fullWidth\n                value={title}\n                required\n                onChange={handleTitleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                fullWidth\n                value={desc}\n                required\n                onChange={handleDescChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Announcement visibility</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={visibility} onChange={handleVisibilityChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"All\" control={<Radio color=\"default\" />} label=\"All\" />\n                <FormControlLabel value=\"Registered Users\" control={<Radio color=\"default\" />} label=\"Registered Users\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Add\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {  useTheme } from '@material-ui/core/styles';\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SendEmailForm(props) {\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const [content, setContent] = React.useState(null);\n\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleContentChange(event) {\n        setContent(event.target.value);\n    }\n\n    function handleAddButton() {\n        try {\n            var data = new FormData();\n            const d = { \n                event_id: props.id, \n                title: title, \n                content: content,\n                emails: props.emails}\n            data = JSON.stringify(d);\n            console.log(data);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/sendemail`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                response.json().then(value => {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Added successfully',\n                        type: \"success\",\n                        autoHide: 2000\n                    });\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n        props.handleClose()\n\n    }\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    // boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Content for your Email</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Enter everything about your event in detail\"\n                                autoComplete='off'\n                                required\n                                id=\"content\"\n                                name=\"content\"\n                                label=\"Content\"\n                                fullWidth\n                                onChange={handleContentChange}\n                                value={content || \"\"}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AddAnnouncementForm from './AddAnnouncementForm';\nimport SendEmailForm from './SendEmailForm';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [announcementDialog, setAnnouncementDialog] = React.useState(false);\n  const [sendEmailDialog, setSendEmailDialog] = React.useState(false);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            setRowValues(rowValues => [...rowValues, d.data])\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  function handleAddAnnouncement() {\n    setAnnouncementDialog(true);\n  }\n\n  function handleAnnoucementClose() {\n    setAnnouncementDialog(false);\n  }\n\n  function handleSendEmail() {\n    console.log(selected);\n    setSendEmailDialog(true);\n  }\n  function handleSendEmailClose() {\n    setSendEmailDialog(false);\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <SendEmailForm open={sendEmailDialog} emails={selected} handleClose={handleSendEmailClose}></SendEmailForm>\n      <AddAnnouncementForm open={announcementDialog} id={event._id} handleClose={handleAnnoucementClose}></AddAnnouncementForm>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button variant=\"outlined\" onClick={handleAddAnnouncement} className={classes.button}>Add Announcement</Button>\n          <Button variant=\"contained\" onClick={handleSendEmail} className={classes.button}>Send Emails to Selected</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3} >\n\n        <Paper className={classes.fixedHeightPaper}>\n          <Typography>Total Registrations</Typography>\n          <Typography component=\"p\" variant=\"h4\">\n            {rowValues.length}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport ChatMessage from '../Components/ChatMessage';\n// import AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { TextField } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0.5)\n    },\n    root5: {\n        marginLeft: theme.spacing(0.5),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textField: {\n        zIndex: '100',\n        position: 'fixed',\n        bottom: '0px'\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    // console.log(event)\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const handleClose = () => {\n        setDialogOpen(false);\n    };\n    const [webSocket, setWebSocket] = React.useState(null);\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            // console.log(\"connected\")\n            setWebSocket(ws);\n            ws.onmessage = (message) => {\n                const mes = JSON.parse(message.data);\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    // console.log(cMes);\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                }\n            }\n            setLoading(false)\n        }\n        ws.onclose = () => {\n            check();\n            console.log(\"closed\");\n        }\n    }\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                webConnect();\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const check = () => {\n        if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n            console.log(\"checking\");\n            webConnect();\n        }\n    }\n\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        webSocket.send(JSON.stringify({\n            action: \"send_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message': message,\n                'date': d.toISOString()\n            }\n        }));\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <ReplyIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Reply\" />\n                            </ListItem>\n                            <ListItem autoFocus button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DeleteIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItem>\n                        </List>\n                    </Dialog>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.user_id === user.user_id) {\n                                        return (<React.Fragment key={index}>\n\n                                            <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n                                            <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n                                                <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n                                                    <ChatMessage message={value} ></ChatMessage>\n                                                </Box>\n                                                <Box className={classes.root5}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                            </Box></React.Fragment>);\n\n                                    }\n                                    else {\n                                        return (<React.Fragment>\n\n\n                                            <Box m={1} p={1} key={index} className={classes.root6}>\n                                                <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n                                            </Box>\n\n\n                                            <Box m={1} key={index} className={classes.root}>\n                                                <Box className={classes.root4}>\n                                                    <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                                </Box>\n                                                <Box className={classes.root2} whiteSpace=\"normal\" >\n                                                    <ChatMessage message={value}></ChatMessage>\n                                                </Box>\n                                            </Box></React.Fragment>);\n                                    }\n\n\n                                }\n\n                                if (value.user_id === user.user_id) {\n                                    return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n                                        <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                        <Box className={classes.root5}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                    </Box>);\n\n                                }\n                                else {\n                                    return (<Box m={1} key={index} className={classes.root}>\n                                        <Box className={classes.root4}>\n                                            <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n                                        </Box>\n                                        <Box className={classes.root2} whiteSpace=\"normal\">\n                                            <ChatMessage message={value}></ChatMessage>\n                                        </Box>\n                                    </Box>);\n                                }\n\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                        <div className={classes.textField}>\n                            {/* <TextField\n                                // disabled={props.loading}\n                                fullWidth\n                                placeholder=\"Type your message\"\n                                multiline\n                                // onChange={handleNewMessage}\n                                // value={newmessage || \"\"}\n                                rowsMax=\"3\"\n                            // onKeyUp={handleKeyPress}\n                            >\n\n                            </TextField> */}\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    // padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    // margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst EventEdit = (props) => {\n  var event = props.event;\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error'\n  });\n\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [regLink, setRegLink] = React.useState(null);\n  const [regFees, setRegFees] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  // const [image, setImage] = React.useState(null);\n  // const [imageName, setImageName] = React.useState(\"\");\n  // const [addressType,setAddressType] = React.useState(\"\");\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [regMode, setRegMode] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(null);\n  const [participantType, setParticipantsType] = React.useState(\"open\");\n  const [image, setImage] = React.useState(null);\n  const [imageUrl, setImageurl] = React.useState(null);\n  const [imageUpdated, setImageUpdated] = React.useState(false);\n  const [venue, setVenue] = React.useState(null);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const { vertical, horizontal, open, message, type } = state;\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n\n  const token = localStorage.getItem('token');\n\n\n  const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  // const colleges = [\"VIT University\", \"GITAM University\", \"SRM University\"];\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n  }, [token])\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setendDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDate(date)\n  };\n  React.useEffect(() => {\n    setEventThemes(event.tags);\n    setEventType(event.event_type);\n    setName(event.name);\n    setDesc(event.description);\n    setStartDate(event.start_time);\n    setendDate(event.finish_time);\n    setRegEndDate(event.registration_end_time);\n    setEventMode(event.event_mode);\n    setRegLink(event.reg_link);\n    setAbout(event.about);\n    setRegFees(event.fees);\n    setSelectedRequirements(event.requirements);\n    setFeeType(event.fee_type);\n    setCollegeName(event.college_name);\n    setRegMode(event.reg_mode);\n    setOrganizer(event.organizer);\n    setVenue(event.venue);\n    setVenueCollege(event.venue_college);\n    // setParticipantsType(event.o_allowed)\n    if (event.o_allowed === true) {\n      setParticipantsType(\"open\")\n    }\n    else {\n      setParticipantsType(\"onlycollege\")\n    }\n\n  }, [token, event])\n\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Saved changes successfully\") {\n      // history.replace()\n      // history.replace(\"/otpverification\")\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  };\n\n  async function handleEventPost(e) {\n    e.preventDefault();\n    setLoading(true);\n    var oAllowed = false;\n    if (participantType === \"open\") {\n      oAllowed = true\n    }\n    // console\n    try {\n      // console.log(\"started\");\n      // getBase64(image, (result) => {\n      var data = new FormData();\n      const payload = {\n        eventId: event._id,\n        name: name,\n        description: desc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        // poster: result,\n        reg_link: regLink,\n        fee: regFees,\n        about: about,\n        fee_type: feeType,\n        college: collegeName,\n        organizer: organizer,\n        requirements: selectedrequirements,\n        o_allowed: oAllowed,\n        reg_mode: regMode,\n        venue: venue,\n        venue_college: venueCollege\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/updateevent', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            // console.log(value);\n            event = value.event;\n            if (imageUpdated) {\n              var data2 = new FormData()\n              data2.append(\"image\", image);\n              fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${event._id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: data2\n              }).then(res => {\n                if (res.status === 200) {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"successful\",\n                    type: \"success\",\n                    autoHide: 300\n                  })\n                }\n              })\n            }\n            else {\n              setLoading(false);\n              setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"Saved changes successfully\",\n                type: \"success\"\n              })\n            }\n            // history.replace(\"/home\")\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: value,\n              type: \"error\"\n            })\n          })\n        }\n      })\n\n      // })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleeventTypsChange(event, value) {\n    setEventType(value);\n  }\n\n  function handleeventTagsChange(event, values) {\n    setEventThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    setSelectedRequirements(values);\n  }\n\n  // function handleChange(event) {\n  //   if (event.target.files[0]) {\n  //     setImage(event.target.files[0]);\n  //     const fileName = event.target.files[0].name;\n  //     setImageName(fileName);\n  //   }\n\n  // }\n\n  function handleAddressTypeChange(evemt, value) {\n    // setAddressType(value);\n  }\n  function handleName(event) {\n    setName(event.target.value)\n  }\n  function handleDesc(event) {\n    setDesc(event.target.value);\n  }\n  function handleFeeTypeChange(event, value) {\n    // props.setFeeType(value)\n    setFeeType(value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // props.setCollegeName(value);\n    setCollegeName(value);\n  }\n  function handleEventMode(event) {\n    setEventMode(event.target.value);\n  }\n\n  function handleRegLink(event) {\n    setRegLink(event.target.value);\n  }\n  function handleFees(event) {\n    setRegFees(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    setParticipantsType(value)\n  }\n  function handleVenue(event) {\n    setVenue(event.target.value);\n  }\n  function handleVenueCollegeChange(event, value) {\n    setVenueCollege(value);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n      //   setImageAsFile(imageFile => (image))\n      const url = URL.createObjectURL(event.target.files[0]);\n      //   const fileType = event.target.files[0].type;\n      setImageurl(url)\n      setImageUpdated(true);\n      //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n    }\n\n  }\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <form className={classes.form} novalidate onSubmit={handleEventPost}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} >\n              <input id=\"contained-button-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n              <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                badgeContent={<label htmlFor=\"contained-button-file\">\n                  <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <EditIcon></EditIcon>\n                  </IconButton>\n                </label>}>\n                <img height=\"160\" width=\"150\" alt=\"poster\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`} ></img>\n              </Badge>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventName\"\n                name=\"eventName\"\n                label=\"Event name\"\n                value={name || \"\"}\n                onChange={handleName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"shortdesc\"\n                name=\"shortdesc\"\n                label=\"Short Description\"\n                fullWidth\n                value={desc || \"\"}\n                onChange={handleDesc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"startDate\"\n                  label=\"Event Start Date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"endDate\"\n                  label=\"Event End Date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={handleendDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"regEndDate\"\n                  label=\"Registration End Date\"\n                  name=\"regEndDate\"\n                  value={regEndDate}\n                  onChange={handleRegEndDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Event Mode</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Event Mode\"\n                  value={eventMode || \"\"}\n                  onChange={handleEventMode}\n                  inputProps={{\n                    name: 'eventMode',\n                    id: 'event mode',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Online\">Online</option>\n                  <option value=\"Offline\">Offline</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"event type\"\n                options={eventTypes}\n                getOptionLabel={(option) => option}\n                value={eventType || \"\"}\n                onChange={handleeventTypsChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Event Type\" />}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"event themes\"\n                options={eventTypes.map((option) => option)}\n                // defaultValue={[eventTypes[1]]}\n                freeSolo\n                value={eventThemes || []}\n                onChange={handleeventTagsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Event Themes\" placeholder=\"Event Themes\" />\n                )}\n              />\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <input\n                id=\"contained-button-file\"\n                required\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n                style={{ display: \"none\" }}>\n\n              </input>\n\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventposter\"\n                name=\"eventposter\"\n                label=\"Event Poster\"\n                component=\"span\"\n                value={imageName}\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"start\">\n                      <label htmlFor=\"contained-button-file\">\n                        <IconButton component=\"span\" >\n                          <CameraAltIcon></CameraAltIcon>\n                        </IconButton>\n                      </label>\n\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            </Grid> */}\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Entry Fee</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={feeType || \"\"} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n                <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n              </RadioGroup>\n            </Grid>\n            {regMode !== \"form\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  id=\"regLink\"\n                  name=\"regLink\"\n                  label=\"Registration Link\"\n                  fullWidth\n                  value={regLink || \"\"}\n                  onChange={handleRegLink}\n                />\n              </Grid>}\n            {feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"regFees\"\n                name=\"regFees\"\n                value={regFees || \"\"}\n                label=\"Registration Fees\"\n                onChange={handleFees}\n                fullWidth\n              // helperText={\"Enter 0 if your event is free\"}\n              />\n            </Grid>}\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                disabled\n                id=\"collegename\"\n                options={colleges}\n                getOptionLabel={(option) => option}\n                value={collegeName || \"\"}\n                onChange={handleCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth >\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  disabled\n                  label=\"Registration\"\n                  inputProps={{\n                    name: 'registrationMode',\n                    id: 'registration mode',\n                  }}\n                  value={regMode || \"\"}\n                // onChange={handleRegistrationModeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"form\">Our Platform(Ellipse)</option>\n                  <option value=\"link\">Other</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                id=\"organizer\"\n                name=\"organizer\"\n                label=\"Organizer\"\n                fullWidth\n                value={organizer || \"\"}\n              />\n            </Grid> */}\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"requirements\"\n                options={requirements.map((option) => option)}\n                freeSolo\n                value={selectedrequirements}\n                onChange={handleRequirementsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Requirements\" placeholder=\"Requirements\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Participation</FormLabel>\n              <RadioGroup name=\"participanttype\" value={participantType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n                <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${collegeName}`} />\n              </RadioGroup>\n            </Grid>\n            {eventMode === \"Offline\" && <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup disabled aria-label=\"address\" name=\"address\" defaultValue=\"College/University\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel disabled value=\"College/University\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel disabled value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>}\n            {eventMode === \"Offline\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  value={venue || \"\"}\n                  onChange={handleVenue}\n                  id=\"building\"\n                  name=\"building\"\n                  label=\"Room No & Building\"\n                  fullWidth\n                />\n              </Grid>\n            }\n            {eventMode === \"Offline\" && <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                value={venueCollege}\n                getOptionLabel={(option) => option}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter everything about your event in detail\"\n                autoComplete='off'\n                // required\n                value={about || \"\"}\n                id=\"about\"\n                name=\"about\"\n                label=\"About\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save Changes\"}\n          </Button>\n        </form>\n      </div>\n\n      {/* </Grid> */}\n      {/* <Box mt={2}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}\n\nexport default withRouter(EventEdit);\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClose = async (event, reason) => {\n    getParticipantsList()\n    setState({ ...state, open: false });\n  }\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getParticipantsList = () =>{\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          // const firstdata = value[0].data;\n          // const columnNames = Object.keys(firstdata);\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n      })\n    })\n  }\n\n\n\n  function handleGenerateCertificateButton() {\n    setLoading(true);\n    console.log(selected)\n    try {\n      var data = new FormData();\n      const d = { eventId: event._id, participants: selected }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/generate_certificates`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          \n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Generated successfully',\n            type: \"success\",\n            autoHide: 4000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button\n            variant=\"contained\"\n            onClick={handleGenerateCertificateButton}\n            className={classes.button}>{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Generate Certificates\"}</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n              if(d.certificate_status !== \"not_generated\"){\n                setRowValues(rowValues => [...rowValues, d.data])\n              }\n            \n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return (\n\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4} lg={9}>\n        {/* <Paper className={classes.buttonsPaper}>\n          <Button variant=\"contained\" onClick={handleGenerateCertificateButton} className={classes.button}>Generate Certificates</Button>\n        </Paper> */}\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CertificateSample from './Images/certificate_sample.png';\nimport Typography from '@material-ui/core/Typography';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n}));\n\nexport default function StickyHeadTable(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    }\n\n    React.useEffect(() => {\n        setTitle(event.certificate.title)\n    }, [event])\n\n    function handleUpdateButton() {\n        setLoading(true);\n        try {\n            if (title === \"\" || title === null) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"please fill the details\",\n                    type: \"error\",\n                    autoHide: 6000\n                })\n            }\n            else {\n                var data = new FormData();\n                const d = { eventId: event._id, title: title }\n                data = JSON.stringify(d);\n                fetch(process.env.REACT_APP_API_URL + `/api/event/update_certificate_title`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    // console.log(response);\n                    response.json().then(value => {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Generated successfully',\n                            type: \"success\",\n                            autoHide: 4000\n                        });\n                    })\n                })\n            }\n\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n    }\n\n\n    return (\n        <div className={classes.paper}>\n            <Grid container spacing={2}>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={open}\n                    autoHideDuration={autoHide}\n                    onClose={handleClose}\n                    key={vertical + horizontal}>\n                    <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                </Snackbar>\n                <Grid item xs={12}>\n                    <TextField\n                        autoComplete='off'\n                        required\n                        id=\"title\"\n                        name=\"title\"\n                        label=\"Certificate Title\"\n                        value={title || \"\"}\n                        onChange={(e) => setTitle(e.target.value)}\n                        fullWidth\n                        inputProps={{\n                            maxLength: 32,\n                        }}\n                        helperText=\"You can change the title of certificate as shown below in sample by default it is event name\"\n                    />\n                </Grid>\n                {/* <Grid item xs={6}>\n                </Grid> */}\n                <Grid item xs={12}>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        onClick={handleUpdateButton}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update\"}\n                    </Button>\n                </Grid>\n            </Grid>\n            <Typography style={{marginTop:\"10px\"}} variant=\"h4\">Sample Certificate</Typography>\n            <img width=\"100%\" alt=\"certificate sample\" src={CertificateSample}></img>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport AdminCertificateDashboard1 from './AdminCertificateDashboad1';\nimport AdminCertificateDashboard2 from './AdminCertificateDashboard2';\nimport AdminCertificateDashboard3 from './AdminCertificateDashboard3';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <div className={classes.root}>\n\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"Dashboard\"></Tab>\n                        <Tab label=\"Pending\" />\n                        <Tab label=\"Generated\" />\n                    </Tabs>\n                </Paper>\n                {\n                    value === 0 && <AdminCertificateDashboard3 event={event}></AdminCertificateDashboard3>\n                }\n                {\n                    value === 1 && <AdminCertificateDashboard1 event={event}></AdminCertificateDashboard1>\n                }\n                {\n                    value === 2 && <AdminCertificateDashboard2 event={event}></AdminCertificateDashboard2>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport { Button, Typography } from '@material-ui/core';\n\nimport EventDetailsNavigationBar from '../Components/EventDetailsNavigationBar';\nimport AnnouncementPanel from '../Components/EventsAnnouncementsPanel';\nimport AnnouncementEditPanel from '../Components/AnnouncementsEditPanel';\nimport AboutPanel from '../Components/AboutEventPanel';\nimport TimeLinePanel from '../Components/EventTimeLinePanel';\nimport DashboardPanel from '../Components/DashboardPanel';\nimport ChatPanel from '../Components/EventDetailsChatPanel';\nimport EventPost from './EventEdit';\nimport CertificateDashboard from '../Components/AdminCertificateDashboard';\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  \n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3),\n    },\n  },\n\n}));\n\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  localStorage.removeItem('eventid')\n  const token = localStorage.getItem('token');\n  const id = props.match.params.eventId;\n  const t = localStorage.getItem('theme');\n\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [event, setEvent] = React.useState({});\n  const [adminAccess, setAdminAccess] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [selected, setSelected] = React.useState({\n    infoSelected: true,\n    dashBoardSelected: false,\n    timilineSelected: false,\n    announcementSelected: false,\n    settingsSelected: false,\n    editEventSelected: false,\n    chatSelected: false,\n    certificateSelected: false\n  })\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(val => {\n        setEvent(val.event);\n        \n      })\n    })\n    \n  }, [token,id])\n\n  // console.log(adminAccess)\n  React.useEffect(()=>{\n    if( event.user_id !== undefined && currentUser.user_id !== undefined){\n      if (event.user_id === currentUser.user_id) {\n        // console.log(event);\n        // console.log(currentUser)\n        setAdminAccess(true);\n      }\n    }\n    \n  },[currentUser,event])\n\n\n\n  // const handleDrawerOpen = () => {\n  //   setDrawerOpen(true);\n  // };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  function handleHomeClick() {\n    props.history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n\n\n\n  function infoClicked() {\n    setSelected({\n      infoSelected: true,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false\n    })\n  }\n\n  function dashBoardClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: true,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function timelineClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: true,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function announcementsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: true,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function settingsClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: true,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function editEventClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: true,\n      chatSelected: false,\n      certificateSelected: false\n    })\n  }\n  function chatClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: true,\n      certificateSelected: false\n    })\n  }\n  function certificateClicked() {\n    setSelected({\n      infoSelected: false,\n      dashBoardSelected: false,\n      timilineSelected: false,\n      announcementSelected: false,\n      settingsSelected: false,\n      editEventSelected: false,\n      chatSelected: false,\n      certificateSelected: true\n    })\n  }\n  const {\n    infoSelected,\n    dashBoardSelected,\n    timilineSelected,\n    announcementSelected,\n    settingsSelected,\n    editEventSelected, chatSelected, certificateSelected } = selected;\n\n    function handleSignout(){\n      props.history.replace('/');\n    }\n\n    function handleRegClick() {\n      props.history.push('/event/register/' + event._id);\n      // props.handleReg(event._id);\n  \n    }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <EventDetailsNavigationBar event={event} handleSignout={handleSignout} handleHomeClick={handleHomeClick} setUser={setCurrentUser}  dOpen={drawerOpen} setDOpen={setDrawerOpen}></EventDetailsNavigationBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: drawerOpen,\n          [classes.drawerClose]: !drawerOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: drawerOpen,\n            [classes.drawerClose]: !drawerOpen,\n          }),\n        }}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon color=\"primary\"/> : <ChevronLeftIcon color=\"primary\"/>}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={infoClicked} selected={infoSelected}>\n            <ListItemIcon >\n              <InfoIcon color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n          <ListItem button onClick={timelineClicked} selected={timilineSelected}>\n            <ListItemIcon>\n              <TimelineIcon color=\"primary\"></TimelineIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Schedule\" />\n          </ListItem>\n          <ListItem button onClick={announcementsClicked} selected={announcementSelected}>\n            <ListItemIcon>\n              <AnnouncementIcon color=\"primary\"></AnnouncementIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Announcements\" />\n          </ListItem>\n          <ListItem button onClick={chatClicked} selected={chatSelected}>\n            <ListItemIcon>\n              <TelegramIcon color=\"primary\"></TelegramIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Chat\" />\n          </ListItem>\n        </List>\n        <Divider />\n        {\n          adminAccess && <List>\n            <ListItem button onClick={dashBoardClicked} selected={dashBoardSelected}>\n              <ListItemIcon >\n                <DashboardIcon color=\"primary\"/>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n            <ListItem button onClick={editEventClicked} selected={editEventSelected}>\n              <ListItemIcon>\n                <EditIcon color=\"primary\"></EditIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Edit Event\" />\n            </ListItem>\n            <ListItem button onClick={certificateClicked} selected={certificateSelected}>\n              <ListItemIcon>\n                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Certificates\" />\n            </ListItem>\n            <ListItem button onClick={settingsClicked} selected={settingsSelected}>\n              <ListItemIcon>\n                <SettingsIcon color=\"primary\"></SettingsIcon>\n              </ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n          </List>\n        }\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* <Typography align='center' variant=\"h4\" style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>{event.name}</Typography> */}\n        {\n          infoSelected && event != null && <AboutPanel event={event}></AboutPanel>\n        }\n        {\n          editEventSelected && event != null && <EventPost event={event} ></EventPost>\n        }\n        {\n          timilineSelected && event != null && <TimeLinePanel event={event}></TimeLinePanel>\n        }\n        {\n          dashBoardSelected && event != null && <DashboardPanel event={event}></DashboardPanel>\n        }\n        {\n          chatSelected && event != null && <div className={classes.chat} ><ChatPanel user={currentUser} open={drawerOpen} event={event}></ChatPanel></div>\n        }\n        {\n          adminAccess && announcementSelected && event != null && <AnnouncementEditPanel event={event}></AnnouncementEditPanel>\n        }\n        {\n          !adminAccess && announcementSelected && event != null && <AnnouncementPanel event={event}></AnnouncementPanel>\n        }\n        {\n          adminAccess && certificateSelected && event != null && <CertificateDashboard event={event}></CertificateDashboard>\n        }\n        {\n            infoSelected && event.reg_mode === \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> \n             \n          }\n        {\n          infoSelected && event.reg_mode !== \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> : \n                <a href={event.reg_link}  style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n        }\n        {\n          adminAccess && settingsSelected && <Typography>Any queries contact us at support@ellipseapp.com</Typography>\n        }\n      </main>\n    </div>\n  );\n}\n\n\n\n\n\n","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n// import axios from 'axios';\n\n//MaterialUI imports\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// import { set } from 'date-fns';\n// import AuthContext from '../AuthContext';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n\n  const [canRegister, setCanRegister] = React.useState(true);\n  const [userMessage, setUserMessage] = React.useState(false);\n\n  const [formValues, setFormValues] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  // const [fields, setFields] = React.useState([]);\n  const [normalFields, setNormalFields] = React.useState([]);\n  const [dropDownFields, setDropDownFields] = React.useState([]);\n  const [checkboxFields, setCheckBoxFields] = React.useState([]);\n  const [radioFields, setRadioFields] = React.useState([]);\n  const [dateFields, setDateFields] = React.useState([]);\n  const [longDescFields, setLongDescFields] = React.useState([]);\n  const [linkFields, setLinkFields] = React.useState([]);\n\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const id = props.match.params.eventId;\n  const [backDropOpen, setBackDropOpen] = React.useState(true);\n  const [event, setEvent] = React.useState({});\n  const [checkedValues, setCheckedValues] = React.useState([]);\n  const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n\n  const user = React.useContext(AuthContext);\n\n  React.useEffect(() => {\n    if (user.designation === \"Student\" || user.designation === \"Faculty\") {\n      // setUserType(true);\n    }\n    else {\n      setCanRegister(false);\n      setUserMessage(\"You are \" + user.designation + \" so you cannot register\")\n    }\n    if (user.user_id === event.user_id) {\n      setCanRegister(false)\n      setUserMessage(\"You are event organizer so you cannot register\")\n    }\n    const cDate = new Date();\n    const eDate = new Date(event.registration_end_time);\n    if (cDate > eDate) {\n      setCanRegister(false)\n      setUserMessage(\"Registration closed\")\n\n    }\n  }, [event, user.designation, user.user_id])\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      console.log(response);\n      response.json().then(value => {\n        setEvent(value.event);\n        // setFields(value.event.regFields);\n        const allFields = value.event.reg_fields;\n        console.log(allFields);\n        if (allFields != null) {\n          allFields.forEach(f => {\n            if (f.title === \"Name\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.name }))\n            }\n            else if (f.title === \"Email\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.email }));\n            }\n            else if (f.title === \"College\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: user.college_name }));\n            }\n            else {\n              setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n            }\n            if (f.field === \"checkbox\") {\n\n            }\n\n          })\n          // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n          setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n          setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n          setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n          setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n          setDateFields(allFields.filter((f) => f.field === \"date\"));\n          // setLongDescFields(allFields.filter((f) => f.field === \"long_desc\"));\n          setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n          setLinkFields(allFields.filter(f => f.field === \"link\"));\n\n        }\n        setBackDropOpen(false);\n      })\n    })\n  }, [token, id, user])\n\n  function handleClose() {\n    if (message === \"Registered successfully\") {\n      props.history.push('/home')\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  }\n\n  function handleChange(event) {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  }\n  const handleChange2 = (name) => (event, values) => {\n    setFormValues({ ...formValues, [name]: values });\n\n  }\n  const handleChange3 = (name) => (event) => {\n    if (event.target.checked) {\n      setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n      const array = [];\n      checkedValues.forEach((v, i) => {\n        if (v[name]) {\n          array.push(v[name])\n        }\n      });\n      array.push(event.target.name);\n      setFormValues({ ...formValues, [name]: array });\n    }\n  }\n\n  const handleDateChange = (name) => (date) => {\n    // console.log(name);\n    // console.log(date);\n    setFormValues({ ...formValues, [name]: date })\n  };\n\n  const handleLondDescChange = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value })\n  }\n\n  function handleradioChange(event, value) {\n    // console.log(event.target.name);\n    // console.log(value);\n    setFormValues({ ...formValues, [event.target.name]: value });\n    // props.setFeeType(value)\n  }\n\n  function handleEventRegistration(e) {\n    e.preventDefault();\n    // setLoading(true);\n    // console.log(checkedValues);\n    console.log(formValues);\n    const formkeys = Object.keys(formValues);\n    formkeys.forEach(v => {\n      if (formValues[v] === null) {\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please fill in all fields',\n          type: \"error\",\n          autoHide: 4000\n        });\n      }\n    })\n    try {\n      var data = new FormData();\n      const d = { data: formValues }\n      data = JSON.stringify(d);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        console.log(response);\n        response.json().then(value => {\n          console.log(value);\n\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Registered successfully',\n            type: \"success\",\n            autoHide: 200\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n\n  }\n\n  function handleBack() {\n    props.history.goBack();\n  }\n\n\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Backdrop className={classes.backdrop} open={backDropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleBack}>\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      {event != null &&\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Registration for \" + event.name}\n          </Typography>\n          <form className={classes.form} onSubmit={handleEventRegistration}>\n\n            <Grid container spacing={2}>\n              {normalFields.map((field, index) => {\n                if (field.title === \"College\") {\n                  return (\n                    <Grid item xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        id={field.title}\n                        options={colleges}\n                        getOptionLabel={(option) => option}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        disabled\n                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                      />\n                    </Grid>)\n                }\n                else if (field.title === \"Email\") {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        disabled\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n                else {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                }\n\n              })}\n              {checkboxFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                      <FormLabel component=\"legend\">{field.title}</FormLabel>\n                      <FormGroup class={classes.formgroup}>\n                        {field.options.map((option) => {\n                          return <FormControlLabel\n                            control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                            label={option}\n                          />\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                    {/* <Autocomplete\n                      id={field.name}\n                      multiple\n                      // value={}\n                      onChange={handleChange2(field.name)}\n                      options={field.options.map((option) => option)}\n                      getOptionLabel={(option) => option}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.name} placeholder={field.name} />\n                      )}\n                    /> */}\n                  </Grid>\n                )\n              })}\n              {dropDownFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id={field.title}\n                      options={field.options.map((option) => option)}\n                      // freeSolo\n                      // onChange={handleeventTagsChange}\n                      onChange={handleChange2(field.title)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField {...params} name={field.name} label={field.title} placeholder={field.name} />\n                      )}\n                    />\n                  </Grid>\n                )\n              })}\n              {radioFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormLabel required component=\"legend\">{field.title}</FormLabel>\n                    <RadioGroup required aria-label=\"address\" name={field.title} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                      {field.options.map((option) => {\n                        return <FormControlLabel value={option} control={<Radio color=\"default\" />} label={option} />\n                      })}\n\n                      {/* <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" /> */}\n                    </RadioGroup>\n                  </Grid>\n                )\n              })}\n              {\n                dateFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                          // minDate={Date.now()}\n                          fullWidth\n                          required\n                          variant=\"inline\"\n                          format=\"dd MMM yyyy hh:mm a zzz\"\n                          margin=\"normal\"\n                          id=\"startDate\"\n                          label=\"Start Date\"\n                          name=\"startDate\"\n                          value={formValues[field.title]}\n                          onChange={handleDateChange(field.title)}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n\n                    </Grid>\n                  )\n                })\n              }\n              {\n                longDescFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        multiline={true}\n                        rows=\"5\"\n                        variant='outlined'\n                        placeholder={field.title}\n                        autoComplete='off'\n                        required\n                        id={field.title}\n                        name={field.title}\n                        label={field.title}\n                        fullWidth\n                        onChange={handleLondDescChange}\n                      // value={props.about}\n                      />\n                    </Grid>\n                  )\n                })\n              }\n              {\n                linkFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        // variant=\"outlined\"\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                        autoFocus\n                      />\n                    </Grid>)\n                })\n              }\n\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox color=\"primary\" name=\"terms\" />}\n                  label=\"I accept the terms and conditions\"\n                />\n              </Grid>\n            </Grid>\n            {canRegister && <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n              {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Register\"}\n            </Button>}\n            {\n              !canRegister && <Typography>{userMessage}</Typography>\n            }\n          </form>\n        </div>\n      }\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 2)\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const allEvents = React.useContext(EventsContext);\n    const activeEvents = React.useContext(ActiveEvents);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const postedEvents = allEvents.filter((val) => {\n    //     return val.user_id === user.user_id;\n    // });\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n    }\n\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\">\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={8} lg={8} >\n                        {/* <div className={classes.root2}> */}\n                        <Paper className={classes.root2}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"on\">\n                                <Tab label=\"Registered Events\" />\n                                <Tab label=\"Past Events\" />\n                            </Tabs>\n                        </Paper>\n                        <div className={classes.content}>\n                            {value === 0 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                            {\n                                regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                            }\n                                {regEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n\n                            </Grid>}\n                            {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                            {\n                                pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                            }\n                                {pastEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n                            </Grid>}\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AboutEventsPanel from '../Components/AboutEventPanel';\nimport { Dialog } from '@material-ui/core';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const id = props.match.params.eventId;\n    const [event, setEvent] = React.useState({});\n    const [open, setOpen] = React.useState(false);\n    if(token){\n        props.history.replace(`/event/${id}`)\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+`/api/unregistered/event?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setEvent(value.event);\n            })\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <Typography\n                    align='center'\n                    variant=\"h4\"\n                    style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>\n                    {event.name + \"(Login to Register and Know More Info)\"}\n                </Typography>\n                <AboutEventsPanel event={event}></AboutEventsPanel>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Register</Button>\n            </div>\n            <Dialog\n                open={open}\n                maxWidth=\"md\"\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Login to Register for the Event/Contest\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root2: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(50),\n            height: theme.spacing(50),\n        },\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    root4: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const classes = useStyles();\n    const id = props.match.params.id;\n    const [details,setDetails] = React.useState({});\n    const [userFound,setUserFound] = React.useState(true);\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + `/api/event/verify_certificate?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if(response.status === 200){\n                response.json().then(value => {\n                    setUserFound(true)\n                    setDetails(value);\n                })\n            }\n            else{\n                setUserFound(false);\n            }\n            \n        })\n    }, [id])\n\n    function handleSigninClick() {\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            {userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                <VerifiedUserIcon fontSize=\"large\"></VerifiedUserIcon>\n                    <Typography variant=\"h4\">{details.participantname}</Typography>\n                    <Typography>{details.participant_college}</Typography>\n                    <Typography style={{marginTop:\"20px\"}}>Event Name: {details.event_name}</Typography>\n                    <Typography>Organizer: {details.organizer}</Typography>\n                    <Typography>Held on {details.date}</Typography>\n                    <Typography style={{marginTop:\"20px\"}}>participation by {details.participantname} has been confirmed</Typography>\n                </Box>\n            </Box>}\n            {!userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                <CancelIcon fontSize=\"large\"></CancelIcon>\n                    <Typography variant=\"h4\">Certificate NOT FOUND</Typography>\n                    \n                </Box>\n            </Box>}\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './Pages/signin';\nimport SignUp from './Pages/signup';\nimport ForgotPassword from './Pages/ForgotPassword';\nimport { AuthProvider } from \"./Auth\";\nimport OTPVer from './Pages/otpverification';\nimport UserInfo from './Pages/UserInfo';\nimport Layout from './Pages/Layout';\nimport CalenderPanel from './Pages/CalenderPanel';\nimport EventsTabPanel from './Pages/EventsTabpanel';\nimport ProfileTabPanel from './Pages/ProfileTabpanel';\nimport EventPostForm from './Pages/EventPostForm';\n// import ChatPage from './Pages/ChatPage';\nimport EventDetails from './Pages/EventDetails';\nimport EventRegisterForm from './Pages/EventRegistrationform';\nimport ExplorePanel from './Pages/ExplorePanel';\nimport UnregisteredPage from './Pages/UnregisteredPage';\nimport NetworkDetector from './NetworkDetector';\nimport VerifyCertificate from './Pages/VerifyCertificate';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/signin\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route exact path=\"/userinfo\" component={UserInfo}></Route>\n            <Route exact path=\"/otpverification\" component={OTPVer}></Route>\n            <Route exact path=\"/un/event/:eventId\" component={UnregisteredPage}></Route>\n            {/* <Route exact path=\"/resetforgotpassword\" component ={ForgotPassword2}></Route> */}\n            <Route exact path=\"/event/:eventId\" component={EventDetails} />\n            <Route exact path=\"/verify_certificate/:id\" component={VerifyCertificate}></Route>\n            <Layout>\n              <Route path=\"/home\" component={EventsTabPanel}></Route>\n              <Route exact path=\"/events\" component={CalenderPanel}></Route>\n              <Route exact path=\"/post\" component={EventPostForm}></Route>\n              <Route exact path=\"/profile\" component={ProfileTabPanel}></Route>\n              {/* <Route exact path=\"/chat\" component={ChatPage}></Route> */}\n\n              <Route exact path=\"/event/register/:eventId\" component={EventRegisterForm} />\n              <Route exact path=\"/yourevents\" component={ExplorePanel}></Route>\n            </Layout>\n          </Switch>\n\n\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\nexport default NetworkDetector(App);\n","import React, { Component } from 'react';\n\nexport default function (ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      if (condition === 'online') {\n        const webPing = setInterval(\n          () => {\n            fetch('//google.com', {\n              mode: 'no-cors',\n              })\n            .then(() => {\n              this.setState({ isDisconnected: false }, () => {\n                return clearInterval(webPing)\n              });\n            }).catch(() => this.setState({ isDisconnected: true }) )\n          }, 2000);\n        return;\n      }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div>\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n      type: \"dark\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#000000'\n      },\n      secondary: {\n        main: '#1C1C1E',\n      },\n      background:{\n        default: \"#000000\"\n      }\n    },\n    \n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n      type: \"light\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#ffffff'\n      },\n      secondary: {\n        main: '#e5e5e5'\n      },\n      background:{\n        default: \"#ffffff\"\n      }\n    },\n    \n    \n});\n\nexport {lightTheme,darkTheme};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {lightTheme,darkTheme} from './Components/theme'\nimport { CssBaseline } from '@material-ui/core';\nconst t = localStorage.getItem('theme');\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={t === 'light' ? lightTheme: darkTheme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}