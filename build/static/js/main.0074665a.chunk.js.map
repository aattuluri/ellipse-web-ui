{"version":3,"sources":["Themes/SigninPageStyles.js","Components/Images/google-play-badge.png","Components/copyright.js","Components/Images/logo300.svg","Components/SupportDialog.js","Pages/signin.js","Themes/SignupPageStyles.js","Pages/signup.js","Pages/ForgotPassword.js","Auth.js","Pages/otpverification.js","Pages/UserInfo.js","Themes/MainHomeStyles.js","AuthContext.js","Components/EventShareDialog.js","Components/ImageDialog.js","Components/AboutEventPanel.js","Components/EventTimeLinePanel.js","Components/EventsAnnouncementsPanel.js","Components/ChatTextField.js","WebSocketContext.js","WebSocketDataContext.js","Components/MessageBox1.js","Components/MessageBox2.js","Components/MessageDeleteDialog.js","Components/EventsChatPanel.js","Components/EventsDialog.js","EventsContext.js","Components/NotficationsDialog.js","Components/Images/logo.svg","Pages/NavigationBar.js","ActiveEventsContext.js","Pages/Layout.js","Pages/CalenderPanel.js","Components/SortLeftPanel.js","Components/MobileSortPanel.js","Components/FeedBackDialog.js","Components/ProfileEventCard.js","Components/EventReportDialog.js","Components/EventCard.js","Components/EventsMainTabPanel.js","Pages/EventsTabpanel.js","Components/ProfilePostedEventsTabPanel.js","Components/ProfileAboutDataBox.js","Components/ProfileAboutTabPanel.js","Components/CertificateCard.js","Components/ProfileCertificateTabPanel.js","Components/MainProfileCard.js","Components/UpdateInfoTabPanel.js","Components/UpdatePasswordTabPanel.js","Components/MoreSettingsTabPanel.js","Components/UpdateProfileDialog.js","Pages/ProfileTabpanel.js","Components/EventPostDetails1.js","Components/EventPostTermsandConditions.js","Components/EventPostDetails2.js","Components/AddFieldDialog.js","Components/AddRoundsDialog.js","Components/EventPostDetails3.js","Components/SuccessPanel.js","Pages/EventPostForm.js","Components/MessageBox3.js","Components/MessageBox4.js","Components/MessageBox5.js","Components/MessageReplyDialog.js","Components/MainChatTextField.js","Components/MainChatPanel.js","Pages/ChatContactsPanel.js","Pages/ChatPage.js","Components/EventRegisterTermsandConditions.js","Pages/EventRegistrationform.js","Pages/ExplorePanel.js","Pages/UnregisteredPage.js","Pages/VerifyCertificate.js","Components/Images/un5.svg","Components/Images/un6.svg","Components/Images/un7.svg","Pages/NewHomePageCarousel.js","Components/HomePageEventCard.js","Pages/NewHomePage.js","Components/AnnouncementsEditPanel.js","Components/AddAnnouncementForm.js","Components/SendEmailForm.js","Components/DashboardPanel.js","Components/EventDetailsChatPanel.js","Components/EditRoundDialog.js","Pages/EventEdit.js","Components/AdminCertificateDashboad1.js","Components/AdminCertificateDashboard2.js","Components/Images/certificate_sample.png","Components/AdminCertificateDashboard3.js","Components/AdminCertificateDashboard.js","Components/SubmissionForm.js","Components/EventSubmissionPanel.js","Components/TeamMemberListItem.js","Components/TeamMemberRequestListItem.js","Components/EditTeamDialog.js","Components/EventsTeamSubPanel1.js","Components/EventsTeamSubPanel2.js","Components/EventsTeamSubPanel3.js","Components/EventsTeamChatPanel.js","Components/EventsTeamPanel.js","Components/EventDetailsTeamPanel.js","Components/CircularLoading.js","Components/EventSubmissionDialog.js","Components/SubmissionShareDialog.js","Components/EventAdminSubmissionPanel.js","Components/ModeratorListItem.js","Components/AdminSettingsPanel.js","Pages/EventDetaislFullPage.js","Components/LoadingIndicator.js","Pages/ViewSubmission.js","App.js","NetworkDetector.js","Components/theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","height","wrapper","margin","spacing","position","paperRight","flexDirection","alignItems","backgroundColor","palette","secondary","main","padding","paddingBottom","borderRadius","minHeight","breakpoints","down","paperLeft","up","paperimage","avatar","marginTop","primary","form","width","submit","iPhoneImage","title","fontFamily","color","dark","fontWeight","hidden","image","maxHeight","maxWidth","footer","Copyright","Typography","variant","align","Link","href","Date","getFullYear","EventReportDialog","props","useTheme","React","useState","setTitle","desc","setDesc","Dialog","open","fullWidth","PaperProps","style","boxShadow","onClose","handleClose","aria-labelledby","DialogTitle","id","DialogContent","Grid","container","item","xs","TextField","label","name","value","onChange","event","target","DialogActions","Button","onClick","rel","Alert","elevation","withRouter","history","classes","vertical","horizontal","message","type","autoHide","state","setState","loading","setLoading","token","setToken","isUserVerified","setIsUserVerified","email","setEmail","abortController","AbortController","browser","detect","supportOpen","setSupportOpen","timeout","ms","promise","Promise","resolve","reject","timer","setTimeout","Error","then","clearTimeout","catch","reason","a","localStorage","setItem","eventId","getItem","abort","push","FormData","payload2","data2","JSON","stringify","fetch","process","signal","headers","method","body","result","json","res","error","preventDefault","elements","password","payload","browser_name","device_os","os","data","response","status","isVerified","useremail","to","Fragment","component","className","CssBaseline","Snackbar","anchorOrigin","autoHideDuration","key","severity","sm","md","Box","justifyContent","m","p","src","PhoneImage","alt","GoogleBadge","Avatar","onSubmit","required","autoComplete","autoFocus","disabled","CircularProgress","size","paper","closeButton","right","top","nameError","setNameError","usernameError","setUserNameError","passwordError","setPasswordError","colleges","setColleges","collegeName","setCollegeName","collegeId","setCollegeId","collegesName","setCollegesName","signupButtonDisabled","setSignupButtonDisabled","useEffect","forEach","v","collegesNames","url","callback","isScriptExist","document","getElementById","script","createElement","onload","appendChild","loadScriptByURL","window","grecaptcha","ready","execute","action","recaptcha_token","success","score","replace","fullName","designation","username","terms","checked","college_id","val","tok","Container","inputProps","pattern","onInvalid","helperText","onInput","FormControl","InputLabel","htmlFor","Select","native","aria-label","Autocomplete","options","getOptionLabel","option","c","_id","renderInput","params","FormControlLabel","control","Checkbox","justify","mt","otp","setOtp","setPassword","loading2","setLoading2","console","log","nPassword","e","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","Provider","seconds","setSeconds","resendEnabled","setresetEnabled","removeItem","textArea","imageUrl","setImageurl","setImage","gender","bio","append","accept","files","URL","createObjectURL","Badge","overlap","badgeContent","IconButton","sizes","multiline","rows","placeholder","outline","marginBottom","flexGrow","background","grow","mobileTitle","titleButton","mobileTitleButton","search","shape","fade","common","white","marginRight","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","borderBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","tabs","mobiletab","tabPanel","flex_section","flex_col_scroll","overflow","rpaper","textAlign","text","light","postButton","EventShareDialog","share_link","copyToClipBoard","copyMe","navigator","clipboard","writeText","imageBox","dialog","icons","ImageDialog","scroll","aria-describedby","fontSize","poster_url","alignContent","adminDetails","boxItem","minWidth","gridMain","gridItem","divider","opacity","overFlowText","textOverflow","AboutEventPanel","index","other","tags","requirements","setRequirements","timeLabel","setTimeLabel","setAdminDetails","imageDialogOpen","setImageDialogOpen","notRegistered","setNotRegistered","rulesHeight","setRulesHeight","undefined","user_id","calculateTimeLeft","difference","registration_end_time","timeLeft","start_time","finish_time","days","Math","floor","hours","minutes","setTimeLeft","x","getTimeLabel","cleanup","timerComponents","Object","keys","interval","role","lg","description","length","Chip","event_type","fee_type","event_mode","isTeamed","team_size","min_team_size","max_team_size","map","about","Divider","flexItem","venue","venue_college","fee","platform_details","itam","rounds","orientation","prizes","flexWrap","prize","themes","whiteSpace","split","rules","profile_pic","college_name","media","buttonDiv","button","large","tab","secondaryTail","startDate","endDate","regEndDate","Timeline","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","toDateString","toLocaleTimeString","sDate","start_date","eDate","end_date","timiline","root3","root5","CustomizedTimeline","announcements","setAnnouncements","registered","ann","visible_all","date","time","root2","pos","bottomBar","bottom","left","close","JustifyContent","sendButtonDisabled","setSendButtonDisabled","newmessage","setNewMessage","cl","setCl","clsx","rowsMax","onKeyUp","keyCode","shiftKey","handleSend","sendIcon","WebSocketContext","webSocketContext","setWebSocketContext","WebSocketDataContext","eventChatMessages","setEventChatMessages","teamChatMessages","setTeamChatMessages","teamUpdateStatus","setTeamUpdateStatus","deletedEventChatMessages","setDeletedEventChatMessages","deletedTeamChatMessages","setDeletedTeamChatMessages","inline","root6","textDecorationColor","ChatMessage","userType","setUserType","useContext","adminId","paddingTop","paddingRight","currentDate","messageDate","userName","user_pic","user_name","timeStyle","handleMessageDeleteButton","componentDecorator","decoratedHref","decoratedText","AlertDialog","setOpen","handleDeleteConfirmation","topBar","root4","progress","message2","message3","reference","setReferenece","chatMessages","setChatMessages","counterDate","openDeleteDialog","setOpenDeleteDialog","messageToBeDeleted","setMessageToBeDeleted","send","event_id","msg","mes","cMes","filter","scrollIntoView","behavior","Fade","in","unmountOnExit","MessageBox1","MessageBox2","d","now","toISOString","float","clear","ref","el","a11yProps","bottomTags","field","dialogContent","mobileHead","desktopHead","EventsDialog","t","setValue","shareDialogOpen","setShareDialogOpen","chatAcess","setChatAcess","subIndexValue","setSubIndexValue","handleShareClick","reg_mode","openTeams","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","dividers","handleReg","reg_link","textDecoration","EventsContext","allEvents","setAllEvents","FormDialog","notificationms","setNotifications","handleNotificationClick","n","handleClick","anchorEl","setAnchorEl","darkThemeSelected","setDarkThemeSelected","searchedEvent","setSearchedEvent","notificationsCount","setNotificationCount","isMenuOpen","Boolean","notificationsOpen","setNotificationsOpen","tabIndex","parseInt","handleChange","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","Switch","location","reload","handleeventClick","handleHomeClick","handleProfileClick","handleChatClick","handleTitleButtonClick","AppBar","Toolbar","Logo","noWrap","freeSolo","square","Tooltip","icon","edge","aria-controls","aria-haspopup","currentTarget","ActiveEventsContext","activeEvents","setActiveEvents","contextLoading","setContextLoading","backdrop","zIndex","drawer","authorized","setAuthorized","userDetailsDone","setUserDetailsDone","allEventsValue","activeEventsValue","webSocketValue","webSocketDataContextValue","webConnect","ws","WebSocket","onopen","onmessage","parse","onclose","check","readyState","verified","sort","b","Backdrop","subRpaper","fab","sideList","CalenderPanel","events","setEvents","selectedEvent","setSelectedEvent","registeredEvents","setRegisteredEvents","y","start","end","handlePostButtonClick","handleRegisterdEventClick","eventBackgroundColor","eventBorderColor","eventClick","info","defaultView","plugins","dayGridPlugin","buttonIcons","Fab","List","ListItem","ListItemAvatar","ListItemText","filterTextField","filterButton","SortLeftPanel","handleModeToggle","currentIndex","modeChecked","indexOf","newChecked","splice","setModeChecked","handleFeeToggle","feeChecked","setFeeChecked","utils","DateFnsUtils","DatePicker","format","sortStartDate","handleSortDateChange","InputProps","endAdornment","InputAdornment","sortEndDate","handleEndSortDateChange","labelId","dense","ListItemIcon","disableRipple","RadioGroup","sortCollgeType","handleSortCollegeChange","wrap","Radio","handleSortApplyButton","handlesortDiscardButton","MobileSortPanel","defaultValue","KeyboardButtonProps","ImgMediaCard","Card","CardMedia","CardContent","gutterBottom","CardActions","pathname","toUpperCase","morePopup","Eventcard","anchorRef","useRef","imageLoaded","setImageLoaded","reportDialogOpen","setReportDialogOpen","CardHeader","imageDialog","onLoad","subheader","disableSpacing","click","accordion","content","ExplorePanel","ActiveEvents","regEvents","pastEvents","handleEventClick","Skeleton","animation","isFiltered","sortedEventsArray","EventCard","startTime","endTime","eventMode","eventType","regEndTime","registrationEndTime","feeType","feesType","handleImageDialogOpen","handleRegistrationButton","handleViewClick","mode","leftSubPaper","mobileFilterButton","skeleton","feedBackButton","setSortStartDate","setSortEndDate","sortCollegeType","setSortCollegeType","setSortedEventsArray","setIsFiltered","feeSortChecked","setFeeSortChecked","modeSortChecked","setModeSortChecked","filterDialogOpen","setFilterDialogOpen","registerdEvents","feedBackOpen","setFeedBackOpen","dateRangeSortedEvents","sortByDateRange","sortByMode","typeSortedEvents","feeSortedEvents","sortByCost","collegeSortedEvents","sortByCollege","sortByDate","dateSortedEvents","date1","date2","sEvents","sortedEvents","sEvent","getTime","tEvents","sDEvents","sevent","getDate","getMonth","includes","ProfilePostsTabPanel","postedEvents","setSellectedEvent","ProfileDataBox","setIcon","editIcon","handleEditButton","ProfileAboutDataBox","eventName","setEventName","certificate_status","download","certificate_url","iconlarge","ProfilePostedEventsTabPanel","UpdateInfoTabPanel","setName","setUserName","setBio","setGender","setDesignation","imageUpdated","setImageUpdated","updateButtonDisabled","setUpdateButtonDisabled","UpdatePasswordTabPanel","cPassword","setCPassword","setNPassword","UpdateProfile","MoreSettingsTabPanel","EventsTabPanel","eOpen","setEOpen","UpdateProfileDialog","buttons","AddressForm","startDateError","setStartDateError","endDateError","setEndDateError","regEndDateError","setRegEndDateError","eventTypes","setEventTypes","handleNext","DateTimePicker","minDate","setStartDate","setEndDate","setRegEndDate","setEventMode","setEventType","registrationMode","setSteps","steps","setRegistrationMode","FormLabel","setFeeType","DialogContentText","eventTags","setEventTags","tandcOpen","setTandcOpen","r","setAbout","multiple","eventThemes","values","setThemes","renderTags","getTagProps","setPoster","fileName","setImageName","imageName","regLink","setRegLink","regFees","setFees","college","participantsType","setParticipantsType","isTeam","setIsTeam","minTeamSize","setMinTeamSize","maxTeamSize","setMaxTeamSize","setPlatformDetails","platformDetails","aria-disabled","evemt","setAddressType","setBuilding","building","handleBack","setType","setRequired","selectedOptions","setSelectedOptions","handleAdd","req","listStyle","chip","linkField","setLinkField","selectedFields","setSelectedFields","alertopen","link","setChecked","roundsCount","FormGroup","onDelete","chipToDelete","fields","addingField","fName","formgroup","EventPostForm","roundsDialogOpen","setRoundsDialogOpen","prizeTitle","setPrizeTitle","prizeDesc","setPrizeDesc","setPrize","setPrizes","sName","handlePostButton","setFields","handlePost","handlePrizeDeleteButton","currentPrizes","handlePrizeFieldChange","setRounds","setRules","formControl","toLowercase","uR","fR","rou","SuccessPanel","showSuccessPanel","handleHomeScreenButton","handleEventScreenButton","appBar","layout","stepper","Checkout","activeStep","setActiveStep","shortDesc","setShortDesc","setendDate","fees","setEventThemes","selectedrequirements","setSelectedRequirements","addressType","setBuildingAdress","organizer","setOrganizer","venueCollege","setVenueCollege","setShowSuccessPanel","handleEventPost","allFields","oAllowed","venue_type","reg_fields","o_allowed","setRegFields","f","handlePostwithoutregFileds","goBack","Stepper","Step","StepLabel","step","eventPoster","poster","getStepContent","avatarLetterStyle","repliedMessage","reply","setReply","ev","handleReplyConfirmation","textField","header","user","team","openReplyDialog","setOpenReplyDialog","messageToBeReplied","setMessagesToBeReplied","chatType","team_id","handleReplyButton","handleInfoButton","mobile","setSelectedChat","openDialog","team_name","message_type","MessageBox3","replied_to","MessageBox5","MessageBox4","nested","ChatPage","teams","setTeams","chatValue","setChatValue","handleToggle","userid","setChatType","setChatId","setAdminId","innerWidth","handleToggle2","handleChatChange","selected","selectedChat","mobileChat","setMobileChat","ChatContactsPanel","canRegister","setCanRegister","userMessage","setUserMessage","formValues","setFormValues","uploadFiles","setUploadFiles","normalFields","setNormalFields","dropDownFields","setDropDownFields","checkboxFields","setCheckBoxFields","radioFields","setRadioFields","dateFields","setDateFields","longDescFields","setLongDescFields","linkFields","setLinkFields","fileUploadFields","setFileUploadFields","match","backDropOpen","setBackDropOpen","setEvent","checkedValues","setCheckedValues","handleLondDescChange","handleradioChange","handleFileSelect","uploadedFilesIds","formkeys","fileFormKeys","count","cField","finalValues","data1","file_name","class","array","i","menuButton","appbar","UnregisteredPage","details","setDetails","userFound","setUserFound","setDate","participantname","participant_college","event_name","AutoPlaySwipeableViews","autoPlay","SwipeableViews","tutorialSteps","imgPath","DeviceDesign","DeviceDesign2","DeviceDesign3","img","carouselCaption","SwipeableTextMobileStepper","maxSteps","axis","direction","onChangeIndex","enableMouseEvents","abs","handleSignin","MobileStepper","nextButton","prevActiveStep","backButton","current","contains","handleListKeyDown","prevOpen","focus","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","handleSigninClick","NewHomePageCarousel","HomePageEventCard","handleDeleteButton","AnnouncementForm","visibility","setVisibility","SendEmailForm","setContent","emails","table","buttonsPaper","fixedHeightPaper","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","setHeaders","rowValues","setRowValues","setSelected","announcementDialog","setAnnouncementDialog","sendEmailDialog","setSendEmailDialog","fileColumns","setFileColumns","firstdata","TableContainer","filename","Table","stickyHeader","TableHead","TableRow","TableCell","newSelecteds","Email","indeterminate","column","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","substr","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","chat_blocked_users","EditDialog","roundData","updatedRounds","setRegFees","regMode","setRegMode","participantType","setVenue","setIsTeamed","teamSize","setTeamSize","selectedEditRound","setSelectedEditRound","handleRoundEditButton","novalidate","getParticipantsList","participants","certificate","maxLength","CertificateSample","SubmissionForm","access","setAccess","editAccess","setEditAccess","currentRound","round","roundStartDate","roundEndDate","fetchAll","individual","members","submissions","is_submitted","submission_form","sub","registration","handleEventRegistration","reg_id","submission","is_teamed","event_round","root0","grid","setRegistration","teamDetails","setTeamDetails","getData","cDate","Accordion","AccordionSummary","expandIcon","heading","AccordionDetails","memberDetails","setMemberDetails","admin","ListItemSecondaryAction","users","updated_user_id","setAdmin","editDialogOpen","setEditDialogOpen","TeamMemberListItem","received_requests","TeamMemberRequestListItem","root1","avatar2","sortedTeams","setSortedTeams","sentRequests","setSentRequests","showMembers","setShowMembers","teamIndex","setTeamIndex","sent_requests","handleRequestButton","handleViewMembersClick","searchedTeam","find","teamedUp","setTeamedUp","teamed_up","EventDetailsTeamPanel","CircularLoading","ScrollDialog","setSubmission","setKeys","currentRoundFields","setCurrentRoundFields","SubmissionShareDialog","reg","handleDialogClose","roundButton","EventAdminSubmissionPanel","registrations","setRegistrations","viewSubmissionDialog","setViewSubmissionDialog","selectedSubmission","setSelectedSubmission","selectedTeam","setSelectedTeam","getTeamData","getIndividualsData","handleRoundClickButton","handleAccessButton","round_title","handleShareButtonClick","submission_access","Name","ModeratorListItem","moderator_id","blocked_user_id","AdminSettingsPanel","allUsers","setAllUsers","selectedUser","setSelectedUser","selecteedBlockUser","setSelectedBlockUser","registeredUsers","setRegisteredUsers","moderators","m_id","drawerWidth","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","hide","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","PersistentDrawerLeft","drawerOpen","setDrawerOpen","adminAccess","setAdminAccess","moderatorAccess","setModeratorAcces","teamAccess","setTeamAccess","infoSelected","dashBoardSelected","timilineSelected","announcementSelected","settingsSelected","editEventSelected","chatSelected","certificateSelected","submissionSelected","participationSelected","teamsSelected","handleAnyClick","selectedOption","defaultValues","Drawer","anchor","chat","EventsTeamPanel","EventSubmissionPanel","LoadingIndicator","ViewSubmissionPage","sub_id","setUsers","roundInfo","setRoundInfo","setReg","rounds_info","ks","NetworkDetector","ComposedComponent","exact","path","NewHomePage","Login","SignUp","ForgotPassword","UserInfo","OTPVer","VerifyCertificate","ProfileTabPanel","EventRegisterForm","EventDetails","isDisconnected","handleConnectionChange","onLine","webPing","setInterval","clearInterval","this","addEventListener","removeEventListener","Component","darkTheme","createMuiTheme","default","lightTheme","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.0074665a.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  paperRight: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    paddingBottom: theme.spacing(4),\n    borderRadius: 30,\n    // height: '80vh',\n    minHeight: '80vh',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(0, 1),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  paperLeft: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(3, 1),\n    },\n    [theme.breakpoints.up('md')]: {\n      height: '80vh',\n    },\n\n  },\n  paperimage: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(),\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '90%',\n    margin: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(2),\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  iPhoneImage: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  title: {\n\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  hidden: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  image: {\n    maxHeight: \"600px\",\n    maxWidth: '600px',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n  },\n  footer: {\n    backgroundColor: theme.palette.secondary.main,\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport default useStyles;","export default __webpack_public_path__ + \"static/media/google-play-badge.561e4a2c.png\";","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n          ellipseapp.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport default Copyright;","export default __webpack_public_path__ + \"static/media/logo300.123db6fb.svg\";","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n\n\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n    // console.log(title);\n    // console.log(desc);\n\n    return (\n        <div>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Support</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Full Name\"\n                                name=\"name\"\n                                fullWidth\n                                value={title || \"\"}\n                                // required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                // required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Link href={`mailto:support@ellipseapp.com?subject=${title}&body=${desc}`} target=\"_blank\" rel=\"noopener noreferrer\" variant=\"body2\">\n                        SEND\n                    </Link>\n                    \n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../Themes/SigninPageStyles'\n// import AppleBadge from '../Components/Images/AppleBadge.png';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n// import iPhone from '../Components/Images/iPhone 11 Pro Max@2x.png';\nimport Copyright from \"../Components/copyright\";\nimport { withRouter, Redirect } from \"react-router\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PhoneImage from '../Components/Images/logo300.svg';\n// import HomePageCarousel from '../Components/HomePageCarousel';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\nimport { detect } from 'detect-browser';\nimport SupportDialog from '../Components/SupportDialog';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nconst Signin = ({ history }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [user,setUser] = React.useState(null);\n  const [token, setToken] = React.useState(null);\n  const [isUserVerified, setIsUserVerified] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const abortController = new AbortController();\n  const browser = detect();\n  const [supportOpen,setSupportOpen] = React.useState(false);\n\n  //timeout function\n  function timeout(ms, promise) {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        reject(new Error('TIMEOUT'))\n      }, ms)\n\n      promise\n        .then(value => {\n          clearTimeout(timer)\n          resolve(value)\n        })\n        .catch(reason => {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Something went wrong Try Again',\n            type: \"error\",\n            autoHide: 4000\n          });\n          clearTimeout(timer)\n          reject(reason)\n        })\n    })\n  }\n\n  const handleClose = async (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    if (message === \"Signedin successfully\") {\n      localStorage.setItem('token', token);\n      if (isUserVerified) {\n        localStorage.setItem('token', token);\n        const eventId = localStorage.getItem('eventid');\n        if (eventId) {\n          abortController.abort()\n          history.push(`/event/${eventId}`)\n        }\n        else {\n          abortController.abort()\n          history.push('/home');\n        }\n\n      }\n      else {\n        try {\n          var data2 = new FormData();\n          const payload2 = {\n            email: email\n          };\n          data2 = JSON.stringify(payload2)\n          fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n            signal: abortController.signal,\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data2\n          }).then((result) => {\n            // console.log(result);\n            result.json().then((res) => {\n              if (res.message === \"success\") {\n                abortController.abort()\n                localStorage.setItem('token', token);\n                history.push('/otpverification')\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Signedin successfully',\n                  type: \"success\",\n                  autoHide: 300\n                });\n              }\n            })\n\n          })\n        } catch (error) {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: error.message,\n            type: \"error\",\n            autoHide: 3000\n          })\n        }\n\n      }\n\n    }\n    setState({ ...state, open: false });\n  };\n  async function handleSignin(event) {\n    event.preventDefault();\n    setLoading(true);\n    const { email, password } = event.target.elements;\n    try {\n      var data = new FormData()\n      const payload = {\n        email: email.value,\n        password: password.value,\n        type: 'browser',\n        browser_name: browser.name,\n        device_os: browser.os,\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      timeout(25000, fetch(process.env.REACT_APP_API_URL + '/api/users/login', {\n        signal: abortController.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      })).then((response) => {\n        // console.log(response);\n        if (response.status === 200) {\n          // console.log\n          response.json().then((value) => {\n            setToken(value.token);\n            setIsUserVerified(value.isVerified);\n            setEmail(value.useremail);\n            // setUser(JSON.stringify(value.userDetails));\n\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Signedin successfully',\n              type: \"success\",\n              autoHide: 200\n            });\n          })\n        }\n        else {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: \"invalid credentials\",\n            type: \"error\", autoHide: 6000\n          })\n        }\n\n      })\n    } catch (error) {\n\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n    }\n  }\n\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  const handleSupportButton = ()=>{\n    setSupportOpen(true);\n  }\n  const handleSupportClose = () =>{\n    setSupportOpen(false);\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          autoHideDuration={autoHide}\n          onClose={handleClose}\n          key={vertical + horizontal}>\n          <Alert onClose={handleClose} severity={type}>{message}</Alert>\n        </Snackbar>\n        <Grid item xs={12} sm={12} md={7} elevation={6} >\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" m={1} p={1} className={classes.paperLeft}>\n            <img src={PhoneImage} alt=\"logo\" height=\"500px\" width=\"500px\" className={classes.image}></img>\n            <Typography className={classes.title} component=\"h1\" variant=\"h2\">\n              Ellipse\n          </Typography>\n            <Typography component=\"h1\" variant=\"h6\">\n              Kill time for what matters\n          </Typography><br></br>\n            <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n              <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n            </a>\n\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={5} elevation={6}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" m={1} p={1} className={classes.paperRight}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n          </Typography>\n            <form className={classes.form} onSubmit={handleSignin}>\n              <TextField\n                name=\"email\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                name=\"password\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n              <div className={classes.wrapper}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  className={classes.submit}>\n                  {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign In\"}\n\n                </Button>\n              </div>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"/forgotpassword\" variant=\"body2\">\n                    Forgot password?\n                </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/signup\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs>\n                  {/* <Link href=\"/forgotpassword\" variant=\"body2\">\n                    Forgot password?\n                </Link> */}\n                </Grid>\n                <Grid item>\n                  <Link onClick={handleSupportButton} variant=\"body2\">\n                    {\"Get Support\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-end\">\n              <Copyright></Copyright>\n            </Box>\n          </Box>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <HomePageCarousel></HomePageCarousel>\n            </Box>\n          </Box>\n          <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Made with <FavoriteIcon fontSize=\"inherit\" color=\"primary\"></FavoriteIcon> for Students and Organizations</Typography><br></br>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                {\"support@ellipseapp.com\"}\n              </Link></Typography>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Copyright></Copyright>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                {\"Privacy Policy\"}\n              </Link>\n            </Box>\n          </Box>\n        </Grid> */}\n        <SupportDialog open={supportOpen} handleClose={handleSupportClose}></SupportDialog>\n      </Grid>\n\n    </React.Fragment>\n  );\n}\nexport default withRouter(Signin);","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // backgroundColor: theme.palette.secondary.main,\n      padding: theme.spacing(3),\n      borderRadius: 30,\n  \n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(7),\n      [theme.breakpoints.down('md')]: {\n        top: theme.spacing(12),\n      }\n    },\n    hidden: {\n      display: 'none'\n    }\n  }));\n\n  export default useStyles;","import React from 'react';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\nimport { detect } from 'detect-browser';\n\n//MaterialUI imports\nimport Select from '@material-ui/core/Select';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport SupportDialog from '../Components/SupportDialog';\nimport Copyright from '../Components/copyright';\n// import { ReCaptcha } from 'react-recaptcha-google';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Signup = ({ history }) => {\n  const classes = useStyles();\n  const [token, setToken] = React.useState(\"\");\n  // const [currentUser, setCurrentUser] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [nameError, setNameError] = React.useState(false);\n  const [usernameError, setUserNameError] = React.useState(false);\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [colleges, setColleges] = React.useState([]);\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [collegeId, setCollegeId] = React.useState(null);\n  const [collegesName, setCollegesName] = React.useState([]);\n  const [signupButtonDisabled, setSignupButtonDisabled] = React.useState(false);\n  const browser = detect();\n  const [supportOpen, setSupportOpen] = React.useState(false);\n\n  React.useEffect(()=>{\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n  },[])\n\n\n  React.useEffect(() => {\n    const loadScriptByURL = (id, url, callback) => {\n      const isScriptExist = document.getElementById(id);\n\n      if (!isScriptExist) {\n        var script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = url;\n        script.id = id;\n        script.onload = function () {\n          if (callback) callback();\n        };\n        document.body.appendChild(script);\n      }\n\n      if (isScriptExist && callback) callback();\n    }\n\n    // load the script by passing the URL\n    loadScriptByURL(\"recaptcha-key\", `https://www.google.com/recaptcha/api.js?render=${process.env.REACT_APP_SITE_KEY}`, function () {\n      window.grecaptcha.ready(function () {\n        window.grecaptcha.execute('6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P', { action: 'submit' }).then(recaptcha_token => {\n          fetch(process.env.REACT_APP_API_URL + '/api/verify_recaptcha', {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              // \"name\": name,\n              // \"email\": email,\n              \"recaptcha_token\": recaptcha_token\n            })\n          }).then(res => {\n            if (res.status === 200) {\n              res.json().then(result => {\n                if (result.success) {\n                  if (result.score < 0.5) {\n                    setSignupButtonDisabled(true)\n                  }\n                }\n              })\n            }\n\n          });\n        });\n      });\n    });\n  }, []);\n\n  //timeout function\n  function timeout(ms, promise) {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        reject(new Error('TIMEOUT'))\n      }, ms)\n\n      promise\n        .then(value => {\n          clearTimeout(timer)\n          resolve(value)\n        })\n        .catch(reason => {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Something went wrong Try Again',\n            type: \"error\",\n            autoHide: 4000\n          });\n          clearTimeout(timer)\n          reject(reason)\n        })\n    })\n  }\n  const handleClose = async (event, reason) => {\n\n    if (message === \"Signedup successfully\") {\n      localStorage.setItem('token', token);\n      history.replace(\"/otpverification\")\n    }\n\n    setState({ ...state, open: false });\n  };\n\n\n  function handleCollege(event, value) {\n    setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        //   props.collegeId(c._id)\n        setCollegeId(c._id);\n      }\n    })\n  }\n\n\n  async function handleSignUp(event) {\n    // grecaptcha.ready(function() {\n    //   grecaptcha.execute('reCAPTCHA_site_key', {action: 'submit'}).then(function(token) {\n    //       // Add your logic to submit to your backend server here.\n    //       console.log(token);\n    //       // fetch()\n    //   });\n    // });\n    event.preventDefault();\n    setLoading(true);\n    const { fullName, email, designation, password, username, terms } = event.target.elements;\n    try {\n      if (terms.checked) {\n        var data = new FormData()\n        const payload = {\n          name: fullName.value,\n          email: email.value,\n          designation: designation.value,\n          college_id: collegeId,\n          password: password.value,\n          username: username.value,\n          type: 'browser',\n          browser_name: browser.name,\n          device_os: browser.os,\n        };\n        data = JSON.stringify(payload);\n        timeout(25000, fetch(process.env.REACT_APP_API_URL + '/api/users/signup', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        })).then((result) => {\n          // console.log(result);\n          if (result.status === 200) {\n            result.json().then((val) => {\n              setToken(val.token);\n              var data2 = new FormData();\n              const payload2 = {\n                email: val.useremail\n              };\n              data2 = JSON.stringify(payload2)\n              // console.log(token);\n              const tok = val.token;\n              fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                headers: {\n                  'Authorization': `Bearer ${tok}`,\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n              }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                  if (res.message === \"success\") {\n                    setState({\n                      open: true,\n                      vertical: 'top',\n                      horizontal: 'center',\n                      message: 'Signedup successfully',\n                      type: \"success\",\n                      autoHide: 300\n                    });\n                  }\n                })\n              })\n            })\n          }\n          else if (result.status === 401) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Email already registered',\n              type: \"error\",\n              autoHide: 3000\n            });\n          }\n          else {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Something went wrong Try Again',\n              type: \"error\",\n              autoHide: 4000\n            });\n          }\n        })\n      }\n\n      else {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: 'Please agree to the terms and conditions',\n          type: \"error\"\n        });\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleUsernameChange(event) {\n    const username = event.target.value;\n    var data = new FormData();\n    const payload = {\n      username: username\n    };\n    data = JSON.stringify(payload);\n    setUserNameError(false);\n    setSignupButtonDisabled(false)\n    fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((result) => {\n      result.json().then(value => {\n        if (value.message === \"user already exists\") {\n          setUserNameError(true);\n          setSignupButtonDisabled(true);\n        }\n      })\n    })\n  }\n\n  const lToken = localStorage.getItem('token');\n  if (lToken) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  const handleSupportButton = () => {\n    setSupportOpen(true);\n  }\n  const handleSupportClose = () => {\n    setSupportOpen(false);\n  }\n\n  // const onLoadRecaptcha = () => {\n\n  // }\n\n  // const verifyCallback = () => {\n\n  // }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        {/* <ReCaptcha\n            // ref={(el) => {setCDemo(el)}}\n            size=\"invisible\"\n            render=\"explicit\"\n            sitekey=\"6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P\"\n            onloadCallback={onLoadRecaptcha}\n            verifyCallback={verifyCallback}\n        /> */}\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fullName\"\n                name=\"fullName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fullName\"\n                label=\"Full Name\"\n                autoFocus\n                inputProps={{ pattern: \"[a-zA-Z ]+\" }}\n                onInvalid={() => { setNameError(true) }}\n                helperText={nameError && \"Name should only contain alphabet and spaces\"}\n                onInput={() => { setNameError(false) }}\n                error={nameError}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"User Name\"\n                onChange={handleUsernameChange}\n                name=\"username\"\n                error={usernameError}\n                helperText={usernameError && \"username already exists\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" fullWidth required>\n                <InputLabel htmlFor=\"designation\">You are</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"You are\"\n                  inputProps={{\n                    name: 'designation',\n                    id: 'designation',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Student\">Student</option>\n                  <option value=\"Faculty\">Faculty</option>\n                  <option value=\"Club/Organisation\">Club/Organisation</option>\n                  <option value=\"Institution\">Institution</option>\n                  <option value=\"Others\">Others</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Autocomplete\n                fullWidth\n                id=\"college\"\n                options={collegesName}\n                getOptionLabel={(option) => option}\n                value={collegeName}\n                onChange={handleCollege}\n                renderInput={(params) => <TextField name=\"college\" variant=\"outlined\" fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                inputProps={{ pattern: \"^.{6,}$\" }}\n                onInvalid={() => { setPasswordError(true) }}\n                helperText={passwordError && \"Password should atleast be 6 characters\"}\n                onInput={() => { setPasswordError(false) }}\n                error={passwordError}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" name=\"terms\" checked disabled />}\n                label={<Typography>By signing up I accept the <Link href='/Privacy_Policy.pdf'>Pivacy Policy and Terms of Service</Link></Typography>}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || signupButtonDisabled}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Sign Up\"}\n          </Button>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\">\n\n            <Grid item>\n              <Link onClick={handleSupportButton} variant=\"body2\">\n                {\"Get Support\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n      <SupportDialog open={supportOpen} handleClose={handleSupportClose}></SupportDialog>\n    </Container>\n  );\n}\n\nexport default withRouter(Signup);\n","import React from \"react\";\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst ForgotPassword = ({ history }) => {\n  const classes = useStyles();\n  // const token = localStorage.getItem('token');\n  const [email, setEmail] = React.useState(null);\n  const [otp, setOtp] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [loading2, setLoading2] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  // const [sendOTPButtonDisabled, setSendOTPButtonDisabled] = React.useState(false);\n\n  // React.useEffect(() => {\n  //   const loadScriptByURL = (id, url, callback) => {\n  //     const isScriptExist = document.getElementById(id);\n\n  //     if (!isScriptExist) {\n  //       var script = document.createElement(\"script\");\n  //       script.type = \"text/javascript\";\n  //       script.src = url;\n  //       script.id = id;\n  //       script.onload = function () {\n  //         if (callback) callback();\n  //       };\n  //       document.body.appendChild(script);\n  //     }\n\n  //     if (isScriptExist && callback) callback();\n  //   }\n\n  //   // load the script by passing the URL\n  //   loadScriptByURL(\"recaptcha-key\", `https://www.google.com/recaptcha/api.js?render=${process.env.REACT_APP_SITE_KEY}`, function () {\n  //     console.log(\"Script loaded!\");\n  //     window.grecaptcha.ready(function () {\n  //       window.grecaptcha.execute('6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P', { action: 'submit' }).then(recaptcha_token => {\n  //         // Add your logic to submit to your backend server here.\n  //         // console.log(recaptcha_token);\n  //         fetch(process.env.REACT_APP_API_URL +'/api/verify_recaptcha', {\n  //           method: 'POST',\n  //           headers: {\n  //             \"Content-Type\": \"application/json\"\n  //           },\n  //           body: JSON.stringify({\n  //             // \"name\": name,\n  //             // \"email\": email,\n  //             \"recaptcha_token\": recaptcha_token\n  //           })\n  //         }).then(res => {\n  //           if(res.status === 200){\n  //             res.json().then(result => {\n  //               // console.log(result)\n  //               if (result.success) {\n  //                 if (result.score < 0.5) {\n  //                   setSendOTPButtonDisabled(true);\n  //                 }\n  //               }\n  //             })\n  //           }\n            \n  //         });\n  //       });\n  //     });\n  //   });\n  // }, []);\n\n\n  async function handlePasswordReset(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n            setLoading(false)\n            // history.push('/resetforgotpassword')\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Enter the OTP sent to your registered email address',\n              type: \"success\",\n              autoHide: 2000\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  async function handleForgotPassword(event) {\n    event.preventDefault();\n    setLoading2(true);\n    // const { email,} = event.target.elements;\n    try {\n      var data2 = new FormData();\n      const payload2 = {\n        email: email,\n        otp: otp,\n        nPassword: password\n      };\n      data2 = JSON.stringify(payload2)\n      fetch(process.env.REACT_APP_API_URL + '/api/users/forgotpassword', {\n        headers: {\n          // 'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: data2\n      }).then((result) => {\n        console.log(result);\n        result.json().then((res) => {\n          if (res.message === \"success\") {\n\n            // history.push('/resetforgotpassword')\n            setLoading2(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Succesful! Login to continue',\n              type: \"success\",\n              autoHide: 300\n            });\n          }\n        })\n\n      })\n\n    } catch (error) {\n      setLoading2(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 3000\n      })\n    }\n  }\n\n\n  function handleClose() {\n    if (message === \"Succesful! Login to continue\") {\n      history.replace(\"/\");\n    }\n    setState({ ...state, open: false });\n  }\n\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter your email to receive OTP\n        </Typography>\n        <form className={classes.form} onSubmit={handlePasswordReset}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}>\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send OTP\"}\n          </Button>\n        </form>\n        <form className={classes.form} onSubmit={handleForgotPassword}>\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"otp\"\n                label=\"OTP\"\n                name=\"otp\"\n                value={otp}\n                onChange={e => setOtp(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"password\"\n                label=\"New Password\"\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading2}\n            className={classes.submit}>\n            {loading2 ? <CircularProgress color=\"primary\" size={24} /> : \"Reset Password\"}\n          </Button>\n\n\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Link href=\"/\" variant=\"body2\">\n              Instead? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n\n      {/* </Grid> */}\n      <Box mt={2}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(ForgotPassword);\n","import React, { useEffect, useState } from \"react\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [token,setToken] = useState(null);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    // function storeUser(user){\n    //   setCurrentUser(user);\n    //   setPending(false)\n    // }\n    // console.log(localStorage.getItem('user'))\n    setCurrentUser(localStorage.getItem('user'));\n    setPending(false);\n\n    // app.auth().onAuthStateChanged((user) => {\n    //   setCurrentUser(user)\n    //   setPending(false)\n    // });\n  }, []);\n  // function add\n\n  if (pending) {\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React from 'react';\nimport Copyright from '../Components/copyright';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OTPver = ({ history }) => {\n    const classes = useStyles();\n    const token = localStorage.getItem(\"token\");\n    // const [token, setToken] = React.useState(\"\");\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const [seconds, setSeconds] = React.useState(30);\n    const [resendEnabled, setresetEnabled] = React.useState(false)\n\n    React.useEffect(() => {\n        if (seconds > 0) {\n            setTimeout(() => setSeconds(seconds - 1), 1000);\n        } else {\n            setresetEnabled(true)\n        }\n        // eslint-disable-next-line\n    }, [seconds]);\n\n    function handleClose() {\n        // console.log(\"message\")\n        if (message === \"Success! redirecting to Ellipse Home\") {\n            history.replace(\"/home\")\n        }\n        setState({ ...state, open: false });\n    }\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    function handleVerification(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { otp } = event.target.elements;\n        try {\n            var data = new FormData();\n            const payload = {\n                otp: otp.value\n            };\n            // data.append(JSON.stringify(payload));\n            data = JSON.stringify(payload);\n\n            fetch(process.env.REACT_APP_API_URL + '/api/users/verifyotp', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n\n            }\n            ).then((result) => {\n                result.json().then(val => {\n                    // console.log(val.message);\n                    if (val.message === \"verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Success! redirecting to Ellipse Home\",\n                            type: 'success',\n                            autoHide: 300\n                        })\n\n                    }\n                    else if (val.message === \"Not verified\") {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Invalid OTP, please check and try again\",\n                            type: 'error',\n                            autoHide: 5000\n                        })\n                    }\n                    else {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Something went wrong try again\",\n                            type: 'error',\n                            autoHide: 5000\n                        })\n                    }\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n\n\n\n    }\n\n\n    function handleResendOTP() {\n        try {\n            var data2 = new FormData();\n            const payload2 = {\n                //   email: value[0].email\n            };\n            data2 = JSON.stringify(payload2)\n            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemailwithauth', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n            }).then((result) => {\n                // console.log(result);\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: \"Password sent succcessfully\",\n                            type: 'success',\n                            autoHide: 300\n                        })\n                    }\n                })\n\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: 'error'\n            })\n        }\n    }\n\n    function handlesigninButton() {\n        history.push('/signin')\n        localStorage.removeItem('token');\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Email Verification\n                </Typography>\n                <form className={classes.form} onSubmit={handleVerification}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"otp\"\n                            label=\"Enter OTP\"\n                            name=\"otp\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                    <Grid container>\n\n                        <Grid item>\n                            <Button disabled={!resendEnabled} onClick={handleResendOTP}>Resend OTP in {seconds}</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button onClick={handlesigninButton}>Signin to Different account</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(OTPver);\n","import React from 'react';\nimport Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter, Redirect } from \"react-router\";\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textArea: {\n        width: theme.spacing(58),\n        margin: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.primary.dark,\n    },\n\n}));\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UserInfo = ({ history }) => {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [currentUser, setCurrentUser] = React.useState(null);\n    const [imageUrl, setImageurl] = React.useState(\"\");\n    const [image, setImage] = React.useState(null);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type,autoHide } = state;\n    // const [colleges,setColleges] = React.useState([]);\n    const handleClose = async (event, reason) => {\n\n        if (message === \"successful\") {\n            const eventId = localStorage.getItem('eventid');\n        if(eventId){\n          history.push(`/event/${eventId}`)\n        }\n        else{\n            history.replace(\"/home\")\n        }\n            \n        }\n\n        setState({ ...state, open: false });\n    };\n    // React.useEffect(()=>{\n    //     fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n    //                 headers: {\n    //                     'Authorization': `Bearer ${token}`,\n    //                     'Content-Type': 'application/json',\n    //                     'Accept': 'application/json'\n    //                 },\n    //                 method: 'GET',\n    //             }).then(response =>{\n    //               // console.log(response);\n    //               response.json().then(value =>{\n    //                 // console.log(value);\n    //                 setColleges(value);\n    //               })\n    //             })\n    //   },[token])\n\n      if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n  \n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            const url = URL.createObjectURL(event.target.files[0]);\n            setImageurl(url);\n        }\n    }\n    async function handleSignUp(event) {\n        event.preventDefault();\n        setLoading(true);\n        const { gender, collegeId, bio } = event.target.elements;\n\n        try {\n            var data = new FormData()\n            const payload = {\n                gender: gender.value,\n                // designation: designation.value,\n                college_id: collegeId.value,\n                bio: bio.value,\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/users/userdetails', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        if (image != null) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL+'/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"successful\",\n                                        type: \"success\",\n                                        autoHide: 300\n                                    })\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"successful\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Welcome\n                </Typography>\n                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                <Badge\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    badgeContent={<label htmlFor=\"contained-button-file\">\n                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <EditIcon></EditIcon>\n                        </IconButton>\n                    </label>}>\n                    <Avatar className={classes.avatar} sizes=\"100\" alt=\"\" src={imageUrl}></Avatar>\n                </Badge>\n\n                <form className={classes.form} onSubmit={handleSignUp}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                            // onChange={handleAboutChange}\n                            // value={props.about}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        {/* <Grid item xs={12}>\n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">You are</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid> */}\n                        {/* <Grid item xs={12}>\n                        \n                            <FormControl variant=\"outlined\" fullWidth required>\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Your College</InputLabel>\n                                <Select\n                                    fullWidth\n                                    native\n                                    label=\"College\"\n                                    inputProps={{\n                                        name: 'collegeId',\n                                        id: 'outlined-age-native-simple',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    {colleges.map((coll,index) =>{\n                                        return <option key={index} value={coll._id}>{coll.name}</option>\n                                    })}\n                                    \n                                </Select>\n                            </FormControl>\n                        </Grid> */}\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Continue\"}\n                    </Button>\n                </form>\n            </div>\n\n            {/* </Grid> */}\n            <Box mt={2}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(UserInfo);\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.5em',\n      height: '0.5em'\n    },\n    '*::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 1px rgba(0,0,0,0.00)'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: '#ad9d9d',\n      outline: '1px solid slategrey'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n    marginBottom: theme.spacing(5)\n\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n    alignItems: 'center',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Gugi',\n    // marginLeft: theme.spacing(1),\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  mobileTitle:{\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n    \n  },\n  titleButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n    textTransform: 'none'\n  },\n  mobileTitleButton: {\n    display: 'none',\n    [theme.breakpoints.down('xs')]: {\n      display: 'inline-block',\n      width: 'fit-content'\n    },\n    margin: theme.spacing(0),\n    padding: theme.spacing(0)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    width: '230px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    borderBottom: 'none',\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '30ch',\n    },\n  },\n  sectionDesktop: {\n    \n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  tabs: {\n    \n    display: 'none',\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginLeft: theme.spacing(15),\n    },\n  },\n  mobiletab: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n  tabPanel: {\n    marginBottom: theme.spacing(3),\n  },\n  flex_section: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    // minHeight: 0\n  },\n  \n  flex_col_scroll: {\n    flexGrow: 1,\n    overflow: 'auto',\n    // minHeight: '100vh'\n  },\n  rpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    margin: theme.spacing(2),\n    // borderRadius: theme.spacing(50)\n  },\n  postButton: {\n    borderRadius: theme.spacing(50)\n  }\n}));\n\nexport default useStyles;","import React from 'react';\n \nconst AuthContext = React.createContext({\n    currentUser: null,\n    setCurrentUser: ()=>{}\n});\n \nexport default AuthContext;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        setTitle(event.share_link)\n    }, [event.share_link])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Share Link\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DialogContent, DialogTitle } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  imageBox:{\n    display: \"flex\",\n        justifyContent: \"center\",\n  },\n  dialog: {\n    // height: '800px',\n    minHeight: '90vh',\n    maxHeight: '90vh',\n},\n  image: {\n    maxWidth: \"100%\",\n  },\n  icons: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    // color: theme.palette.grey[500],\n\n},\ntitle:{\n  backgroundColor: theme.palette.secondary\n}\n}));\n\n\n\n\nfunction ImageDialog(props) {\n  const classes = useStyles();\n  const event = props.event;\n  function handleClose() {\n    props.handleClose();\n\n}\n\n  return (\n      <div>\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: \"transparent\",\n                    boxShadow: 'none',\n                    \n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.title}>{event.name}\n            <div className={classes.icons}>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n            </div>\n            </DialogTitle>\n              <DialogContent>\n              <Box className={classes.imageBox}>\n              <img className={classes.image} src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}  alt=\"profile pic\"></img>\n              </Box>\n                \n              </DialogContent>\n            </Dialog>\n      </div>\n   );\n}\n\nexport default ImageDialog;\n\n","import React from 'react';\nimport { cleanup } from '@testing-library/react';\n\n//Material ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Divider from '@material-ui/core/Divider';\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\n\n//other component imports\nimport ImageDialog from '../Components/ImageDialog';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginTop: theme.spacing(2)\n    },\n    boxItem: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        minWidth: \"20%\"\n    },\n    gridMain: {\n        borderRadius: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        marginTop: theme.spacing(1)\n\n    },\n    gridItem: {\n        padding: theme.spacing(1),\n\n    },\n    divider: {\n        backgroundColor: theme.palette.primary.main,\n        height: \"1px\",\n        margin: theme.spacing(1),\n        opacity: \"0.2\"\n    },\n    overFlowText: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        height: \"100px\"\n    }\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const { children, value, url, index, ...other } = props;\n    const event = props.event;\n    const tags = event.tags;\n\n    const [requirements, setRequirements] = React.useState([])\n    const [timeLabel, setTimeLabel] = React.useState(\"Registration Ends in\");\n    const [adminDetails, setAdminDetails] = React.useState({});\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    const [notRegistered, setNotRegistered] = React.useState(false);\n    const [rulesHeight, setRulesHeight] = React.useState(true);\n\n\n    React.useEffect(() => {\n        if (props.notRegistered) {\n            setNotRegistered(true)\n        }\n        else {\n            setNotRegistered(false)\n        }\n    }, [props])\n\n\n    React.useEffect(() => {\n        if (event.requirements !== undefined) {\n            setRequirements(event.requirements);\n        }\n        if (event._id !== undefined && event.user_id !== undefined) {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_organizer_details?eventId=${event._id}&userId=${event.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        setAdminDetails(value);\n                    })\n                }\n            })\n        }\n    }, [event, token])\n\n    // code for timer\n    const calculateTimeLeft = () => {\n\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let timeLeft = {};\n        if (difference < 0) {\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        if (difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n\n        return timeLeft;\n    };\n\n    const getTimeLabel = () => {\n        var difference = +new Date(event.registration_end_time) - +new Date();\n        let label = \"Registration ends in\"\n        if (difference < 0) {\n            label = \"Starts in\"\n            difference = +new Date(event.start_time) - +new Date();\n        }\n        if (difference < 0) {\n            label = \"Ends in\"\n            difference = +new Date(event.finish_time) - +new Date();\n        }\n        return label;\n    }\n\n    const [timeLeft, setTimeLeft] = React.useState(calculateTimeLeft());\n\n    React.useEffect(() => {\n        const x = setTimeout(() => {\n            setTimeLabel(getTimeLabel());\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n\n        return () => {\n            cleanup();\n            clearTimeout(x);\n        }\n    });\n\n    const timerComponents = [];\n    Object.keys(timeLeft).forEach(interval => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span key={interval}>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n\n    const handleImageDialogClose = () => {\n        setImageDialogOpen(false);\n    }\n    const handleImageDialogOpen = () => {\n        setImageDialogOpen(true);\n    }\n\n    const handleRulesViewMoreButton = () => {\n        setRulesHeight((height) => { return !height })\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Grid container component=\"main\">\n                        <Grid item xs={12} sm={12} md={4} lg={4} >\n                            <img\n                                onClick={handleImageDialogOpen}\n                                style={{ width: '240px', height: '180px' }}\n                                alt=\"event poster\"\n                                src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}></img>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                            <Typography>{event.description} </Typography>\n                            <Typography\n                                style={{ marginTop: \"20px\", marginBottom: '20' }}>\n                                {timeLabel}\n                            </Typography>\n                            <Typography\n                                variant=\"h5\">\n                                {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n                            </Typography>\n                            <div style={{ marginTop: '10px' }}>\n                                <Chip\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.event_type}></Chip>\n                                <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.fee_type}></Chip>\n                                <Chip style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={event.event_mode}></Chip>\n                                {event.isTeamed && <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={<Box display=\"flex\">\n                                        <Box><GroupIcon></GroupIcon></Box>\n                                        <Box\n                                            marginTop={0.7}\n                                            marginLeft={0.5}>\n                                            {\"  \" + event.team_size.min_team_size + \"-\" + event.team_size.max_team_size}\n                                        </Box>\n                                    </Box>}></Chip>}\n                                {!event.isTeamed && <Chip\n                                    style={{ marginLeft: '5px' }}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    label={\n                                        <Box display=\"flex\">\n                                            <Box><PersonIcon></PersonIcon></Box>\n                                            <Box marginTop={0.7}>Individual</Box>\n                                        </Box>}></Chip>}\n                                {tags != null && tags.map(val => {\n                                    return <Chip\n                                        key={val}\n                                        style={{ marginLeft: '5px' }}\n                                        variant=\"outlined\"\n                                        color=\"inherit\"\n                                        label={val}></Chip>\n                                })}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Box>\n                                <Grid container component=\"main\" className={classes.gridMain}>\n                                    <Grid item xs={12} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h4\">About</Typography>\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            <Typography color=\"textSecondary\" variant=\"body1\">\n                                                {\n                                                    event.about\n                                                }\n                                            </Typography>\n                                        </Box>\n                                        <Divider flexItem className={classes.divider}></Divider>\n                                    </Grid>\n                                    {requirements !== null && requirements.length !== 0 && <Grid item xs={12} md={6} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            {requirements !== null && requirements.length !== 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Requirements</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {\n                                                requirements.length !== 0 && requirements.map(val => {\n                                                    return <Chip key={val} variant=\"outlined\" color=\"inherit\" label={val}></Chip>\n                                                })\n                                            }\n                                        </Box>\n                                    </Grid>}\n\n                                    {event.event_mode === \"Offline\" && <Grid item xs={12} md={6} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Offline\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Venue Details</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue}</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Offline\" && <Typography color=\"textSecondary\" variant=\"body2\">{event.venue_college}</Typography>}\n                                        </Box>\n                                    </Grid>}\n                                    {event.fee_type === \"Paid\" && <Grid item xs={12} md={6} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            {event.fee_type === \"Paid\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Fee Details</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {event.fee_type === \"Paid\" && <Typography color=\"textSecondary\" variant=\"body2\">{\"Rs \" + event.fee}</Typography>}\n                                        </Box>\n                                    </Grid>}\n                                    {event.event_mode === \"Online\" && event.platform_details !== null && event.platform_details !== \"\" && <Grid itam xs={12} md={6} className={classes.gridItem}>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Platform Details</Typography>}\n                                        </Box>\n                                        <Box className={classes.boxItem}>\n                                            {event.event_mode === \"Online\" && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"body2\">{event.platform_details}</Typography>}\n                                        </Box>\n                                    </Grid>}\n                                </Grid>\n\n\n                                {event.rounds !== undefined && event.rounds.length > 0 && <Grid container component=\"main\" className={classes.gridMain}>\n                                    <Grid item xs={12}>\n                                        <Box display=\"flex\" justifyContent=\"flex-start\">\n                                            <Box className={classes.boxItem} margin={2}>\n                                                {event.rounds !== undefined && event.rounds.length > 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Rounds Details</Typography>}\n                                            </Box>\n                                            <Box>\n                                                <Divider orientation=\"vertical\"></Divider>\n                                            </Box>\n                                            <Box flexGrow={1}></Box>\n                                            <Box className={classes.boxItem} margin={2}>\n                                                {event.rounds !== undefined && event.rounds.length > 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">\n                                                    {\n                                                        event.rounds.map((val, index) => {\n                                                            return <Typography>{val.title + \" - \" + val.description}</Typography>\n                                                        })\n                                                    }\n                                                </Typography>}\n                                            </Box>\n                                            <Box flexGrow={1}></Box>\n                                        </Box>\n\n                                    </Grid>\n                                </Grid>}\n\n\n                                {event.prizes !== undefined && event.prizes !== null && event.prizes.length > 0 && <Grid container component=\"main\" className={classes.gridMain}>\n                                    <Grid item xs={12}>\n                                        <Box display=\"flex\" justifyContent=\"flex-start\">\n                                            <Box style={{ marginLeft: \"30px\" }}>\n                                                {event.prizes !== undefined && event.prizes.length > 0 && <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Prizes</Typography>}\n                                            </Box>\n\n                                        </Box>\n                                        {event.prizes !== undefined && event.prizes.length > 0 && <Box display=\"flex\" justifyContent=\"center\" flexWrap=\"wrap\" style={{ marginTop: \"20px\", marginBottom: '20' }}>\n                                            {\n                                                event.prizes.map((val, index) => {\n                                                    return <Box padding={1} justifyContent=\"center\" style={{ maxWidth: \"500px\" }}>\n                                                        <Box display=\"flex\" justifyContent=\"center\"><EmojiEventsIcon fontSize=\"large\" color=\"primary\"></EmojiEventsIcon></Box>\n                                                        <Box display=\"flex\" justifyContent=\"center\"><Typography>{val.title}</Typography></Box>\n                                                        <Box display=\"flex\" justifyContent=\"center\"><Typography variant=\"h5\">{val.prize}</Typography></Box>\n                                                        <Box display=\"flex\" justifyContent=\"center\"><Typography color=\"textSecondary\">{val.desc}</Typography></Box>\n                                                    </Box>\n                                                })\n                                            }\n                                        </Box>}\n                                    </Grid>\n                                </Grid>}\n                                <Grid container component=\"main\" className={classes.gridMain} >\n\n\n                                    {event.themes !== undefined && event.themes !== null && event.themes !== \"\" &&\n                                        <Grid item xs={12} md={6} className={classes.gridItem}>\n                                            <Box style={{ marginLeft: \"30px\" }}>\n                                                <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Themes</Typography>\n                                            </Box>\n                                            <div style={{marginTop:\"5px\"}} whiteSpace=\"normal\">\n                                            {event.themes.split(\"\\n\").map((val, index) => {\n                                                if (val === \"\") {\n                                                    return <br></br>\n                                                }\n                                                return <Box style={{ marginLeft: \"45px\" }} whiteSpace=\"normal\">\n                                                    <Typography color=\"textSecondary\" variant=\"body2\" whiteSpace=\"normal\">\n                                                        {val}\n                                                    </Typography>\n                                                </Box>\n                                            })}\n                                            </div>\n                                        </Grid>}\n                                    {event.rules !== undefined && event.rules !== null && event.rules !== \"\" &&\n                                        <Grid item xs={12} md={6} className={classes.gridItem} >\n                                            <Box style={{ marginLeft: \"30px\" }}>\n                                                <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Rules</Typography>\n                                            </Box>\n                                            <div className={rulesHeight && classes.overFlowText} style={{marginTop:\"5px\"}} whiteSpace=\"normal\">\n                                                {event.rules.split(\"\\n\").map((val, index) => {\n                                                    if (val === \"\") {\n                                                        return <br></br>\n                                                    }\n                                                    return <Box style={{ marginLeft: \"45px\" }} whiteSpace=\"normal\">\n                                                        <Typography color=\"textSecondary\" variant=\"body2\" whiteSpace=\"normal\">\n                                                            {val}\n                                                        </Typography>\n                                                    </Box>\n                                                })}\n\n                                            </div>\n                                            <Button onClick={handleRulesViewMoreButton} style={{ marginLeft: \"45px\" }} color=\"primary\">{rulesHeight ? \"View More\" : \"hide\"}</Button>\n\n                                        </Grid>}\n                                </Grid>\n\n                                {!notRegistered && <Box className={classes.boxItem}>\n                                    <Typography style={{ marginTop: \"20px\", marginBottom: '20' }} variant=\"h5\">Organised By</Typography>\n                                </Box>}\n                                {!notRegistered && <Box className={classes.boxItem}>\n                                    <Box className={classes.adminDetails}>\n                                        <Box>\n                                            <Avatar className={classes.avatar} alt={adminDetails.name} src={adminDetails.profile_pic !== null && process.env.REACT_APP_API_URL + `/api/image?id=${adminDetails.profile_pic}`} />\n                                        </Box>\n                                        <Box>\n                                            <Box>\n                                                <Typography variant=\"h5\">{adminDetails.name}</Typography>\n                                            </Box>\n                                            <Box>\n                                                <Typography color=\"textSecondary\" variant=\"body2\">{adminDetails.college_name}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>}\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <ImageDialog\n                        event={event}\n                        open={imageDialogOpen}\n                        handleClose={handleImageDialogClose}>\n                    </ImageDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n\n// This impressive paella is a perfect party dish and a fun meal\n//  to cook together with your guests. Add 1 cup of frozen peas along with \n// the mussels, if you like.","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\n// import TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport TimerIcon from '@material-ui/icons/Timer';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  large: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  tab: {\n    flexGrow: 1,\n    // maxWidth: 800,\n    background: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  paper: {\n    padding: '6px 16px',\n    backgroundColor: theme.palette.secondary.main\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const token = localStorage.getItem('token');\n  const event = props.event;\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Timeline align=\"alternate\">\n            <TimelineItem>\n              {/* <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {regEndDate.toDateString()}{\" \" + regEndDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent> */}\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Registration Ends\n                  </Typography>\n                  <Typography>{regEndDate.toDateString()}{\" \" + regEndDate.toLocaleTimeString()}</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n\n            <TimelineItem>\n              {/* <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {startDate.toDateString()}{\" \" + startDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent> */}\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\" variant=\"outlined\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Starts\n                  </Typography>\n                  <Typography>{startDate.toDateString()}{\" \" + startDate.toLocaleTimeString()}</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            {\n              event.rounds.map((value, index) => {\n                const sDate = new Date(value.start_date);\n                const eDate = new Date(value.end_date);\n                return (\n                  <React.Fragment>\n                    <TimelineItem>\n                      {/* <TimelineOppositeContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {sDate.toDateString()}{\" \" + sDate.toLocaleTimeString()}\n                        </Typography>\n                      </TimelineOppositeContent> */}\n                      <TimelineSeparator>\n                        <TimelineDot color=\"primary\" variant=\"outlined\">\n                          <TimerIcon></TimerIcon>\n                        </TimelineDot>\n                        <TimelineConnector />\n                      </TimelineSeparator>\n\n                      <TimelineContent>\n                        <Paper elevation={3} className={classes.paper}>\n                          <Typography variant=\"h6\" component=\"h1\">\n                            {value.title + \" Starts\"}\n                          </Typography>\n                          <Typography>{sDate.toDateString()}{\" \" + sDate.toLocaleTimeString()}</Typography>\n                        </Paper>\n                      </TimelineContent>\n                    </TimelineItem>\n                    <TimelineItem>\n                      {/* <TimelineOppositeContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {eDate.toDateString()}{\" \" + eDate.toLocaleTimeString()}\n                        </Typography>\n                      </TimelineOppositeContent> */}\n                      <TimelineSeparator>\n                        <TimelineDot color=\"primary\" variant=\"outlined\">\n                          <TimerIcon></TimerIcon>\n                        </TimelineDot>\n                        <TimelineConnector />\n                      </TimelineSeparator>\n\n                      <TimelineContent>\n                        <Paper elevation={3} className={classes.paper}>\n                          <Typography variant=\"h6\" component=\"h1\">\n                            {value.title + \" Ends\"}\n                            \n                          </Typography>\n                          <Typography>{eDate.toDateString()}{\" \" + eDate.toLocaleTimeString()}</Typography>\n                        </Paper>\n                      </TimelineContent>\n                    </TimelineItem>\n                  </React.Fragment>\n                )\n              })\n            }\n            <TimelineItem>\n              {/* <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {endDate.toDateString()}{\" \" + endDate.toLocaleTimeString()}\n                </Typography>\n              </TimelineOppositeContent> */}\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <TimerIcon></TimerIcon>\n                </TimelineDot>\n                <TimelineConnector className={classes.secondaryTail} />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography variant=\"h6\" component=\"h1\">\n                    Ends\n                  </Typography>\n                  <Typography>{endDate.toDateString()}{\" \" + endDate.toLocaleTimeString()}</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n          </Timeline>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if(event.registered){\n          setAnnouncements(value);\n        }\n        else{\n          value.forEach(ann => {\n            if(ann.visible_all){\n              setAnnouncements((announcements)=>[...announcements,ann])\n            }\n          });\n        }\n        \n      })\n    })\n  }, [token, event])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n        {\n                    announcements.length === 0 && <Typography>No Announcements</Typography>\n                }\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        position: 'absolute',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    open: {\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(34),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    close: {\n        // width: '85%',\n        position: 'fixed',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    const [cl, setCl] = React.useState(classes.bottomBar);\n    React.useEffect(() => {\n        if (props.open !== undefined) {\n            setCl(clsx({\n                [classes.open]: props.open,\n                [classes.close]: !props.open,\n            }))\n        }\n        // eslint-disable-next-line\n    }, [props.open])\n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        // console.log(newmessage);\n        if (newmessage.length > 1) {\n            // console.log(newmessage.length);\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={cl} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\n \nconst WebSocketContext = React.createContext({\n    webSocketContext: null,\n    setWebSocketContext: ()=>{}\n});\n \nexport default WebSocketContext;","import React from 'react';\n \nconst WebSocketDataContext = React.createContext({\n    eventChatMessages: null,\n    setEventChatMessages: ()=>{},\n    teamChatMessages: [],\n    setTeamChatMessages: ()=>{},\n    teamUpdateStatus: [],\n    setTeamUpdateStatus: ()=>{},\n    deletedEventChatMessages: [],\n    setDeletedEventChatMessages: ()=>{},\n    deletedTeamChatMessages: [],\n    setDeletedTeamChatMessages: ()=>{}\n\n});\n \nexport default WebSocketDataContext;","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import DeleteIcon from '@material-ui/icons/Delete';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    React.useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            <Box display=\"flex\">\n                <Box flexGrow={1} paddingTop={1} paddingRight={1}>\n                    <Divider></Divider>\n                </Box>\n                <Typography variant=\"body2\">{props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}</Typography>\n                <Box flexGrow={1} paddingTop={1} paddingLeft={1}>\n                    <Divider></Divider>\n                </Box>\n            </Box>\n\n            \n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{message.user_name + \"   \"+userType}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box>\n                            {/* <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton> */}\n                            {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                                <DeleteOutlinedIcon style={{ color: '#aaaaaa' }}></DeleteOutlinedIcon>\n                            </IconButton>}\n                        </Box>\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                            {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                        </Typography>\n                    </Box>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    React.useEffect(() => {\n        if (props.adminId === message.user_id) {\n            setUserType(' (Admin)')\n        }\n    }, [props.adminId, message])\n\n    return (\n        <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n            <Box className={classes.root5}>\n                <Avatar alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n            </Box>\n            <Box className={classes.root2} whiteSpace=\"normal\">\n                <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                    <Box flexGrow={1} className={classes.message}>\n                        <Box>\n                            <Typography variant=\"body1\">{message.user_name + \"   \"+userType}</Typography>\n                        </Box>\n                        <Box style={{ marginLeft: \"7px\" }}>\n                            <Typography component=\"span\"\n                                variant=\"body2\"\n                                style={{ fontSize: \"0.9em\" }}\n                                color=\"textSecondary\">\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <Box>\n                        {/* <IconButton  style={{ padding: '0px', margin: '0px' }}>\n                            <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                        </IconButton> */}\n                        {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                        <DeleteOutlinedIcon style={{ color: '#aaaaaa' }}></DeleteOutlinedIcon>\n                        </IconButton>}\n                    </Box>\n                </Box>\n                <Box whiteSpace=\"normal\">\n                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                        <Linkify\n                            componentDecorator={(decoratedHref, decoratedText, key) => (\n                                <a target=\"blank\" style={{ color: 'red' }} href={decoratedHref} key={key}>\n                                    {decoratedText}\n                                </a>\n                            )}\n                        >{message.message}</Linkify>\n                        {/* <Linkify properties={{ target: '_blank', style: { color: 'red', fontWeight: 'bold' } }}>{message.message}</Linkify> */}\n                    </Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog(props) {\n\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete this message?\"}</DialogTitle>\n        {/* <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent> */}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={props.handleDeleteConfirmation(props.message)} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n// import ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Avatar from '@material-ui/core/Avatar';\n// import { List } from '@material-ui/core';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Dialog from '@material-ui/core/Dialog';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageDeleteDialog from './MessageDeleteDialog';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    // const [showOptions, setShowOptiona] = React.useState(\"\");\n    const classes = useStyles();\n    var counterDate = null;\n    // const [webSocket, setWebSocket] = React.useState(null);\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { eventChatMessages } = React.useContext(WebSocketDataContext);\n    const { setEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedEventChatMessages, setDeletedEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"join_event_room\",\n                event_id: event._id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n    }, [webSocketContext, currentUser, event])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        eventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            //         // console.log(mes);\n            if (mes.event_id === event._id) {\n                // console.log(cMes);\n                setChatMessages(chatMessages => [...chatMessages, cMes]);\n                setEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        });\n        // eslint-disable-next-line\n    }, [eventChatMessages, event])\n\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                // webConnect();\n                setLoading(false);\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_event_message\",\n                event_id: event._id,\n                msg: {\n                    'id': currentUser.user_id + Date.now(),\n                    'user_id': currentUser.user_id,\n                    'user_name': currentUser.name,\n                    'user_pic': currentUser.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    React.useEffect(() => {\n        deletedEventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.event_id === event._id) {\n                setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                setDeletedEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        })\n\n        // eslint-disable-next-line\n    }, [deletedEventChatMessages])\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(mes);\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        webSocketContext.send(JSON.stringify({\n            action: \"delete_event_chat_message\",\n            event_id: event._id,\n            msg: mes\n        }));\n        setChatMessages(chatMessages.filter(m => { return m !== mes }))\n\n        setOpenDeleteDialog(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    return (\n                                        <MessageBox1 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox1>\n                                    );\n                                }\n                                return (\n                                    <MessageBox2 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div>\n                            <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        </div>\n                    </Box>\n                    <div style={{ float: \"left\", clear: \"both\", marginBottom: '60px', }}\n                        ref={(el) => { setReferenece(el) }}>\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n                </div>\n            )}\n        </div>\n    );\n}\n\n\n// if (messageDate.toDateString() !== counterDate) {\n//     counterDate = messageDate.toDateString();\n//     if (value.user_id === currentUser.user_id) {\n//         return (<React.Fragment key={index}>\n\n//             <Box m={1} p={1} key={index} position=\"sticky\" className={classes.root6}>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n\n//             <Box m={1} p={1} key={index + 1} className={classes.root3}>\n\n//                 <Box className={classes.root2} whiteSpace=\"normal\" onClick={() => setDialogOpen(false)} >\n//                     <ChatMessage adminId={event.user_id} message={value} ></ChatMessage>\n//                 </Box>\n//                 <Box className={classes.root5}>\n//                     <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//                 </Box>\n//             </Box></React.Fragment>);\n\n//     }\n//     else {\n//         return (<React.Fragment>\n\n\n//             <Box m={1} p={1} key={index} className={classes.root6}>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n\n\n//             <Box m={1} key={index} className={classes.root}>\n//                 <Box className={classes.root4}>\n//                     <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//                 </Box>\n//                 <Box className={classes.root2} whiteSpace=\"normal\" >\n//                     <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//                 </Box>\n//             </Box></React.Fragment>);\n//     }\n\n\n// }\n\n// if (value.user_id === currentUser.user_id) {\n//     return (<Box m={1} p={1} key={index} className={classes.root3}>\n\n//         <Box className={classes.root2} onClick={() => setDialogOpen(false)} whiteSpace=\"normal\">\n//             <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//         </Box>\n//         <Box className={classes.root5}>\n//             <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//     </Box>);\n\n// }\n// else {\n//     return (<Box m={1} key={index} className={classes.root}>\n//         <Box className={classes.root4}>\n//             <Avatar alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//         <Box className={classes.root2} whiteSpace=\"normal\">\n//             <ChatMessage adminId={event.user_id} message={value}></ChatMessage>\n//         </Box>\n//     </Box>);\n// }\n\n\n// const webConnect = () => {\n    //     const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n    //     ws.onopen = () => {\n    //         // console.log(\"connected\")\n    //         setWebSocket(ws);\n    //         ws.send(JSON.stringify({\n    //             action: \"join_event_room\",\n    //             event_id: event._id,\n    //             msg: {\n    //                 'user_id': currentUser.user_id,\n    //             }\n    //         }));\n    //         ws.onmessage = (message) => {\n    //             const mes = JSON.parse(message.data);\n    //             const cMes = mes.msg;\n    //             // console.log(mes);\n    //             if (mes.event_id === event._id) {\n    //                 // console.log(cMes);\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n    //         setLoading(false)\n    //     }\n    //     ws.onclose = () => {\n\n    //         check();\n    //         // console.log(\"closed\");\n    //     }\n    // }\n\n       // const check = () => {\n    //     if (!webSocket || webSocket.readyState === WebSocket.readyState) {\n    //         // console.log(\"checking\");\n    //         webConnect();\n    //     }\n    // }","import React from 'react';\n\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport EventShareDialog from './EventShareDialog';\nimport AboutEventPanel from '../Components/AboutEventPanel';\nimport EventsTimeLinePanel from '../Components/EventTimeLinePanel';\nimport EvenstAnnouncementsPanel from '../Components/EventsAnnouncementsPanel';\nimport ChatPanel from '../Components/EventsChatPanel';\n// import EventsTeamPanel from '../Components/EventsTeamPanel';\n// import EventSubmissionPanel from '../Components/EventSubmissionPanel';\nimport { Divider, Typography } from '@material-ui/core';\nimport AuthContext from '../AuthContext';\n// import VerticalTabBar from './VerticalTabBar';\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n        },\n        // color: theme.palette.grey[500],\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    },\n    mobileHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    },\n    desktopHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    }\n}));\n\nfunction EventsDialog(props) {\n    const event = props.event;\n    const t = localStorage.getItem('theme');\n    const [value, setValue] = React.useState(0);\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const theme = useTheme();\n    // const token = localStorage.getItem('token');\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n    const [chatAcess, setChatAcess] = React.useState(false);\n    // const [teamAccess, setTeamAccess] = React.useState(false);\n    // const [adminAccess, setAdminAccess] = React.useState(false);\n    const [subIndexValue, setSubIndexValue] = React.useState(0);\n    React.useEffect(() => {\n        // console.log(event.registered);\n        if (event.registered || event.reg_mode !== \"form\") {\n            setChatAcess(true);\n            // setTeamAccess(true);\n        } else if (event.user_id === currentUser.user_id) {\n            setChatAcess(true);\n            // setAdminAccess(true);\n        }\n        else {\n            setChatAcess(false)\n        }\n        if (props.openTeams) {\n            setValue(4);\n            setSubIndexValue(1);\n        }\n    }, [event, currentUser, props.openTeams])\n\n    // console.log(chatAcess);\n    const handleSubIndexChange = (event, newValue) => {\n        setSubIndexValue(newValue);\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleClose() {\n        props.handleClose();\n\n    }\n\n    function handleRegClick() {\n        props.handleReg(event);\n\n    }\n\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                <Box className={classes.mobileHead} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                    {/* <Box display=\"flex\" justifyContent=\"flex-start\">\n                        {event.name}\n                    </Box> */}\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                            <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon fontSize=\"large\" />\n                        </IconButton>\n                    </Box>\n                </Box>\n                {event.name}\n                {/* <Typography className={classes.mobileHead} style={{}} variant=\"h6\">{event.name}</Typography> */}\n\n                <div className={classes.icons}>\n                    {/* <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                        <MailIcon></MailIcon>\n                    </IconButton> */}\n                    <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n\n                <div className={classes.root}>\n                    <Paper className={classes.root2}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"About\" {...a11yProps(0)} />\n                            <Tab label=\"Schedule\" {...a11yProps(1)} />\n                            <Tab label=\"Announcements\" {...a11yProps(2)} />\n                            <Tab label=\"Chat\" {...a11yProps(3)} />\n                            {/* {!event.isTeamed && <Tab label=\"Submission\" {...a11yProps(4)}></Tab>} */}\n                            {/* {event.isTeamed && <Tab label=\"Participation\" {...a11yProps(4)}></Tab>} */}\n                            {/* <Tab label=\"Submission\"></Tab> */}\n                        </Tabs>\n                    </Paper>\n                    <Divider></Divider>\n                    {event.isTeamed && value === 4 && <Paper className={classes.root2}>\n                        <Tabs\n                            // style={{backgroundColor: \"#00bdaa\"}}\n                            value={subIndexValue}\n                            onChange={handleSubIndexChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"Submissions\" />\n                            <Tab label=\"Your Team\" />\n                            <Tab label=\"Team Chat\" />\n                            {/* <Tab label=\"Create Team\" />\n                            <Tab label=\"Join Team\" /> */}\n                        </Tabs>\n                    </Paper>}\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent} dividers={true} >\n                <EventShareDialog\n                    event={event}\n                    open={shareDialogOpen}\n                    handleClose={handleShareClose}></EventShareDialog>\n                <AboutEventPanel\n                    value={value}\n                    index={0}\n                    event={props.event}></AboutEventPanel>\n                {/* {value === 2 && <VerticalTabBar value={value} index={1} subIndexValue={subIndexValue}  event={props.event}></VerticalTabBar>} */}\n                <EventsTimeLinePanel value={value} index={1} event={props.event}></EventsTimeLinePanel>\n                <EvenstAnnouncementsPanel value={value} index={2} event={props.event}></EvenstAnnouncementsPanel>\n                {value === 3 && chatAcess && <ChatPanel value={value} index={3} event={props.event}></ChatPanel>}\n                {value === 3 && !chatAcess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>}\n                {/* {teamAccess && event.isTeamed && !adminAccess && <EventsTeamPanel subIndexValue={subIndexValue} value={value} index={4} event={props.event}></EventsTeamPanel>}\n                {chatAcess && value === 4 && !event.isTeamed && !adminAccess && <EventSubmissionPanel individual={true} event={props.event}></EventSubmissionPanel>} */}\n                {/* {value === 4 && !teamAccess && <Typography align=\"center\" variant=\"h5\" >Register for the event to continue</Typography>} */}\n            </DialogContent>\n            <DialogActions className={classes.action}>\n                <Box className={classes.bottomBar} display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\" hidden={value !== 3}>\n                </Box>\n                <div\n                    role=\"tabpanel\"\n                    hidden={value === 3}>\n                    {value !== 3 && (\n                        <div className={classes.buttonDiv}>\n                            {\n                                event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                                    {event.registered ? \"Registered\" : \"Register\"}\n                                </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                                    </Button>\n                            }\n                        </div>\n                    )}\n\n                </div>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default EventsDialog;","import React from 'react';\n \nconst EventsContext = React.createContext({\n    allEvents: null,\n    setAllEvents: ()=>{}\n});\n \nexport default EventsContext;","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// import CardContent from '@material-ui/core/CardContent';\n// import Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n// import { Redirect } from 'react-router';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root3: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2)\n    },\n    root5:{\n        display: \"flex\",\n            justifyContent: \"flex-end\",\n      },\n      secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n      },\n      icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n    },\n      \n}));\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [notificationms,setNotifications] = React.useState([]);\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+'/api/get_notifications_desc', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setNotifications(value);\n                })\n            }\n        })\n    }, [token])\n\n    const handleNotificationClick = (n) => () =>{\n        props.handleClick(n.event_id)\n    }\n\n    function handleClose() {\n        props.handleClose();\n    }\n\n\n    return (\n        <div>\n            <Dialog scroll=\"paper\" open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" classes={{ paper: classes.dialog }}>\n                <DialogTitle id=\"form-dialog-title\">Notifications</DialogTitle>\n                <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                    </div>\n                <Divider></Divider>\n                <DialogContent>\n                {\n                    notificationms.map((n,index)=>{\n                        const date = new Date(n.time)\n                       return <Box onClick={handleNotificationClick(n)} m={1} p={1} className={classes.root3}>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Typography className={classes.title}>\n                                {n.title}\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                {n.description}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.root5}>\n                            <Typography variant=\"body2\" >\n                                {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    })\n                }  \n                {\n                    notificationms.length === 0 && <Typography>No Notifications</Typography>\n                }  \n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/logo.cc1ac587.svg\";","import React, { useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport useStyles from '../Themes/MainHomeStyles';\n\n//materialui imports\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EventIcon from '@material-ui/icons/Event';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport AuthContext from '../AuthContext';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\nimport NotificationsDialog from '../Components/NotficationsDialog';\nimport Logo from '../Components/Images/logo.svg';\n\n\n\n\n\n\nconst NavigationBar = function ({ history }) {\n\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const t = localStorage.getItem('theme');\n  const [darkThemeSelected, setDarkThemeSelected] = React.useState(t === 'light' ? false : true);\n  // const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n  // const [allEvents, setAllEvents] = React.useState([]);\n  const [searchedEvent, setSearchedEvent] = React.useState([]);\n  const [notificationsCount, setNotificationCount] = React.useState(0);\n\n  const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  // const [calenderValue, setCalenderValue] = useState(new Date());\n  // const [loading, setLoading] = React.useState(false);\n  // const eventypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [open, setOpen] = React.useState(false);\n  const [notificationsOpen, setNotificationsOpen] = React.useState(false);\n  const { allEvents } = React.useContext(EventsContext);\n  const { currentUser } = React.useContext(AuthContext);\n  useEffect(() => {\n    if (localStorage.getItem('tabIndex') != null) {\n      const tabIndex = parseInt(localStorage.getItem('tabIndex'));\n      if (tabIndex != null) {\n        setValue(tabIndex);\n      }\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/get_unseen_notifications_count', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        // console.log(data);\n        setNotificationCount(data);\n      })\n    })\n  }, [token])\n\n\n  // function handleMorebuttonClick(event) {\n  //   event.preventDefault();\n  //   // history.push(\"/event/1\")\n  // }\n  function handleSearchChange(event, value) {\n    if (value) {\n      if (value.registered || value.user_id === currentUser.user_id) {\n        history.push(`/event/${value._id}`)\n      } else {\n        setSearchedEvent(value);\n        setOpen(true);\n      }\n      // console.log(value);\n\n    }\n  }\n\n  const handleNotificationCardClick = (value) => {\n    if (value) {\n      allEvents.forEach(event => {\n        if (event._id === value) {\n          setSearchedEvent(event);\n          setOpen(true);\n        }\n      });\n    }\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('tabIndex', newValue);\n  };\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    // setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n\n  if (!token) {\n    history.replace('/');\n  }\n\n  function handleThemeChange(event) {\n    // console.log(event.target.checked);\n    setDarkThemeSelected(event.target.checked);\n    if (event.target.checked) {\n      localStorage.setItem('theme', 'dark');\n      window.location.reload(false);\n    }\n    else {\n      localStorage.setItem('theme', 'light');\n      window.location.reload(false);\n    }\n  }\n\n\n\n  function handleSignout(event) {\n\n    fetch(process.env.REACT_APP_API_URL + '/api/users/logout', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then((result) => {\n      result.json().then((data) => {\n        if (data.message === \"success\") {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tabIndex');\n          history.replace(\"/\")\n        }\n      })\n    })\n\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/* <MenuItem onClick={handleMenuClose}>Profile</MenuItem> */}\n      {/* <MenuItem onClick={handleMenuClose}>My account</MenuItem> */}\n      <MenuItem> Dark Theme <Switch\n        checked={darkThemeSelected}\n        onChange={handleThemeChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      /></MenuItem>\n      <MenuItem onClick={handleSignout}>Log Out</MenuItem>\n\n    </Menu>\n  );\n\n  function handleeventClick(event) {\n    event.preventDefault();\n    history.push(\"/events\")\n    // localStorage.setItem('tabIndex',1);\n  }\n  function handleHomeClick() {\n    history.push(\"/home\")\n    // localStorage.setItem('tabIndex',2);\n  }\n  function handleProfileClick() {\n    history.push(\"/profile\")\n  }\n  // function handleExploreClick() {\n  //   history.push(\"/yourevents\")\n  // }\n  function handleChatClick() {\n    history.push('/chat')\n  }\n  const handleClose = () => {\n    setOpen(false);\n    setNotificationsOpen(false);\n  };\n\n  function handleRegistrationButton(event) {\n    setOpen(false);\n    // setSelectedEvent(event);\n    history.push('/event/register/' + event._id);\n  }\n\n  function handleNotificationClick() {\n    fetch(process.env.REACT_APP_API_URL + '/api/update_notification_status', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then((result) => {\n      result.json().then((data) => {\n        setNotificationCount(0);\n      })\n    })\n    setNotificationsOpen(true);\n  }\n  function handleTitleButtonClick() {\n    localStorage.setItem('tabIndex', 0)\n    setValue(0)\n    history.push('/home')\n  }\n\n  return (\n    <div className={classes.grow}>\n      <React.Fragment>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Toolbar>\n            <img src={Logo} alt=\"logo\" onClick={handleTitleButtonClick} className={classes.mobileTitle}></img>\n            <Button className={classes.titleButton} onClick={handleTitleButtonClick}>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Ellipse\n              </Typography>\n            </Button>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <Autocomplete\n                freeSolo\n                id=\"search\"\n                placeholder=\"search..\"\n                options={allEvents}\n                getOptionLabel={(option) => option.name}\n                onChange={handleSearchChange}\n                renderInput={(params) => <TextField {...params} placeholder=\"search..\"\n                  className={classes.inputInput} />}\n              />\n            </div>\n            <div className={classes.tabs}>\n              <Paper square className={classes.root} elevation={0}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  variant=\"fullWidth\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  aria-label=\"icon\"\n                >\n                  <Tooltip title=\"Home\"><Tab onClick={handleHomeClick} icon={<HomeIcon />} aria-label=\"home\" /></Tooltip>\n                  <Tooltip title=\"Calender View\"><Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" /></Tooltip>\n                  <Tooltip title=\"Chat\"><Tab onClick={handleChatClick} icon={<ChatOutlinedIcon />} aria-label=\"favorite\" /></Tooltip>\n                  {/* <Tab onClick={handleExploreClick} icon={<ExploreIcon />} aria-label=\"person\" /> */}\n                  <Tooltip title=\"Profile\"><Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" /></Tooltip>\n                </Tabs>\n              </Paper>\n            </div>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Tooltip title=\"Notifications\"><IconButton aria-label=\"notifications\" color=\"inherit\" onClick={handleNotificationClick}>\n                <Badge badgeContent={notificationsCount} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton></Tooltip>\n              <Tooltip title=\"Settings\"><IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\">\n                <SettingsIcon></SettingsIcon>\n              </IconButton></Tooltip>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <div className={classes.mobiletab}>\n\n            <Paper square className={classes.root} position=\"sticky\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              // aria-label=\"icon tabs example\"\n              >\n                <Tooltip title=\"Notifications\"><Tab onClick={handleHomeClick} icon={< HomeIcon />} aria-label=\"home\" /></Tooltip>\n                <Tooltip title=\"Notifications\"><Tab onClick={handleeventClick} icon={<EventIcon />} aria-label=\"event\" /></Tooltip>\n                {/* <Tab onClick={handleChatClick} icon={<TelegramIcon />} aria-label=\"messages\" /> */}\n                <Tooltip title=\"Notifications\"><Tab onClick={handleChatClick} icon={<ChatOutlinedIcon></ChatOutlinedIcon>} aria-label=\"favorite\" /></Tooltip>\n                <Tooltip title=\"Notifications\"><Tab onClick={handleProfileClick} icon={<PersonPinIcon />} aria-label=\"person\" /></Tooltip>\n              </Tabs>\n            </Paper>\n          </div>\n        </AppBar>\n        <div>\n          {open && <EventsDialog\n            open={open}\n            event={searchedEvent}\n            handleReg={handleRegistrationButton}\n            handleClose={handleClose}>\n          </EventsDialog>}\n          <NotificationsDialog open={notificationsOpen} handleClick={handleNotificationCardClick} handleClose={handleClose}></NotificationsDialog>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default withRouter(NavigationBar);\n\n","import React from 'react';\n \nconst ActiveEventsContext = React.createContext({\n    activeEvents: null,\n    setActiveEvents: ()=>{},\n    contextLoading: false,\n    setContextLoading: ()=>{}\n});\n \nexport default ActiveEventsContext;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\n\n//Material Imports\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//Components imports\nimport NavigationBar from './NavigationBar';\nimport EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\n// import dot from 'dote'\n// import {detect}  from 'detect-browser';\n// import OS from 'os';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    root: {\n        background: 'white',\n        position: 'sticky',\n        top: 0,\n        bottom: 0,\n        zIndex: 5,\n    },\n}));\n\nfunction Layout(props) {\n\n\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [allEvents, setAllEvents] = React.useState([]);\n    const [activeEvents, setActiveEvents] = React.useState([]);\n    const [contextLoading,setContextLoading] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [open, setOpen] = React.useState(true);\n    const [authorized, setAuthorized] = React.useState(true);\n    const [userDetailsDone, setUserDetailsDone] = React.useState(true);\n    const [webSocketContext, setWebSocketContext] = React.useState(null);\n    const [eventChatMessages, setEventChatMessages] = React.useState([]);\n    const [teamChatMessages, setTeamChatMessages] = React.useState([]);\n    const [teamUpdateStatus,setTeamUpdateStatus] = React.useState([]);\n    const [deletedEventChatMessages,setDeletedEventChatMessages] = React.useState([]);\n    const [deletedTeamChatMessages,setDeletedTeamChatMessages] = React.useState([]);\n\n    const value = { currentUser, setCurrentUser };\n    const allEventsValue = { allEvents, setAllEvents };\n    const activeEventsValue = { activeEvents, setActiveEvents,contextLoading,setContextLoading };\n    const webSocketValue = { webSocketContext, setWebSocketContext };\n    const webSocketDataContextValue = { \n        eventChatMessages, setEventChatMessages, \n        teamChatMessages, setTeamChatMessages, \n        teamUpdateStatus, setTeamUpdateStatus, \n        deletedEventChatMessages, setDeletedEventChatMessages, \n        deletedTeamChatMessages, setDeletedTeamChatMessages };\n\n    const webConnect = () => {\n        const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n        ws.onopen = () => {\n            setWebSocketContext(ws);\n        }\n        ws.onmessage = (message) => {\n            const mes = JSON.parse(message.data);\n            if(mes.action === \"receive_event_chat_message\"){\n                setEventChatMessages(chatMessages => [...chatMessages, mes]);\n            }\n            else if(mes.action === \"receive_team_message\"){\n                setTeamChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"receive_team_update_message\"){\n                setTeamUpdateStatus(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"delete_event_chat_message\"){\n                setDeletedEventChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n            else if(mes.action === \"delete_team_chat_message\"){\n                setDeletedTeamChatMessages(chatMessages=>[...chatMessages, mes]);\n            }\n        }\n        ws.onclose = () => {\n            check();\n        }\n    }\n\n    const check = () => {\n        if (!webSocketContext || webSocketContext.readyState === WebSocket.readyState) {\n            webConnect();\n        }\n    }\n\n    React.useEffect(() => {\n        setContextLoading(true);\n        webConnect()\n        fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    if (value[0].verified === false) {\n                        try {\n                            var data2 = new FormData();\n                            const payload2 = {\n                                email: value[0].email\n                            };\n                            data2 = JSON.stringify(payload2)\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                    'Content-Type': 'application/json'\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then((result) => {\n                                if(result.status === 200){\n                                    result.json().then((res) => {\n                                        if (res.message === \"success\") {\n                                            setOpen(false);\n                                            props.history.push(\"/otpverification\")\n                                        }\n                                    })\n                                }\n                            })\n                        } catch (error) {\n\n                        }\n\n                    }\n                    else if (value[0].college_name === null) {\n                        setOpen(false);\n                        props.history.push(\"/userinfo\")\n                    }\n                    else {\n                        setUserDetailsDone(true);\n                        setCurrentUser(value[0]);\n                    }\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n            }\n        })\n        fetch(process.env.REACT_APP_API_URL + '/api/events', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    // console.log(value)\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setAllEvents(value);\n                    setActiveEvents(value.filter(e => {\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }));\n                    setContextLoading(false);\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                setAuthorized(false);\n                setContextLoading(false);\n            }\n            else{\n                setContextLoading(false);\n            }\n\n        })\n        // eslint-disable-next-line\n    }, [token])\n\n    if (!token) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    if (!authorized) {\n        return <Redirect to=\"/\"></Redirect>\n    }\n\n    if (!userDetailsDone) {\n        if (currentUser.verified) {\n            return <Redirect to=\"/userinfo\"></Redirect>\n        } else {\n            try {\n                var data2 = new FormData();\n                const payload2 = {\n                    email: currentUser.email\n                };\n                data2 = JSON.stringify(payload2)\n                fetch(process.env.REACT_APP_API_URL + '/api/users/sendverificationemail', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data2\n                }).then((result) => {\n                    result.json().then((res) => {\n                        if (res.message === \"success\") {\n                            return <Redirect to=\"/otpverification\"></Redirect>\n                        }\n                    })\n\n                })\n            } catch (error) {\n\n            }\n\n        }\n    }\n\n\n    return (\n        <AuthContext.Provider value={value}>\n            <WebSocketContext.Provider value={webSocketValue}>\n                <WebSocketDataContext.Provider value={webSocketDataContextValue}>\n                    <EventsContext.Provider value={allEventsValue}>\n                        <ActiveEventsContext.Provider value={activeEventsValue}>\n                            {\n                                currentUser != null && <div>\n                                    <Paper className={classes.root}>\n                                        <NavigationBar></NavigationBar>\n                                    </Paper>\n                                    <div>\n                                        {props.children}\n                                    </div>\n                                </div>\n                            }\n                            {\n                                currentUser == null && <Backdrop className={classes.backdrop} open={open}>\n                                    <CircularProgress color=\"inherit\" />\n                                </Backdrop>\n\n                            }\n                        </ActiveEventsContext.Provider>\n                    </EventsContext.Provider>\n                </WebSocketDataContext.Provider>\n            </WebSocketContext.Provider>\n        </AuthContext.Provider>\n\n\n    );\n}\nexport default withRouter(Layout);\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n// import { Typography } from '@material-ui/core';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport '../Themes/main.scss'\nimport EventsDialog from '../Components/EventsDialog';\n// import EventsContext from '../EventsContext';\nimport AuthContext from '../AuthContext';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nfunction CalenderPanel({ history }) {\n    localStorage.setItem('tabIndex', 1)\n    // const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    const classes = useStyles();\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [events, setEvents] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const [registeredEvents, setRegisteredEvents] = React.useState([]);\n    // const [image, setImage] = React.useState(null);\n    const { activeEvents } = React.useContext(ActiveEventsContext);\n\n    useEffect(() => {\n        activeEvents.forEach(y => {\n            // console.log(y.start_time);\n            setEvents(events =>\n                [...events, { id: JSON.stringify(y), title: y.name, start: y.start_time, end: y.finish_time }]\n            )\n        })\n        setRegisteredEvents(activeEvents.filter((value) => value.registered === true))\n\n    }, [activeEvents])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        if (event.registered || event.user_id === currentUser.user_id) {\n            history.push(`/event/${event._id}`)\n        } else {\n            setSelectedEvent(event);\n            // setSelectedImage(image);\n            setOpen(true);\n        }\n\n    }\n\n    function handleRegistrationButton(event) {\n        \n        setOpen(false);\n        // setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n\n    function handleEventClick(info) {\n        if (JSON.parse(info.event.id).registered || JSON.parse(info.event.id).user_id === currentUser.user_id) {\n            history.push(`/event/${JSON.parse(info.event.id)._id}`)\n        } else {\n            setSelectedEvent(JSON.parse(info.event.id));\n            setOpen(true);\n        }\n    }\n\n    return (\n        <div>\n            {/* {value === index && ( */}\n            <div className={classes.root}>\n                <Grid container component=\"main\" >\n\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                        {/* <Typography index={0}>Filters</Typography> */}\n                        {/* <Calendar onChange={setCalenderValue} value={calenderValue} ></Calendar> */}\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8} >\n                        <FullCalendar\n                            eventBackgroundColor=\"#1C1C1E\"\n                            eventBorderColor=\"#00bdaa\"\n                            events={events}\n                            eventClick={handleEventClick}\n                            defaultView='dayGridMonth' plugins={[dayGridPlugin]} backgroundColor=\"black\"\n                            buttonIcons={false}></FullCalendar>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={false} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                        </Button>\n                                <List className={classes.sideList}>\n                                    <Typography variant=\"body2\">Registered Events</Typography>\n                                    {\n                                        registeredEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    {open && <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        handleReg={handleRegistrationButton}\n                    ></EventsDialog>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CalenderPanel;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TodayIcon from '@material-ui/icons/Today';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(10),\n        zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        // top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n            // top: theme.spacing(20)\n        },\n\n    },\n    root2: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        borderRadius: theme.spacing(2)\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50),\n        backgroundColor: theme.palette.primary.main\n    },\n\n}));\n\nfunction SortLeftPanel(props) {\n    const classes = useStyles();\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const { currentUser } = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper elevation=\"0\" className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        // defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton><TodayIcon></TodayIcon></IconButton>\n\n                                </InputAdornment>\n                            )\n                        }}\n\n                    // KeyboardButtonProps={{\n                    //     'aria-label': 'change date',\n                    // }}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        variant=\"dialog\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        // defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton><TodayIcon></TodayIcon></IconButton>\n\n                                </InputAdornment>\n                            )\n                        }}\n                    // KeyboardButtonProps={{\n                    //     'aria-label': 'change date',\n                    // }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List className={classes.root}>\n                    {[\"Online\", \"Offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" value={props.sortCollgeType} onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${currentUser.college_name}`].map((value) => {\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button wrap>\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default SortLeftPanel;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthContext from '../AuthContext';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n\n    root: {\n        background: theme.palette.secondary.main,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none',\n        // },\n    },\n    \n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n\n}));\n\nfunction MobileSortPanel(props) {\n    const classes = useStyles();\n    const {currentUser} = React.useContext(AuthContext);\n    // const token = localStorage.getItem('token');\n    // const [feeChecked, setFeeChecked] = React.useState([0]);\n    // const [modeChecked, setFeeChecked] = React.useState([0]);\n    const handleModeToggle = (value) => () => {\n        const currentIndex = props.modeChecked.indexOf(value);\n        const newChecked = [...props.modeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setModeChecked(newChecked);\n    };\n    const handleFeeToggle = (value) => () => {\n        const currentIndex = props.feeChecked.indexOf(value);\n        const newChecked = [...props.feeChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // console.log(checked);\n        props.setFeeChecked(newChecked);\n    };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography index={0}>Filters</Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"startDate\"\n                        label=\"From\"\n                        name=\"startDate\"\n                        defaultValue=''\n                        value={props.sortStartDate}\n                        onChange={props.handleSortDateChange}\n                    />\n                    <DatePicker\n                        //   minDate={Date.now()}\n                        fullWidth\n                        required\n                        variant=\"inline\"\n                        format=\"dd MMM yyyy\"\n                        margin=\"normal\"\n                        id=\"endDate\"\n                        label=\"To\"\n                        name=\"endDate\"\n                        defaultValue=''\n                        value={props.sortEndDate}\n                        onChange={props.handleEndSortDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n                {/* <FormControl fullWidth >\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Sort By</InputLabel>\n                            <Select\n                                fullWidth\n                                native\n                                label=\"Event Mode\"\n                                onChange={handleSortEventModeChamge}\n                                inputProps={{\n                                    name: 'sortBy',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value=\"eventSortDate\">Event Start Date</option>\n                                <option value=\"recentlyAdded\">Recently added</option>\n                            </Select>\n                        </FormControl> */}\n                <Typography style={{ paddingTop: \"10px\" }}>Event Mode</Typography>\n                <List >\n                    {[\"online\", \"offline\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleModeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.modeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography style={{ paddingTop: \"10px\" }}>Event Cost</Typography>\n                <List className={classes.root}>\n                    {[\"Free\", \"Paid\"].map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem key={value} role={undefined} dense button onClick={handleFeeToggle(value)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        color=\"default\"\n                                        checked={props.feeChecked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={value} />\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <Typography>College</Typography>\n                <RadioGroup aria-label=\"address\" name=\"address\" defaultValue=\"All\" onChange={props.handleSortCollegeChange} style={{ display: \"inline\" }}>\n                    <List className={classes.root}>\n                        {[\"All\", `${currentUser.collegeName}`].map((value) => {\n                           \n\n                            return (\n                                <ListItem key={value} role={undefined} dense button >\n                                    <ListItemIcon>\n                                        <FormControlLabel value={value} control={<Radio color=\"default\" />} label={value} />\n                                    </ListItemIcon>\n                                    {/* <ListItemText id={labelId} primary={value} /> */}\n\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </RadioGroup>\n                <Button className={classes.filterButton} onClick={props.handleSortApplyButton} variant=\"contained\" > Apply </Button>\n                <Button className={classes.filterButton} onClick={props.handlesortDiscardButton} variant=\"contained\">Discard</Button>\n            </Paper>\n\n\n            <div>\n            </div>\n        </div>\n\n\n\n    );\n}\n\nexport default MobileSortPanel;\n\n ","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    // const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    \n\n    // function handleTitleChange(event) {\n    //     setTitle(event.target.value);\n    // }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/send_feedback', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport EventShareDialog from '../Components/EventShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    height: \"100%\"\n  }\n}));\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const [image, setImage] = React.useState(null);\n  // const token = localStorage.getItem('token');\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n  // function handleViewButtonClick() {\n  //   props.handleViewClick(props.event);\n  // }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n  return (\n    <Card className={classes.root}>\n      {/* <CardActionArea> */}\n      <CardMedia\n        component=\"img\"\n        height=\"180\"\n        image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n      />\n      <CardContent style={{minHeight:\"100px\"}}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        \n      </CardContent>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleShareClick}>\n          Share\n        </Button>\n        <Button  size=\"small\" color=\"primary\">\n          {t === 'light' ? <Link to={{ pathname: `/event/${event._id}` }} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link> :\n            <Link to={{ pathname: `/event/${event._id}`}} style={{ textDecoration: 'none', color: '#00bdaa' }}>View</Link>}\n        </Button>\n        <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {event.status.toUpperCase()}\n        </Typography>\n      </CardActions>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n    </Card>\n  );\n}","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const event = props.event;\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData()\n            const payload = {\n                event_id: event._id,\n                title: title,\n                description: desc\n            };\n            data = JSON.stringify(payload);\n            fetch(process.env.REACT_APP_API_URL+'/api/event/report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(result => {\n                result.json().then((res) => {\n                    if (res.message === \"success\") {\n                        setLoading(false)\n                        props.handleClose()\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Successfull',\n                            type: \"success\",\n                            autoHide: 3000\n                        });\n                    }\n                })\n            })\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Report({event.name})</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Issue Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\n// import Paper from '@material-ui/core/Paper';\n// import Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuList from '@material-ui/core/MenuList';\n// import ClickAwayListener from '@material-ui/core/ClickAwayListener';\n// import Grow from '@material-ui/core/Grow';\nimport Menu from '@material-ui/core/Menu';\n\n\nimport EventReportDialog from './EventReportDialog';\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  const t = localStorage.getItem('theme');\n  // const theme = useTheme()\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  // const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [reportDialogOpen, setReportDialogOpen] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // const isMenuOpen = Boolean(anchorEl);\n  // const handleToggle = () => {\n  //   setOpen((prevOpen) => !prevOpen);\n  // };\n\n  // const handleClose = (event) => {\n  //   if (anchorRef.current && anchorRef.current.contains(event.target)) {\n  //     return;\n  //   }\n\n  //   // setOpen(false);\n  // };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // function handleListKeyDown(event) {\n  //   if (event.key === 'Tab') {\n  //     event.preventDefault();\n  //     setOpen(false);\n  //   }\n  // }\n\n  // const prevOpen = React.useRef(open);\n  // React.useEffect(() => {\n  //   if (prevOpen.current === true && open === false) {\n  //     anchorRef.current.focus();\n  //   }\n  //   prevOpen.current = open;\n  // }, [open]);\n  function handleImageClick() {\n    props.imageDialog(event)\n  }\n  function handleRegClick() {\n    props.handleReg(props.eventId);\n\n  }\n  function handleMoreButtonClick() {\n    props.click(props.eventId);\n  }\n  function handleReportClick() {\n    setReportDialogOpen(true);\n  }\n  function handleReportClose() {\n    setReportDialogOpen(false);\n  }\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={Boolean(anchorEl) ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick}>\n              <MoreVertIcon />\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n              id={'menu'}\n              keepMounted\n              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleShareClick}>Share</MenuItem>\n              <MenuItem onClick={handleReportClick}>Report</MenuItem>\n\n            </Menu>\n            {/* <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        <MenuItem onClick={handleReportClick}>Report</MenuItem>\n                        \n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper> */}\n          </div>\n        }\n        title={\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {props.name}\n          </Typography>\n        }\n        subheader={\n          <React.Fragment>\n            <Typography style={{textOverflow:\"ellipsis\",overflow:\"hidden\",height:\"50px\"}} variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {event.description}\n            </Typography>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n          </React.Fragment>\n        }\n      />\n      <EventReportDialog\n        event={event}\n        open={reportDialogOpen}\n        handleClose={handleReportClose}>\n      </EventReportDialog>\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n      <CardActions disableSpacing>\n        <div className={classes.buttonDiv}>\n          {<Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={handleMoreButtonClick}>\n            See More\n        </Button>}\n          {\n            event.reg_mode === \"form\" ? <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n              {event.registered ? \"Registered\" : \"Register\"}\n            </Button> : <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                  <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n              </Button>\n          }\n        </div>\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\n// import Fab from '@material-ui/core/Fab';\n// import AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport EventCard from '../Components/EventCard';\nimport AuthContext from '../AuthContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        position: 'sticky',\n        top: theme.spacing(8),\n        bottom: 0,\n        [theme.breakpoints.down('md')]: {\n            top: theme.spacing(13),\n        },\n        zIndex: 5,\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3),\n        \n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 0)\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const { allEvents } = React.useContext(EventsContext);\n    const { activeEvents, contextLoading } = React.useContext(ActiveEvents);\n    const { currentUser } = React.useContext(AuthContext);\n\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n   \n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n\n\n    return (\n        <div>\n            <Paper className={classes.root2}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\">\n                    <Tab label=\"Active Events\" />\n                    <Tab label=\"Registered Events\" />\n                    <Tab label=\"Past Events\" />\n                </Tabs>\n            </Paper>\n            <div className={classes.content}>\n                {value === 0 && <React.Fragment>\n                    {\n                        !contextLoading && activeEvents !== null && activeEvents.length === 0 && <Typography align=\"center\">No events, check back later</Typography>\n                    }\n                    {contextLoading && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>}\n                    {activeEvents !== null && <div>{\n                        props.isFiltered ? props.sortedEventsArray.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={props.handleClick}\n                                    url={currentUser.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    event={event}\n                                    feeType={event.feesType}\n                                    imageDialog={props.handleImageDialogOpen}\n                                    handleReg={props.handleRegistrationButton}\n                                    eventId={event}\n                                >\n                                </EventCard>)\n                        }) : activeEvents.map((event, index) => {\n                            return (\n                                <EventCard\n                                    key={index}\n                                    click={props.handleClick}\n                                    url={currentUser.imageUrl}\n                                    name={event.name}\n                                    startTime={event.start_time}\n                                    endTime={event.finish_time}\n                                    eventMode={event.eventMode}\n                                    eventType={event.eventType}\n                                    regEndTime={event.registrationEndTime}\n                                    eventId={event}\n                                    feeType={event.feesType}\n                                    imageDialog={props.handleImageDialogOpen}\n                                    handleReg={props.handleRegistrationButton}\n                                    event={event}\n                                >\n                                </EventCard>)\n                        })}\n                    </div>}\n                </React.Fragment>}\n                {value === 1 && <Grid container component=\"main\" alignItems=\"center\">\n                    {\n                        regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                    }\n                    {regEvents.map((event, index) => {\n                        return (<Grid item xs={12} sm={12} md={4} key={index} style={{margin:\"5px\"}}>\n                        \n                            <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                            </Grid>)\n                    })}\n\n                </Grid>}\n                {value === 2 && <Grid container component=\"main\" alignItems=\"center\">\n                    {\n                        pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                    }\n                    {pastEvents.map((event, index) => {\n                        return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                            <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                        </Grid>)\n                    })}\n                </Grid>}\n\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n// import EventCard from '../Components/EventCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { withRouter } from \"react-router\";\nimport List from '@material-ui/core/List';\nimport EventsDialog from '../Components/EventsDialog';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SortLeftPanel from '../Components/SortLeftPanel';\nimport MobileSortPanel from '../Components/MobileSortPanel';\nimport ImageDialog from '../Components/ImageDialog';\n// import EventsContext from '../EventsContext';\n// import Skeleton from '@material-ui/lab/Skeleton';\n// import { Link } from 'react-router-dom';\nimport AuthContext from '../AuthContext';\n// import GridListEvents from '../Components/GridListEvents';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ActiveEventsContext from '../ActiveEventsContext';\n\nimport FeedBackDialog from '../Components/FeedBackDialog';\nimport ExplorePanel from '../Components/EventsMainTabPanel';\n// function a11yProps(index) {\n//     return {\n//         id: `scrollable-auto-tab-${index}`,\n//         'aria-controls': `scrollable-auto-tabpanel-${index}`,\n//     };\n// }\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '89vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        // color: theme.palette.primary.main\n        backgroundColor: theme.palette.primary.main\n    },\n    root: {\n        background: theme.palette.primary.light,\n        position: 'sticky',\n        top: theme.spacing(10),\n        marginLeft: theme.spacing(1),\n        // height: '89vh',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        // bottom: 0,\n        // zIndex: 3,\n    },\n    leftSubPaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n        [theme.breakpoints.down('md')]: {\n            maxHeight: '78vh',\n        },\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    filterTextField: {\n        padding: theme.spacing(1),\n        height: theme.spacing(5)\n    },\n    filterButton: {\n        margin: theme.spacing(1),\n        width: theme.spacing(10),\n        borderRadius: theme.spacing(50)\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    mobileFilterButton: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    skeleton: {\n        textDecorationColor: theme.palette.primary.dark,\n    },\n    feedBackButton: {\n        borderRadius: theme.spacing(50),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        paddingBottom: theme.spacing(1)\n    }\n\n}));\n\nfunction EventsTabPanel({ history }) {\n    localStorage.setItem('tabIndex', 0);\n    // const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    // const [allEvents, setAllEvents] = React.useState([]);\n    const [selectedEvent, setSelectedEvent] = React.useState(\"\");\n    const [sortStartDate, setSortStartDate] = React.useState(null);\n    const [sortEndDate, setSortEndDate] = React.useState(null);\n    // const [sortType, setSortType] = React.useState(null);\n    // const [sortEventMode, setSortEventMode] = React.useState(null);\n    const [sortCollegeType, setSortCollegeType] = React.useState(\"All\");\n    const [sortedEventsArray, setSortedEventsArray] = React.useState([]);\n    const [isFiltered, setIsFiltered] = React.useState(false);\n    const [feeSortChecked, setFeeSortChecked] = React.useState([0]);\n    const [modeSortChecked, setModeSortChecked] = React.useState([0]);\n    const [filterDialogOpen, setFilterDialogOpen] = React.useState(false);\n    // const [selectedImage, setSelectedImage] = React.useState(null);\n    const { activeEvents } = React.useContext(ActiveEventsContext);\n    const [registerdEvents, setRegisteredEvents] = React.useState([]);\n    const [feedBackOpen, setFeedBackOpen] = React.useState(false);\n\n\n    React.useEffect(() => {\n        // console.log(allEvents);\n        setRegisteredEvents(activeEvents.filter((value) => value.registered === true))\n    }, [activeEvents])\n    // console.log(registerdEvents);\n    if (!token) {\n        // return <Redirect to=\"/\" />;\n        history.replace(\"/\")\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClick = function (event) {\n        // console.log(id);\n        if (event.registered || event.user_id === currentUser.user_id) {\n            history.push(`/event/${event._id}`)\n        } else {\n            setSelectedEvent(event);\n            // setSelectedImage(image);\n            setOpen(true);\n        }\n    }\n    const handlePostButtonClick = () => {\n        history.push('/post')\n    }\n\n    const handleSortDateChange = (date) => {\n        console.log(date);\n        setSortStartDate(date);\n    };\n    const handleEndSortDateChange = (date) => {\n        setSortEndDate(date);\n    }\n\n    const handleFeedBackButtonClick = () => {\n        setFeedBackOpen(true);\n    }\n\n    const closeFeedBckDialog = () => {\n        setFeedBackOpen(false);\n    }\n\n    // function handleSortEventModeChamge(event, value) {\n    //     console.log(event);\n    //     console.log(value);\n    // }\n    // console.log(allEvents);\n    function handleSortCollegeChange(event, value) {\n        setSortCollegeType(value);\n    }\n    async function handleSortApplyButton() {\n        // console.log(sortStartDate);\n        // console.log(modeSortChecked);\n        // console.log(sortCollegeType);\n        // console.log(sortCollegeType);\n        //     console.log(user);\n        setFilterDialogOpen(false);\n        if (sortStartDate != null && sortEndDate != null) {\n            const dateRangeSortedEvents = sortByDateRange(sortStartDate, sortEndDate, activeEvents);\n            setSortedEventsArray(dateRangeSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateRangeSortedEvents));\n                const typeSortedEvents = sortByMode(dateRangeSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(typeSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === currentUser.college_name) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateRangeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === currentUser.college_name) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === currentUser.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateRangeSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (sortStartDate != null) {\n            const dateSortedEvents = await sortByDate(sortStartDate, activeEvents)\n            setSortedEventsArray(dateSortedEvents);\n            setIsFiltered(true);\n            if (modeSortChecked.length > 1) {\n                console.log(sortByMode(dateSortedEvents));\n                const typeSortedEvents = sortByMode(dateSortedEvents);\n                setSortedEventsArray(typeSortedEvents);\n                setIsFiltered(true);\n                if (feeSortChecked.length > 1) {\n                    const feeSortedEvents = sortByCost(dateSortedEvents);\n                    setSortedEventsArray(feeSortedEvents);\n                    setIsFiltered(true);\n                    if (sortCollegeType === currentUser.collegeName) {\n                        const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                        setSortedEventsArray(collegeSortedEvents);\n                        setIsFiltered(true);\n                    }\n                }\n            }\n            else if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(dateSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n                if (sortCollegeType === currentUser.collegeName) {\n                    const collegeSortedEvents = sortByCollege(feeSortedEvents);\n                    setSortedEventsArray(collegeSortedEvents);\n                    setIsFiltered(true);\n                }\n            }\n            else if (sortCollegeType === currentUser.collegeName) {\n                const collegeSortedEvents = sortByCollege(dateSortedEvents);\n                setSortedEventsArray(collegeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (modeSortChecked.length > 1) {\n            const typeSortedEvents = sortByMode(activeEvents);\n            // console.log(sortByMode(activeEvents));\n\n            setSortedEventsArray(typeSortedEvents);\n            setIsFiltered(true);\n            if (feeSortChecked.length > 1) {\n                const feeSortedEvents = sortByCost(typeSortedEvents);\n                setSortedEventsArray(feeSortedEvents);\n                setIsFiltered(true);\n            }\n        }\n        else if (feeSortChecked.length > 1) {\n            const feeSortedEvents = sortByCost(activeEvents);\n            setSortedEventsArray(feeSortedEvents);\n            setIsFiltered(true);\n        }\n        else if (sortCollegeType === currentUser.college_name) {\n            // console.log(sortCollegeType);\n            // console.log(currentUser.college_name);\n            const collegeSortedEvents = sortByCollege(activeEvents);\n            setSortedEventsArray(collegeSortedEvents);\n            setIsFiltered(true);\n        }\n    }\n\n    function sortByDateRange(date1, date2, sEvents) {\n        var sortedEvents = [];\n        // console.log(typeof (date1));\n        // console.log(typeof (date1));\n        sEvents.forEach(sEvent => {\n            const d = new Date(sEvent.start_time);\n            if (date1.getTime() <= d.getTime() && d.getTime() <= date2.getTime()) {\n                sortedEvents.push(sEvent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByDate(date, tEvents) {\n        var sDEvents = [];\n        tEvents.forEach(async sevent => {\n            const x = `${date.getDate()}` + date.getMonth() + date.getFullYear();\n            const d = new Date(sevent.start_time);\n            const y = `${d.getDate()}` + d.getMonth() + d.getFullYear();\n            console.log(y);\n            if (x === y) {\n                console.log(sevent);\n                sDEvents.push(sevent);\n            }\n            // console.log(sortedEventsArray);\n        })\n        // console.log(sDEvents);\n        return sDEvents;\n    }\n    function sortByMode(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (modeSortChecked.includes(sevent.event_mode)) {\n                console.log(\"ddd\");\n                sortedEvents.push(sevent);\n            }\n        })\n        // console.log(sortedEvents);\n        return sortedEvents;\n    }\n\n    function sortByCost(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n            if (feeSortChecked.includes(sevent.fee_type)) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function sortByCollege(sEvents) {\n        var sortedEvents = [];\n        sEvents.forEach(sevent => {\n\n            if (currentUser.college_name === sevent.college_name) {\n                sortedEvents.push(sevent);\n            }\n        })\n        return sortedEvents;\n    }\n\n    function handlesortDiscardButton() {\n        setModeSortChecked([0])\n        setFeeSortChecked([0])\n        setSortedEventsArray([]);\n        setSortStartDate(null);\n        setSortEndDate(null);\n        setIsFiltered(false);\n        setFilterDialogOpen(false);\n        setSortCollegeType(\"All\")\n        // setChecked(null);\n    }\n    function handlefilterButtonClicked() {\n        setFilterDialogOpen(true);\n    }\n    function handleFilterClose() {\n        setFilterDialogOpen(false);\n    }\n    function handleImageDialogClose() {\n        setImageDialogOpen(false);\n    }\n    function handleImageDialogOpen(event) {\n        // console.log(image);\n        setSelectedEvent(event);\n        setImageDialogOpen(true);\n    }\n\n    function handleRegistrationButton(event) {\n        setSelectedEvent(event);\n        history.push('/event/register/' + event._id);\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        if (event.registered || event.user_id === currentUser.user_id) {\n            history.push(`/event/${event._id}`)\n        } else {\n            setSelectedEvent(event);\n            // setSelectedImage(image);\n            setOpen(true);\n        }\n\n    }\n\n    return (\n        <div>\n            <Grid container component=\"main\" >\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} >\n                    <Paper className={classes.root} elevation=\"0\">\n                        <Paper className={classes.leftSubPaper} elevation=\"0\">\n                            <SortLeftPanel\n                                handleSortDateChange={handleSortDateChange}\n                                sortStartDate={sortStartDate}\n                                handleEndSortDateChange={handleEndSortDateChange}\n                                sortEndDate={sortEndDate}\n                                handleSortCollegeChange={handleSortCollegeChange}\n                                feeChecked={feeSortChecked}\n                                modeChecked={modeSortChecked}\n                                sortCollgeType={sortCollegeType}\n                                setFeeChecked={setFeeSortChecked}\n                                setModeChecked={setModeSortChecked}\n                                handleSortApplyButton={handleSortApplyButton}\n                                handlesortDiscardButton={handlesortDiscardButton}>\n                            </SortLeftPanel>\n                        </Paper>\n                    </Paper>\n                    <Button className={classes.mobileFilterButton} variant=\"outlined\" onClick={handlefilterButtonClicked} >Filters</Button>\n                </Grid>\n\n                <Grid item xs={12} sm={12} md={9} lg={8} style={{ marginBottom: \"50px\" }}>\n                    <ExplorePanel\n                        isFiltered={isFiltered}\n                        sortedEventsArray={sortedEventsArray}\n                        handleClick={handleClick}\n                        handleImageDialogOpen={handleImageDialogOpen}\n                        handleRegistrationButton={handleRegistrationButton}></ExplorePanel>\n                    {/* <Typography variant=\"h5\" style={{ paddingTop: '5px' }}>\n                        Your College Events\n                    </Typography>\n                    <GridListEvents click={handleClick} events={allEvents.filter((event) => event.college_name === user.college_name)} ></GridListEvents> */}\n                    <Typography variant=\"h5\" style={{ paddingTop: '5px', paddingBottom: '7px' }}>\n                        {/* Active Events */}\n                    </Typography>\n                    {/* {activeEvents.length === 0 && <div>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <br></br><br></br>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={118} />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                        <Skeleton animation=\"wave\" />\n                    </div>} */}\n\n                </Grid>\n                <Grid item xs={12} sm={12} md={4} lg={2} >\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                        <AddIcon />\n                    </Fab>\n                    <Paper className={classes.rpaper} elevation={0}>\n                        <Paper className={classes.subRpaper} elevation={0}>\n                            <Button\n                                onClick={handlePostButtonClick}\n                                variant=\"contained\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.postButton} >\n                                Post Event\n                            </Button>\n                            <List className={classes.root2}>\n\n                                <Typography variant=\"body2\">Registered Events</Typography>\n                                {\n                                    registerdEvents.map((event, index) => {\n                                        return <React.Fragment key={index} >\n                                            <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                <ListItemAvatar>\n                                                    <Avatar variant=\"square\"\n                                                        alt={event.name}\n                                                        src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText primary={event.name} />\n\n                                            </ListItem>\n                                            <Divider /></React.Fragment>\n                                    })\n                                }\n                            </List>\n                            <Button\n                                onClick={handleFeedBackButtonClick}\n                                variant=\"outlined\"\n                                fullWidth\n                                size=\"large\"\n                                className={classes.feedBackButton}>\n                                Report Bug/Feedback\n                            </Button>\n                        </Paper>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n            <div>\n                <FeedBackDialog open={feedBackOpen} handleClose={closeFeedBckDialog}></FeedBackDialog>\n                {open && <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    // imageUrl={selectedImage}\n                    handleClose={handleClose}\n                    handleReg={handleRegistrationButton}\n                    imageDialog={handleImageDialogOpen}\n                >\n                </EventsDialog>}\n                <ImageDialog\n                    // image={selectedImage}\n                    event={selectedEvent}\n                    open={imageDialogOpen}\n                    handleClose={handleImageDialogClose}>\n                </ImageDialog>\n                <Dialog\n                    open={filterDialogOpen}\n                    onClose={handleFilterClose}\n                    fullWidth={true}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                    maxWidth=\"sm\" PaperProps={{\n                        style: {\n                            backgroundColor: \"#1C1C1E\",\n                            boxShadow: 'none',\n                        },\n                    }}>\n                    <DialogTitle>Filters</DialogTitle>\n                    <DialogContent>\n                        <MobileSortPanel\n                            handleSortDateChange={handleSortDateChange}\n                            sortStartDate={sortStartDate}\n                            handleEndSortDateChange={handleEndSortDateChange}\n                            sortEndDate={sortEndDate}\n                            handleSortCollegeChange={handleSortCollegeChange}\n                            feeChecked={feeSortChecked}\n                            modeChecked={modeSortChecked}\n                            setFeeChecked={setFeeSortChecked}\n                            setModeChecked={setModeSortChecked}\n                            handleSortApplyButton={handleSortApplyButton}\n                            handlesortDiscardButton={handlesortDiscardButton}>\n                        </MobileSortPanel>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(EventsTabPanel);\n\n","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport EventsDialog from '../Components/EventsDialog';\nimport AuthContext from '../AuthContext';\nimport EventsContext from '../EventsContext';\nimport { Typography } from '@material-ui/core';\n\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const [open, setOpen] = React.useState(false);\n    const {currentUser} = React.useContext(AuthContext);\n    const {allEvents} = React.useContext(EventsContext);\n    const postedEvents = allEvents.filter((val)=>{\n        return val.user_id === currentUser.user_id;\n    });\n\n    const [selectedEvent,setSellectedEvent] = React.useState(\"\");\n    function handleViewClick(event){\n        setSellectedEvent(event);\n        // setOpen(true);\n    } \n\n    function handleClose(){\n        setOpen(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    postedEvents.length === 0 && <Typography>No Posted Events</Typography>\n                }\n                {postedEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={4} key={index}>\n                    <ProfileEventCard event={event} handleViewClick={handleViewClick} name={event.name} image={url}></ProfileEventCard>\n                    </Grid>) \n                })}\n                <EventsDialog\n                    open={open}\n                    event={selectedEvent}\n                    handleClose={handleClose}\n                    name={selectedEvent.name}\n                    startTime={selectedEvent.start_time}\n                    endTime={selectedEvent.finish_time}\n                    regEndTime={selectedEvent.registrationEndTime}\n                    type={selectedEvent.eventType}\n                    tags={selectedEvent.tags}\n                    mode={selectedEvent.eventMode}\n                    feeType={selectedEvent.feesType}\n                    url={currentUser.imageUrl}>\n                    {/* imageDialog={handleImageDialogOpen} */}\n                </EventsDialog>\n                    \n                </Grid>\n                \n                {/* <ProfileEventCard></ProfileEventCard> */}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WcIcon from '@material-ui/icons/Wc';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        paddingLeft: theme.spacing(4),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    avatar: {\n        margin: theme.spacing(1.5),\n        padding: theme.spacing(1)\n    }\n\n}));\n\nfunction ProfileDataBox(props) {\n    const classes = useStyles();\n    const [icon,setIcon] = React.useState(<EmailIcon></EmailIcon>)\n    React.useEffect(()=>{\n        switch(props.name){\n            case 'Username':\n                setIcon(<PersonPinCircleIcon></PersonPinCircleIcon>)\n                break;\n            case 'Name':\n                setIcon(<PersonIcon></PersonIcon>)\n                break;\n            case 'College':\n                setIcon(<SchoolIcon></SchoolIcon>)\n                break;\n            case 'Gender':\n                setIcon(<WcIcon></WcIcon>)\n                break;\n            case 'Bio':\n                setIcon(<InfoIcon></InfoIcon>)\n                break;\n            case 'Designation':\n                setIcon(<WorkIcon></WorkIcon>)\n                break;\n            case 'Email':\n                setIcon(<EmailIcon></EmailIcon>)\n                break;\n            default:\n                setIcon(<InfoIcon></InfoIcon>)\n        }\n    },[props.name])\n\n    return (\n        <Box className={classes.root3}>\n            <Box className={classes.avatar}>\n                <Avatar>\n                    {icon}\n                </Avatar>\n            </Box>\n            <Box className={classes.content}>\n                <Box><Typography>{props.name}</Typography></Box>\n                <Box><Typography variant=\"body2\" color=\"textSecondary\">{props.value}</Typography></Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ProfileDataBox;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthContext from '../AuthContext';\nimport Box from '@material-ui/core/Box';\nimport ProfileAboutDataBox from './ProfileAboutDataBox';\nimport { IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    editIcon: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    }\n}));\n\nfunction ProfilePostsTabPanel(props) {\n    const classes = useStyles()\n    const { children, value, url, index, ...other } = props;\n    const {currentUser} = React.useContext(AuthContext);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Box>\n                        <Box className={classes.editIcon}>\n                            <IconButton onClick={props.handleEditButton}><EditIcon></EditIcon></IconButton>\n                        </Box>\n                        <ProfileAboutDataBox name=\"Name\" value={currentUser.name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Email\" value={currentUser.email}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Username\" value={currentUser.username}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"College\" value={currentUser.college_name}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Designation\" value={currentUser.designation}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Gender\" value={currentUser.gender}></ProfileAboutDataBox>\n                        <ProfileAboutDataBox name=\"Bio\" value={currentUser.bio}></ProfileAboutDataBox>\n                    </Box>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.secondary.main,\n    }\n}));\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const token = localStorage.getItem('token');\n    const [eventName,setEventName] = React.useState(\"\");\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/event/get_event_name?eventId=${event.event_id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n              setEventName(value)\n            })\n          })\n    },[event,token])\n\n    \n    function handleShareClick() {\n        \n    }\n\n    return (\n        <Card className={classes.root}>\n            {/* <CardActionArea> */}\n            {/* <CardMedia\n                component=\"img\"\n                height=\"180\"\n                image={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n            /> */}\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {eventName}\n                </Typography>\n            </CardContent>\n\n            <CardActions>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    Download\n                </Button>\n                <Button disabled={event.certificate_status.toUpperCase() === \"GENERATED\"? false : true} target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/user/certificate?id=${event.certificate_url}`} size=\"small\" color=\"primary\" onClick={handleShareClick}>\n                    View\n                </Button>\n                <Typography align=\"right\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {event.certificate_status.toUpperCase()}\n                </Typography>\n            </CardActions>\n        </Card>\n    );\n}","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport CertificateCard from './CertificateCard';\n// const useStyles = makeStyles((theme) => ({\n//     // backdrop: {\n//     //     // zIndex: theme.zIndex.drawer + 1,\n//     //     color: '#fff',\n//     // },\n//     icons: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//     }\n// }));\n\nfunction ProfilePostsTabPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const token = localStorage.getItem('token');\n    \n    const [registerdEvents,setRegisteredEvents] = React.useState([]);\n\n\n    React.useEffect(()=>{\n        fetch(process.env.REACT_APP_API_URL+`/api/user/get_certificates`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'GET',\n          }).then(response => {\n            response.json().then(value => {\n            //   console.log(value);\n              setRegisteredEvents(value);\n            })\n          })\n    },[token])\n\n    \n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div >\n                <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                {\n                    registerdEvents.length === 0 && <Typography>No Certificates Register for the event to get one</Typography>\n                }\n                {registerdEvents.map((event,index) => {\n                    return(<Grid item xs={12} sm={12} md={6} key={index}>\n                    <CertificateCard event={event}></CertificateCard>\n                    </Grid>) \n                })}\n                    \n                </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePostsTabPanel;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import ProfileEventsTabPanel from './ProfileRegEventsTabPanel';\nimport ProfilePostedEventsTabPanel from './ProfilePostedEventsTabPanel';\nimport AboutProfileTabPanel from './ProfileAboutTabPanel';\nimport AuthContext from '../AuthContext';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ProfileCertificatePanel from './ProfileCertificateTabPanel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n        borderRadius: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          }\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n        [theme.breakpoints.down('md')]: {\n            width: theme.spacing(11),\n        height: theme.spacing(11),\n          }\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    iconlarge: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        [theme.breakpoints.down('md')]: {\n            width: theme.spacing(10),\n        height: theme.spacing(10),\n          }\n    },\n}));\n\n\n\n\nfunction Eventcard(props) {\n    localStorage.setItem('tabIndex', 3)\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const {currentUser} = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <Grid container component=\"main\">\n                <CssBaseline />\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.large}\n                                sizes=\"100\" alt=\"profile image\"\n                                src={currentUser.profile_pic !== null && process.env.REACT_APP_API_URL + `/api/image?id=${currentUser.profile_pic}`}\n                                >\n                                <PersonIcon className={classes.iconlarge} ></PersonIcon>\n                            </Avatar>\n                        }\n                        action={\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={props.handleEditButton}>\n                                Edit Profile\n                            </Button>\n                        }\n                        title={\n                            <Typography variant=\"h4\">{currentUser.name}</Typography>\n                        }\n                        subheader={currentUser.bio}\n                    ></CardHeader>\n                </Grid>\n                <Grid item xs={false} sm={false} md={2}>\n                </Grid>\n            </Grid>\n\n            <CardContent>\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"About\" />\n                        {/* <Tab label=\"Registered Events\" /> */}\n                        <Tab label=\"Posted Events\" />\n                        <Tab label=\"Certificates\"></Tab>\n                    </Tabs>\n                </Paper>\n                <div>\n                    <AboutProfileTabPanel handleEditButton={props.handleEditButton} value={value} index={0}></AboutProfileTabPanel>\n                    {/* <ProfileEventsTabPanel url={user.imageUrl} value={value} index={1}></ProfileEventsTabPanel> */}\n                    <ProfilePostedEventsTabPanel  value={value} index={1}></ProfilePostedEventsTabPanel>\n                    <ProfileCertificatePanel value={value} index={2}></ProfileCertificatePanel>\n                </div>\n            </CardContent>\n        </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { Grid, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from '../AuthContext';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n}));\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateInfoTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const { currentUser, setCurrentUser } = React.useContext(AuthContext);\n    // const url = user.imageUrl;\n    const token = localStorage.getItem('token');\n    const [colleges, setColleges] = React.useState([]);\n    const [image, setImage] = React.useState(null);\n    const [name, setName] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [userName, setUserName] = React.useState(null);\n    const [bio, setBio] = React.useState(null);\n    const [gender, setGender] = React.useState(null);\n    const [designation, setDesignation] = React.useState(null);\n    const [collegeName, setCollegeName] = React.useState(null);\n    const [collegeId, setCollegeId] = React.useState(null);\n    const [collegesName, setCollegesName] = React.useState([]);\n    const [imageUrl, setImageurl] = React.useState(null);\n    const [imageUpdated, setImageUpdated] = React.useState(false);\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [usernameError, setUserNameError] = React.useState(false);\n    const [updateButtonDisabled, setUpdateButtonDisabled] = React.useState(false);\n\n    React.useEffect(() => {\n        setEmail(currentUser.email);\n        setName(currentUser.name);\n        setUserName(currentUser.username);\n        setDesignation(currentUser.designation);\n        setCollegeName(currentUser.college_name);\n        setCollegeId(currentUser.college_id);\n        setBio(currentUser.bio);\n        setGender(currentUser.gender);\n        fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setColleges(value);\n                value.forEach((v) => {\n                    setCollegesName((collegesNames) => [...collegesNames, v.name])\n                })\n                // setCollegeNames()\n            })\n        })\n        // eslint-disable-next-line\n    }, [token])\n    // console.log(user.college_name);\n\n    const handleClose = async (event, reason) => {\n\n        if (message === \"Updated Successfully\") {\n            // history.replace(\"/home\")\n            fetch(process.env.REACT_APP_API_URL + '/api/users/me', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET'\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        setCurrentUser(value[0]);\n                    })\n                }\n            })\n        }\n\n        setState({ ...state, open: false });\n    };\n\n    function handleChange(event) {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n            //   setImageAsFile(imageFile => (image))\n            const url = URL.createObjectURL(event.target.files[0]);\n            //   const fileType = event.target.files[0].type;\n            setImageurl(url)\n            setImageUpdated(true);\n            //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n        }\n\n    }\n    function handleName(event, value) {\n        setName(event.target.value);\n    }\n    function handleEmail(event, value) {\n        setEmail(value);\n    }\n    function handleGender(event, value) {\n        console.log(event.target.value);\n        setGender(event.target.value);\n    }\n    function handleDesig(event, value) {\n        setDesignation(event.target.value);\n    }\n    function handleCollege(event, value) {\n        setCollegeName(value);\n        colleges.forEach(c => {\n            if (c.name === value) {\n                //   props.collegeId(c._id)\n                setCollegeId(c._id);\n            }\n        })\n\n    }\n    // function handleUserName(event,value){\n    //     setUserName(event.target.value);\n    // }\n    function handleBio(event, value) {\n        // console.log(event.target.value)\n        setBio(event.target.value);\n    }\n\n    function handleUpdateButton(event) {\n        event.preventDefault();\n        setLoading(true);\n        // console.log(bio);\n        // console.log(userName)\n\n        try {\n            var data = new FormData()\n            const payload = {\n                name: name,\n                email: email,\n                username: userName,\n                // college_name: collegeName,\n                college_id: collegeId,\n                designation: designation,\n                gender: gender,\n                // college_id: collegeId.value,\n                bio: bio,\n            };\n            data = JSON.stringify(payload);\n            // console.log(data);\n            // http://139.59.16.53:4000/api\n            fetch(process.env.REACT_APP_API_URL + '/api/users/updateprofile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(val => {\n                        // console.log(val.message)\n                        if (imageUpdated) {\n                            var data2 = new FormData()\n                            data2.append(\"image\", image);\n                            fetch(process.env.REACT_APP_API_URL + '/api/users/uploadImage', {\n                                headers: {\n                                    'Authorization': `Bearer ${token}`,\n                                },\n                                method: 'POST',\n                                body: data2\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"Updated Successfully\",\n                                        type: \"success\",\n                                        autoHide: 1000\n                                    })\n                                }\n                                else {\n\n                                    setLoading(false);\n                                    setState({\n                                        open: true,\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                        message: \"Something went wrong try again\",\n                                        type: \"error\",\n                                        autoHide: 3000\n                                    })\n\n                                }\n                            })\n                        }\n                        else {\n\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"Updated Successfully\",\n                                type: \"success\",\n                                autoHide: 300\n                            })\n\n                        }\n                    })\n\n                }\n                else {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: \"Something went wrong try again\",\n                        type: \"error\",\n                        autoHide: 3000\n                    })\n                }\n            })\n\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    function handleUsernameChange(event) {\n        setUserName(event.target.value);\n        const username = event.target.value;\n        var data = new FormData();\n        const payload = {\n            username: username\n        };\n        data = JSON.stringify(payload);\n        setUserNameError(false);\n        setUpdateButtonDisabled(false)\n        // setSignupButtonDisabled(false)\n        fetch(process.env.REACT_APP_API_URL + '/api/check_username', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((result) => {\n            result.json().then(value => {\n                if (value.message === \"user already exists\") {\n                    setUserNameError(true);\n                    setUpdateButtonDisabled(true)\n                    //   setSignupButtonDisabled(true);\n                }\n            })\n        })\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={6000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    >\n                        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                        <Grid item xs={12} md={12} alignContent=\"center\" alignItems=\"center\">\n                            <Grid container component=\"main\" justify=\"center\" spacing={2}>\n                                <input id=\"contained-button-file\" required type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n                                <Badge\n                                    overlap=\"circle\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }}\n                                    badgeContent={<label htmlFor=\"contained-button-file\">\n                                        <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                            <EditIcon></EditIcon>\n                                        </IconButton>\n                                    </label>}>\n                                    <Avatar className={classes.large} sizes=\"100\" alt=\"\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${currentUser.profile_pic}`}></Avatar>\n                                </Badge>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                autoComplete=\"fullName\"\n                                name=\"fullName\"\n                                value={name || \"\"}\n                                onChange={handleName}\n                                id=\"fullName\"\n                                label=\"Full Name\"\n                                autoFocus\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                disabled\n                                id=\"email\"\n                                value={email}\n                                onChange={handleEmail}\n                                fullWidth\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                // variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"User Name\"\n                                value={userName}\n                                onChange={handleUsernameChange}\n                                name=\"username\"\n                                error={usernameError}\n                                helperText={usernameError && \"username already exists\"}\n                            />\n                            {/* <TextField\n                                // variant=\"outlined\"\n                                fullWidth\n                                required\n                                id=\"username\"\n                                label=\"User Name\"\n                                name=\"username\"\n                                value={userName}\n                                onChange={handleUserName}\n                            /> */}\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Autocomplete\n                                fullWidth\n                                id=\"college\"\n                                options={collegesName}\n                                getOptionLabel={(option) => option}\n                                // onChange={handleChange}\n                                value={collegeName}\n                                onChange={handleCollege}\n                                renderInput={(params) => <TextField name=\"college\" fullWidth required {...params} label=\"College\" />}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Bio\"\n                                autoComplete='off'\n                                required\n                                id=\"bio\"\n                                name=\"bio\"\n                                label=\"Bio\"\n                                fullWidth\n                                value={bio}\n                                onChange={handleBio}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n                                <Select\n                                    value={gender}\n                                    onChange={handleGender}\n                                    fullWidth\n                                    native\n                                    label=\"Age\"\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'gender',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"designation\">You are</InputLabel>\n                                <Select\n                                    value={designation}\n                                    onChange={handleDesig}\n                                    fullWidth\n                                    native\n                                    label=\"You are\"\n                                    inputProps={{\n                                        name: 'designation',\n                                        id: 'designation',\n                                    }}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Faculty\">Faculty</option>\n                                    <option value=\"Club/Organisation\">Club/Organisation</option>\n                                    <option value=\"Institution\">Institution</option>\n                                    <option value=\"Others\">Others</option>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n                    <Button\n                        className={classes.button}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpdateButton}\n                        disabled={loading || updateButtonDisabled}\n                    // className={classes.submit}\n                    >{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Profile\"}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UpdateInfoTabPanel;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthContext from '../AuthContext';\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    const {currentUser} = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error'\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type } = state;\n    const [cPassword,setCPassword] = React.useState(null);\n    const [nPassword,setNPassword] = React.useState(null);\n\n\n    const handleClose = async (event, reason) => {\n        setCPassword(null);\n        setNPassword(null);\n\n        setState({ ...state, open: false });\n    };\n\n    function handleCurrentPasswordChange(event){\n        setCPassword(event.target.value);\n    }\n    function handleNewPasswordChange(event){\n        setNPassword(event.target.value);\n    }\n\n    function handleUpdatePassword(event) {\n        setLoading(true);\n        event.preventDefault();\n        // const { cPassword, nPassword } = event.target.elements;\n        // console.log(cPassword);\n        // console.log(nPassword);\n        try{\n            var data = new FormData()\n        const payload = {\n          email: currentUser.email,\n          cPassword: cPassword,\n          nPassword: nPassword\n        };\n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL+'/api/users/updatepassword', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then(response =>{\n            if (response.status === 200){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: result.message,\n                        type: \"success\"\n                      })\n                })\n            }\n            else if (response.status === 401){\n                response.json().then(result =>{\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message:result.error,\n                        type: \"error\"\n                      })\n                })\n                \n            }\n           \n        })\n\n\n\n            \n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: error.message,\n              type: \"error\"\n            })\n          }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={2000}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    ><Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    \n                    <div className={classes.paper}>\n                        <form className={classes.form} onSubmit={handleUpdatePassword}>\n                            <Grid container spacing={2} justify=\"center\" >\n                            \n\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"cPassword\"\n                                        label=\"Current Password\"\n                                        type=\"password\"\n                                        id=\"cPassword\"\n                                        value={cPassword}\n                                        onChange={handleCurrentPasswordChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"nPassword\"\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        id=\"nPassword\"\n                                        value={nPassword}\n                                        onChange={handleNewPasswordChange}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                            // className={classes.submit}\n                            >\n                                {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update Password\"}\n                            </Button>\n                        </form>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default UpdatePasswordTabPanel;","import React from 'react';\nimport { withRouter} from \"react-router\";\n// import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n// import TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import AuthContext from '../AuthContext';\n//function for alert\n// function Alert(props) {\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    button: {\n        marginTop: theme.spacing(4),\n\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction UpdatePasswordTabPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const [open, setOpen] = React.useState(false);\n    // const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const [loading, setLoading] = React.useState(false);\n\n\n\n\n    function handleLogoutAll(event) {\n        setLoading(true);\n        event.preventDefault();\n        try {\n            fetch(process.env.REACT_APP_API_URL + '/api/users/logoutall', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST'\n            }).then((result) => {\n                if (result.status === 200) {\n                    result.json().then((data) => {\n                        if (data.message === \"success\") {\n                            setLoading(false);\n                            localStorage.removeItem('token');\n                            localStorage.removeItem('tabIndex');\n                            props.history.replace(\"/\")\n                        }\n                    })\n                }\n                else {\n\n                }\n            })\n        }\n        catch (error) {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Button\n                            onClick={handleLogoutAll}\n                            className={classes.button}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                        >\n                            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Logout of All Devices\"}\n                        </Button>\n\n                    </div>\n                </Container>\n\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(UpdatePasswordTabPanel);","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport UpdateInfoTabPanel from './UpdateInfoTabPanel';\nimport UpdatePasswordTabPanel from './UpdatePasswordTabPanel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreSettingsTabPanel from './MoreSettingsTabPanel';\nimport { Box } from '@material-ui/core';\n\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        // position: 'absolute',\n        // right: theme.spacing(1),\n        // top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n        alignContent:'right',\n        marginRight:theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n        // width: '100%',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n}));\n\nfunction UpdateProfile(props) {\n    const [value, setValue] = React.useState(0);\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function handleClose() {\n        props.handleClose();\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            scroll=\"paper\"\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            style={{ minHeight: \"400px\" }}\n            PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            classes={{ paper: classes.dialog }}>\n            <DialogTitle id=\"scroll-dialog-title\">\n                {/* <div className={classes.icons}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div> */}\n                <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                    </Box>\n                </Box>\n                <div className={classes.root}>\n                    <AppBar style={{ alignItems: 'center' }} position=\"static\" color=\"secondary\">\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\">\n                            <Tab label=\"Update info\" {...a11yProps(0)} />\n                            <Tab label=\"Change Password\" {...a11yProps(1)} />\n                            <Tab label=\"More Settings\" {...a11yProps(1)} />\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                <UpdateInfoTabPanel value={value} index={0}></UpdateInfoTabPanel>\n                <UpdatePasswordTabPanel value={value} index={1}></UpdatePasswordTabPanel>\n                <MoreSettingsTabPanel value={value} index={2}></MoreSettingsTabPanel>\n            </DialogContent>\n            <DialogActions alignItems=\"center\">\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default UpdateProfile;","import React from 'react';\nimport ProfileCard from '../Components/MainProfileCard';\nimport { Grid } from '@material-ui/core';\nimport UpdateProfileDialog from '../Components/UpdateProfileDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventsDialog from '../Components/EventsDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\n\n\nfunction EventsTabPanel(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [eOpen, setEOpen] = React.useState(false);\n    const {activeEvents} = React.useContext(ActiveEvents);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    function handleEditButton() {\n        setOpen(true);\n    }\n    function handleClose() {\n        setOpen(false);\n        setEOpen(false)\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setEOpen(true);\n\n    }\n    return (\n        <div>\n            <div>\n                <Grid container component=\"main\" >\n                    <Grid item xs={12} sm={12} md={3} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={9} lg={8}>\n                        <ProfileCard handleEditButton={handleEditButton}></ProfileCard>\n                        <UpdateProfileDialog open={open} handleClose={handleClose}></UpdateProfileDialog>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>\n                                        })\n                                    }\n                                </List>\n\n\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={eOpen}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EventsTabPanel;","import React from 'react';\n\n\n//MaterialUI imports\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(0),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const [startDateError,setStartDateError] = React.useState(false);\n  const [endDateError,setEndDateError] = React.useState(false);\n  const [regEndDateError,setRegEndDateError] = React.useState(false);\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  const [eventTypes,setEventTypes] = React.useState([]);\n  React.useEffect(()=>{\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_types', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        value.forEach((v) => {\n          setEventTypes((eventTypes)=>[...eventTypes,v.title]);\n        })\n      })\n    })\n  },[token])\n\n\n  function handleEventNameChange(event) {\n    props.setName(event.target.value)\n  }\n\n  function handleDescChange(event) {\n    props.setDesc(event.target.value);\n  }\n\n  const handleStartDateChange = (date) => {\n    setStartDateError(false);\n    props.setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setEndDateError(false);\n    props.setEndDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDateError(false);\n    props.setRegEndDate(date);\n  };\n\n  function handleEventModeChange(event) {\n    props.setEventMode(event.target.value);\n  }\n  function handleeventTypsChange(event, value) {\n    props.setEventType(value);\n  }\n\n\n  function handleNext(event) {\n    event.preventDefault();\n    if(props.startDate === null){\n      setStartDateError(true)\n    }\n    else if(props.endDate === null){\n      setEndDateError(true);\n    }\n    else if(props.regEndDate === null){\n      setRegEndDateError(true)\n    }\n    else{\n      props.handleNext();\n    }\n    \n  }\n  function handleFeeTypeChange(event, value) {\n    props.setFeeType(value)\n  }\n  function handleRegistrationModeChange(event) {\n    if (event.target.value === \"form\") {\n      props.setSteps((steps) => [...steps, \"Registration Form\"])\n    }\n    else if (event.target.value === \"link\") {\n      props.setSteps(['About', 'More Details']);\n    }\n    props.setRegistrationMode(event.target.value);\n  }\n\n\n  return (\n    <form className={classes.form} onSubmit={handleNext}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"eventName\"\n            name=\"eventName\"\n            label=\"Name\"\n            fullWidth\n            value={props.name || \"\"}\n            onChange={handleEventNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete='off'\n            required\n            id=\"shortdesc\"\n            name=\"shortdesc\"\n            label=\"Short Description\"\n            fullWidth\n            value={props.desc || \"\"}\n            onChange={handleDescChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n            <DateTimePicker\n            inputProps={{required: true}}            \n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"startDate\"\n              label=\"Start Date\"\n              name=\"startDate\"\n              value={props.startDate}\n              onChange={handleStartDateChange}\n              error={startDateError}\n              helperText={startDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"endDate\"\n              label=\"End Date\"\n              name=\"endDate\"\n              value={props.endDate}\n              onChange={handleendDateChange}\n              error={endDateError}\n              helperText={endDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={12}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n              minDate={Date.now()}\n              fullWidth\n              required\n              variant=\"dialog\"\n              format=\"dd MMM yyyy hh:mm a zzz\"\n              margin=\"normal\"\n              id=\"regEndDate\"\n              label=\"Registration End Date\"\n              name=\"regEndDate\"\n              value={props.regEndDate}\n              onChange={handleRegEndDateChange}\n              error={regEndDateError}\n              helperText={regEndDateError && \"Fill this field\"}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Mode</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Mode\"\n              inputProps={{\n                name: 'eventMode',\n                id: 'eventMode',\n              }}\n              value={props.eventMode || \"\"}\n              onChange={handleEventModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Autocomplete\n            fullWidth\n            id=\"combo-box-demo\"\n            options={eventTypes}\n            getOptionLabel={(option) => option}\n            onChange={handleeventTypsChange}\n            value={props.eventType}\n            renderInput={(params) => <TextField fullWidth required {...params} label=\"Type\" />}\n          />\n        </Grid>\n\n\n        <Grid item xs={12}>\n          <FormControl fullWidth required>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n            <Select\n              fullWidth\n              native\n              label=\"Registration\"\n              inputProps={{\n                name: 'registrationMode',\n                id: 'registaration mode',\n              }}\n              value={props.registrationMode || \"\"}\n              onChange={handleRegistrationModeChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value=\"form\">Our Platform(Ellipse)</option>\n              <option value=\"link\">Other</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormLabel component=\"legend\">Entry Fee</FormLabel>\n          <RadioGroup aria-label=\"address\" name=\"address\" value={props.feeType} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n            <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n            <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      <div className={classes.buttons}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >Next\n        </Button>\n      </div>\n    </form>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function AlertDialog(props) {\n\n    const theme = useTheme();\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            >\n                <DialogTitle id=\"title\">{\"Terms and Conditions\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ul>\n                            <li>The information you provided for the event is true and is appropriate.\n                                In case we notice any incorrect information, the event will be suspended and further\n                                action would be taken against you.</li>\n                            <li>The information of participants is only used for event purpose and not for any other purpose. Legal action will\n                             be taken if this information is used elsewhere.</li>\n                            <li>ellipseapp.com reserves the right to update and change these Terms of Service regularly\n                               without notice to you or acceptance by you. </li>\n                        </ul>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport TermsandConditions from '../Components/EventPostTermsandConditions';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function AddressForm(props) {\n\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  // const [imageName, setImageName] = React.useState(\"\");\n  // const eventThemes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  const [colleges, setColleges] = React.useState([]);\n  const [collegesNames, setCollegesName] = React.useState([]);\n  const [eventTags,setEventTags] = React.useState([]);\n  const [requirements,setRequirements] = React.useState([]);\n  // const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  const [tandcOpen,setTandcOpen] = React.useState(false);\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+'/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        value.forEach((v) => {\n          setCollegesName((collegesNames) => [...collegesNames, v.name])\n        })\n      })\n    })\n    fetch(process.env.REACT_APP_API_URL+'/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if(v.type === \"EventTags\"){\n            setEventTags((eventTags)=> [...eventTags,v.title]);\n          }\n          else if(v.type === \"EventRequirements\"){\n            setRequirements((r)=>[...r,v.title]);\n          }\n        })\n      })\n    })\n  }, [token])\n\n\n  function handleeventTagsChange(event, values) {\n    props.setThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    props.setRequirements(values);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      props.setPoster(event.target.files[0]);\n      const fileName = event.target.files[0].name;\n      props.setImageName(fileName);\n    }\n  }\n  function handleAddressTypeChange(evemt, value) {\n    props.setAddressType(value);\n  }\n\n  function handleRegLinkChange(event) {\n    props.setRegLink(event.target.value);\n  }\n\n  function handleRegFees(event) {\n    props.setFees(event.target.value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // console.log(value);\n    props.setCollegeName(value);\n    colleges.forEach(c => {\n      if (c.name === value) {\n        props.setCollegeId(c._id)\n      }\n    })\n  }\n  // function handleVenueCollegeChange(event, value) {\n  //   props.setVenueCollege(value);\n  // }\n\n  function handleAboutChange(event) {\n    props.setAbout(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    props.setParticipantsType(value)\n  }\n  function handleBuildingChange(event) {\n    props.setBuilding(event.target.value);\n  }\n  function handlePlatformChange(event){\n    props.setPlatformDetails(event.target.value)\n  }\n  function handleNext(event) {\n    event.preventDefault();\n    props.handleNext();\n  }\n\n  function handleTermsClick(){\n    setTandcOpen(true);\n  }\n\n  function handleTeamChange(event,value){\n    if(value === \"team\"){\n      props.setIsTeam(true);\n    }\n    else{\n      props.setIsTeam(false);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <form className={classes.form} onSubmit={handleNext}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter everything about your event in detail\"\n              autoComplete='off'\n              required\n              id=\"about\"\n              name=\"about\"\n              label=\"About\"\n              fullWidth\n              onChange={handleAboutChange}\n              value={props.about || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Autocomplete\n              multiple\n              id=\"themes\"\n              options={eventTags.map((option) => option)}\n              freeSolo\n              value={props.eventThemes || []}\n              onChange={handleeventTagsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Event Tags\" placeholder=\"Event Tags\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <input\n              id=\"contained-button-file\"\n              // required\n              type=\"file\"\n              // value={props.poster}\n              accept=\"image/*\"\n              onChange={handleChange}\n              style={{ display: \"none\" }}>\n            </input>\n\n            <TextField\n              autoComplete='off'\n              required\n              id=\"eventposter\"\n              name=\"eventposter\"\n              label=\"Event Poster\"\n              component=\"span\"\n              value={props.imageName || ''}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <label htmlFor=\"contained-button-file\">\n                      <IconButton component=\"span\" >\n                        <CameraAltIcon></CameraAltIcon>\n                      </IconButton>\n                    </label>\n\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </Grid>\n          {props.registrationMode !== \"form\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regLink\"\n              name=\"regLink\"\n              label=\"Registration Link\"\n              fullWidth\n              value={props.regLink || \"\"}\n              onChange={handleRegLinkChange}\n            />\n          </Grid>}\n\n          {props.feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              id=\"regFees\"\n              name=\"regFees\"\n              label=\"Registration Fees\"\n              fullWidth\n              value={props.regFees || \"\"}\n              onChange={handleRegFees}\n            />\n          </Grid>}\n          <Grid item xs={12}>\n            <Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={requirements.map((option) => option)}\n              freeSolo\n              value={props.requirements || []}\n              onChange={handleRequirementsChange}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Prerequisites\" placeholder=\"Requirements\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              fullWidth\n              id=\"combo-box-demo\"\n              options={collegesNames}\n              value={props.college || []}\n              getOptionLabel={(option) => option}\n              onChange={handleCollegeChange}\n              renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component=\"legend\">Participation</FormLabel>\n            <RadioGroup aria-label=\"participation\" name=\"participation\" value={props.participantsType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n              <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${props.college}`} />\n            </RadioGroup>\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel required component=\"legend\">Participation Type</FormLabel>\n            <RadioGroup required aria-label=\"participation_type\" name=\"participation_type\" value={props.isTeam ? \"team\" : \"individual\"} onChange={handleTeamChange} style={{ display: \"inline\" }}>\n              <FormControlLabel value=\"individual\" control={<Radio color=\"default\" />} label=\"Individual\" />\n              <FormControlLabel value=\"team\" control={<Radio color=\"default\" />} label=\"Team\" />\n            </RadioGroup>\n          </Grid>\n          {props.isTeam && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              type=\"number\"\n              id=\"maxTeam\"\n              name=\"minTeam\"\n              label=\"Minimum Team Members\"\n              fullWidth\n              value={props.minTeamSize || \"\"}\n              onChange={(e)=>{props.setMinTeamSize(e.target.value)}}\n            />\n          </Grid>}\n          {props.isTeam && <Grid item xs={12} lg={6}>\n            <TextField\n              autoComplete='off'\n              required\n              type=\"number\"\n              id=\"maxTeam\"\n              name=\"maxTeam\"\n              label=\"Maximum Team Members\"\n              fullWidth\n              value={props.maxTeamSize || \"\"}\n              onChange={(e)=>{props.setMaxTeamSize(e.target.value)}}\n            />\n          </Grid>}\n          {props.eventMode === \"Online\" && <Grid item xs={12}>\n            <TextField\n              multiline={true}\n              helperText=\"Enter links of your and you can also add or edit later in event edit\"\n              rows=\"5\"\n              variant='outlined'\n              placeholder=\"Enter details about your online platform\"\n              autoComplete='off'\n              // required\n              id=\"platform\"\n              name=\"platform\"\n              label=\"Platform\"\n              fullWidth\n              onChange={handlePlatformChange}\n              value={props.platformDetails || \"\"}\n            />\n          </Grid>}\n          {props.eventMode === \"Offline\" && <React.Fragment>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Venue</FormLabel>\n              <RadioGroup aria-label=\"address\" aria-disabled name=\"address\" defaultValue=\"college\" onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"College\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel  value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n                multiline={true}\n                helperText=\"Enter links of your and you can also add or edit later in event edit\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Room No,Building,College,State,Pincode\"\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Venue\"\n                fullWidth\n              />\n          </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                onChange={handleBuildingChange}\n                value={props.building}\n                id=\"building\"\n                name=\"building\"\n                label=\"Room No & Building\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                getOptionLabel={(option) => option}\n                value={props.venueCollege}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid> */}\n          </React.Fragment>}\n          {props.registrationMode !== \"form\" && <Grid item xs={12}>\n          <Typography>By posting the event.I accept the <Button onClick={handleTermsClick} color=\"primary\">Terms and Conditions</Button></Typography>\n          </Grid>\n          }\n        </Grid>\n        <div className={classes.buttons}>\n          <Button onClick={props.handleBack} className={classes.button}>\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >{props.registrationMode !== \"form\" ? \"POST\" : \"NEXT\"}\n          </Button>\n        </div>\n      </form>\n      <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n    </React.Fragment>\n  );\n}","import React from 'react';\n\n//Materail impports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\n\nexport default function FormDialog(props) {\n  const theme = useTheme();\n  const [name, setName] = React.useState(null);\n  const [type, setType] = React.useState(null);\n  const [required, setRequired] = React.useState(true);\n  const fieldOptions = [];\n  const [selectedOptions, setSelectedOptions] = React.useState(['option1', 'option2']);\n\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  }\n  const handleTypeChange = (event) => {\n    setType(event.target.value);\n  }\n  const handleOptionsChange = (event, values) => {\n    setSelectedOptions(values);\n  }\n\n  const handleAddButton = () => {\n    if (name != null && type != null) {\n      if (type !== \"radiobuttons\" && type !== \"checkboxes\" && type !== \"dropdown\") {\n        props.handleAdd({ [name]: { 'title': name, 'field': type, req: required, 'options': [] } }, name);\n      }\n      else {\n        props.handleAdd({ [name]: { 'title': name, 'field': type, req: required, 'options': selectedOptions } }, name);\n      }\n      setName(null);\n      setType(null);\n      setRequired(true);\n      setSelectedOptions(['option1', 'option2']);\n      props.handleClose()\n    }\n  }\n\n  const handleradioChange = (event, value) => {\n    if (value === \"required\") {\n      setRequired(true);\n    }\n    else {\n      setRequired(false);\n    }\n  }\n\n\n  return (\n    <div>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n          boxShadow: 'none',\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Field</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Field Name\"\n                name=\"name\"\n                fullWidth\n                value={name}\n                required\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"type\">Type</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Type\"\n                  inputProps={{\n                    name: 'type',\n                    id: 'type',\n                  }}\n                  value={type}\n                  onChange={handleTypeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"short_text\">Short Text</option>\n                  <option value=\"paragraph\">Long Description</option>\n                  <option value=\"dropdown\">Drop Down</option>\n                  <option value=\"date\">Date & Time</option>\n                  <option value=\"radiobuttons\">Radio Button</option>\n                  <option value=\"checkboxes\">Check Box</option>\n                  <option value=\"link\">Link</option>\n                  <option value=\"file_upload\">File Upload</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <RadioGroup required name=\"variant\" defaultValue=\"required\" onChange={handleradioChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"required\" control={<Radio color=\"default\" />} label=\"Required\" />\n                <FormControlLabel value=\"optional\" control={<Radio color=\"default\" />} label=\"Optional\" />\n              </RadioGroup>\n            </Grid>\n            {(type === \"radiobuttons\" || type === \"checkboxes\" || type === \"dropdown\") &&\n              <Grid item xs={12}>\n                <Autocomplete\n                  multiple\n                  id=\"tags-filled\"\n                  options={fieldOptions.map((option) => option)}\n                  freeSolo\n                  value={selectedOptions || []}\n                  onChange={handleOptionsChange}\n                  renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                      <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Options\" placeholder=\"Options\" helperText=\"you can choose multiple options for your checkboxes or radio buttons enter one option and press enter\" />\n                  )}\n                />\n              </Grid>\n            }\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n\n//Materialui impports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n\n\nexport default function FormDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [desc, setDesc] = React.useState(null);\n    const [startDate, setStartDate] = React.useState(null);\n    const [endDate, setEndDate] = React.useState(null);\n    const [linkField, setLinkField] = React.useState('');\n    const [open, setOpen] = React.useState(false);\n    const [selectedFields, setSelectedFields] = React.useState([]);\n    const [state, setState] = React.useState({\n        alertopen: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, alertopen, message, type, autoHide } = state;\n\n    const [checked, setChecked] = React.useState({\n        form: true,\n        link: false,\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function handleAddButton() {\n        if (desc !== null && startDate !== null && endDate !== null) {\n            props.handleAdd({\n                title: `Round ${props.roundsCount + 1}`,\n                description: desc,\n                start_date: startDate,\n                end_date: endDate,\n                link: linkField,\n                fields: selectedFields\n            })\n            props.handleClose()\n            setDesc('');\n            setStartDate(null);\n            setEndDate(null);\n            setLinkField('');\n            setSelectedFields([]);\n        }\n        else {\n            setState({\n                alertopen: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"please fill in all fields\",\n                type: \"error\",\n                autoHide: '5000',\n            })\n        }\n\n\n    }\n\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n\n    const handleDelete = (chipToDelete) => () => {\n        setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    };\n\n    const handleChange = (event) => {\n        setChecked({ ...checked, [event.target.name]: event.target.checked });\n    };\n\n    const { form, link } = checked;\n\n    const handleAlertClose = () => {\n        setState({ ...state, alertopen: false });\n    }\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={alertopen}\n                autoHideDuration={autoHide}\n                onClose={handleAlertClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog\">\n                <DialogTitle id=\"form-dialog-title\">Add Rounds</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Name\"\n                                name=\"name\"\n                                fullWidth\n                                disabled\n                                value={`Round ${props.roundsCount + 1}`}\n                            // required\n                            // onChange={(e) => { setName(e.target.value) }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc}\n                                required\n                                onChange={(e) => { setDesc(e.target.value) }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n                                <DateTimePicker\n                                    inputProps={{ required: true }}\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"startDate\"\n                                    label=\"Start Date\"\n                                    name=\"startDate\"\n                                    value={startDate}\n                                    onChange={(date) => { setStartDate(date) }}\n                                //   error={startDateError}\n                                //   helperText={startDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DateTimePicker\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"endDate\"\n                                    label=\"End Date\"\n                                    name=\"endDate\"\n                                    value={endDate}\n                                    onChange={(date) => { setEndDate(date) }}\n                                //   error={endDateError}\n                                //   helperText={endDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormLabel component=\"legend\">Action</FormLabel>\n                            <FormGroup>\n                                <FormControlLabel\n                                    control={<Checkbox checked={form} color=\"default\" onChange={handleChange} name=\"form\" />}\n                                    label=\"Create Form\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={link} color=\"default\" onChange={handleChange} name=\"link\" />}\n                                    label=\"Link\"\n                                />\n                            </FormGroup>\n                            {/* <RadioGroup aria-label=\"address\" name=\"address\" value={action} onChange={handleActionChange} style={{ display: \"inline\" }}>\n                                <FormControlLabel value=\"form\" control={<Radio color=\"default\" />} label=\"Create Form\" />\n                                <FormControlLabel value=\"hackathon_template\" control={<Radio color=\"default\" />} label=\"Use Hackathon Template\" />\n                                <FormControlLabel value=\"link\" control={<Radio color=\"default\" />} label=\"Provide Link\" />\n                            </RadioGroup> */}\n                        </Grid>\n                        {link && <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"platform_link\"\n                                label=\"Platform Link\"\n                                name=\"platform_link\"\n                                fullWidth\n                                value={linkField}\n                                required\n                                onChange={(e) => { setLinkField(e.target.value) }}\n                            />\n                        </Grid>}\n                        {form && <Grid item xs={12}>\n                            <Typography>Fields</Typography>\n                            <Paper component=\"ul\" className={classes.root}>\n                                {selectedFields.map((data) => {\n                                    return (\n                                        <li key={data.key}>\n                                            <Chip\n                                                label={data.title}\n                                                onDelete={handleDelete(data)}\n                                                className={classes.chip}\n                                            />\n                                        </li>\n                                    );\n                                })}\n                            </Paper>\n                        </Grid>}\n                        {form && <Grid item xs={12}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                onClick={() => { setOpen(true) }}>\n                                Add Field\n                        </Button>\n                        </Grid>}\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <AddFieldDialog\n                open={open}\n                handleAdd={handleFieldAddButton}\n                handleClose={handleClose}>\n            </AddFieldDialog>\n        </div>\n    );\n}\n","import React from 'react';\n\n\n//MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\n\n//other component imports\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport AddRoundsDialog from '../Components/AddRoundsDialog';\nimport TermsandConditions from '../Components/EventPostTermsandConditions';\n\n\n//css styles\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(0),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    formgroup: {\n        marginTop: theme.spacing(1),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n\nexport default function EventPostForm(props) {\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n    const [roundsDialogOpen, setRoundsDialogOpen] = React.useState(false);\n    const [tandcOpen, setTandcOpen] = React.useState(false);\n    const [prizeTitle, setPrizeTitle] = React.useState(null);\n    const [prizeDesc, setPrizeDesc] = React.useState(null);\n    const [prize, setPrize] = React.useState(null);\n    const [prizes, setPrizes] = React.useState([]);\n\n    React.useEffect(() => {\n        setPrizes(props.prizes);\n    }, [props.prizes])\n\n\n    const handleClose = () => {\n        setOpen(false);\n        setRoundsDialogOpen(false);\n    };\n\n    const fields = {\n        name: {\n            'title': 'Name',\n            'field': 'short_text',\n            'req': true,\n            'options': []\n        },\n        email: {\n            'title': 'Email',\n            'field': 'short_text',\n            'req': true,\n            'options': []\n        },\n        college: {\n            'title': 'College',\n            'field': 'short_text',\n            'req': true,\n            'options': []\n        },\n    }\n\n    const [selectedFields, setSelectedFields] = React.useState([fields['name'], fields['email']]);\n\n    const [state, setState] = React.useState({\n        name: true,\n        email: true,\n        college: false,\n    });\n\n    React.useEffect(() => {\n        if (props.fields.length > 2) {\n            const arr = props.fields.filter(val=>{return val.title === \"College\"});\n            if(arr.length > 0){\n                setState({...state,college:true})\n            }\n            setSelectedFields(props.fields);\n        }\n        // eslint-disable-next-line\n    }, [props.fields])\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        const sName = event.target.name;\n        if (event.target.checked) {\n            setSelectedFields(selectedFields => [...selectedFields, fields[sName]]);\n        }\n        else if (!event.target.checked) {\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== sName));\n        }\n    };\n\n    const { name, email, college } = state;\n\n    const handleAddMoreButton = () => {\n        setOpen(true);\n    }\n\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n    const handleDelete = (chipToDelete) => () => {\n        if (chipToDelete.title === 'College') {\n            setState({ ...state, college: false })\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n        }\n        else if (chipToDelete.title !== 'Name' && chipToDelete.title !== 'Email') {\n            setState({ ...state, [chipToDelete.title.toLowercase]: false })\n            setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n        }\n    };\n\n    const handleRoundDelete = (chipToDelete) => () => {\n        const rr = props.rounds;\n        var uR = rr.filter((chip) => chip.title !== chipToDelete.title);\n        var fR = [];\n        uR.forEach((rou, index) => {\n            fR.push({\n                title: `Round ${index + 1}`,\n                description: rou.description,\n                start_date: rou.start_date,\n                end_date: rou.end_date,\n                link: rou.link,\n                fields: rou.fields\n            })\n        });\n        props.setRounds(fR);\n    }\n\n    const handlePostButton = async (e) => {\n        e.preventDefault();\n        await props.setFields(selectedFields);\n        props.handlePost(selectedFields);\n    }\n\n    const handleTermsClick = () => {\n        setTandcOpen(true);\n    }\n\n    const handleAddRounds = (r) => {\n        props.setRounds(rounds => [...rounds, r]);\n    }\n\n    const handlePrizeAddButton = () => {\n        props.setPrizes(prizes => [...prizes, { title: prizeTitle, prize: prize, desc: prizeDesc }]);\n        setPrizeTitle(null);\n        setPrizeDesc(null);\n        setPrize(null);\n    }\n\n    const handlePrizeDeleteButton = (index, data) => () => {\n        var currentPrizes = props.prizes;\n        currentPrizes.splice(index);\n        props.setPrizes(currentPrizes);\n    }\n\n    const handlePrizeFieldChange = (title) => (event) => {\n        if (title === \"title\") {\n            setPrizeTitle(event.target.value)\n        }\n        else if (title === \"desc\") {\n            setPrizeDesc(event.target.value);\n        }\n        else {\n            setPrize(event.target.value);\n        }\n    }\n\n    const handleBack = () => {\n        props.setFields(selectedFields);\n        props.handleBack()\n    }\n\n    return (\n        <React.Fragment>\n            <form className={classes.form} onSubmit={handlePostButton}>\n                <Grid container spacing={3}>\n\n                    <AddFieldDialog\n                        open={open}\n                        handleClose={handleClose}\n                        handleAdd={handleFieldAddButton}>\n                    </AddFieldDialog>\n\n                    <AddRoundsDialog\n                        roundsCount={props.rounds.length}\n                        open={roundsDialogOpen}\n                        handleClose={handleClose}\n                        handleAdd={handleAddRounds}>\n                    </AddRoundsDialog>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            multiline={true}\n                            helperText=\"Enter all rules and regulation including eligibility for participation\"\n                            rows=\"5\"\n                            variant='outlined'\n                            placeholder=\"Enter all rules and regulation including eligibility for participation\"\n                            autoComplete='off'\n                            onChange={(e) => { props.setRules(e.target.value) }}\n                            value={props.rules}\n                            id=\"rules\"\n                            name=\"rules\"\n                            label=\"Rules\"\n                            fullWidth\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            multiline={true}\n                            helperText=\"Enter your event themes like healthcare fintech\"\n                            rows=\"5\"\n                            variant='outlined'\n                            placeholder=\"Enter your event themes like healthcare fintech\"\n                            autoComplete='off'\n                            onChange={(e) => { props.setThemes(e.target.value) }}\n                            value={props.themes}\n                            id=\"themes\"\n                            name=\"themes\"\n                            label=\"Themes\"\n                            fullWidth\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Prizes</FormLabel>\n                            <Box display=\"flex\" style={{ marginTop: \"10px\" }}>\n                                <Box>\n                                    <TextField onChange={handlePrizeFieldChange(\"title\")} value={prizeTitle || \"\"} label=\"Prize Title\" variant=\"outlined\" style={{ marginRight: \"5px\" }}></TextField>\n                                </Box>\n                                <Box>\n                                    <TextField onChange={handlePrizeFieldChange(\"prize\")} value={prize || \"\"} label=\"Prize\" variant=\"outlined\"></TextField>\n                                </Box>\n                                <Box>\n                                    <TextField onChange={handlePrizeFieldChange(\"desc\")} value={prizeDesc || \"\"} label=\"Prize Description\" variant=\"outlined\"></TextField>\n                                </Box>\n                                <Box>\n                                    <IconButton onClick={handlePrizeAddButton}>Add</IconButton>\n                                </Box>\n                            </Box>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {prizes.map((data, index) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n                                            label={data.title}\n                                            onDelete={handlePrizeDeleteButton(index, data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Fields for your Registration Form</FormLabel>\n                            <FormGroup className={classes.formgroup}>\n                                <FormControlLabel\n                                    control={<Checkbox disabled color=\"primary\" checked={name} onChange={handleChange} name=\"name\" />}\n                                    label=\"Name\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox disabled color=\"primary\" checked={email} onChange={handleChange} name=\"email\" />}\n                                    label=\"Email\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"primary\" checked={college} onChange={handleChange} name=\"college\" />}\n                                    label=\"College\"\n                                />\n                            </FormGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={handleAddMoreButton}>\n                            Add More\n                        </Button>\n                    </Grid>\n\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {selectedFields.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n                                            label={data.title}\n                                            onDelete={handleDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Rounds(Optional)</FormLabel>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            onClick={() => { setRoundsDialogOpen(true) }}>\n                            Add Rounds\n                        </Button>\n                    </Grid>\n\n                    <Grid>\n                        <Paper component=\"ul\" className={classes.root}>\n                            {props.rounds.map((data) => {\n                                return (\n                                    <li key={data.key}>\n                                        <Chip\n                                            label={data.title}\n                                            onDelete={handleRoundDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                    </li>\n                                );\n                            })}\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Typography>By posting the event.I accept the\n                        <Button color=\"primary\" onClick={handleTermsClick}>\n                                Terms and Conditions\n                        </Button>\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <div className={classes.buttons}>\n                    <Button onClick={handleBack} className={classes.button}>\n                        Back\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}>\n                        Post\n                    </Button>\n                </div>\n            </form>\n            <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    hidden: {\n        display: 'none'\n      }\n}));\n\nfunction SuccessPanel(props) {\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n\n    return (\n        <div className={props.showSuccessPanel === false && classes.hidden}>\n        <VerifiedUserIcon fontSize=\"large\"></VerifiedUserIcon>\n            {props.type === \"eventSuccess\" && <div className={classes.root}>\n            \n                <Typography variant=\"h5\">Your Event was added successfully</Typography> \n                <ul>\n                    <li><Typography>Visit your posted events in Profile page</Typography></li>\n                    <li><Typography >Post announcements in dashboard, chat with users, add Moderators and see registered participants data</Typography> </li>\n                </ul>\n                \n                \n            </div>}\n            {props.type === \"registrationSuccess\" && <div className={classes.root}>\n                <Typography>Thanks for registering to the event</Typography>\n                <ul>\n                    <li><Typography>Stay tuned with announcements and notifications</Typography></li>\n                    <li><Typography >Form Teams in Participation tab</Typography> </li>\n                    <li><Typography >Send your queries in event chat</Typography> </li>\n                </ul>  \n                <Button variant=\"outlined\" onClick={props.handleHomeScreenButton}>Home Screen</Button>\n                <Button variant=\"outlined\" style={{marginLeft:\"5px\"}} onClick={props.handleEventScreenButton}>Event Screen</Button>\n            </div>}\n        </div>\n    );\n}\n\nexport default SuccessPanel;\n","import React from 'react';\n\n//Material UI Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n//Components imports\nimport EventPostDetails1 from '../Components/EventPostDetails1';\nimport EventPostDetails2 from '../Components/EventPostDetails2';\nimport EventPostDetails3 from '../Components/EventPostDetails3';\nimport SuccessPanel from '../Components/SuccessPanel';\nimport AuthContext from '../AuthContext';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n//function for copy right\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://ellipseapp.com/\">\n        ellipseapp.com\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3),\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  stepper: {\n    padding: theme.spacing(3, 8, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(12),\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  hidden: {\n    display: 'none'\n  }\n}));\n\n\n\nexport default function Checkout({ history }) {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const { currentUser } = React.useContext(AuthContext);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(['About', 'More Details']);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const [eventName, setEventName] = React.useState(null);\n  const [shortDesc, setShortDesc] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [registrationMode, setRegistrationMode] = React.useState(null);\n\n\n\n  const [regLink, setRegLink] = React.useState(null);\n  const [fees, setFees] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  const [image, setImage] = React.useState(null);\n  const [addressType, setAddressType] = React.useState(null);\n  const [collegeName, setCollegeName] = React.useState(currentUser.college_name);\n  const [collegeId, setCollegeId] = React.useState(currentUser.college_id)\n  const [building, setBuildingAdress] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(currentUser.name + \",\" + currentUser.college_name);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const [participantsType, setParticipantsType] = React.useState(\"open\");\n  const [fields, setFields] = React.useState([]);\n  const [platformDetails, setPlatformDetails] = React.useState('');\n  const [imageName, setImageName] = React.useState(null);\n  const [isTeam, setIsTeam] = React.useState(false);\n  const [minTeamSize, setMinTeamSize] = React.useState(1);\n  const [maxTeamSize, setMaxTeamSize] = React.useState(1);\n  const [rounds, setRounds] = React.useState([]);\n  const [rules, setRules] = React.useState(null);\n  const [prizes, setPrizes] = React.useState([]);\n  const [themes, setThemes] = React.useState(null);\n  const [showSuccessPanel, setShowSuccessPanel] = React.useState(false);\n\n\n\n\n\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <EventPostDetails1\n            name={eventName}\n            desc={shortDesc}\n            startDate={startDate}\n            endDate={endDate}\n            regEndDate={regEndDate}\n            eventMode={eventMode}\n            eventType={eventType}\n            about={about}\n            feeType={feeType}\n            registrationMode={registrationMode}\n            setName={setEventName}\n            setDesc={setShortDesc}\n            setStartDate={setStartDate}\n            setEndDate={setendDate}\n            setRegEndDate={setRegEndDate}\n            setEventMode={setEventMode}\n            setEventType={setEventType}\n            setRegistrationMode={setRegistrationMode}\n            setAbout={setAbout}\n            handleNext={handleNext}\n            setFeeType={setFeeType}\n            steps={steps}\n            setSteps={setSteps} />);\n      case 1:\n        return (\n          <EventPostDetails2\n            handleBack={handleBack}\n            handleEventPost={handleEventPost}\n            eventMode={eventMode}\n            feeType={feeType}\n            eventThemes={eventThemes}\n            eventPoster={image}\n            regLink={regLink}\n            regFees={fees}\n            about={about}\n            requirements={selectedrequirements}\n            college={collegeName}\n            building={building}\n            organizer={organizer}\n            registrationMode={registrationMode}\n            venueCollege={venueCollege}\n            participantsType={participantsType}\n            platformDetails={platformDetails}\n            poster={image}\n            isTeam={isTeam}\n            minTeamSize={minTeamSize}\n            maxTeamSize={maxTeamSize}\n            setIsTeam={setIsTeam}\n            setMinTeamSize={setMinTeamSize}\n            setMaxTeamSize={setMaxTeamSize}\n            imageName={imageName}\n            setImageName={setImageName}\n            setPlatformDetails={setPlatformDetails}\n            setThemes={setEventThemes}\n            setPoster={setImage}\n            setRegLink={setRegLink}\n            setFees={setFees}\n            setRequirements={setSelectedRequirements}\n            setOrganizer={setOrganizer}\n            setAddressType={setAddressType}\n            setCollegeName={setCollegeName}\n            setCollegeId={setCollegeId}\n            setBuilding={setBuildingAdress}\n            setVenueCollege={setVenueCollege}\n            setAbout={setAbout}\n            setParticipantsType={setParticipantsType}\n            handleNext={registrationMode === \"form\" ? handleNext : handlePostwithoutregFileds} />\n        );\n      case 2:\n        return (\n          <EventPostDetails3\n            handleBack={handleBack}\n            fields={fields}\n            setFields={setRegFields}\n            rounds={rounds}\n            setRounds={setRounds}\n            rules={rules}\n            setRules={setRules}\n            prizes={prizes}\n            setPrizes={setPrizes}\n            themes={themes}\n            setThemes={setThemes}\n            handlePost={handleEventPost}>\n          </EventPostDetails3>);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  const handleEventPost = (allFields) => {\n    var oAllowed = false;\n    if (participantsType === \"open\") {\n      oAllowed = true\n    }\n    // console.log(themes)\n    setLoading(true);\n    try {\n      var data = new FormData();\n      const payload = {\n        user_id: currentUser.user_id,\n        name: eventName,\n        description: shortDesc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        reg_link: regLink,\n        fee: fees,\n        about: about,\n        // organizer: organizer,\n        fee_type: feeType,\n        requirements: selectedrequirements,\n        college_name: collegeName,\n        college_id: collegeId,\n        venue_type: addressType,\n        venue: building,\n        reg_fields: allFields,\n        reg_mode: registrationMode,\n        o_allowed: oAllowed,\n        platform_details: platformDetails,\n        isTeamed: isTeam,\n        team_size: { min_team_size: minTeamSize, max_team_size: maxTeamSize },\n        rounds: rounds,\n        rules: rules,\n        prizes: prizes,\n        themes: themes\n      };\n      data = JSON.stringify(payload);\n      fetch(process.env.REACT_APP_API_URL + '/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data,\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            var data2 = new FormData();\n            data2.append(\"image\", image);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${value.eventId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data2,\n            }).then(response => {\n              if (response.status === 200) {\n                response.json().then(val => {\n                  setLoading(false);\n                  setShowSuccessPanel(true)\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"Event added successfully.Manage your posted events from your profile page\",\n                    type: \"success\",\n                    autoHide: \"4000\"\n                  })\n                })\n              }\n              else {\n                setLoading(false);\n                setShowSuccessPanel(true);\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: \"Poster upload is not successfull try again in edit event in your events\",\n                  type: \"error\",\n                  autoHide: '3000',\n                })\n              }\n            })\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            setLoading(false);\n            // console.log(value);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: \"Something went wrong try again\",\n              type: \"errors\",\n              autoHide: \"4000\"\n            })\n          })\n        }\n      })\n\n\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: '5000',\n      })\n    }\n  }\n  // setLoading(false);\n  function setRegFields(f) {\n    setFields(f);\n  }\n\n  function handlePostwithoutregFileds() {\n    handleEventPost(null);\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n    // setIsTeam(false)\n  };\n\n  function handleCloseButton() {\n    history.goBack();\n  }\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Event added successfully.Manage your posted events from your profile page\") {\n      history.replace(\"/home\");\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      {<Backdrop open={loading} className={classes.backdrop}><CircularProgress></CircularProgress></Backdrop>}\n      <main className={classes.layout}>\n\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleCloseButton}>\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n        <Paper className={classes.paper}>\n          <SuccessPanel type=\"eventSuccess\" showSuccessPanel={showSuccessPanel}></SuccessPanel>\n          <div className={showSuccessPanel && classes.hidden}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              Post your Event\n          </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Thank you.\n                </Typography>\n                </React.Fragment>\n              ) : (\n                  <React.Fragment>\n                    {getStepContent(activeStep)}\n                  </React.Fragment>\n                )}\n            </React.Fragment>\n          </div>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\n// import AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    avatarLetterStyle: {\n        fontFamily: 'Gugi',\n        fontWeight: 'bold',\n        fontSize: '1.3em',\n        marginTop: theme.spacing(0.5)\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            <Box display=\"flex\">\n                <Box flexGrow={1} paddingTop={1}>\n                    <Divider></Divider>\n                </Box>\n                <Typography\n                    variant=\"body2\">\n                    {props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}\n                </Typography>\n                <Box flexGrow={1} paddingTop={1}>\n                    <Divider></Divider>\n                </Box>\n\n            </Box>\n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar className={classes.avatar} color=\"primary\" alt={'EllipseBot'}>\n                        <Typography className={classes.avatarLetterStyle}>E</Typography>\n                    </Avatar>\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{\"EllipseBot  \"}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        {/* <Box>\n                            <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton>\n                            {currentUser.user_id === message.user_id && <IconButton style={{ padding: '0px', margin: '0px' }}>\n                                <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                            </IconButton>}\n                        </Box> */}\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                        </Typography>\n\n                    </Box>\n                    <Button onClick={props.handleViewClick} color=\"primary\">View Team</Button>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\n// import AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    avatarLetterStyle: {\n        fontFamily: 'Gugi',\n        fontWeight: 'bold',\n        fontSize: '1.3em',\n        marginTop: theme.spacing(0.5)\n    }\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n            <Box className={classes.root5}>\n                <Avatar className={classes.avatar} color=\"primary\" alt={'EllipseBot'}  >\n                    <Typography className={classes.avatarLetterStyle}>E</Typography>\n                </Avatar>\n            </Box>\n            <Box className={classes.root2} whiteSpace=\"normal\">\n                <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                    <Box flexGrow={1} className={classes.message}>\n                        <Box>\n                            <Typography variant=\"body1\">{\"EllipseBot  \"}</Typography>\n                        </Box>\n                        <Box style={{ marginLeft: \"7px\" }}>\n                            <Typography component=\"span\"\n                                variant=\"body2\"\n                                style={{ fontSize: \"0.9em\" }}\n                                color=\"textSecondary\">\n                                {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    {/* <Box>\n                        <IconButton style={{ padding: '0px', margin: '0px' }}>\n                            <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                        </IconButton>\n                        {currentUser.user_id === message.user_id && <IconButton style={{ padding: '0px', margin: '0px' }}>\n                            <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n                        </IconButton>}\n                    </Box> */}\n                </Box>\n                <Box whiteSpace=\"normal\">\n                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                        <Linkify\n                            componentDecorator={(decoratedHref, decoratedText, key) => (\n                                <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                    {decoratedText}\n                                </a>\n                            )}\n                        >{message.message}</Linkify>\n                    </Typography>\n                </Box>\n                <Button onClick={props.handleViewClick} color=\"primary\">View Team</Button>\n            </Box>\n        </Box>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\n\n//Materail imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Linkify from 'react-linkify';\n\nimport { Typography, Divider, IconButton } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport AuthContext from '../AuthContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        position: 'fixed',\n        width: '75%',\n        height: '100vh',\n        backgroundColor: theme.palette.primary.light,\n\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    date: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        // overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n\n}));\n\nfunction ChatMessage(props) {\n    const classes = useStyles();\n    const message = props.message;\n    // const [userType, setUserType] = React.useState('')\n    const date = new Date(message.date);\n    const { currentUser } = React.useContext(AuthContext);\n\n    // console.log(props.repliedMessage);\n\n    // useEffect(() => {\n    //     if (props.adminId === message.user_id) {\n    //         setUserType(' (Admin)')\n    //     }\n    // }, [props.adminId, message])\n\n    return (\n        <React.Fragment>\n            {props.divider && <Divider></Divider>}\n            {props.divider && <Box m={1} p={1} key={props.index} position=\"sticky\" className={classes.root6}>\n                <Typography variant=\"body2\">{props.currentDate.toDateString() === props.messageDate.toDateString() ? \"Today\" : props.messageDate.toDateString()}</Typography>\n            </Box>}\n            <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                <Box className={classes.root5}>\n                    <Avatar  alt={message.userName} src={message.user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${message.user_pic}`} />\n                </Box>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                    <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                        <Box flexGrow={1} className={classes.message}>\n                            <Box>\n                                <Typography variant=\"body1\">{message.user_name + \"   \"}</Typography>\n                            </Box>\n                            <Box style={{ marginLeft: \"7px\" }}>\n                                <Typography component=\"span\"\n                                    variant=\"body2\"\n                                    style={{ fontSize: \"0.9em\" }}\n                                    color=\"textSecondary\">\n                                    {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box>\n                            {/* <IconButton onClick={props.handleReplyButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                                <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n                            </IconButton> */}\n                            {currentUser.user_id === message.user_id && <IconButton onClick={props.handleMessageDeleteButton(message)} style={{ padding: '0px', margin: '0px' }}>\n                            <DeleteOutlinedIcon style={{ color: '#aaaaaa' }}></DeleteOutlinedIcon>\n                            </IconButton>}\n                        </Box>\n                    </Box>\n\n                    <Box>\n                        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                            <Linkify\n                                componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{message.message}</Linkify>\n                        </Typography>\n                    </Box>\n                    <Box m={1} p={1} key={props.index + 1} className={classes.root3}>\n                        <Box className={classes.root5}>\n                            <Avatar variant=\"square\" alt={props.repliedMessage[0].userName} src={props.repliedMessage[0].user_pic && process.env.REACT_APP_API_URL + `/api/image?id=${props.repliedMessage[0].user_pic}`} />\n                        </Box>\n                        <Box className={classes.root2} whiteSpace=\"normal\">\n                            <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                <Box flexGrow={1} className={classes.message}>\n                                    <Box>\n                                        <Typography variant=\"body1\">{props.repliedMessage[0].user_name + \"   \"}</Typography>\n                                    </Box>\n                                    <Box style={{ marginLeft: \"7px\" }}>\n                                        <Typography component=\"span\"\n                                            variant=\"body2\"\n                                            style={{ fontSize: \"0.9em\" }}\n                                            color=\"textSecondary\">\n                                            {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                            </Box>\n                            <Box>\n                                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\" className={classes.inline}>\n                                    <Linkify\n                                        componentDecorator={(decoratedHref, decoratedText, key) => (\n                                            <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                {decoratedText}\n                                            </a>\n                                        )}\n                                    >{props.repliedMessage[0].message}</Linkify>\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </React.Fragment>\n    );\n}\n\nexport default ChatMessage;\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\n\nexport default function AlertDialog(props) {\n\n    const [reply,setReply] = React.useState(null);\n\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  const handleSendButton = () => {\n    props.handleReplyConfirmation(reply)\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Reply Message\"}</DialogTitle>\n        <DialogContent>\n          <TextField name=\"reply\" value={reply} onChange={(ev)=>{setReply(ev.target.value)}} >\n\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSendButton} color=\"primary\" autoFocus>\n            send\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n// import clsx from 'clsx';\n\n//Materail imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottomBar: {\n        // position: 'absolute',\n        // right: theme.spacing(4),\n        // bottom: theme.spacing(4),\n        // left: theme.spacing(4),\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n        \n    },\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const classes = useStyles();\n    const [sendButtonDisabled, setSendButtonDisabled] = React.useState(true);\n    const [newmessage, setNewMessage] = React.useState(null);\n    \n    const handleNewMessage = (event) => {\n        setNewMessage(event.target.value);\n        setSendButtonDisabled(false);\n        if (event.target.value === \"\") {\n            setSendButtonDisabled(true);\n        }\n    }\n\n    const handleSendClick = (e) => {\n\n        props.handleSend(newmessage);\n        setSendButtonDisabled(true);\n        setNewMessage(\"\");\n    }\n\n    const handleKeyPress = (e) => {\n        // console.log(newmessage);\n        if (newmessage.length > 1) {\n            // console.log(newmessage.length);\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                props.handleSend(newmessage);\n                setSendButtonDisabled(true);\n                setNewMessage(\"\");\n            }\n        }\n\n    }\n\n\n\n\n    return (\n        <Box className={classes.bottomBar} display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <TextField\n            disabled={props.loading}\n                fullWidth\n                placeholder=\"Type your message\"\n                multiline\n                onChange={handleNewMessage}\n                value={newmessage || \"\"}\n                rowsMax=\"3\"\n                onKeyUp={handleKeyPress}>\n\n            </TextField>\n            <IconButton onClick={handleSendClick} disabled={sendButtonDisabled} className={classes.sendIcon}>\n                <SendIcon></SendIcon>\n            </IconButton>\n\n        </Box>\n    );\n}","import React from 'react';\nimport { withRouter, } from \"react-router\";\n\n//Material Ui imports\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\n//other component imports\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageBox3 from './MessageBox3';\nimport MessageBox4 from './MessageBox4';\nimport MessageBox5 from './MessageBox5';\nimport MessageDeleteDialog from './MessageDeleteDialog';\nimport MessageReplyDialog from './MessageReplyDialog';\nimport AuthContext from '../AuthContext';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport ChatTextField from './MainChatTextField';\nimport { cleanup } from '@testing-library/react';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n        height: '100%'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    textField: {\n        textAlign: 'center',\n        position: 'fixed',\n        width: '75%',\n        bottom: 0,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        },\n    },\n    header: {\n        position: 'sticky',\n        top: 64,\n        backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(2),\n        zIndex: 8,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n    }\n\n}));\n\nfunction MainChatPanel(props) {\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const team = props.event;\n    \n    const [loading, setLoading] = React.useState(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [openReplyDialog, setOpenReplyDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n    const [messageToBeReplied, setMessagesToBeReplied] = React.useState({});\n\n    const [reference, setReferenece] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { eventChatMessages } = React.useContext(WebSocketDataContext);\n    const { setEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { teamChatMessages } = React.useContext(WebSocketDataContext);\n    const { setTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedTeamChatMessages, setDeletedTeamChatMessages } = React.useContext(WebSocketDataContext);\n    const { deletedEventChatMessages, setDeletedEventChatMessages } = React.useContext(WebSocketDataContext);\n\n\n    React.useEffect(() => {\n\n    }, [])\n\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            if (props.chatType === \"event\") {\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_event_room\",\n                    event_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n            else {\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_team_room\",\n                    team_id: event._id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n        }\n    }, [webSocketContext, currentUser, event, props])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        if (props.chatType === \"event\") {\n            eventChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                    setEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n                }\n            });\n        }\n        else {\n            teamChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.team_id === event._id) {\n                    setChatMessages(chatMessages => [...chatMessages, cMes]);\n                    setTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n                }\n            });\n        }\n        // eslint-disable-next-line\n    }, [eventChatMessages, event, teamChatMessages])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        if (props.chatType === \"event\") {\n            deletedEventChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.event_id === event._id) {\n                    setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                    setDeletedEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n                }\n            })\n        }\n        else {\n            deletedTeamChatMessages.forEach(mes => {\n                const cMes = mes.msg;\n                if (mes.team_id === event._id) {\n                    setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                    setDeletedTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n                }\n            })\n        }\n        // eslint-disable-next-line\n    }, [deletedEventChatMessages, deletedTeamChatMessages])\n\n\n    // if (webSocketContext) {\n    //     webSocketContext.onmessage = (message) => {\n    //         const mes = JSON.parse(message.data);\n    //         const cMes = mes.msg;\n    //         if (props.chatType === \"event\") {\n    //             if (mes.event_id === event._id) {\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n    //         else {\n    //             if (mes.team_id === event._id) {\n    //                 setChatMessages(chatMessages => [...chatMessages, cMes]);\n    //             }\n    //         }\n\n    //     }\n    // }\n\n\n    React.useEffect(() => {\n        // console.log(props.chatType);\n        setLoading(true)\n        if (props.chatType === \"event\") {\n            fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setChatMessages(value);\n                    setLoading(false);\n                    // webConnect();\n                })\n            })\n        } else {\n            fetch(process.env.REACT_APP_API_URL + `/api/chat/load_team_chat_messages?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setChatMessages(value);\n                    setLoading(false);\n                    // webConnect();\n                })\n            })\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n\n\n    const handleSendClick = (message) => {\n        const d = new Date();\n        if (props.chatType === \"event\") {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_event_message\",\n                event_id: event._id,\n                msg: {\n                    'id': user.user_id + Date.now(),\n                    'user_id': user.user_id,\n                    'user_name': user.name,\n                    'user_pic': user.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n        else {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_team_message\",\n                team_id: event._id,\n                msg: {\n                    'id': user.user_id + Date.now(),\n                    'user_id': user.user_id,\n                    'user_name': user.name,\n                    'user_pic': user.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(mes);\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        if (props.chatType === \"event\") {\n            webSocketContext.send(JSON.stringify({\n                action: \"delete_event_chat_message\",\n                event_id: event._id,\n                msg: mes\n            }));\n            setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        }\n        else {\n            webSocketContext.send(JSON.stringify({\n                action: \"delete_team_chat_message\",\n                team_id: event._id,\n                msg: mes\n            }));\n            setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        }\n        setOpenDeleteDialog(false);\n    }\n\n    const handleReplyButton = (mes) => () => {\n        setMessagesToBeReplied(mes);\n        setOpenReplyDialog(true);\n    }\n\n    const handleReplyConfirmation = (mes) => {\n        const d = new Date();\n        webSocketContext.send(JSON.stringify({\n            action: \"send_event_message\",\n            event_id: event._id,\n            msg: {\n                'id': user.user_id + Date.now(),\n                'user_id': user.user_id,\n                'user_name': user.name,\n                'user_pic': user.profile_pic,\n                'message_type': 'reply_text_message',\n                'message': mes,\n                'replied_to': messageToBeReplied.id,\n                'date': d.toISOString()\n            }\n        }));\n        setMessageToBeDeleted(\"\");\n        setOpenReplyDialog(false);\n    }\n\n    const handleInfoButton = (id) => () => {\n        props.history.push(`/event/${id}`)\n        // setSelectedEvent(allEvents.filter((e => { return e._id === id }))[0]);\n        // setOpen(true);\n    }\n\n    const handleBackButton = () => {\n        props.setSelectedChat(null);\n        props.openDialog(false)\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.header}>\n                        <Box display=\"flex\">\n                            <Box >\n                                { props.mobile && <IconButton style={{ marginTop: '0px', padding: '0px' }} onClick={handleBackButton}>\n                                    <ArrowBackIosIcon></ArrowBackIosIcon>\n                                </IconButton>}\n                            </Box>\n                            <Box flexGrow={1}>\n                                <Typography>{props.chatType === \"event\" ? event.name : team.team_name}</Typography>\n                            </Box>\n                            <Box>\n                                <IconButton style={{ marginTop: '0px', padding: '0px' }} onClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}>\n                                    <InfoIcon></InfoIcon>\n                                </IconButton>\n                            </Box>\n                        </Box>\n                    </div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.message_type === 'team_status_update_message') {\n                                        return (\n                                            <MessageBox3\n                                                handleViewClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                handleReplyButton={handleReplyButton}\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox3>\n                                        );\n                                    }\n                                    else if (value.message_type === 'reply_text_message') {\n                                        const repliedMessage = chatMessages.filter(m => { return m.id === value.replied_to })\n                                        return (\n                                            <MessageBox5\n                                                divider={true}\n                                                repliedMessage={repliedMessage}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                handleReplyButton={handleReplyButton}\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox5>\n                                        );\n                                    }\n                                    return (\n                                        <MessageBox1\n                                            adminId={props.chatType === \"event\" ? event.user_id : \"\"}\n                                            message={value}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox1>\n                                    );\n\n                                }\n                                if (value.message_type === 'team_status_update_message') {\n                                    return (\n                                        <MessageBox4\n                                            handleViewClick={handleInfoButton(props.chatType === \"event\" ? event._id : team.event_id)}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox4>\n                                    )\n                                }\n                                else if (value.message_type === 'reply_text_message') {\n                                    const repliedMessage = chatMessages.filter(m => { return m.id === value.replied_to })\n                                    return (\n                                        <MessageBox5\n                                            divider={false}\n                                            repliedMessage={repliedMessage}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            handleReplyButton={handleReplyButton}\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox5>\n                                    );\n                                }\n                                return (\n                                    <MessageBox2\n                                        message={value}\n                                        adminId={props.chatType === \"event\" ? event.user_id : \"\"}\n                                        currentDate={currentDate}\n                                        handleReplyButton={handleReplyButton}\n                                        handleMessageDeleteButton={handleMessageDeleteButton}\n                                        messageDate={messageDate}\n                                        index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '60px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                    </Box>\n                    <div className={classes.textField}>\n                        <ChatTextField\n                            loading={loading}\n                            open={undefined}\n                            handleSend={handleSendClick}  ></ChatTextField>\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n\n                    <MessageReplyDialog\n                        open={openReplyDialog}\n                        message={messageToBeReplied}\n                        setOpen={setOpenReplyDialog}\n                        handleReplyConfirmation={handleReplyConfirmation}></MessageReplyDialog>\n                    \n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(MainChatPanel);\n\n// return (\n//     <React.Fragment>\n//         {/* <Divider></Divider> */}\n//         <Box m={1} p={1} key={index} className={classes.root6}>\n//             <Box flexGrow={1} marginTop={1}>\n//                 <Divider></Divider>\n//             </Box>\n//             <Box>\n//                 <Typography variant=\"body2\">{currentDate.toDateString() === messageDate.toDateString() ? \"Today\" : messageDate.toDateString()}</Typography>\n//             </Box>\n//             <Box flexGrow={1} marginTop={1}>\n//                 <Divider></Divider>\n//             </Box>\n//         </Box>\n//         <Box m={1} p={1} key={index + 1} className={classes.root3}>\n//             <Box className={classes.root5}>\n//                 <Avatar variant=\"square\" alt={value.userName} src={(value.user_pic !== null && value.user_pic !== \"\") && process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//             </Box>\n//             <Box className={classes.root2} whiteSpace=\"normal\">\n//                 <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n//                     <Box flexGrow={1} className={classes.message}>\n//                         <Box>\n//                             <Typography variant=\"body1\">{value.user_name + \"   \"}</Typography>\n//                         </Box>\n//                         <Box style={{ marginLeft: \"7px\" }}>\n//                             <Typography component=\"span\"\n//                                 variant=\"body2\"\n//                                 style={{ fontSize: \"0.9em\" }}\n//                                 color=\"textSecondary\">\n//                                 {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n//                             </Typography>\n//                         </Box>\n//                     </Box>\n//                     <Box>\n//                         <IconButton style={{ padding: '0px', margin: '0px' }}>\n//                             <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n//                         </IconButton>\n//                         {user.user_id === value.user_id && <IconButton onClick={handleMessageDeleteButton(value)} style={{ padding: '0px', margin: '0px' }}>\n//                             <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n//                         </IconButton>}\n//                     </Box>\n//                 </Box>\n\n//                 <Box>\n//                     <Typography variant=\"body2\"\n//                         style={{ fontSize: \"1.2em\" }}\n//                         color=\"textSecondary\">{value.message}</Typography>\n//                 </Box>\n//             </Box>\n//         </Box>\n//     </React.Fragment>\n// );\n\n\n// return (\n//     <Box m={1} p={1} key={index + 1} className={classes.root3}>\n//         <Box className={classes.root5}>\n//             <Avatar variant=\"square\" alt={value.userName} src={process.env.REACT_APP_API_URL + `/api/image?id=${value.user_pic}`} />\n//         </Box>\n//         <Box className={classes.root2} whiteSpace=\"normal\">\n//             <Box style={{ display: 'flex', justifyContent: 'flex-start' }}>\n//                 <Box flexGrow={1} className={classes.message}>\n//                     <Box>\n//                         <Typography variant=\"body1\">{value.user_name + \"   \"}</Typography>\n//                     </Box>\n//                     <Box style={{ marginLeft: \"7px\" }}>\n//                         <Typography component=\"span\"\n//                             variant=\"body2\"\n//                             style={{ fontSize: \"0.9em\" }}\n//                             color=\"textSecondary\">\n//                             {\"   \" + date.toLocaleTimeString([], { timeStyle: 'short' })}\n//                         </Typography>\n//                     </Box>\n//                 </Box>\n//                 <Box>\n//                     <IconButton style={{ padding: '0px', margin: '0px' }}>\n//                         <ReplyIcon style={{ color: '#aaaaaa' }}></ReplyIcon>\n//                     </IconButton>\n//                     {user.user_id === value.user_id && <IconButton onClick={handleMessageDeleteButton(value)} style={{ padding: '0px', margin: '0px' }}>\n//                         <DeleteIcon style={{ color: '#aaaaaa' }}></DeleteIcon>\n//                     </IconButton>}\n//                 </Box>\n//             </Box>\n//             <Box whiteSpace=\"normal\">\n//                 <Typography className={classes.inline} variant=\"body2\"\n//                     style={{ fontSize: \"1.2em\" }}\n//                     color=\"textSecondary\">{value.message}</Typography>\n//             </Box>\n//         </Box>\n//     </Box>\n// );\n\n\n\n// const webConnect = () => {\n//     const ws = new WebSocket(process.env.REACT_APP_WESOCKET_URL);\n//     ws.onopen = () => {\n//         // console.log(\"connected\")\n//         setWebSocket(ws);\n//         if (props.chatType === \"event\") {\n//             ws.send(JSON.stringify({\n//                 action: \"join_event_room\",\n//                 event_id: event._id,\n//                 msg: {\n//                     'user_id': currentUser.user_id,\n//                 }\n//             }));\n//         }\n//         else {\n//             ws.send(JSON.stringify({\n//                 action: \"join_team_room\",\n//                 team_id: event._id,\n//                 msg: {\n//                     'user_id': currentUser.user_id,\n//                 }\n//             }));\n//         }\n\n//         ws.onmessage = (message) => {\n//             const mes = JSON.parse(message.data);\n//             const cMes = mes.msg;\n//             if (props.chatType === \"event\") {\n//                 if (mes.event_id === event._id) {\n//                     setChatMessages(chatMessages => [...chatMessages, cMes]);\n//                 }\n//             }\n//             else {\n//                 if (mes.team_id === event._id) {\n//                     setChatMessages(chatMessages => [...chatMessages, cMes]);\n//                 }\n//             }\n\n//         }\n//         setLoading(false)\n//     }\n//     ws.onclose = () => {\n//         check();\n//         console.log(\"closed\");\n//     }\n// }","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { Divider, Paper } from '@material-ui/core';\nimport EventsContext from '../EventsContext';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n\nimport IconButton from '@material-ui/core/IconButton';\nimport EventIcon from '@material-ui/icons/Event';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Typography from '@material-ui/core/Typography';\n\nimport AuthContext from '../AuthContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'fixed',\n        width: '25%',\n        height: '93%',\n        backgroundColor: theme.palette.secondary.main,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            height: '86%'\n        },\n    },\n    root2: {\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    divider: {\n        backgroundColor: theme.palette.primary.main,\n\n    }\n}));\n\nfunction ChatPage(props) {\n    const token = localStorage.getItem('token');\n    const theme = useTheme();\n    const classes = useStyles();\n    const { allEvents } = React.useContext(EventsContext);\n    const [teams, setTeams] = React.useState([]);\n    // const [open, setOpen] = React.useState(false);\n    const [checked, setChecked] = React.useState([0]);\n    const [chatValue,setChatValue] = React.useState(0);\n    const {currentUser} = React.useContext(AuthContext);\n\n\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true || val.user_id === currentUser.user_id;\n    });\n\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + '/api/user/get_all_teams', {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            // console.log(response);\n            if (response.status === 200) {\n                response.json().then(value => {\n\n                    setTeams(value);\n                    // console.log(value);\n                })\n            }\n            else if (response.status === 401) {\n                localStorage.removeItem('token');\n                // setAuthorized(false);\n            }\n\n        })\n    }, [token])\n    const handleToggle = (value, userid) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // setOpen(!open);\n        props.setChatType('event')\n        props.setChatId(value);\n        props.setAdminId(userid);\n        if (theme.breakpoints.width('md') >= window.innerWidth) {\n            props.openDialog(true);\n        }\n        setChecked(newChecked);\n    };\n\n    const handleToggle2 = (value, userid) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        // setOpen(!open);\n        props.setChatType('team')\n        props.setChatId(value);\n        props.setAdminId(userid);\n        setChecked(newChecked);\n        if (theme.breakpoints.width('md') >= window.innerWidth) {\n            props.openDialog(true);\n        }\n    };\n\n    // const handleClick = (v) => () => {\n    //     console.log(v);\n    //     // history.push('/chat/1')\n    // };\n\n    const handleChatChange = (value) => () => {\n        setChatValue(value)\n    }\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Paper className={classes.root}>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Box paddingRight={1} paddingLeft={1}>\n                            <IconButton onClick={handleChatChange(0)}>\n                                <Box style={{ width: \"100px\" }}>\n                                    <Box>\n                                        <EventIcon color={chatValue === 0 ? \"primary\" : \"default\"}></EventIcon>\n                                    </Box>\n                                    <Box >\n                                        <Divider className={chatValue === 0 && classes.divider}></Divider>\n                                    </Box>\n                                </Box>\n                            </IconButton>\n                        </Box>\n                        <Box paddingRight={1} paddingLeft={1}>\n                            <IconButton onClick={handleChatChange(1)}>\n                                <Box style={{ width: \"100px\" }}>\n                                    <Box>\n                                        <GroupIcon color={chatValue === 1 ? \"primary\" : \"default\"}></GroupIcon>\n                                    </Box>\n                                    <Box>\n                                        <Divider className={chatValue === 1 && classes.divider}></Divider>\n                                    </Box>\n                                </Box>\n                            </IconButton>\n                        </Box>\n                    </Box>\n                    <List className={classes.root2}>\n                        {chatValue === 0 && regEvents.map((value) => {\n                            const labelId = `checkbox-list-label-${value._id}`;\n                            return (\n                                <React.Fragment>\n                                    <ListItem key={value._id} role={undefined} dense button\n                                        selected={checked.indexOf(value) !== -1}\n                                        onClick={handleToggle(value, value.user_id)}>\n                                        <ListItemIcon>\n                                            <ListItemAvatar>\n                                                <Avatar\n                                                    alt={`Avatar n°${value + 1}`}\n                                                    src={process.env.REACT_APP_API_URL + `/api/image?id=${value.poster_url}`}\n                                                />\n                                            </ListItemAvatar>\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={value.name} />\n                                        <ArrowForwardIosIcon></ArrowForwardIosIcon>\n                                        {/* {checked.indexOf(value._id) !== -1 ? <ExpandLess /> : <ExpandMore />} */}\n                                    </ListItem>\n                                    {/* <Collapse in={checked.indexOf(value._id) !== -1} timeout=\"auto\" unmountOnExit> */}\n                                    {/* <List component=\"div\" disablePadding>\n                                            <ListItem key={value} className={classes.nested} button onClick={handleClick(value)}>\n                                                <ListItemText primary=\"Not Registered\" />\n                                                <KeyboardArrowRightIcon></KeyboardArrowRightIcon>\n                                            </ListItem>\n                                        </List>\n                                        <List component=\"div\" disablePadding>\n                                            <ListItem button className={classes.nested}>\n                                                <ListItemText primary=\"Registered\" />\n                                                <KeyboardArrowRightIcon></KeyboardArrowRightIcon>\n                                            </ListItem>\n                                        </List> */}\n                                    {/* </Collapse> */}\n                                </React.Fragment>\n                            );\n                        })}\n                        {\n                            chatValue === 0 && regEvents.length === 0 && <Typography>No Events Found, Register or host event to join one</Typography>\n                        }\n                        {chatValue === 1 &&teams.map((value) => {\n                            const labelId = `checkbox-list-label-${value._id}`;\n                            return (\n                                <React.Fragment>\n                                    <ListItem key={value._id} role={undefined} dense button\n                                        selected={checked.indexOf(value) !== -1}\n                                        onClick={handleToggle2(value, value.user_id)}>\n                                        <ListItemIcon>\n                                            <ListItemAvatar>\n                                                <Avatar\n                                                    alt={value.team_name}\n                                                    src=\"abc.jpg\"\n                                                />\n                                            </ListItemAvatar>\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={value.team_name} />\n                                        <ArrowForwardIosIcon></ArrowForwardIosIcon>\n                                    </ListItem>\n                                </React.Fragment>\n                            );\n                        })}\n                        {\n                            chatValue === 1 && teams.length === 0 && <Typography>No Teams found</Typography>\n                        }\n                    </List>\n                </Paper>\n            </div>\n        </div>\n    );\n}\n\nexport default ChatPage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n\nimport ChatPanel from '../Components/MainChatPanel';\nimport ChatContactsPanel from '../Pages/ChatContactsPanel';\nimport AuthContext from '../AuthContext';\n// import MobileChatPanel from '../Components/MobileChatPanel';\n// import { Typography, Paper } from '@material-ui/core';\n// import socket from '../SocketClient';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.light\n\n    },\n    mobile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nfunction ChatPage({ history }) {\n    // const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [selectedChat, setSelectedChat] = React.useState(null);\n    const [adminId, setAdminId] = React.useState(null);\n    const [checked, setChecked] = React.useState([0]);\n    const [chatType, setChatType] = React.useState('');\n    const [mobileChat, setMobileChat] = React.useState(false);\n\n\n    return (\n        <div>\n            <div>\n                {!mobileChat && <Grid container >\n                    <Grid item xs={12} sm={12} md={3} lg={3}  >\n                        <ChatContactsPanel mobile={false} chatType={chatType} openDialog={setMobileChat} setChatType={setChatType} checked={checked} setChecked={setChecked} setAdminId={setAdminId} setChatId={setSelectedChat}></ChatContactsPanel>\n                    </Grid>\n                    <Grid item xs={9} sm={12} md={9} lg={9}>\n                        {selectedChat != null && <ChatPanel chatType={chatType} user={currentUser} adminId={adminId} event={selectedChat}></ChatPanel>}\n                    </Grid>\n                </Grid>}\n                {mobileChat && <Grid container>\n                    <Grid item xs={12}>\n                        <Paper className={classes.mobile}>\n                            {selectedChat != null && <ChatPanel setSelectedChat={setSelectedChat} mobile={true} openDialog={setMobileChat} chatType={chatType} user={currentUser} adminId={adminId} event={selectedChat}></ChatPanel>}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default ChatPage;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function AlertDialog(props) {\n\n    const theme = useTheme();\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }}\n            >\n                <DialogTitle id=\"title\">{\"Terms and Conditions\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <ul>\n                            <li>Provided registration data and your profile will be shared with event admin</li> \n                        </ul>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AuthContext from '../AuthContext';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n//other component imports\nimport TermsandConditions from '../Components/EventRegisterTermsandConditions';\nimport EventsContext from '../EventsContext';\nimport ActiveEventsContext from '../ActiveEventsContext';\nimport SuccessPanel from '../Components/SuccessPanel';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst EventRegistrationForm = (props) => {\n  const classes = useStyles();\n  const token = localStorage.getItem('token');\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n\n  const [canRegister, setCanRegister] = React.useState(true);\n  const [userMessage, setUserMessage] = React.useState(false);\n\n  const [formValues, setFormValues] = React.useState(null);\n  const [uploadFiles, setUploadFiles] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [normalFields, setNormalFields] = React.useState([]);\n  const [dropDownFields, setDropDownFields] = React.useState([]);\n  const [checkboxFields, setCheckBoxFields] = React.useState([]);\n  const [radioFields, setRadioFields] = React.useState([]);\n  const [dateFields, setDateFields] = React.useState([]);\n  const [longDescFields, setLongDescFields] = React.useState([]);\n  const [linkFields, setLinkFields] = React.useState([]);\n  const [fileUploadFields, setFileUploadFields] = React.useState([]);\n\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const id = props.match.params.eventId;\n  const [backDropOpen, setBackDropOpen] = React.useState(true);\n  const [event, setEvent] = React.useState({});\n  const [checkedValues, setCheckedValues] = React.useState([]);\n  const colleges = [\"VIT University,Vellore\", \"GITAM University\", \"SRM University\"];\n  const [tandcOpen, setTandcOpen] = React.useState(false);\n  const [showSuccessPanel, setShowSuccessPanel] = React.useState(false);\n\n  const { currentUser } = React.useContext(AuthContext);\n  const { setAllEvents } = React.useContext(EventsContext);\n  const { setActiveEvents } = React.useContext(ActiveEventsContext);\n\n\n  function handleTermsClick() {\n    setTandcOpen(true);\n  }\n\n  React.useEffect(() => {\n    if (currentUser.designation === \"Student\" || currentUser.designation === \"Faculty\") {\n      // setUserType(true);\n    }\n    else {\n      setCanRegister(false);\n      setUserMessage(currentUser.designation + \" cannot register\")\n    }\n    if (event.status === 'pending') {\n      setCanRegister(false)\n      setUserMessage(\"Event is not accepted yet check back later\");\n    }\n    if (currentUser.user_id === event.user_id) {\n      setCanRegister(false)\n      setUserMessage(\"An event organizer cannot register\")\n    }\n    const cDate = new Date();\n    const eDate = new Date(event.registration_end_time);\n    if (cDate > eDate) {\n      setCanRegister(false)\n      setUserMessage(\"Registration is closed for this event\")\n    }\n\n    if (event.o_allowed !== undefined) {\n      if (!event.o_allowed) {\n        if (event.college_name === currentUser.college_name) {\n\n        } else {\n          setCanRegister(false)\n          setUserMessage(\"Only \" + event.college_name + \" can participate\")\n        }\n      }\n    }\n\n  }, [event, currentUser])\n\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setEvent(value.event);\n        const allFields = value.event.reg_fields;\n        if (allFields != null) {\n          allFields.forEach(f => {\n            if (f.title === \"Name\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.name }))\n            }\n            else if (f.title === \"Email\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.email }));\n            }\n            else if (f.title === \"College\") {\n              setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.college_name }));\n            }\n            else {\n              setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n            }\n            if (f.field === \"checkbox\") {\n\n            }\n\n          })\n          setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n          setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n          setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n          setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n          setDateFields(allFields.filter((f) => f.field === \"date\"));\n          setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n          setLinkFields(allFields.filter(f => f.field === \"link\"));\n          setFileUploadFields(allFields.filter(f => f.field === \"file_upload\"));\n        }\n        setBackDropOpen(false);\n      })\n    })\n  }, [token, id, currentUser])\n\n  function handleClose() {\n    if (message === \"Registration successful.Stay tunned with notifications and announcements\") {\n      fetch(process.env.REACT_APP_API_URL + '/api/events', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET'\n      }).then(response => {\n        if (response.status === 200) {\n          response.json().then(value => {\n            value.sort((a, b) => {\n              return new Date(a.start_time) - new Date(b.start_time);\n            })\n            setAllEvents(value);\n            setActiveEvents(value.filter(e => {\n              const cDate = new Date();\n              const eDate = new Date(e.finish_time);\n              return cDate < eDate && e.status !== \"pending\"\n            }))\n          })\n        }\n        else if (response.status === 401) {\n          localStorage.removeItem('token');\n        }\n\n      })\n    }\n    setState({ ...state, open: false });\n  }\n\n  function handleChange(event) {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  }\n  const handleChange2 = (name) => (event, values) => {\n    setFormValues({ ...formValues, [name]: values });\n\n  }\n  const handleChange3 = (name) => (event) => {\n    if (event.target.checked) {\n      setCheckedValues(checkedValues => [...checkedValues, { [name]: event.target.name }]);\n      const array = [];\n      checkedValues.forEach((v, i) => {\n        if (v[name]) {\n          array.push(v[name])\n        }\n      });\n      array.push(event.target.name);\n      setFormValues({ ...formValues, [name]: array });\n    }\n  }\n\n  const handleDateChange = (name) => (date) => {\n    setFormValues({ ...formValues, [name]: date })\n  };\n\n  const handleLondDescChange = (event) => {\n    setFormValues({ ...formValues, [event.target.name]: event.target.value })\n  }\n\n  function handleradioChange(event, value) {\n    setFormValues({ ...formValues, [event.target.name]: value });\n  }\n\n  function handleEventRegistration(e) {\n    e.preventDefault();\n    var uploadedFilesIds = [];\n    const formkeys = Object.keys(formValues);\n    const fileFormKeys = Object.keys(uploadFiles);\n    var count = 0;\n    formkeys.forEach(v => {\n      const cField = event.reg_fields.filter((value) => { return value.title === v });\n      if (formValues[v] === null) {\n        if (v.includes(fileFormKeys)) {\n\n        } else {\n          if (cField[0].req) {\n            count = count + 1;\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Please fill in all required fields',\n              type: \"error\",\n              autoHide: 4000\n            });\n          }\n\n        }\n      }\n    })\n    if (fileFormKeys) {\n      fileFormKeys.forEach(f => {\n        const cField = event.reg_fields.filter((value) => { return value.title === f });\n        if (uploadFiles[f] === null) {\n          if (cField[0].req) {\n            count = count + 1;\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: 'Please fill in all required fields',\n              type: \"error\",\n              autoHide: 4000\n            });\n          }\n\n        }\n      })\n    }\n\n    var finalValues = formValues;\n    if (count === 0) {\n      try {\n        if (fileFormKeys.length > 0) {\n          fileFormKeys.forEach((key, index) => {\n            var data1 = new FormData();\n            data1.append('uploaded_file', uploadFiles[key]);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/register/upload_file?id=${id}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n              method: 'POST',\n              body: data1\n            }).then((response) => {\n              if (response.status === 200) {\n                response.json().then(value => {\n                  setFormValues({ ...formValues, [key]: value.file_name })\n                  finalValues[key] = value.file_name\n                  uploadedFilesIds.push({ [key]: value.file_name });\n                  if (uploadedFilesIds.length === fileFormKeys.length) {\n                    var data = new FormData();\n                    const d = { data: finalValues }\n                    data = JSON.stringify(d);\n                    fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n                      headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                      },\n                      method: 'POST',\n                      body: data\n                    }).then(response => {\n                      if (response.status === 200) {\n                        response.json().then(value => {\n                          setLoading(false);\n                          setShowSuccessPanel(true);\n                          setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Registration successful.Stay tunned with notifications and announcements',\n                            type: \"success\",\n                            autoHide: 4000\n                          });\n                        })\n                      }\n                      else if (response.status === 201) {\n                        response.json().then(value => {\n                          setLoading(false);\n                          setShowSuccessPanel(true);\n                          setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Already Registered',\n                            type: \"error\",\n                            autoHide: 4000\n                          });\n                        })\n                      }\n\n                    })\n                  }\n                })\n              }\n            })\n          })\n        }\n        else {\n          var data = new FormData();\n          const d = { data: finalValues }\n          data = JSON.stringify(d);\n          fetch(process.env.REACT_APP_API_URL + `/api/event/register?id=${id}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n          }).then(response => {\n            if (response.status === 200) {\n              response.json().then(value => {\n                setLoading(false);\n                setShowSuccessPanel(true);\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Registration successful.Stay tunned with notifications and announcements',\n                  type: \"success\",\n                  autoHide: 4000\n                });\n              })\n            }\n            else if (response.status === 201) {\n              response.json().then(value => {\n                setLoading(false);\n                setShowSuccessPanel(true);\n                setState({\n                  open: true,\n                  vertical: 'top',\n                  horizontal: 'center',\n                  message: 'Already Registered',\n                  type: \"error\",\n                  autoHide: 4000\n                });\n              })\n            }\n\n          })\n        }\n\n\n      }\n      catch (error) {\n        setLoading(false);\n        setState({\n          open: true,\n          vertical: 'top',\n          horizontal: 'center',\n          message: error.message,\n          type: \"error\",\n          autoHide: 6000\n        })\n\n      }\n    }\n\n\n  }\n\n  function handleBack() {\n    props.history.goBack();\n  }\n\n  function handleFileSelect(event) {\n    if (event.target.files[0]) {\n      setUploadFiles({ ...uploadFiles, [event.target.name]: event.target.files[0] });\n    }\n\n  }\n\n  const handleEventScreenButton = () => {\n    props.history.push(`/event/${event._id}`)\n  }\n\n  const handleHomeScreenButton = () => {\n    props.history.push('/home')\n  }\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Backdrop className={classes.backdrop} open={backDropOpen}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleBack}>\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      <div className={showSuccessPanel ? classes.paper : classes.hidden}>\n        <SuccessPanel type=\"registrationSuccess\" showSuccessPanel={showSuccessPanel} handleHomeScreenButton={handleHomeScreenButton} handleEventScreenButton={handleEventScreenButton}></SuccessPanel>\n      </div>\n      {event != null &&\n        <div className={showSuccessPanel ? classes.hidden : classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {\"Registration for \" + event.name}\n          </Typography>\n\n          <form className={classes.form} onSubmit={handleEventRegistration} >\n\n            <Grid container spacing={2} >\n              {normalFields.map((field, index) => {\n                if (field.title === \"College\") {\n                  return (\n                    <Grid item xs={12}>\n                      <Autocomplete\n                        fullWidth\n                        id={field.title}\n                        options={colleges}\n                        getOptionLabel={(option) => option}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        disabled\n                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                      />\n                    </Grid>)\n                }\n                else if (field.title === \"Email\") {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        disabled\n                        required\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                      />\n                    </Grid>)\n                }\n                else {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        required={field.req}\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                      />\n                    </Grid>)\n                }\n\n              })}\n              {checkboxFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                      <FormLabel component=\"legend\">{field.title}</FormLabel>\n                      <FormGroup class={classes.formgroup}>\n                        {field.options.map((option) => {\n                          return <FormControlLabel\n                            control={<Checkbox color=\"primary\" onChange={handleChange3(field.title)} name={option} />}\n                            label={option}\n                          />\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                  </Grid>\n                )\n              })}\n              {dropDownFields.map((field, index) => {\n                return (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id={field.title}\n                      options={field.options.map((option) => option)}\n                      onChange={handleChange2(field.title)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField required={field.req} {...params} name={field.name} label={field.title} placeholder={field.name} />\n                      )}\n                    />\n                  </Grid>\n                )\n              })}\n              {radioFields.map((field, index) => {\n                console.log(field.options[0])\n                return (\n                  <Grid item xs={12}>\n                    <FormLabel required={field.req} component=\"legend\">{field.title}</FormLabel>\n                    <RadioGroup required={field.req} aria-label=\"address\" name={field.title} defaultValue={field.options[0]} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                      {field.options.map((option) => {\n                        return <FormControlLabel required={field.req} value={option} control={<Radio color=\"default\" />} label={option} />\n                      })}\n                    </RadioGroup>\n                  </Grid>\n                )\n              })}\n              {\n                dateFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                          fullWidth\n                          required={field.req}\n                          variant=\"inline\"\n                          format=\"dd MMM yyyy hh:mm a zzz\"\n                          margin=\"normal\"\n                          id={field.title}\n                          label={field.title}\n                          name={field.title}\n                          value={formValues[field.title]}\n                          onChange={handleDateChange(field.title)}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n\n                    </Grid>\n                  )\n                })\n              }\n              {\n                longDescFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        multiline={true}\n                        rows=\"5\"\n                        variant='outlined'\n                        placeholder={field.title}\n                        autoComplete='off'\n                        required={field.req}\n                        id={field.title}\n                        name={field.title}\n                        label={field.title}\n                        fullWidth\n                        onChange={handleLondDescChange}\n                      />\n                    </Grid>\n                  )\n                })\n              }\n              {\n                linkFields.map((field, index) => {\n                  return (\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete='off'\n                        name={field.title}\n                        required={field.req}\n                        fullWidth\n                        id={field.title}\n                        onChange={handleChange}\n                        value={formValues[field.title]}\n                        label={field.title}\n                      />\n                    </Grid>)\n                })\n              }\n              {\n                fileUploadFields.map((field, index) => {\n                  return <Grid item xs={12}>\n                    <Typography>{field.title}</Typography>\n                    <input id=\"contained-button-file\" name={field.title} required={field.req} type=\"file\" onChange={handleFileSelect} ></input>\n                  </Grid>\n                })\n              }\n\n              <Grid item xs={12}>\n                <Typography>By registering for the event.I accept the <Button onClick={handleTermsClick} color=\"primary\">Terms and Conditions</Button></Typography>\n              </Grid>\n            </Grid>\n            {canRegister && !backDropOpen && <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n              {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Register\"}\n            </Button>}\n            {\n              !canRegister && <Typography>{userMessage}</Typography>\n            }\n          </form>\n        </div>\n      }\n      <TermsandConditions open={tandcOpen} setOpen={setTandcOpen}></TermsandConditions>\n    </Container>\n  );\n}\n\nexport default withRouter(EventRegistrationForm);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport EventsDialog from '../Components/EventsDialog';\nimport EventsContext from '../EventsContext';\n// import AuthContext from '../AuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileEventCard from '../Components/ProfileEventCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ActiveEvents from '../ActiveEventsContext';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n    accordion: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    rpaper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.primary.light,\n        margin: theme.spacing(1),\n        position: 'sticky',\n        height: '86vh',\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        top: theme.spacing(10),\n        // zIndex: 3,\n        // borderRadius: theme.spacing(50)\n    },\n    subRpaper: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: '89vh',\n\n    },\n    postButton: {\n        borderRadius: theme.spacing(50),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.light,\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 10,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n    sideList: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(0),\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.secondary.main,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n        minHeight: 300,\n        borderRadius: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n    },\n    content: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    localStorage.setItem('tabIndex', 2)\n    // const user = React.useContext(AuthContext);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState([]);\n    const { allEvents } = React.useContext(EventsContext);\n    const { activeEvents } = React.useContext(ActiveEvents);\n    const regEvents = allEvents.filter((val) => {\n        return val.registered === true;\n    });\n\n    const [value, setValue] = React.useState(0);\n    // const user = React.useContext(AuthContext);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const postedEvents = allEvents.filter((val) => {\n    //     return val.user_id === user.user_id;\n    // });\n\n    const pastEvents = allEvents.filter((val) => {\n        const cDate = new Date();\n        const eDate = new Date(val.finish_time);\n        return cDate > eDate\n    })\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const handleEventClick = info => () => {\n        // setSelectedEvent(JSON.parse(info.event.id))\n        // setOpen(true);\n        setSelectedEvent(info);\n    }\n    const handlePostButtonClick = () => {\n        props.history.push('/post')\n    }\n\n    const handleRegisterdEventClick = (event) => () => {\n        setSelectedEvent(event);\n        setOpen(true);\n    }\n\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container component=\"main\">\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={8} lg={8} >\n                        {/* <div className={classes.root2}> */}\n                        <Paper className={classes.root2}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"on\">\n                                <Tab label=\"Registered Events\" />\n                                <Tab label=\"Past Events\" />\n                            </Tabs>\n                        </Paper>\n                        <div className={classes.content}>\n                            {value === 0 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                                {\n                                    regEvents.length === 0 && <Typography align=\"center\">No Registered Events</Typography>\n                                }\n                                {regEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n\n                            </Grid>}\n                            {value === 1 && <Grid container component=\"main\" alignItems=\"center\" spacing={1}>\n                                {\n                                    pastEvents.length === 0 && <Typography align=\"center\">No Past Events at this time</Typography>\n                                }\n                                {pastEvents.map((event, index) => {\n                                    return (<Grid item xs={12} sm={12} md={4} alignItems=\"center\" key={index}>\n                                        <ProfileEventCard event={event} handleViewClick={handleEventClick(event)} name={event.name} ></ProfileEventCard>\n                                    </Grid>)\n                                })}\n                            </Grid>}\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={2} >\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handlePostButtonClick}>\n                            <AddIcon />\n                        </Fab>\n                        <Paper className={classes.rpaper}>\n                            <Paper className={classes.subRpaper}>\n                                <Button\n                                    onClick={handlePostButtonClick}\n                                    variant=\"contained\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.postButton} >\n                                    Post Event\n                                </Button>\n                                <List className={classes.sideList}>\n\n                                    <Typography variant=\"body2\">Explore Events</Typography>\n                                    {\n                                        activeEvents.map((event, index) => {\n                                            return <React.Fragment key={index} >\n                                                <ListItem onClick={handleRegisterdEventClick(event)} key={index} button>\n                                                    <ListItemAvatar>\n                                                        <Avatar variant=\"square\"\n                                                            alt={event.name}\n                                                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}\n                                                        />\n                                                    </ListItemAvatar>\n                                                    <ListItemText primary={event.name} />\n                                                </ListItem>\n                                                <Divider /></React.Fragment>\n                                        })\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n\n                    </Grid>\n                </Grid>\n                <div>\n                    <EventsDialog\n                        open={open}\n                        event={selectedEvent}\n                        handleClose={handleClose}\n                        name={selectedEvent.name}\n                        startTime={selectedEvent.start_time}\n                        endTime={selectedEvent.finish_time}\n                        regEndTime={selectedEvent.registrationEndTime}\n                        type={selectedEvent.eventType}\n                        tags={selectedEvent.tags}\n                        mode={selectedEvent.eventMode}\n                        feeType={selectedEvent.feesType}\n                    ></EventsDialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AboutEventsPanel from '../Components/AboutEventPanel';\nimport { Dialog } from '@material-ui/core';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const id = props.match.params.eventId;\n    const [event, setEvent] = React.useState({});\n    const [open, setOpen] = React.useState(false);\n    if(token){\n        props.history.replace(`/event/${id}`)\n    }\n\n    const handleClickOpen = () => {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/signin\")\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    React.useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL+`/api/unregistered/event?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                setEvent(value.event);\n            })\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push(\"/signin\")\n    }\n    function handleSignupClick() {\n        localStorage.setItem('eventid',id);\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <Typography\n                    align='center'\n                    variant=\"h4\"\n                    style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>\n                    {event.name + \"(Login to Register and Know More Info)\"}\n                </Typography>\n                <AboutEventsPanel notRegistered={true} event={event}></AboutEventsPanel>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Register</Button>\n            </div>\n            <Dialog\n                open={open}\n                maxWidth=\"md\"\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Login to Register for the Event/Contest\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport CancelIcon from '@material-ui/icons/Cancel';\n// import { Document, Page } from 'react-pdf';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root2: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(50),\n            height: theme.spacing(50),\n        },\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    root4: {\n        backgroundColor: theme.palette.secondary.main\n    }\n}));\n\nexport default function UnregisteredPage(props) {\n    const classes = useStyles();\n    const id = props.match.params.id;\n    const [details, setDetails] = React.useState({});\n    const [userFound, setUserFound] = React.useState(true);\n    const [date, setDate] = React.useState(null);\n//     const [numPages, setNumPages] = React.useState(null);\n//   const [pageNumber, setPageNumber] = React.useState(1);\n\n//   function onDocumentLoadSuccess({ numPages }) {\n//     setNumPages(numPages);\n//   }\n\n    React.useEffect(() => {\n        // const pdf = \n        fetch(process.env.REACT_APP_API_URL + `/api/event/verify_certificate?id=${id}`, {\n            headers: {\n                // 'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    setUserFound(true)\n                    setDetails(value);\n                    const d = new Date(value.date);\n                    setDate(d.toDateString());\n                })\n            }\n            else {\n                setUserFound(false);\n            }\n\n        })\n\n        // fetch(process.env.REACT_APP_API_URL + `/api/verify/get_certificate?id=${id}`, {\n        //     headers: {\n        //         // 'Authorization': `Bearer ${token}`,\n        //         // 'Content-Type': 'application/json',\n        //         // 'Accept': 'application/json'\n        //     },\n        //     method: 'GET',\n        //     responseType: 'blob'\n        // }).then(response =>{\n        //     const file = new Blob(\n        //         [response], \n        //         {type: 'application/pdf'});\n        //         const fileURL = window.URL.createObjectURL(file);\n        //         console.log(fileURL)\n        //         // window.open(fileURL);\n        // })\n    }, [id])\n\n    function handleSigninClick() {\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            {/* <iframe src={\"https://ellipseapp.com/api/user/certificate?id=FfSlio810858d83fb929979dd2e53c4be3a7e1\"}></iframe> */}\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            {userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                    <VerifiedUserIcon fontSize=\"large\"></VerifiedUserIcon>\n                    <Typography variant=\"h4\">{details.participantname}</Typography>\n                    <Typography>{details.participant_college}</Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>Event Name: {details.event_name}</Typography>\n                    <Typography>Organizer: {details.organizer}</Typography>\n                    <Typography>Held on {date}</Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>participation by {details.participantname} has been confirmed</Typography>\n                </Box>\n            </Box>}\n            {!userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                    <CancelIcon fontSize=\"large\"></CancelIcon>\n                    <Typography variant=\"h4\">Certificate NOT FOUND</Typography>\n                </Box>\n            </Box>}\n            {/* <object width=\"100%\" height=\"900px\" data={process.env.REACT_APP_API_URL + `/api/verify/get_certificate?id=${id}`} type=\"application/pdf\">\n                <iframe\n                    title=\"pdf document\"\n                    src={process.env.REACT_APP_API_URL + `/api/verify/get_certificate?id=${id}`}\n                />\n               \n            </object> */}\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/un5.2f31c04b.svg\";","export default __webpack_public_path__ + \"static/media/un6.11989350.svg\";","export default __webpack_public_path__ + \"static/media/un7.07dd0552.svg\";","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n// import Dashboard from '../Components/Images/dashboard.png';\n// import Profile from '../Components/Images/profile.png';\n// import AdminDashboard from '../Components/Images/AdminDashboard.png';\n// import Certificate from '../Components/Images/certificate.png';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport DeviceDesign from '../Components/Images/un5.svg';\nimport DeviceDesign2 from '../Components/Images/un6.svg';\nimport DeviceDesign3 from '../Components/Images/un7.svg';\nimport GoogleBadge from '../Components/Images/google-play-badge.png'\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst tutorialSteps = [\n    {\n        label: 'Find and register for all your College events from one App',\n        imgPath: DeviceDesign,\n    },\n    {\n        label: 'Post events and manage them with ease',\n        imgPath: DeviceDesign2,\n    },\n    {\n        label: 'Feature Rich dashboard for Event Administrators',\n        imgPath: DeviceDesign3,\n    },\n    {\n        label: 'Create announcements, Live chat with participants and generate event certificates',\n        imgPath: DeviceDesign2,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        flexGrow: 1,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0),\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: theme.spacing(0),\n        // alignContent: 'center'\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 300,\n        [theme.breakpoints.down('md')]: {\n            minHeight: 200,\n        },\n        paddingLeft: theme.spacing(0),\n        backgroundColor: theme.palette.primary.dark,\n    },\n    img: {\n        padding: theme.spacing(0),\n        maxHeight: 550,\n        display: 'block',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        width: '100%',\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(0),\n        },\n    },\n    paperLeft: {\n        margin: theme.spacing(0),\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            //   margin: theme.spacing(3, 1),\n        },\n\n    },\n    carouselCaption: {\n        fontSize: '2.5em',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '2.3em',\n        },\n    }\n}));\n\nfunction SwipeableTextMobileStepper(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const maxSteps = tutorialSteps.length;\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleStepChange = (step) => {\n        setActiveStep(step);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container component=\"main\" justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} md={6}>\n                    <AutoPlaySwipeableViews\n                    interval=\"5000\"\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={activeStep}\n                        onChangeIndex={handleStepChange}\n                        enableMouseEvents\n                    >\n                        {tutorialSteps.map((step, index) => (\n                            <div key={step.label}>\n                                {Math.abs(activeStep - index) <= 2 ? (\n                                    <img className={classes.img} src={step.imgPath} alt={step.label} />\n                                ) : null}\n                            </div>\n                        ))}\n                    </AutoPlaySwipeableViews>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Paper elevation={0} className={classes.header}>\n                        <Typography className={classes.carouselCaption} color=\"secondary\" align=\"center\">{tutorialSteps[activeStep].label}</Typography>\n                    </Paper>\n                    <Box className={classes.paperLeft} >\n                        <Button onClick={props.handleSignin} variant=\"contained\" color=\"secondary\">Get started</Button>\n                        <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n                            <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n                        </a>\n                    </Box>\n\n                </Grid>\n            </Grid>\n            <MobileStepper\n                steps={maxSteps}\n                position=\"static\"\n                variant=\"dots\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n                        Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                        Back\n                    </Button>\n                }\n            />\n        </div>\n    );\n}\n\nexport default SwipeableTextMobileStepper;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\n\n\nimport EventShareDialog from './EventShareDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    marginBottom: theme.spacing(2),\n\n  },\n  media: {\n    // height: 250,\n    // paddingTop: '56.25%', // 16:9\n  },\n\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  buttonDiv: {\n    marginLeft: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n  morePopup: {\n    zIndex: '5'\n  }\n}));\n\n\n\n\nfunction Eventcard(props) {\n  const classes = useStyles();\n  const event = props.event;\n  //   const t = localStorage.getItem('theme');\n  const startDate = new Date(event.start_time);\n  const endDate = new Date(event.finish_time);\n  const regEndDate = new Date(event.registration_end_time);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n\n\n  function handleShareClose() {\n    setShareDialogOpen(false);\n  }\n  function handleShareClick() {\n    setShareDialogOpen(true);\n  }\n\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <React.Fragment>\n            <img\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              //   onClick={handleImageClick}\n              onLoad={() => setImageLoaded(true)}\n              alt=\"Event Poster\" height=\"160\" width=\"150\"\n              src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n\n            </img>\n            {!imageLoaded && <div\n              style={{\n                height: \"160px\",\n                width: \"150px\"\n              }}>\n              <CameraAltOutlinedIcon color=\"disabled\" style={{ height: \"160px\", width: \"150px\" }} />\n            </div>}\n          </React.Fragment>\n\n        }\n        action={\n          <div>\n            <IconButton ref={anchorRef}\n              aria-controls={open ? 'menu-list-grow' : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}>\n              <MoreVertIcon />\n            </IconButton>\n            <Popper className={classes.morePopup} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={handleShareClick}>Share</MenuItem>\n                        {/* <MenuItem onClick={handleReportClick}>Report</MenuItem> */}\n                        {/* <MenuItem onClick={handleClose}>Logout</MenuItem> */}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        }\n        title={\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n            {event.name}\n          </Typography>\n        }\n        subheader={\n          <React.Fragment>\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {event.description}\n            </Typography>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_mode}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.fee_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={event.event_type}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Reg ends on \" + regEndDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Starts on \" + startDate.toDateString()}></Chip>\n            <Chip style={{ marginRight: \"4px\", marginTop: \"4px\" }} variant=\"outlined\" color=\"inherit\" size=\"small\" label={\"Ends on \" + endDate.toDateString()}></Chip>\n          </React.Fragment>\n        }\n      />\n      <EventShareDialog\n        event={event}\n        open={shareDialogOpen}\n        handleClose={handleShareClose}></EventShareDialog>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <MailIcon></MailIcon>\n        </IconButton> */}\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <div className={classes.buttonDiv}>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={props.onClick}>\n            See More\n        </Button>\n          {\n            <Button disabled={event.registered ? true : false} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={props.onClick}>\n              Register\n            </Button>\n          }\n        </div>\n\n\n      </CardActions>\n    </Card>);\n}\n\nexport default Eventcard;\n\n","import React from 'react';\nimport { withRouter, Redirect } from \"react-router\";\n\n//material ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n\n//Other component Imports\nimport NewHomePageCarousel from '../Pages/NewHomePageCarousel';\nimport Copyright from \"../Components/copyright\";\nimport HomePageEventCard from '../Components/HomePageEventCard';\nimport GoogleBadge from '../Components/Images/google-play-badge.png';\n\n\n//styles\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n    body: {\n        margin: theme.spacing(0)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    img: {\n        padding: theme.spacing(10),\n        minHeight: 200,\n        display: 'block',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(3),\n        },\n    },\n    footer: {\n        backgroundColor: theme.palette.secondary.main,\n        marginTop: theme.spacing(3)\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 200,\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(10),\n        borderRadius: theme.spacing(2),\n        boxShadow: \"3\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(3)\n    },\n    title: {\n        fontFamily: 'Gugi',\n        color: theme.palette.primary.dark,\n        fontWeight: 'bold',\n        flexGrow: 1,\n    },\n}));\n\nfunction UnregisteredPage(props) {\n    const token = localStorage.getItem('token');\n    const classes = useStyles();\n    const [activeEvents, setActiveEvents] = React.useState([])\n\n    React.useEffect(() => {\n        //function to get events\n        fetch(process.env.REACT_APP_API_URL + '/api/get_events', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    value.sort((a, b) => {\n                        return new Date(a.start_time) - new Date(b.start_time);\n                    })\n                    setActiveEvents(value.filter(e => {\n                        const cDate = new Date();\n                        const eDate = new Date(e.finish_time);\n                        return cDate < eDate && e.status !== \"pending\"\n                    }))\n                })\n            }\n\n        })\n    }, [])\n\n    //if token is already present redirect to home page\n    if (token) {\n        return <Redirect to=\"/home\" />;\n    }\n\n    //function to navigate to home page\n    const handleSigninClick = () => {\n        props.history.push(\"/signin\")\n    }\n\n    //function to navigate to signup page\n    const handleSignupClick = () => {\n        props.history.push('/signup');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h5\">\n                        Ellipse\n                    </Typography>\n                    <Button className={classes.button} variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button className={classes.button} variant=\"outlined\" size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <NewHomePageCarousel handleSignin={handleSigninClick}></NewHomePageCarousel>\n            </div>\n            <Grid style={{ minHeight: '100px' }} container component=\"main\">\n                <Grid item xs={false} md={3} lg={2} style={{ padding: \"10px\" }} ></Grid>\n                <Grid item xs={12} sm={12} md={9} lg={8}>\n                    {\n                        activeEvents.map((e, index) => {\n                            return <HomePageEventCard onClick={handleSigninClick} event={e}></HomePageEventCard>\n                        })\n                    }\n                </Grid>\n            </Grid>\n            <Box className={classes.footer} height=\"200px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Typography>Contact us at <Link href=\"mailto:support@ellipseapp.com\" variant=\"body2\">\n                        {\"support@ellipseapp.com\"}\n                    </Link></Typography>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Copyright></Copyright>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <Link href=\"/Privacy_Policy.pdf\" variant=\"body2\">\n                        {\"Privacy Policy\"}\n                    </Link>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <a rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.ellipse.ellipseapp\" target=\"_blank\">\n                        <img className={classes.hidden} src={GoogleBadge} alt=\"playstore\"></img><br></br>\n                    </a>\n                </Box>\n            </Box>\n        </div>\n    );\n}\n\nexport default withRouter(UnregisteredPage);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '100%'\n\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  timiline: {\n\n  },\n  root3: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  },\n  root5: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  }\n}));\n\nexport default function CustomizedTimeline(props) {\n  const token = localStorage.getItem('token');\n  const classes = useStyles();\n  const { children, value, url, index, ...other } = props;\n  const event = props.event;\n  const [announcements, setAnnouncements] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/get_announcements?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setAnnouncements(value);\n      })\n    })\n  }, [token, event._id])\n\n  const handleDeleteButton = (a) => () =>{\n    fetch(process.env.REACT_APP_API_URL+`/api/event/delete_announcement?id=${a._id}&event_id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n      }).then(response => {\n        response.json().then(value => {\n            setAnnouncements(value);\n        })\n      })\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div>\n          {\n            announcements.map((a, index) => {\n              const date = new Date(a.time)\n\n              return <Box m={1} p={1} key={index} className={classes.root3}>\n                <Box className={classes.root2} whiteSpace=\"normal\">\n                  <Typography className={classes.title}>\n                    {a.title}\n                  </Typography>\n                  <Typography className={classes.pos}>\n                    {a.description}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Typography variant=\"body2\" >\n                    {date.toDateString()}{\" \" + date.toLocaleTimeString()}\n                  </Typography>\n                </Box>\n                <Box className={classes.root5}>\n                  <Button onClick={handleDeleteButton(a)}>Delete</Button>\n                </Box>\n              </Box>\n            })\n          }\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\n\n\n//Materialui imports\nimport { useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function AnnouncementForm(props) {\n  const theme = useTheme()\n  const token = localStorage.getItem('token');\n  const [title, setTitle] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [visibility, setVisibility] = React.useState(\"All\");\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value);\n  }\n  const handleDescChange = (event) => {\n    setDesc(event.target.value);\n  }\n\n\n  function handleVisibilityChange(event, value) {\n    setVisibility(value);\n  }\n  function handleAddButton() {\n    var visible_all = true;\n    if (visibility !== \"All\") {\n      visible_all = false;\n    }\n    try {\n      var data = new FormData();\n      const d = { event_id: props.id, title: title, description: desc, visible_all: visible_all }\n      data = JSON.stringify(d);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/add_announcement`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        response.json().then(value => {\n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Added successfully',\n            type: \"success\",\n            autoHide: 2000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n    props.handleClose()\n\n  }\n  const handleClose = async (event, reason) => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Dialog open={props.open} fullWidth={true} PaperProps={{\n        style: {\n          backgroundColor: theme.palette.secondary.main,\n        },\n      }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Announcement</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} >\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                fullWidth\n                value={title}\n                required\n                onChange={handleTitleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                fullWidth\n                value={desc}\n                required\n                onChange={handleDescChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Announcement visibility</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={visibility} onChange={handleVisibilityChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"All\" control={<Radio color=\"default\" />} label=\"All\" />\n                <FormControlLabel value=\"Registered Users\" control={<Radio color=\"default\" />} label=\"Registered Users\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Add\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {  useTheme } from '@material-ui/core/styles';\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SendEmailForm(props) {\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const [content, setContent] = React.useState(null);\n\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleContentChange(event) {\n        setContent(event.target.value);\n    }\n\n    function handleAddButton() {\n        try {\n            var data = new FormData();\n            const d = { \n                event_id: props.id, \n                title: title, \n                content: content,\n                emails: props.emails}\n            data = JSON.stringify(d);\n            console.log(data);\n            fetch(process.env.REACT_APP_API_URL+`/api/event/sendemail`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then(response => {\n                response.json().then(value => {\n                    setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Added successfully',\n                        type: \"success\",\n                        autoHide: 2000\n                    });\n                })\n            })\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n        props.handleClose()\n\n    }\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    // boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Content for your Email</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Title\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                multiline={true}\n                                rows=\"5\"\n                                variant='outlined'\n                                placeholder=\"Enter everything about your event in detail\"\n                                autoComplete='off'\n                                required\n                                id=\"content\"\n                                name=\"content\"\n                                label=\"Content\"\n                                fullWidth\n                                onChange={handleContentChange}\n                                value={content || \"\"}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} disabled={loading} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Send\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Button, IconButton } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport AddAnnouncementForm from './AddAnnouncementForm';\nimport SendEmailForm from './SendEmailForm';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport { CSVLink } from \"react-csv\";\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n    // maxWidth: 880\n    // width: '100%',\n  },\n  table: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  },\n  progress: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [loading, setLoading] = React.useState(false);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [announcementDialog, setAnnouncementDialog] = React.useState(false);\n  const [sendEmailDialog, setSendEmailDialog] = React.useState(false);\n  const [fileColumns, setFileColumns] = React.useState([]);\n  const event = props.event;\n\n  React.useEffect(() => {\n    event.reg_fields.forEach(v => {\n      if (v.field === \"file_upload\") {\n        setFileColumns([...fileColumns, v.title]);\n      }\n    })\n    // eslint-disable-next-line\n  }, [event])\n\n  // console.log(fileColumns);\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    setHeaders([]);\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, key: item, label: item, minWidth: 170 }]));\n          })\n          value.forEach(d => {\n            setRowValues(rowValues => [...rowValues, d.data]);\n          })\n          setLoading(false);\n        }\n        else{\n          setLoading(false);\n        }\n      })\n    })\n  }, [token, event])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  function handleAddAnnouncement() {\n    setAnnouncementDialog(true);\n  }\n\n  function handleAnnoucementClose() {\n    setAnnouncementDialog(false);\n  }\n\n  // function handleSendEmail() {\n  //   console.log(selected);\n  //   setSendEmailDialog(true);\n  // }\n  function handleSendEmailClose() {\n    setSendEmailDialog(false);\n  }\n\n \n\n\n  return (\n    <React.Fragment>\n      <div className={classes.progress}>\n        <Fade\n          in={loading}\n          unmountOnExit>\n          <CircularProgress />\n        </Fade>\n      </div>\n      <Grid container spacing={3}>\n        <SendEmailForm open={sendEmailDialog} emails={selected} handleClose={handleSendEmailClose}></SendEmailForm>\n        <AddAnnouncementForm open={announcementDialog} id={event._id} handleClose={handleAnnoucementClose}></AddAnnouncementForm>\n        <Grid item xs={12} md={4} lg={9}>\n          <Paper className={classes.buttonsPaper}>\n            <Button variant=\"contained\" onClick={handleAddAnnouncement} className={classes.button}>Add Announcement</Button>\n            {/* <Button variant=\"contained\" onClick={()=>saveAsCsv({ fields, data, filename })} className={classes.button}>Add Announcement</Button> */}\n            {/* <Button variant=\"contained\" onClick={handleSendEmail} className={classes.button}>Send Emails to Selected</Button> */}\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={3} >\n          <Paper className={classes.fixedHeightPaper}>\n            <Typography>Total Registrations</Typography>\n            <Typography component=\"p\" variant=\"h4\">\n              {rowValues.length}\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <TableContainer className={classes.container}>\n              <Button variant=\"contained\" className={classes.button}><CSVLink filename={event.name + '.csv'} headers={headers} data={rowValues} style={{ color: '#000000' }}>Download as csv</CSVLink></Button>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                  </TableRow>\n                  <TableRow >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"default\"\n                        checked={rowValues.length > 0 && selected.length === rowValues.length}\n                        onChange={handleSelectAllClick}\n                        indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                        inputProps={{ 'aria-label': 'select all fields' }}\n                      />\n                    </TableCell>\n                    {headers.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        {column.label}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = isSelected(row.Email);\n                    return (\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                        onClick={(event) => handleClick(event, row.Email)}\n                        selected={isItemSelected}>\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            color=\"default\"\n                            inputProps={{ 'aria-label': 'select all fields' }}\n                          /></TableCell>\n                        {headers.map((column) => {\n                          if (fileColumns.includes(column.id)) {\n                            return <TableCell key={column.id} align={column.align}>\n                              <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${row[column.id]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                            </TableCell>\n                          } else {\n                            const value = column.id === \"Email\" ? row[column.id].substr(0, 3) + '*****@' + row[column.id].split('@')[1] : row[column.id];\n                            return (\n                              <TableCell key={column.id} align={column.align}>\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                              </TableCell>\n                            );\n                          }\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={rowValues.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { Divider, IconButton } from '@material-ui/core';\n// import { TextField } from '@material-ui/core';\n\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport AuthContext from '../AuthContext';\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageDeleteDialog from './MessageDeleteDialog';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n\n}));\n\nexport default function JustifyContent(props) {\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    // const user = props.user\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [loading, setLoading] = React.useState(false);\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    const classes = useStyles();\n    var counterDate = null;\n\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { eventChatMessages } = React.useContext(WebSocketDataContext);\n    const { setEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedEventChatMessages, setDeletedEventChatMessages } = React.useContext(WebSocketDataContext);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"join_event_room\",\n                event_id: event._id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n    }, [webSocketContext, currentUser, event])\n\n    React.useEffect(() => {\n        // console.log(eventChatMessages);\n        eventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            //         // console.log(mes);\n            if (mes.event_id === event._id) {\n                // console.log(cMes);\n                setChatMessages(chatMessages => [...chatMessages, cMes]);\n                setEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        });\n        // eslint-disable-next-line\n    }, [eventChatMessages, event])\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_messages?id=${event._id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                setLoading(false)\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        if (webSocketContext) {\n            if (event.chat_blocked_users.includes(currentUser.user_id)) {\n\n            }\n            else {\n                webSocketContext.send(JSON.stringify({\n                    action: \"send_event_message\",\n                    event_id: event._id,\n                    msg: {\n                        'id': currentUser.user_id + Date.now(),\n                        'user_id': currentUser.user_id,\n                        'user_name': currentUser.name,\n                        'user_pic': currentUser.profile_pic,\n                        'message_type': 'normal_text_message',\n                        'message': message,\n                        'date': d.toISOString()\n                    }\n                }));\n            }\n\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    React.useEffect(() => {\n        deletedEventChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.event_id === event._id) {\n                setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                setDeletedEventChatMessages(eventChatMessages.filter(m => { return m !== mes }));\n            }\n        })\n\n        // eslint-disable-next-line\n    }, [deletedEventChatMessages])\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(mes);\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n        webSocketContext.send(JSON.stringify({\n            action: \"delete_event_chat_message\",\n            event_id: event._id,\n            msg: mes\n        }));\n        setChatMessages(chatMessages.filter(m => { return m !== mes }))\n\n        setOpenDeleteDialog(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    return (\n                                        <MessageBox1 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox1>\n                                    );\n                                }\n                                return (\n                                    <MessageBox2 adminId={event.user_id} handleMessageDeleteButton={handleMessageDeleteButton} message={value} currentDate={currentDate} messageDate={messageDate} index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '80px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n\n                    </Box>\n                    <div className={classes.textField}>\n                        {\n                            event.chat_blocked_users.includes(currentUser.user_id) ? <Typography>You cannot send messages in this channel</Typography> : <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                        }\n\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n\n//Materail impports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n// import Select from '@material-ui/core/Select';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import { NextWeekOutlined } from '@material-ui/icons';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport AddFieldDialog from '../Components/AddFieldDialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        listStyle: 'none',\n        padding: theme.spacing(0.5),\n        margin: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n\n\nexport default function EditDialog(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n    const [startDate, setStartDate] = React.useState(null);\n    const [endDate, setEndDate] = React.useState(null);\n    const [linkField, setLinkField] = React.useState('');\n    const [open, setOpen] = React.useState(false);\n    const [selectedFields, setSelectedFields] = React.useState([]);\n    const [state, setState] = React.useState({\n        alertopen: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, alertopen, message, type, autoHide } = state;\n\n    const [checked, setChecked] = React.useState({\n        form: true,\n        link: false,\n    });\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    React.useEffect(() => {\n        const data = props.roundData;\n        setTitle(data.title);\n        setDesc(data.description);\n        setStartDate(data.start_date);\n        setEndDate(data.end_date);\n        setLinkField(data.link);\n        if (data.fields) {\n            setSelectedFields(data.fields);\n        }\n        if (data.link !== undefined && data.link !== \"\" && data.link !== null) {\n            setChecked({ ...checked, link: true });\n        }\n        // eslint-disable-next-line\n    }, [props.roundData])\n\n    // console.log(selectedFields);\n\n    function handleSaveChangesButton() {\n        if (desc !== null && startDate !== null && endDate !== null) {\n            // props.handleAdd({\n            //     title: title,\n            //     description: desc,\n            //     start_date: startDate,\n            //     end_date: endDate,\n            //     link: linkField,\n            //     fields: selectedFields\n            // })\n            // console.log(props.rounds)\n            const updatedRounds = []\n            props.rounds.forEach((r, index) => {\n                if (r.title === title) {\n                    updatedRounds.push({\n                        title: title,\n                        description: desc,\n                        start_date: startDate,\n                        end_date: endDate,\n                        link: linkField,\n                        fields: selectedFields\n                    })\n                }\n                else {\n                    updatedRounds.push(r);\n                }\n                if (index === props.rounds.length - 1) {\n                    props.setRounds(updatedRounds)\n                }\n            })\n            props.handleClose();\n            // console.log(updatedRounds)\n            // setDesc('');\n            // setStartDate(null);\n            // setEndDate(null);\n            // setLinkField('');\n            // setSelectedFields([]);\n        }\n        else {\n            setState({\n                alertopen: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"please fill in all fields\",\n                type: \"error\",\n                autoHide: '5000',\n            })\n        }\n\n\n    }\n\n    function handleFieldAddButton(addingField, fName) {\n        setSelectedFields(selectedFields => [...selectedFields, addingField[fName]]);\n    }\n\n    // const handleDelete = (chipToDelete) => () => {\n    //     setSelectedFields(selectedFields => selectedFields.filter((chip) => chip.title !== chipToDelete.title));\n    // };\n\n    const handleChange = (event) => {\n        setChecked({ ...checked, [event.target.name]: event.target.checked });\n    };\n\n    const { form, link } = checked;\n\n    const handleAlertClose = () => {\n        setState({ ...state, alertopen: false });\n    }\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={alertopen}\n                autoHideDuration={autoHide}\n                onClose={handleAlertClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Rounds</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Name\"\n                                name=\"name\"\n                                fullWidth\n                                disabled\n                                value={title}\n                            // required\n                            // onChange={(e) => { setName(e.target.value) }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc}\n                                required\n                                onChange={(e) => { setDesc(e.target.value) }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} required >\n                                <DateTimePicker\n                                    inputProps={{ required: true }}\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"startDate\"\n                                    label=\"Start Date\"\n                                    name=\"startDate\"\n                                    value={startDate}\n                                    onChange={(date) => { setStartDate(date) }}\n                                //   error={startDateError}\n                                //   helperText={startDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DateTimePicker\n                                    minDate={Date.now()}\n                                    fullWidth\n                                    required\n                                    variant=\"dialog\"\n                                    format=\"dd MMM yyyy hh:mm a zzz\"\n                                    margin=\"normal\"\n                                    id=\"endDate\"\n                                    label=\"End Date\"\n                                    name=\"endDate\"\n                                    value={endDate}\n                                    onChange={(date) => { setEndDate(date) }}\n                                //   error={endDateError}\n                                //   helperText={endDateError && \"Fill this field\"}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormLabel component=\"legend\">Action</FormLabel>\n                            <FormGroup>\n                                <FormControlLabel\n                                    control={<Checkbox checked={form} color=\"default\" onChange={handleChange} name=\"form\" />}\n                                    label=\"Create Form\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={link} color=\"default\" onChange={handleChange} name=\"link\" />}\n                                    label=\"Link\"\n                                />\n                            </FormGroup>\n                            {/* <RadioGroup aria-label=\"address\" name=\"address\" value={action} onChange={handleActionChange} style={{ display: \"inline\" }}>\n                                <FormControlLabel value=\"form\" control={<Radio color=\"default\" />} label=\"Create Form\" />\n                                <FormControlLabel value=\"hackathon_template\" control={<Radio color=\"default\" />} label=\"Use Hackathon Template\" />\n                                <FormControlLabel value=\"link\" control={<Radio color=\"default\" />} label=\"Provide Link\" />\n                            </RadioGroup> */}\n                        </Grid>\n                        {link && <Grid item xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"platform_link\"\n                                label=\"Platform Link\"\n                                name=\"platform_link\"\n                                fullWidth\n                                value={linkField}\n                                required\n                                onChange={(e) => { setLinkField(e.target.value) }}\n                            />\n                        </Grid>}\n                        {form && <Grid item xs={12}>\n                            <Typography>Fields</Typography>\n                            <Paper component=\"ul\" className={classes.root}>\n                                {selectedFields.map((data) => {\n                                    return (\n                                        <li key={data.key}>\n                                            <Chip\n                                                label={data.title}\n                                                // onDelete={handleDelete(data)}\n                                                className={classes.chip}\n                                            />\n                                        </li>\n                                    );\n                                })}\n                            </Paper>\n                        </Grid>}\n                        {/* {form && <Grid item xs={12}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                onClick={() => { setOpen(true) }}>\n                                Add Field\n                        </Button>\n                        </Grid>} */}\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSaveChangesButton} color=\"primary\">\n                        Save Changes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <AddFieldDialog\n                open={open}\n                handleAdd={handleFieldAddButton}\n                handleClose={handleClose}>\n            </AddFieldDialog>\n        </div>\n    );\n}\n","import React from 'react';\n// import Copyright from '../Components/copyright';\n// import useStyles from '../Themes/SignupPageStyles';\nimport { withRouter } from 'react-router';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Chip from '@material-ui/core/Chip';\nimport { MuiPickersUtilsProvider, DateTimePicker, } from '@material-ui/pickers';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\n\nimport RoundEditDialog from '../Components/EditRoundDialog';\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // backgroundColor: theme.palette.secondary.main,\n    // padding: theme.spacing(3),\n    borderRadius: 30,\n\n  },\n  avatar: {\n    // margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n    backgroundColor: theme.palette.primary.light\n  },\n}));\n\nconst EventEdit = (props) => {\n  var event = props.event;\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error'\n  });\n\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setendDate] = React.useState(null);\n  const [regEndDate, setRegEndDate] = React.useState(null);\n  const [eventMode, setEventMode] = React.useState(null);\n  const [eventType, setEventType] = React.useState(null);\n  const [eventThemes, setEventThemes] = React.useState([]);\n  const [regLink, setRegLink] = React.useState(null);\n  const [regFees, setRegFees] = React.useState(null);\n  const [about, setAbout] = React.useState(null);\n  const [selectedrequirements, setSelectedRequirements] = React.useState([]);\n  // const [image, setImage] = React.useState(null);\n  // const [imageName, setImageName] = React.useState(\"\");\n  const [addressType, setAddressType] = React.useState(\"\");\n  const [feeType, setFeeType] = React.useState(\"Free\");\n  const [collegeName, setCollegeName] = React.useState(null);\n  const [regMode, setRegMode] = React.useState(null);\n  const [organizer, setOrganizer] = React.useState(null);\n  const [participantType, setParticipantsType] = React.useState(\"open\");\n  const [image, setImage] = React.useState(null);\n  const [imageUrl, setImageurl] = React.useState(null);\n  const [imageUpdated, setImageUpdated] = React.useState(false);\n  const [venue, setVenue] = React.useState(null);\n  const [venueCollege, setVenueCollege] = React.useState(null);\n  const { vertical, horizontal, open, message, type } = state;\n  const [colleges, setColleges] = React.useState([]);\n  // const [collegesNames, setCollegesName] = React.useState([]);\n\n  const token = localStorage.getItem('token');\n  const [eventTags, setEventTags] = React.useState([]);\n  const [requirements, setRequirements] = React.useState([]);\n  const [eventTypes, setEventTypes] = React.useState([]);\n  const [platformDetails, setPlatformDetails] = React.useState('');\n  const [isTeamed, setIsTeamed] = React.useState(false);\n  const [teamSize, setTeamSize] = React.useState({});\n  const [rounds, setRounds] = React.useState([]);\n  const [rules, setRules] = React.useState(null);\n  const [themes,setThemes] = React.useState(null);\n  const [prizes, setPrizes] = React.useState([]);\n  const [prizeTitle, setPrizeTitle] = React.useState(null);\n    const [prizeDesc, setPrizeDesc] = React.useState(null);\n  const [roundsDialogOpen, setRoundsDialogOpen] = React.useState(false);\n  const [selectedEditRound, setSelectedEditRound] = React.useState({});\n\n\n\n  // const eventTypes = [\"Hackathon\", \"Coding Contest\", \"Webinar\"];\n  // const requirements = [\"Laptop\", \"Basic HTML\", \"C++\", \"Machine Learning\"];\n  // const colleges = [\"VIT University\", \"GITAM University\", \"SRM University\"];\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/colleges', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        setColleges(value);\n        // value.forEach((v) => {\n        //   setCollegesName((collegesNames) => [...collegesNames, v.name])\n        // })\n      })\n    })\n  }, [token])\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n  const handleendDateChange = (date) => {\n    setendDate(date);\n  };\n  const handleRegEndDateChange = (date) => {\n    setRegEndDate(date)\n  };\n  React.useEffect(() => {\n    setEventThemes(event.tags);\n    setEventType(event.event_type);\n    setName(event.name);\n    setDesc(event.description);\n    setStartDate(event.start_time);\n    setendDate(event.finish_time);\n    setRegEndDate(event.registration_end_time);\n    setEventMode(event.event_mode);\n    setRegLink(event.reg_link);\n    setAbout(event.about);\n    setRegFees(event.fees);\n    setSelectedRequirements(event.requirements);\n    setFeeType(event.fee_type);\n    setCollegeName(event.college_name);\n    setRegMode(event.reg_mode);\n    setOrganizer(event.organizer);\n    setVenue(event.venue);\n    setVenueCollege(event.venue_college);\n    setPlatformDetails(event.platform_details);\n    setAddressType(event.venue_type);\n    setIsTeamed(event.isTeamed);\n    setTeamSize(event.team_size);\n    setRounds(event.rounds);\n    setRules(event.rules);\n    setPrizes(event.prizes);\n    setThemes(event.themes);\n\n    // setParticipantsType(event.o_allowed)\n    if (event.o_allowed === true) {\n      setParticipantsType(\"open\")\n    }\n    else {\n      setParticipantsType(\"onlycollege\")\n    }\n    fetch(process.env.REACT_APP_API_URL + '/api/event/get_event_keywords', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        // setColleges(value);\n        value.forEach((v) => {\n          if (v.type === \"EventTags\") {\n            setEventTags((eventTags) => [...eventTags, v.title]);\n          }\n          else if (v.type === \"EventRequirements\") {\n            setRequirements((r) => [...r, v.title]);\n          }\n          else {\n            setEventTypes((r) => [...r, v.title]);\n          }\n        })\n      })\n    })\n\n  }, [token, event])\n\n\n  const handleClose = async (event, reason) => {\n    if (message === \"Saved changes successfully\") {\n      // history.replace()\n      // history.replace(\"/otpverification\")\n      window.location.reload(false);\n    }\n    setState({ ...state, open: false });\n  };\n\n  const handleRoundEditDialogClose = () => {\n    // setOpen(false);\n    setRoundsDialogOpen(false);\n  };\n\n  async function handleEventPost(e) {\n    e.preventDefault();\n    setLoading(true);\n    var oAllowed = false;\n    console.log(rounds);\n    if (participantType === \"open\") {\n      oAllowed = true\n    }\n    // console\n    try {\n      // console.log(\"started\");\n      // getBase64(image, (result) => {\n      var data = new FormData();\n      const payload = {\n        eventId: event._id,\n        name: name,\n        description: desc,\n        start_time: startDate,\n        finish_time: endDate,\n        registration_end_time: regEndDate,\n        event_mode: eventMode,\n        event_type: eventType,\n        tags: eventThemes,\n        // poster: result,\n        reg_link: regLink,\n        fee: regFees,\n        about: about,\n        fee_type: feeType,\n        college: collegeName,\n        organizer: organizer,\n        requirements: selectedrequirements,\n        o_allowed: oAllowed,\n        reg_mode: regMode,\n        venue_type: addressType,\n        venue: venue,\n        venue_college: venueCollege,\n        platform_details: platformDetails,\n        rounds: rounds,\n        rules: rules,\n        prizes: prizes,\n        themes: themes\n      };\n      data = JSON.stringify(payload);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + '/api/updateevent', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(result => {\n        if (result.status === 200) {\n          result.json().then(value => {\n            // console.log(value);\n            event = value.event;\n            if (imageUpdated) {\n              var data2 = new FormData()\n              data2.append(\"image\", image);\n              fetch(process.env.REACT_APP_API_URL + `/api/event/uploadimage?id=${event._id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: data2\n              }).then(res => {\n                if (res.status === 200) {\n                  setLoading(false);\n                  setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"successful\",\n                    type: \"success\",\n                    autoHide: 300\n                  })\n                }\n              })\n            }\n            else {\n              setLoading(false);\n              setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: \"Saved changes successfully\",\n                type: \"success\"\n              })\n            }\n            // history.replace(\"/home\")\n\n          })\n        }\n        else {\n          result.json().then(value => {\n            console.log(value);\n            setLoading(false);\n            setState({\n              open: true,\n              vertical: 'top',\n              horizontal: 'center',\n              message: value,\n              type: \"error\"\n            })\n          })\n        }\n      })\n\n      // })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\"\n      })\n    }\n  }\n\n  function handleeventTypsChange(event, value) {\n    setEventType(value);\n  }\n\n  function handleeventTagsChange(event, values) {\n    setEventThemes(values);\n  }\n  function handleRequirementsChange(event, values) {\n    setSelectedRequirements(values);\n  }\n\n  // function handleChange(event) {\n  //   if (event.target.files[0]) {\n  //     setImage(event.target.files[0]);\n  //     const fileName = event.target.files[0].name;\n  //     setImageName(fileName);\n  //   }\n\n  // }\n\n  function handleAddressTypeChange(evemt, value) {\n    setAddressType(value);\n  }\n  function handleName(event) {\n    setName(event.target.value)\n  }\n  function handleDesc(event) {\n    setDesc(event.target.value);\n  }\n  function handleFeeTypeChange(event, value) {\n    // props.setFeeType(value)\n    setFeeType(value);\n  }\n\n  function handleCollegeChange(event, value) {\n    // props.setCollegeName(value);\n    setCollegeName(value);\n  }\n  function handleEventMode(event) {\n    setEventMode(event.target.value);\n  }\n\n  function handleRegLink(event) {\n    setRegLink(event.target.value);\n  }\n  function handleFees(event) {\n    setRegFees(event.target.value);\n  }\n  function handleParticipantsTypeChange(event, value) {\n    setParticipantsType(value)\n  }\n  function handleVenue(event) {\n    setVenue(event.target.value);\n  }\n  // function handleVenueCollegeChange(event, value) {\n  //   setVenueCollege(value);\n  // }\n\n  function handlePlatformChange(event) {\n    setPlatformDetails(event.target.value);\n  }\n\n  function handleChange(event) {\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n      //   setImageAsFile(imageFile => (image))\n      const url = URL.createObjectURL(event.target.files[0]);\n      //   const fileType = event.target.files[0].type;\n      setImageurl(url)\n      setImageUpdated(true);\n      //   setImageType(fileType.substr(fileType.indexOf('/') + 1));\n    }\n\n  }\n\n  const handleRoundEditButton = (data) => () => {\n    // console.log(data);\n    setSelectedEditRound(data);\n    setRoundsDialogOpen(true);\n  }\n\n  const handlePrizeAddButton = () => {\n    setPrizes(prizes => [...prizes, { title: prizeTitle, desc: prizeDesc }]);\n    setPrizeTitle(null);\n    setPrizeDesc(null);\n}\n\nconst handlePrizeDeleteButton = (index, data) => () => {\n  // console.log(index);\n  // console.log(data);\n  // console.log(prizes)\n    var currentPrizes = prizes;\n    currentPrizes.splice(index);\n    setPrizes(currentPrizes);\n}\n\nconst handlePrizeFieldChange = (title) => (event) => {\n    if (title === \"title\") {\n        setPrizeTitle(event.target.value)\n    }\n    else {\n        setPrizeDesc(event.target.value);\n    }\n}\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <div className={classes.paper}>\n        <form className={classes.form} novalidate onSubmit={handleEventPost}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} >\n              <input id=\"contained-button-file\" type=\"file\" accept=\"image/*\" onChange={handleChange} style={{ display: \"none\" }}></input>\n              <Badge\n                overlap=\"circle\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                badgeContent={<label htmlFor=\"contained-button-file\">\n                  <IconButton style={{ backgroundColor: \"black\" }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <EditIcon></EditIcon>\n                  </IconButton>\n                </label>}>\n                <img height=\"160\" width=\"150\" alt=\"poster\" src={imageUpdated ? imageUrl : process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`} ></img>\n              </Badge>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventName\"\n                name=\"eventName\"\n                label=\"Event name\"\n                value={name || \"\"}\n                onChange={handleName}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"shortdesc\"\n                name=\"shortdesc\"\n                label=\"Short Description\"\n                fullWidth\n                value={desc || \"\"}\n                onChange={handleDesc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"startDate\"\n                  label=\"Event Start Date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n            </Grid>\n            <Grid item xs={12} sm={6} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"endDate\"\n                  label=\"Event End Date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={handleendDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={12} lg={4}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                  // minDate={Date.now()}\n                  fullWidth\n                  required\n                  variant=\"dialog\"\n                  format=\"dd MMM yyyy hh:mm a zzz\"\n                  margin=\"normal\"\n                  id=\"regEndDate\"\n                  label=\"Registration End Date\"\n                  name=\"regEndDate\"\n                  value={regEndDate}\n                  onChange={handleRegEndDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"event mode\">Event Mode</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  label=\"Event Mode\"\n                  value={eventMode || \"\"}\n                  onChange={handleEventMode}\n                  inputProps={{\n                    name: 'eventMode',\n                    id: 'event mode',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"Online\">Online</option>\n                  <option value=\"Offline\">Offline</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"event type\"\n                options={eventTypes}\n                getOptionLabel={(option) => option}\n                value={eventType || \"\"}\n                onChange={handleeventTypsChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Event Type\" />}\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"event themes\"\n                options={eventTags.map((option) => option)}\n                // defaultValue={[eventTypes[1]]}\n                freeSolo\n                value={eventThemes || []}\n                onChange={handleeventTagsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Event Themes\" placeholder=\"Event Themes\" />\n                )}\n              />\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <input\n                id=\"contained-button-file\"\n                required\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n                style={{ display: \"none\" }}>\n\n              </input>\n\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"eventposter\"\n                name=\"eventposter\"\n                label=\"Event Poster\"\n                component=\"span\"\n                value={imageName}\n                fullWidth\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"start\">\n                      <label htmlFor=\"contained-button-file\">\n                        <IconButton component=\"span\" >\n                          <CameraAltIcon></CameraAltIcon>\n                        </IconButton>\n                      </label>\n\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n            </Grid> */}\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Entry Fee</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={feeType || \"\"} onChange={handleFeeTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"Free\" control={<Radio color=\"default\" />} label=\"Free\" />\n                <FormControlLabel value=\"Paid\" control={<Radio color=\"default\" />} label=\"Paid\" />\n              </RadioGroup>\n            </Grid>\n            {regMode !== \"form\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  // required\n                  id=\"regLink\"\n                  name=\"regLink\"\n                  label=\"Registration Link\"\n                  fullWidth\n                  value={regLink || \"\"}\n                  onChange={handleRegLink}\n                />\n              </Grid>}\n            {feeType === \"Paid\" && <Grid item xs={12} lg={6}>\n              <TextField\n                autoComplete='off'\n                // required\n                id=\"regFees\"\n                name=\"regFees\"\n                value={regFees || \"\"}\n                label=\"Registration Fees\"\n                onChange={handleFees}\n                fullWidth\n              // helperText={\"Enter 0 if your event is free\"}\n              />\n            </Grid>}\n            <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                disabled\n                id=\"collegename\"\n                options={colleges}\n                getOptionLabel={(option) => option}\n                value={collegeName || \"\"}\n                onChange={handleCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"College\" />}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth >\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Registration</InputLabel>\n                <Select\n                  fullWidth\n                  native\n                  disabled\n                  label=\"Registration\"\n                  inputProps={{\n                    name: 'registrationMode',\n                    id: 'registration mode',\n                  }}\n                  value={regMode || \"\"}\n                // onChange={handleRegistrationModeChange}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value=\"form\">Our Platform(Ellipse)</option>\n                  <option value=\"link\">Other</option>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                id=\"organizer\"\n                name=\"organizer\"\n                label=\"Organizer\"\n                fullWidth\n                value={organizer || \"\"}\n              />\n            </Grid> */}\n            <Grid item xs={12} lg={6}>\n              <Autocomplete\n                multiple\n                id=\"requirements\"\n                options={requirements.map((option) => option)}\n                freeSolo\n                value={selectedrequirements}\n                onChange={handleRequirementsChange}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Prerequisites\" placeholder=\"Requirements\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Participation</FormLabel>\n              <RadioGroup name=\"participanttype\" value={participantType} onChange={handleParticipantsTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"open\" control={<Radio color=\"default\" />} label=\"Open for all\" />\n                <FormControlLabel value=\"onlycollege\" control={<Radio color=\"default\" />} label={`Only ${collegeName}`} />\n              </RadioGroup>\n            </Grid>\n            {eventMode === \"Offline\" && <Grid item xs={12}>\n              <FormLabel component=\"legend\">Address</FormLabel>\n              <RadioGroup aria-label=\"address\" name=\"address\" value={addressType} onChange={handleAddressTypeChange} style={{ display: \"inline\" }}>\n                <FormControlLabel value=\"College/University\" control={<Radio color=\"default\" />} label=\"College/University\" />\n                <FormControlLabel value=\"Other\" control={<Radio color=\"default\" />} label=\"Others\" />\n              </RadioGroup>\n            </Grid>}\n            <Grid item xs={12}>\n              <FormLabel required component=\"legend\">Participation Type</FormLabel>\n              <RadioGroup required aria-label=\"address\" name=\"teamed\" value={isTeamed ? \"team\" : \"individual\"} style={{ display: \"inline\" }}>\n                <FormControlLabel disabled value=\"individual\" control={<Radio color=\"default\" />} label=\"Individual\" />\n                <FormControlLabel disabled value=\"team\" control={<Radio color=\"default\" />} label=\"Team\" />\n              </RadioGroup>\n            </Grid>\n            {isTeamed && <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                type=\"number\"\n                id=\"maxTeam\"\n                name=\"minTeam\"\n                label=\"Minimum Team Members\"\n                fullWidth\n                value={teamSize.min_team_size || \"\"}\n              // onChange={(e)=>{props.setMinTeamSize(e.target.value)}}\n              />\n            </Grid>}\n            {isTeamed && <Grid item xs={12} lg={6}>\n              <TextField\n                disabled\n                autoComplete='off'\n                required\n                type=\"number\"\n                id=\"maxTeam\"\n                name=\"maxTeam\"\n                label=\"Maximum Team Members\"\n                fullWidth\n                value={teamSize.max_team_size || \"\"}\n              // onChange={(e)=>{props.setMaxTeamSize(e.target.value)}}\n              />\n            </Grid>}\n            {eventMode === \"Offline\" &&\n              <Grid item xs={12} lg={6}>\n                <TextField\n                  autoComplete='off'\n                  multiline={true}\n                  helperText=\"Enter venue details (Ex: VIT, Vellore)\"\n                  rows=\"5\"\n                  variant='outlined'\n                  // required\n                  value={venue || \"\"}\n                  onChange={handleVenue}\n                  id=\"building\"\n                  name=\"building\"\n                  label=\"Room No & Building\"\n                  fullWidth\n                />\n              </Grid>\n            }\n            {/* {eventMode === \"Offline\" && <Grid item xs={12} sm={6}>\n              <Autocomplete\n                fullWidth\n                id=\"combo-box-demo\"\n                options={collegesNames}\n                value={venueCollege}\n                getOptionLabel={(option) => option}\n                onChange={handleVenueCollegeChange}\n                renderInput={(params) => <TextField fullWidth required {...params} label=\"Venue College\" />}\n              />\n            </Grid>} */}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter short description of your event\"\n                autoComplete='off'\n                // required\n                value={about || \"\"}\n                id=\"about\"\n                name=\"about\"\n                label=\"About\"\n                fullWidth\n              />\n            </Grid>\n            {eventMode === \"Online\" && <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                helperText=\"Enter link for the platform, you can also add it later\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter details about your online platform\"\n                autoComplete='off'\n                // required\n                id=\"platform\"\n                name=\"platform\"\n                label=\"Platform\"\n                fullWidth\n                onChange={handlePlatformChange}\n                value={platformDetails || \"\"}\n              />\n            </Grid>}\n            {regMode === \"form\" && <Grid item xs={12}>\n              <Typography>Registration Fields</Typography>\n              <Paper component=\"ul\" className={classes.root}>\n                {event.reg_fields.map((data) => {\n                  return (\n                    <li key={data.key}>\n                      <Chip\n                        label={data.title}\n                        className={classes.chip}\n                      />\n                    </li>\n                  );\n                })}\n              </Paper>\n            </Grid>}\n\n            {regMode === \"form\" && <Grid item xs={12}>\n              <Typography>Rounds</Typography>\n              <Paper component=\"ul\" className={classes.root}>\n                {rounds.map((data) => {\n                  return (\n                    <li key={data.key}>\n                      <Chip\n                        label={data.title}\n                        className={classes.chip}\n                      />\n                      <IconButton onClick={handleRoundEditButton(data)}><EditIcon></EditIcon></IconButton>\n                    </li>\n                  );\n                })}\n              </Paper>\n            </Grid>}\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                helperText=\"Enter all rules and regulation including eligibility for participation\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter all rules and regulation including eligibility for participation\"\n                autoComplete='off'\n                onChange={(e) => { setRules(e.target.value) }}\n                value={rules}\n                id=\"rules\"\n                name=\"rules\"\n                label=\"Rules\"\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                multiline={true}\n                helperText=\"Enter your event themes like healthcare, fintech\"\n                rows=\"5\"\n                variant='outlined'\n                placeholder=\"Enter your event themes like healthcare, fintech\"\n                autoComplete='off'\n                onChange={(e) => { setThemes(e.target.value) }}\n                value={themes}\n                id=\"themes\"\n                name=\"themes\"\n                label=\"Themes\"\n                fullWidth\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\" className={classes.root}>\n                <FormLabel component=\"legend\">Prizes</FormLabel>\n                <Box display=\"flex\" style={{ marginTop: \"10px\" }}>\n                  <Box>\n                    <TextField onChange={handlePrizeFieldChange(\"title\")} value={prizeTitle || \"\"} label=\"Prize Title\" variant=\"outlined\" style={{ marginRight: \"5px\" }}></TextField>\n                  </Box>\n                  <Box>\n                    <TextField onChange={handlePrizeFieldChange(\"desc\")} value={prizeDesc || \"\"} label=\"Prize Description\" variant=\"outlined\"></TextField>\n                  </Box>\n                  <Box>\n                    <IconButton onClick={handlePrizeAddButton}>Add</IconButton>\n                  </Box>\n                </Box>\n              </FormControl>\n            </Grid>\n            <Grid>\n              <Paper component=\"ul\" className={classes.root}>\n                {prizes.map((data, index) => {\n                  return (\n                    <li key={data.key}>\n                      <Chip\n                        label={data.title}\n                        onDelete={handlePrizeDeleteButton(index, data)}\n                        className={classes.chip}\n                      />\n                    </li>\n                  );\n                })}\n              </Paper>\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save Changes\"}\n          </Button>\n        </form>\n      </div>\n      <RoundEditDialog\n        open={roundsDialogOpen}\n        handleClose={handleRoundEditDialogClose}\n        // handleEdit={handleRoundEdit}\n        rounds={rounds}\n        setRounds={setRounds}\n        roundData={selectedEditRound}\n      ></RoundEditDialog>\n      {/* </Grid> */}\n      {/* <Box mt={2}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}\n\nexport default withRouter(EventEdit);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n//function for alert\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 300\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClose = async (event, reason) => {\n    getParticipantsList()\n    setState({ ...state, open: false });\n  }\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getParticipantsList = () =>{\n    setRowValues([]);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          // const firstdata = value[0].data;\n          // const columnNames = Object.keys(firstdata);\n          value.forEach(d => {\n            if (d.certificate_status === \"not_generated\") {\n              setRowValues(rowValues => [...rowValues, d.data])\n            }\n\n          })\n        }\n      })\n    })\n  }\n\n\n\n  function handleGenerateCertificateButton() {\n    setLoading(true);\n    console.log(selected)\n    try {\n      var data = new FormData();\n      const d = { eventId: event._id, participants: selected }\n      data = JSON.stringify(d);\n      // console.log(data);\n      fetch(process.env.REACT_APP_API_URL + `/api/event/generate_certificates`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'POST',\n        body: data\n      }).then(response => {\n        // console.log(response);\n        response.json().then(value => {\n          // console.log(value);\n          \n          setLoading(false);\n          setState({\n            open: true,\n            vertical: 'top',\n            horizontal: 'center',\n            message: 'Generated successfully',\n            type: \"success\",\n            autoHide: 4000\n          });\n        })\n      })\n    }\n    catch (error) {\n      setLoading(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'center',\n        message: error.message,\n        type: \"error\",\n        autoHide: 6000\n      })\n\n    }\n  }\n\n\n  return (\n\n    <Grid container spacing={3}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        autoHideDuration={autoHide}\n        onClose={handleClose}\n        key={vertical + horizontal}>\n        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n      </Snackbar>\n      <Grid item xs={12} md={4} lg={9}>\n        <Paper className={classes.buttonsPaper}>\n          <Button\n            variant=\"contained\"\n            onClick={handleGenerateCertificateButton}\n            className={classes.button}>{loading ? <CircularProgress color=\"primary\" size={24} /> : \"Generate Certificates\"}</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = column.id === \"Email\" ? row[column.id].substr(0,3)+'*****@'+row[column.id].split('@')[1] : row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Grid} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonsPaper: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(3),\n    height: 140,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  fixedHeightPaper: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(5)\n  }\n}));\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const token = localStorage.getItem('token');\n  // const [regData, setRegData] = React.useState([]);\n  const [headers, setHeaders] = React.useState([]);\n  const [rowValues, setRowValues] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const event = props.event;\n\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rowValues.map((n) => n.Email);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n  const handleClick = (event, name) => {\n    console.log(name);\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  React.useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+`/api/event/registeredEvents?id=${event._id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'GET',\n    }).then(response => {\n      response.json().then(value => {\n        if (value.length > 0) {\n          const firstdata = value[0].data;\n          const columnNames = Object.keys(firstdata);\n          columnNames.forEach(item => {\n            setHeaders((headers => [...headers, { id: item, label: item, minWidth: 170 }]))\n          })\n          value.forEach(d => {\n              if(d.certificate_status !== \"not_generated\"){\n                setRowValues(rowValues => [...rowValues, d.data])\n              }\n            \n          })\n        }\n\n\n      })\n    })\n  }, [token, event._id])\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return (\n\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4} lg={9}>\n        {/* <Paper className={classes.buttonsPaper}>\n          <Button variant=\"contained\" onClick={handleGenerateCertificateButton} className={classes.button}>Generate Certificates</Button>\n        </Paper> */}\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"default\"\n                      checked={rowValues.length > 0 && selected.length === rowValues.length}\n                      onChange={handleSelectAllClick}\n                      indeterminate={selected.length > 0 && selected.length < rowValues.length}\n                      inputProps={{ 'aria-label': 'select all fields' }}\n                    />\n                  </TableCell>\n                  {headers.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowValues.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  const isItemSelected = isSelected(row.Email);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.Email}\n                      onClick={(event) => handleClick(event, row.Email)}\n                      selected={isItemSelected}>\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          color=\"default\"\n                          inputProps={{ 'aria-label': 'select all fields' }}\n                        /></TableCell>\n                      {headers.map((column) => {\n                        const value = column.id === \"Email\" ? row[column.id].substr(0,3)+'*****@'+row[column.id].split('@')[1] : row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rowValues.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","export default __webpack_public_path__ + \"static/media/certificate_sample.6f46be5a.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CertificateSample from './Images/certificate_sample.png';\nimport Typography from '@material-ui/core/Typography';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n    paper: {\n        marginTop: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // backgroundColor: theme.palette.secondary.main,\n        padding: theme.spacing(3),\n        borderRadius: 30,\n\n    },\n}));\n\nexport default function StickyHeadTable(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const token = localStorage.getItem('token');\n    const [title, setTitle] = React.useState(null);\n    const event = props.event;\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    }\n\n    React.useEffect(() => {\n        setTitle(event.certificate.title)\n    }, [event])\n\n    function handleUpdateButton() {\n        setLoading(true);\n        try {\n            if (title === \"\" || title === null) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: \"please fill the details\",\n                    type: \"error\",\n                    autoHide: 6000\n                })\n            }\n            else {\n                var data = new FormData();\n                const d = { eventId: event._id, title: title }\n                data = JSON.stringify(d);\n                fetch(process.env.REACT_APP_API_URL + `/api/event/update_certificate_title`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    // console.log(response);\n                    response.json().then(value => {\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Generated successfully',\n                            type: \"success\",\n                            autoHide: 4000\n                        });\n                    })\n                })\n            }\n\n        }\n        catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 6000\n            })\n\n        }\n    }\n\n\n    return (\n        <div className={classes.paper}>\n            <Grid container spacing={2}>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={open}\n                    autoHideDuration={autoHide}\n                    onClose={handleClose}\n                    key={vertical + horizontal}>\n                    <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                </Snackbar>\n                <Grid item xs={12}>\n                    <TextField\n                        autoComplete='off'\n                        required\n                        id=\"title\"\n                        name=\"title\"\n                        label=\"Certificate Title\"\n                        value={title || \"\"}\n                        onChange={(e) => setTitle(e.target.value)}\n                        fullWidth\n                        inputProps={{\n                            maxLength: 32,\n                        }}\n                        helperText=\"You can change the title of certificate as shown below in sample by default it is event name\"\n                    />\n                </Grid>\n                {/* <Grid item xs={6}>\n                </Grid> */}\n                <Grid item xs={12}>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        onClick={handleUpdateButton}\n                        className={classes.submit}\n                    >\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Update\"}\n                    </Button>\n                </Grid>\n            </Grid>\n            <Typography style={{marginTop:\"10px\"}} variant=\"h4\">Sample Certificate</Typography>\n            <img width=\"100%\" alt=\"certificate sample\" src={CertificateSample}></img>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport AdminCertificateDashboard1 from './AdminCertificateDashboad1';\nimport AdminCertificateDashboard2 from './AdminCertificateDashboard2';\nimport AdminCertificateDashboard3 from './AdminCertificateDashboard3';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // height: '300px'\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        // color: theme.palette.grey[500],\n    },\n    root2: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n    },\n}));\n\nfunction ExplorePanel(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <div className={classes.root}>\n\n                <Paper className={classes.root2}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\">\n                        <Tab label=\"Dashboard\"></Tab>\n                        <Tab label=\"Pending\" />\n                        <Tab label=\"Generated\" />\n                    </Tabs>\n                </Paper>\n                {\n                    value === 0 && <AdminCertificateDashboard3 event={event}></AdminCertificateDashboard3>\n                }\n                {\n                    value === 1 && <AdminCertificateDashboard1 event={event}></AdminCertificateDashboard1>\n                }\n                {\n                    value === 2 && <AdminCertificateDashboard2 event={event}></AdminCertificateDashboard2>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePanel;\n","import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport useStyles from '../Themes/SignupPageStyles';\n\n//MaterialUI imports\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n\n//other components imports\nimport AuthContext from '../AuthContext';\n\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nfunction SubmissionForm(props) {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n\n    const [userMessage, setUserMessage] = React.useState(false);\n    const [access, setAccess] = React.useState(true);\n    const [editAccess, setEditAccess] = React.useState(false);\n\n    const [formValues, setFormValues] = React.useState(null);\n    const [uploadFiles, setUploadFiles] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [normalFields, setNormalFields] = React.useState([]);\n    const [dropDownFields, setDropDownFields] = React.useState([]);\n    const [checkboxFields, setCheckBoxFields] = React.useState([]);\n    const [radioFields, setRadioFields] = React.useState([]);\n    const [dateFields, setDateFields] = React.useState([]);\n    const [longDescFields, setLongDescFields] = React.useState([]);\n    const [linkFields, setLinkFields] = React.useState([]);\n    const [fileUploadFields, setFileUploadFields] = React.useState([]);\n\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const [backDropOpen, setBackDropOpen] = React.useState(true);\n    const event = props.event;\n    const colleges = [\"VIT University,Vellore\", \"GITAM University, Bengaluru\", \"SRM University\"];\n\n    const { currentUser } = React.useContext(AuthContext);\n\n    const currentRound = props.round;\n    const currentDate = new Date();\n    const roundStartDate = new Date(currentRound.start_date);\n    const roundEndDate = new Date(currentRound.end_date);\n\n    React.useEffect(() => {\n        if (roundStartDate >= currentDate) {\n            setAccess(false);\n            setUserMessage(\"Round Not yet started\");\n        }\n        else if (roundEndDate <= currentDate) {\n            setAccess(false);\n            setUserMessage(\"Round Ended\");\n        }\n        // eslint-disable-next-line\n    }, [event, currentUser])\n\n    React.useEffect(() => {\n        if (!props.individual && props.team) {\n            if (props.team.members.length < event.team_size.min_team_size) {\n                setAccess(false);\n                setUserMessage(\"Form team with minimum of two members to make submission\");\n            }\n            if (props.team.submissions[props.index].is_submitted) {\n                setAccess(false);\n                setUserMessage(\"submission Already made\");\n                setEditAccess(true);\n                const submission_form = props.team.submissions[props.index].submission_form;\n                const keys = Object.keys(submission_form);\n                keys.forEach((sub, index) => {\n                    setFormValues(formValues => ({ ...formValues, [sub]: submission_form[sub] }))\n                })\n            }\n        }\n        else if (props.registration) {\n            if (props.registration.submissions[props.index].is_submitted) {\n                setAccess(false);\n                setUserMessage(\"submission Already made\");\n                setEditAccess(true);\n                const submission_form = props.registration.submissions[props.index].submission_form;\n                const keys = Object.keys(submission_form);\n                keys.forEach((sub, index) => {\n                    setFormValues(formValues => ({ ...formValues, [sub]: submission_form[sub] }))\n                })\n            }\n        }\n        // eslint-disable-next-line\n    }, [props])\n\n\n    React.useEffect(() => {\n        const allFields = props.fields;\n        if (allFields != null) {\n            allFields.forEach(f => {\n                if (f.title === \"Name\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.name }))\n                }\n                else if (f.title === \"Email\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.email }));\n                }\n                else if (f.title === \"College\") {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: currentUser.college_name }));\n                }\n                else {\n                    setFormValues(formValues => ({ ...formValues, [f.title]: null }));\n                }\n                if (f.field === \"checkbox\") {\n\n                }\n\n            })\n            // const filteredFields = allFields.filter(f => f.field !== \"checkbox\")\n            setNormalFields(allFields.filter(f => f.field === \"short_text\"));\n            setLongDescFields(allFields.filter((f) => f.field === \"paragraph\"));\n            setCheckBoxFields(allFields.filter((f) => f.field === \"checkboxes\"));\n            setRadioFields(allFields.filter(f => f.field === \"radiobuttons\"));\n            setDateFields(allFields.filter((f) => f.field === \"date\"));\n            setDropDownFields(allFields.filter(f => f.field === \"dropdown\"));\n            setLinkFields(allFields.filter(f => f.field === \"link\"));\n            setFileUploadFields(allFields.filter(f => f.field === \"file_upload\"));\n\n        }\n        setBackDropOpen(false);\n    }, [token, currentUser, props.fields])\n\n    function handleClose() {\n        if (message === \"Successful.Stay tunned with notifications and announcements\") {\n            props.fetchAll();\n        }\n        setState({ ...state, open: false });\n    }\n\n    function handleChange(event) {\n        setFormValues({ ...formValues, [event.target.name]: event.target.value });\n    }\n    const handleChange2 = (name) => (event, values) => {\n        setFormValues({ ...formValues, [name]: values });\n\n    }\n    const handleChange3 = (name) => (event) => {\n\n        if (event.target.checked) {\n            var array = [];\n            if (formValues[name]) {\n                array = formValues[name];\n                array.push(event.target.name);\n            }\n            else {\n                array.push(event.target.name);\n            }\n            setFormValues({ ...formValues, [name]: array });\n        }\n        else {\n            const array = formValues[name];\n            var index = array.indexOf(event.target.name);\n            array.splice(index, 1);\n            setFormValues({ ...formValues, [name]: array });\n        }\n    }\n\n    const handleDateChange = (name) => (date) => {\n        setFormValues({ ...formValues, [name]: date })\n    };\n\n    const handleLondDescChange = (event) => {\n        setFormValues({ ...formValues, [event.target.name]: event.target.value })\n    }\n\n    function handleradioChange(event, value) {\n        setFormValues({ ...formValues, [event.target.name]: value });\n    }\n\n    function handleEventRegistration(e) {\n        e.preventDefault();\n        setLoading(true);\n        var uploadedFilesIds = [];\n        const formkeys = Object.keys(formValues);\n        const fileFormKeys = Object.keys(uploadFiles);\n        var count = 0;\n        formkeys.forEach((v, index) => {\n            const cField = props.fields.filter((value) => { return value.title === v });\n            if (formValues[v] === null || formValues[v] === '') {\n                if (fileFormKeys.includes(v)) {\n\n                }\n                else {\n                    if (cField[0].req) {\n                        count = count + 1;\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Please fill in all required fields',\n                            type: \"error\",\n                            autoHide: 4000\n                        });\n                    }\n                }\n            }\n        })\n        if (fileFormKeys) {\n            fileFormKeys.forEach(f => {\n                const cField = props.fields.filter((value) => { return value.title === f });\n                if (uploadFiles[f] === null) {\n                    if (cField[0].req) {\n                        count = count + 1;\n                        setLoading(false);\n                        setState({\n                            open: true,\n                            vertical: 'top',\n                            horizontal: 'center',\n                            message: 'Please fill in all fields',\n                            type: \"error\",\n                            autoHide: 4000\n                        });\n                    }\n                }\n            })\n        }\n\n        var finalValues = formValues;\n        if (count === 0) {\n            try {\n                if (fileFormKeys.length > 0) {\n                    fileFormKeys.forEach((key, index) => {\n                        var data1 = new FormData();\n                        data1.append('uploaded_file', uploadFiles[key]);\n                        fetch(process.env.REACT_APP_API_URL + `/api/event/register/upload_file?id=${event._id}`, {\n                            headers: {\n                                'Authorization': `Bearer ${token}`,\n                            },\n                            method: 'POST',\n                            body: data1\n                        }).then((response) => {\n                            if (response.status === 200) {\n                                response.json().then(value => {\n                                    setFormValues({ ...formValues, [key]: value.file_name })\n                                    finalValues[key] = value.file_name\n                                    uploadedFilesIds.push({ [key]: value.file_name });\n                                    if (uploadedFilesIds.length === fileFormKeys.length) {\n                                        var data = new FormData();\n                                        const d = props.individual ? { event_id: event._id, reg_id: props.registration._id, submission: finalValues, is_teamed: false, event_round: currentRound.title } : { event_id: event._id, submission: finalValues, team_id: props.team_id, is_teamed: true, event_round: currentRound.title }\n                                        data = JSON.stringify(d);\n                                        fetch(process.env.REACT_APP_API_URL + `/api/event/team/add_submission`, {\n                                            headers: {\n                                                'Authorization': `Bearer ${token}`,\n                                                'Content-Type': 'application/json',\n                                                'Accept': 'application/json'\n                                            },\n                                            method: 'POST',\n                                            body: data\n                                        }).then(response => {\n                                            if (response.status === 200) {\n                                                response.json().then(value => {\n                                                    setLoading(false);\n                                                    setState({\n                                                        open: true,\n                                                        vertical: 'top',\n                                                        horizontal: 'center',\n                                                        message: 'Successful.Stay tunned with notifications and announcements',\n                                                        type: \"success\",\n                                                        autoHide: 4000\n                                                    });\n                                                })\n                                            }\n                                        })\n                                    }\n                                })\n                            }\n                        })\n                    })\n                }\n                else {\n                    var data = new FormData();\n                    const d = props.individual ? { event_id: event._id, reg_id: props.registration._id, submission: finalValues, is_teamed: false, event_round: currentRound.title } : { event_id: event._id, submission: finalValues, team_id: props.team_id, is_teamed: true, event_round: currentRound.title }\n                    data = JSON.stringify(d);\n                    fetch(process.env.REACT_APP_API_URL + `/api/event/team/add_submission`, {\n                        headers: {\n                            'Authorization': `Bearer ${token}`,\n                            'Content-Type': 'application/json',\n                            'Accept': 'application/json'\n                        },\n                        method: 'POST',\n                        body: data\n                    }).then(response => {\n                        if (response.status === 200) {\n                            response.json().then(value => {\n                                setLoading(false);\n                                setState({\n                                    open: true,\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                    message: 'Successful.Stay tunned with notifications and announcements',\n                                    type: \"success\",\n                                    autoHide: 4000\n                                });\n                            })\n                        }\n                        else {\n                            setLoading(false);\n                            setState({\n                                open: true,\n                                vertical: 'top',\n                                horizontal: 'center',\n                                message: \"something went wrong try again\",\n                                type: \"error\",\n                                autoHide: 5000\n                            })\n                        }\n\n                    })\n                }\n            }\n            catch (error) {\n                setLoading(false);\n                setState({\n                    open: true,\n                    vertical: 'top',\n                    horizontal: 'center',\n                    message: error.message,\n                    type: \"error\",\n                    autoHide: 6000\n                })\n            }\n        }\n    }\n\n    function handleFileSelect(event) {\n        if (event.target.files[0]) {\n            setUploadFiles({ ...uploadFiles, [event.target.name]: event.target.files[0] });\n        }\n    }\n\n    return (\n        <div>\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Backdrop className={classes.backdrop} open={backDropOpen}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <form style={{ margin: \"20px\" }}>\n\n                <Grid container component=\"main\" spacing={2}>\n                    {normalFields.map((field, index) => {\n                        if (field.title === \"College\") {\n                            return (\n                                <Grid item xs={12}>\n                                    <Autocomplete\n                                        fullWidth\n                                        id={field.title}\n                                        options={colleges}\n                                        getOptionLabel={(option) => option}\n                                        onChange={handleChange}\n                                        value={formValues[field.title]}\n                                        disabled\n                                        renderInput={(params) => <TextField name={field.title} fullWidth required {...params} label={field.title} />}\n                                    />\n                                </Grid>)\n                        }\n                        else if (field.title === \"Email\") {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        disabled\n                                        // variant=\"outlined\"\n                                        // required\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title]}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                </Grid>)\n                        }\n                        else {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        // variant=\"outlined\"\n                                        margin=\"dense\"\n                                        required={field.req}\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title] || \"\"}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                </Grid>)\n                        }\n\n                    })}\n                    {\n                        longDescFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        multiline={true}\n                                        rows=\"5\"\n                                        variant='outlined'\n                                        placeholder={field.title}\n                                        autoComplete='off'\n                                        required={field.req}\n                                        id={field.title}\n                                        name={field.title}\n                                        label={field.title}\n                                        fullWidth\n                                        onChange={handleLondDescChange}\n                                        value={formValues[field.title] || \"\"}\n                                    />\n                                </Grid>\n                            )\n                        })\n                    }\n                    {checkboxFields.map((field, index) => {\n                        return (\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\" className={classes.formControl}>\n                                    <FormLabel required={field.req} component=\"legend\">{field.title}</FormLabel>\n                                    <FormGroup class={classes.formgroup}>\n                                        {field.options.map((option) => {\n                                            return <FormControlLabel\n                                                control={<Checkbox color=\"primary\" checked={formValues[field.title] !== null && formValues[field.title].includes(option)} onChange={handleChange3(field.title)} name={option} />}\n                                                label={option}\n                                            />\n                                        })}\n                                    </FormGroup>\n                                </FormControl>\n                            </Grid>\n                        )\n                    })}\n                    {dropDownFields.map((field, index) => {\n                        return (\n                            <Grid item xs={12}>\n                                <Autocomplete\n                                    id={field.title}\n                                    options={field.options.map((option) => option)}\n                                    value={formValues[field.title]}\n                                    onChange={handleChange2(field.title)}\n                                    renderTags={(value, getTagProps) =>\n                                        value.map((option, index) => (\n                                            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                                        ))\n                                    }\n                                    renderInput={(params) => (\n                                        <TextField required={field.req} {...params} name={field.name} label={field.title} placeholder={field.name} />\n                                    )}\n                                />\n                            </Grid>\n                        )\n                    })}\n                    {radioFields.map((field, index) => {\n                        return (\n                            <Grid item xs={12}>\n                                <FormLabel required={field.req} component=\"legend\">{field.title}</FormLabel>\n                                <RadioGroup required={field.req} aria-label=\"address\" name={field.title} defaultValue={field.options[0]} value={formValues[field.title]} onChange={handleradioChange} style={{ display: \"inline\" }}>\n                                    {field.options.map((option) => {\n                                        return <FormControlLabel required={field.req} value={option} control={<Radio color=\"default\" />} label={option} />\n                                    })}\n                                </RadioGroup>\n                            </Grid>\n                        )\n                    })}\n                    {\n                        dateFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <DateTimePicker\n                                            // minDate={Date.now()}\n                                            fullWidth\n                                            required={field.req}\n                                            variant=\"dialog\"\n                                            format=\"dd MMM yyyy hh:mm a zzz\"\n                                            margin=\"normal\"\n                                            id={field.title}\n                                            label={field.title}\n                                            name={field.title}\n                                            // defaultValue={Date.now()}\n                                            value={formValues[field.title]}\n                                            onChange={handleDateChange(field.title)}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change date',\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider>\n\n                                </Grid>\n                            )\n                        })\n                    }\n                    \n                    {\n                        linkFields.map((field, index) => {\n                            return (\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete='off'\n                                        name={field.title}\n                                        required={field.req}\n                                        fullWidth\n                                        id={field.title}\n                                        onChange={handleChange}\n                                        value={formValues[field.title] || \"\"}\n                                        label={field.title}\n                                        autoFocus\n                                    />\n                                </Grid>)\n                        })\n                    }\n                    {\n                        fileUploadFields.map((field, index) => {\n                            if (editAccess) {\n                                return <Grid item xs={12}>\n                                    <Typography>{field.title}</Typography>\n                                    <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${formValues[field.title]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                                    <input id={index} name={field.title} required={field.req} type=\"file\" onChange={handleFileSelect} style={{ \"marginTop\": \"10px\" }} ></input>\n                                </Grid>\n                            }\n                            else {\n                                return <Grid item xs={12}>\n                                    <Typography>{field.title}</Typography>\n                                    <input id={index} name={field.title} required={field.req} type=\"file\" onChange={handleFileSelect} style={{ \"marginTop\": \"10px\" }} ></input>\n                                </Grid>\n                            }\n                        })\n                    }\n                </Grid>\n                {access && <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    className={classes.submit}\n                    onClick={handleEventRegistration}\n                >\n                    {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Submit\"}\n                </Button>}\n                {\n                    !access && <Typography style={{ margin: \"20px 0px 10px 0px\" }}>{userMessage}</Typography>\n                }\n                {editAccess && <Button\n                    onClick={handleEventRegistration}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    className={classes.submit}\n                >\n                    {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Edit\"}\n                </Button>}\n            </form>\n        </div>\n    )\n}\nexport default SubmissionForm;","import React from 'react';\nimport { Typography, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\n// import AuthContext from '../AuthContext';\n// import WebSocketContext from '../WebSocketContext';\nimport SubmissionPanel from './SubmissionForm';\n// import ChatMessage from '../Components/ChatMessage';\n// import ChatTextField from './ChatTextField';\n\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Linkify from 'react-linkify';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\"\n\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        // marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n\n    grid: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        backgroundColor: \"rgb(0, 189, 170,0.1)\",\n        maxWidth: '99%',\n        marginTop: theme.spacing(2)\n\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n    // stickyHeader: {\n    //     position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n\n    topBar: {\n        // display: 'fixed'\n        maxHeight: \"300px\"\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        maxWidth: '65%',\n        minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    accordion: {\n        backgroundColor: theme.palette.secondary.main\n    },\n\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    // const { currentUser } = React.useContext(AuthContext);\n    const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const [registration, setRegistration] = React.useState(null);\n    // const registration = props.registration;\n    const [teamDetails, setTeamDetails] = React.useState(null);\n    // const [admin, setAdmin] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    // const { webSocketContext } = React.useContext(WebSocketContext);\n\n\n    React.useEffect(() => {\n        // console.log(props.individual);\n        if (!props.individual) {\n            setRegistration(props.registration);\n            fetchAll()\n\n        }\n        else {\n            getData();\n        }\n\n        // eslint-disable-next-line\n    }, [props.individual])\n\n    const fetchAll = () => {\n        setLoading(true);\n        try {\n            if (props.registration.team_id !== null) {\n                fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_details?id=${props.registration.team_id}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'GET',\n                }).then(response => {\n                    response.json().then(value => {\n                        // console.log(value);\n                        setTeamDetails(value[0]);\n                        setLoading(false)\n                        // if (value[0].user_id === currentUser.user_id) {\n                        //     setAdmin(true);\n                        // }\n                    })\n                })\n            }\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const getData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        // console.log(value);\n                        setRegistration(value[0]);\n                        setLoading(false);\n                        // if(value[0].teamed_up){\n                        // setTeamedUp(value[0].teamed_up);\n                        // }\n\n                    })\n                }\n\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <React.Fragment>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    {!props.individual && <div className={classes.grid}>\n                        {teamDetails !== null && <Grid container component=\"main\" >\n                            <Grid item xs={12} md={6}>\n                                <Typography>Team</Typography>\n                                <Box className={classes.root0}>\n                                    <Box className={classes.adminDetails}>\n                                        <Box>\n                                            <Avatar className={classes.avatar} alt={teamDetails.team_name} src=\"abc.jpg\"></Avatar>\n                                        </Box>\n                                        <Box>\n                                            <Box>\n                                                <Typography variant=\"h5\">{teamDetails.team_name}</Typography>\n                                            </Box>\n                                            <Box>\n                                                <Typography color=\"textSecondary\" variant=\"body2\">{teamDetails.description}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Grid>\n                        </Grid>}\n                    </div>}\n                    {props.individual && <Grid container component=\"main\">\n                        {registration !== null && <Grid item xs={12}>\n                            {\n                                event.rounds.map((value, index) => {\n                                    const cDate = new Date();\n                                    const sDate = new Date(value.start_date);\n                                    const eDate = new Date(value.end_date);\n                                    return <Accordion className={classes.accordion}>\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1a-content\"\n                                            id=\"panel1a-header\">\n                                            <Typography className={classes.heading}>{value.title}</Typography>\n                                            <Typography color=\"textSecondary\" style={{ marginLeft: '3px' }}>{cDate < sDate ? \"Starts on \" + sDate.toDateString() + \" \" + sDate.toLocaleTimeString() : \"Ends on \" + eDate.toDateString() + \" \" + eDate.toLocaleTimeString()}</Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            {\n                                                value.link !== '' && <Typography component=\"span\" variant=\"body1\" color=\"textSecondary\" className={classes.inline}>\n                                                    <Linkify\n                                                        componentDecorator={(decoratedHref, decoratedText, key) => (\n                                                            <a target=\"blank\" style={{ color: '#00bdaa', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                                {decoratedText}\n                                                            </a>\n                                                        )}\n                                                    >{value.link}</Linkify>\n                                                </Typography>\n                                            }\n                                        </AccordionDetails>\n                                        {\n                                            value.fields.length > 0 && <SubmissionPanel fetchAll={getData} registration={registration} individual={props.individual} team_id={registration.team_id} index={index} team={teamDetails} event={event} round={value} fields={value.fields}></SubmissionPanel>\n                                        }\n\n                                    </Accordion>\n                                })\n                            }\n                        </Grid>}\n                    </Grid>}\n                    {!props.individual && <Grid container component=\"main\">\n                        {teamDetails !== null && <Grid item xs={12}>\n                            {\n                                event.rounds.map((value, index) => {\n                                    const cDate = new Date();\n                                    const sDate = new Date(value.start_date);\n                                    const eDate = new Date(value.end_date);\n                                    return <Accordion className={classes.accordion}>\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1a-content\"\n                                            id=\"panel1a-header\">\n                                            <Typography className={classes.heading}>{value.title}</Typography>\n                                            <Typography color=\"textSecondary\" style={{ marginLeft: '3px' }}>{cDate < sDate ? \"Starts on \" + sDate.toDateString() + \" \" + sDate.toLocaleTimeString() : \"Ends on \" + eDate.toDateString() + \" \" + eDate.toLocaleTimeString()}</Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            {\n                                                value.link !== '' && <Typography component=\"span\" variant=\"body1\" color=\"textSecondary\" className={classes.inline}>\n                                                    <Linkify\n                                                        componentDecorator={(decoratedHref, decoratedText, key) => (\n                                                            <a target=\"blank\" style={{ color: '#00bdaa', fontWeight: 'bold', margin: \"20px\" }} href={decoratedHref} key={key}>\n                                                                {decoratedText}\n                                                            </a>\n                                                        )}\n                                                    >{value.link}</Linkify>\n                                                </Typography>\n                                            }\n                                        </AccordionDetails>\n                                        {\n                                            value.fields.length > 0 && <SubmissionPanel fetchAll={fetchAll} team_id={registration.team_id} index={index} team={teamDetails} event={event} round={value} fields={value.fields}></SubmissionPanel>\n                                        }\n                                    </Accordion>\n                                })\n                            }\n                        </Grid>}\n                    </Grid>}\n\n                </React.Fragment>\n            )}\n        </div>\n    );\n}\nexport default AboutEventPanel;\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { Typography } from '@material-ui/core';\n\nimport AuthContext from '../AuthContext';\nimport WebSocketContext from '../WebSocketContext';\n\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     alignItems: \"center\",\n//     backgroundColor: theme.palette.secondary.main,\n//     marginBottom: theme.spacing(2),\n\n//   },\n\n// }));\n\n\n\n\nfunction Eventcard(props) {\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    //   const classes = useStyles();\n      const event = props.event;\n    const [memberDetails, setMemberDetails] = React.useState({});\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    React.useEffect(() => {\n        fetchAll()\n        // eslint-disable-next-line\n    }, [props])\n\n    const fetchAll = () =>{\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_member_details?id=${props.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    \n                    setMemberDetails(value);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    const handleRemoveButton = () =>{\n        const d = new Date();\n        var data = new FormData();\n        data = JSON.stringify({\n            event_id: event._id,\n            team_id: props.id._id,\n            user_id: props.user_id\n        });\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/remove_user_from_team`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((response) => {\n            response.json().then(value => {\n                // console.log(value);\n                props.fetchAll()\n                if (webSocketContext) {\n                    webSocketContext.send(JSON.stringify({\n                        action: \"team_status_update_message\",\n                        team_id: props.id._id,\n                        msg: {\n                            'id': props.user_id + Date.now(),\n                            'user_id': currentUser.user_id,\n                            'user_name': currentUser.name,\n                            'user_pic': currentUser.user_pic,\n                            'message_type': 'team_status_update_message',\n                            'message': memberDetails.name + \" was removed from the team\",\n                            'date': d.toISOString()\n                        }\n                    }));\n                    webSocketContext.send(JSON.stringify({\n                        action: \"team_status_update_status\",\n                        team_id: props.id._id,\n                        users: props.id.members,\n                        msg: {\n                          'id': currentUser.user_id + Date.now(),\n                          'user_id': currentUser.user_id,\n                          'user_name': currentUser.name,\n                          'user_pic': currentUser.profile_pic,\n                          'message_type': 'team_status_update_message',\n                          'message': currentUser.name + \" has left the team\",\n                          'date': d.toISOString()\n                        }\n                      }));\n                }\n            })\n        })\n    }\n\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar>\n                    <Avatar alt={memberDetails.name} src={memberDetails.user_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${memberDetails.user_pic}` : \"abc.jpg\"} />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n                primary={props.id === props.user_id ? memberDetails.name + \" (Team Leader)\" : memberDetails.name}\n                secondary={memberDetails.college}\n            />\n            {props.admin && !(currentUser.user_id === props.user_id) && <ListItemSecondaryAction>\n                <IconButton onClick={handleRemoveButton} edge=\"end\" aria-label=\"delete\">\n                    <RemoveCircleIcon></RemoveCircleIcon> <Typography>Remove</Typography>\n                </IconButton>\n            </ListItemSecondaryAction>}\n        </ListItem>\n    );\n}\n\nexport default Eventcard;\n\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Typography } from '@material-ui/core';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     alignItems: \"center\",\n//     backgroundColor: theme.palette.secondary.main,\n//     marginBottom: theme.spacing(2),\n\n//   },\n\n// }));\n\nfunction Eventcard(props) {\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n    const { currentUser } = React.useContext(AuthContext);\n    //   const classes = useStyles();\n    const event = props.event;\n    const [memberDetails, setMemberDetails] = React.useState({});\n    const { webSocketContext } = React.useContext(WebSocketContext);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_member_details?id=${props.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setMemberDetails(value);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }, [props, token])\n\n    const handleAcceptButton = () => {\n        const d = new Date();\n        var data = new FormData();\n        data = JSON.stringify({\n            event_id: event._id,\n            team_id: props.id._id,\n            user_id: props.user_id\n        });\n        fetch(process.env.REACT_APP_API_URL + `/api/event/accept_user_teamup_request`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then((response) => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    props.fetchAll();\n\n                    if (webSocketContext) {\n                        webSocketContext.send(JSON.stringify({\n                            action: \"team_status_update_message\",\n                            team_id: props.id._id,\n                            msg: {\n                                'id': props.user_id + Date.now(),\n                                'user_id': currentUser.user_id,\n                                'user_name': memberDetails.name,\n                                'user_pic': memberDetails.user_pic,\n                                'message_type': 'team_status_update_message',\n                                'message': memberDetails.name + \" has joined the team\",\n                                'date': d.toISOString()\n                            }\n                        }));\n                        webSocketContext.send(JSON.stringify({\n                            action: \"team_status_update_status\",\n                            team_id: props.id._id,\n                            users: [value.updated_user_id],\n                            msg: {\n                                'id': currentUser.user_id + Date.now(),\n                                'user_id': currentUser.user_id,\n                                'user_name': currentUser.name,\n                                'user_pic': currentUser.profile_pic,\n                                'message_type': 'team_status_update_message',\n                                'message': currentUser.name + \" has left the team\",\n                                'date': d.toISOString()\n                            }\n                        }));\n                    }\n\n                })\n            }\n            else if (response.status === 201) {\n                response.json().then(value => {\n                    // setLoading(false);\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: value.message,\n                        type: \"error\",\n                        autoHide: 4000\n                    });\n                })\n\n            }\n\n        })\n    }\n\n    function handleClose() {\n        // if (message === \"Successful.Stay tunned with notifications and announcements\") {\n        //     props.fetchAll();\n        // }\n        setState({ ...state, open: false });\n    }\n\n\n    return (\n        <ListItem>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <ListItemAvatar>\n                <Avatar alt={memberDetails.name} src={memberDetails.user_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${memberDetails.user_pic}` : \"abc.lpg\"} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={memberDetails.name}\n                secondary={memberDetails.college}\n            />\n            <ListItemSecondaryAction>\n                {/* <IconButton edge=\"end\" aria-label=\"delete\">\n                          <DeleteIcon />\n                        </IconButton> */}\n                <IconButton onClick={handleAcceptButton} edge=\"end\" aria-label=\"delete\">\n                    <CheckCircleIcon></CheckCircleIcon><Typography>Accept</Typography>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n\n    );\n}\n\nexport default Eventcard;\n\n","import React from 'react';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme } from '@material-ui/core/styles';\n\n//function for alert\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function EventReportDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const token = localStorage.getItem('token');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const [loading, setLoading] = React.useState(false);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n    const handleClose = async (event, reason) => {\n\n        setState({ ...state, open: false });\n    };\n    const [title, setTitle] = React.useState(null);\n    const [desc, setDesc] = React.useState(null);\n\n    React.useEffect(() => {\n        // console.log(props.title)\n        setTitle(props.title);\n        setDesc(props.desc);\n    }, [props])\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleDescChange(event) {\n        setDesc(event.target.value);\n    }\n\n    function handleAddButton() {\n        setLoading(true)\n        try {\n            var data = new FormData();\n            data = JSON.stringify({\n                team_id: props.team_id,\n                desc: desc\n            });\n            // console.log(data);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/edit_team`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then((response) => {\n                response.json().then(value => {\n                    setLoading(false)\n                    props.handleClose()\n                    setState({\n                        open: true,\n                        vertical: 'top',\n                        horizontal: 'center',\n                        message: 'Successfull',\n                        type: \"success\",\n                        autoHide: 3000\n                    });\n                })\n            })\n\n        } catch (error) {\n            setLoading(false);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: error.message,\n                type: \"error\",\n                autoHide: 3000\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">FeedBack</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Name\"\n                                name=\"title\"\n                                fullWidth\n                                disabled\n                                value={title || \"\"}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"desc\"\n                                label=\"Issue Description\"\n                                name=\"desc\"\n                                fullWidth\n                                value={desc || \"\"}\n                                required\n                                onChange={handleDescChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddButton} color=\"primary\">\n                        {loading ? <CircularProgress color=\"primary\" size={24} /> : \"Save\"}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Typography, Box, Avatar, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\n// import { cleanup } from '@testing-library/react';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport TeamMemberRequestListItem from './TeamMemberRequestListItem';\n\nimport AuthContext from '../AuthContext';\nimport TeamEditDialog from './EditTeamDialog';\nimport WebSocketContext from '../WebSocketContext';\n// import ChatMessage from '../Components/ChatMessage';\n// import ChatTextField from './ChatTextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    // backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    alignContent: \"center\"\n\n  },\n  adminDetails: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    // marginTop: theme.spacing(2)\n  },\n  root0: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginRight: theme.spacing(1)\n  },\n\n  grid: {\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n    backgroundColor: \"rgb(0, 189, 170,0.1)\",\n    // maxWidth: '99%',\n    marginTop: theme.spacing(2)\n\n  },\n  root3: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    minWidth: theme.spacing(30)\n  },\n  root6: {\n    display: \"flex\",\n    justifyContent: \"center\",\n\n  },\n  // stickyHeader: {\n  //     position: \"sticky\",\n  //     position: \"-webkit-sticky\",\n  //     top: 0,\n  // },\n\n  topBar: {\n    // display: 'fixed'\n    maxHeight: \"300px\"\n  },\n  root4: {\n    marginRight: theme.spacing(0)\n  },\n  root5: {\n    marginLeft: theme.spacing(0),\n    maxWidth: '65%',\n    overflow: 'auto',\n    //    textOverflow: \"ellipsis\"\n  },\n  root2: {\n    // backgroundColor: theme.palette.background.paper,\n    // borderRadius: theme.spacing(1),\n    textDecorationColor: theme.palette.secondary.light,\n    maxWidth: '65%',\n    minWidth: '20%',\n    overflow: 'auto',\n    marginLeft: theme.spacing(1)\n    // textOverflow: \"ellipsis\"\n  },\n  bottomBar: {\n    position: 'absolute',\n    // flexGrow: 1,\n    // zIndex: '5',\n    right: theme.spacing(4),\n    bottom: theme.spacing(4),\n    left: \"200px\",\n    padding: theme.spacing(0, 3),\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.spacing(5),\n  },\n  progress: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  message: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  }\n\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const { currentUser } = React.useContext(AuthContext);\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  const token = localStorage.getItem('token');\n  const event = props.event;\n  const registration = props.registration;\n  const [teamDetails, setTeamDetails] = React.useState({});\n  const [admin, setAdmin] = React.useState(false);\n  const [editDialogOpen, setEditDialogOpen] = React.useState(false);\n\n  const { webSocketContext } = React.useContext(WebSocketContext);\n\n\n  React.useEffect(() => {\n    fetchAll()\n    // eslint-disable-next-line\n  }, [props.registration])\n\n  //   if (webSocketContext) {\n  //     // console.log(\"xyshs\")\n  //     webSocketContext.onmessage = (message) => {\n  //         const mes = JSON.parse(message.data);\n  //         const cMes = mes.msg;\n  //         console.log(mes);\n  //         if(mes.action === \"receive_team_status_status\"){\n  //             console.log(\"hurray\")\n  //             // getData()\n  //             fetchAll()\n  //         }\n  //         // if (mes.team_id === registration.team_id) {\n  //         //     // console.log(cMes);\n  //         //     // setChatMessages(chatMessages => [...chatMessages, cMes]);\n  //         // }\n  //     }\n  // }\n\n\n\n  const fetchAll = () => {\n    try {\n      if(registration.team_id !== null){\n        fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_details?id=${registration.team_id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'GET',\n        }).then(response => {\n          response.json().then(value => {\n            // console.log(value);\n            setTeamDetails(value[0]);\n  \n            if (value[0].user_id === currentUser.user_id) {\n              setAdmin(true);\n            }\n          })\n        })\n      }\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const handleDeleteButton = () => {\n    // const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      team_id: teamDetails._id,\n    });\n    // console.log(data);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/delete_team`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      response.json().then(value => {\n        props.getData();\n        // console.log(value);\n        // props.fetchAll()\n\n      })\n    })\n  }\n\n  const handleLeaveButton = () => {\n    const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      team_id: teamDetails._id,\n      event_id: event._id\n    });\n    // console.log(data);\n    fetch(process.env.REACT_APP_API_URL + `/api/event/leave_team`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then(value => {\n          // console.log(value);\n          props.getData();\n          // props.fetchAll()\n          if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_message\",\n              team_id: registration.team_id,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has left the team\",\n                'date': d.toISOString()\n              }\n            }));\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_status\",\n              team_id: registration.team_id,\n              users: teamDetails.members,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has left the team\",\n                'date': d.toISOString()\n              }\n            }));\n          }\n        })\n      }\n    })\n  }\n\n  const handleEditButton = () => {\n    setEditDialogOpen(true);\n  }\n\n  const handleClose = () => {\n    setEditDialogOpen(false);\n    fetchAll()\n  }\n\n\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <React.Fragment>\n          <div className={classes.grid}>\n            <Grid container component=\"main\" >\n              <Grid item xs={12} md={6}>\n                <Box className={classes.root0}>\n                  <Box className={classes.adminDetails}>\n                    <Box>\n                      <Avatar className={classes.avatar} alt={teamDetails.team_name} src=\"abc.jpg\"></Avatar>\n                    </Box>\n                    <Box>\n                      <Box>\n                        <Typography variant=\"h5\">{teamDetails.team_name}</Typography>\n                      </Box>\n                      <Box>\n                        <Typography color=\"textSecondary\" variant=\"body2\">{teamDetails.description}</Typography>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                  {!admin && <Button onClick={handleLeaveButton}>Leave</Button>}\n                  {admin && <Button onClick={handleEditButton}>Edit</Button>}\n                  {admin && <Button onClick={handleDeleteButton}>Delete</Button>}\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid container component=\"main\" >\n              <Grid item xs={12} md={6}>\n                <Typography color=\"textSecondary\" style={{ marginTop: \"7px\" }}>Team Members</Typography>\n                {teamDetails.members !== undefined && <List dense={true}>\n                  {teamDetails.members.map((v) => {\n                    return <TeamMemberListItem fetchAll={fetchAll} admin={admin} event={props.event} id={teamDetails} user_id={v}></TeamMemberListItem>\n                  })}\n                </List>}\n              </Grid>\n              <Grid item xs={12} md={6}>\n                {admin && <Typography color=\"textSecondary\" style={{ marginTop: \"7px\" }}>Team up Requests</Typography>}\n                {admin && <List dense={true}>\n                  {\n                    teamDetails.received_requests.map(v => {\n                      return <TeamMemberRequestListItem fetchAll={fetchAll} event={props.event} id={teamDetails} user_id={v}></TeamMemberRequestListItem>\n                    })\n                  }\n                </List>}\n              </Grid>\n            </Grid>\n            <TeamEditDialog open={editDialogOpen} handleClose={handleClose} team_id={teamDetails._id} title={teamDetails.team_name} desc={teamDetails.description}></TeamEditDialog>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\nexport default AboutEventPanel;\n\n// {/* <ChatMessage adminId={event.user_id} message={value} ></ChatMessage> */}\n","import React from 'react';\nimport { Box, Button, TextField} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        alignContent: \"center\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(2),\n        maxWidth: \"260px\"\n    },\n\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n\n    const handleCreateButton = (e) =>{\n        e.preventDefault();\n        const { name, desc } = e.target.elements;\n        var data = new FormData();\n        data = JSON.stringify({\n            'team_name': name.value,\n            'desc': desc.value,\n            'event_id': event._id,\n        });\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/create_team`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          method: 'POST',\n          body: data\n        }).then((response)=>{\n            response.json().then(value=>{\n                // console.log(value);\n                props.getData();\n            })\n        })\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <form onSubmit={handleCreateButton}>\n                    <TextField variant=\"outlined\" label=\"Team Name\" required name=\"name\" fullWidth margin=\"dense\"></TextField>\n                    <TextField variant=\"outlined\" label=\"Description\" required name=\"desc\" fullWidth margin=\"dense\"></TextField>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Button type=\"submit\" fullWidth color=\"primary\" className={classes.button} variant=\"contained\">Create Team</Button>\n                    </Box>\n                    </form>\n                    \n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(0),\n  },\n\n  button: {\n    margin: theme.spacing(1),\n    borderRadius: theme.spacing(2),\n    maxWidth: \"260px\"\n  },\n  adminDetails: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    // marginTop: theme.spacing(2)\n  },\n  root0: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n\n\n  },\n  root1: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    backgroundColor: \"rgb(0, 189, 170,0.2)\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginRight: theme.spacing(1)\n  },\n  avatar2: {\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    marginRight: theme.spacing(1)\n  },\n  grid: {\n    borderRadius: theme.spacing(3),\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n    backgroundColor: \"rgb(0, 189, 170,0.2)\",\n    maxWidth: '99%'\n\n  },\n  progress: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  search: {\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    maxWidth: \"300px\",\n    padding: theme.spacing(0.5)\n  }\n\n}));\n\nfunction AboutEventPanel(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: 'success',\n    type: 'error',\n    autoHide: 6000,\n  });\n  const { children, value, url, index, ...other } = props;\n  // const user = JSON.parse(localStorage.getItem('user'));\n  const token = localStorage.getItem('token');\n  const event = props.event;\n  const [teams, setTeams] = React.useState([]);\n  const [sortedTeams, setSortedTeams] = React.useState(null);\n  const [sentRequests, setSentRequests] = React.useState([]);\n  const [showMembers, setShowMembers] = React.useState(false);\n  const [teamIndex, setTeamIndex] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n\n  const { currentUser } = React.useContext(AuthContext);\n\n  const { webSocketContext } = React.useContext(WebSocketContext);\n  const { vertical, horizontal, open, message, type, autoHide } = state;\n\n  React.useEffect(() => {\n    getData();\n    // eslint-disable-next-line\n  }, [])\n\n  function handleClose() {\n    if (message === \"Successful.Stay tunned with notifications and announcements\") {\n      props.fetchAll();\n    }\n    setState({ ...state, open: false });\n  }\n\n  const getData = () => {\n    setLoading(true);\n    try {\n      fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_teams?id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET',\n      }).then(response => {\n        response.json().then(value => {\n          // console.log(value);\n          setTeams(value);\n          setLoading(false);\n        })\n      })\n    }\n    catch (e) {\n      console.log(e);\n    }\n    try {\n      fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        method: 'GET',\n      }).then(response => {\n        response.json().then(value => {\n          setSentRequests(value[0].sent_requests);\n        })\n      })\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const handleRequestButton = (id, team) => () => {\n    const d = new Date();\n    var data = new FormData();\n    data = JSON.stringify({\n      event_id: event._id,\n      team_id: id,\n    });\n    fetch(process.env.REACT_APP_API_URL + `/api/event/user_teamup_request`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then(value => {\n          // console.log(value);\n          // getData()\n          // setUpdated(true);\n          setSortedTeams(null);\n          if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_message\",\n              team_id: id,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has requested to join the team\",\n                'date': d.toISOString()\n              }\n            }));\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_status\",\n              team_id: id,\n              users: team.members,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has requested to join the team\",\n                'date': d.toISOString()\n              }\n            }));\n            getData();\n          }\n        })\n      }\n    })\n  }\n\n  const handleWithdrawButton = (id, team) => () => {\n    // console.log(id);\n    // console.log(team);\n    var data = new FormData();\n    data = JSON.stringify({\n      event_id: event._id,\n      team_id: id,\n    });\n    fetch(process.env.REACT_APP_API_URL + `/api/event/user_teamwithdraw_request`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: data\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then(value => {\n          // console.log(value);\n          // setUpdated(true);\n          const d = new Date();\n\n          if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_message\",\n              team_id: id,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has withdrawn the team join request\",\n                'date': d.toISOString()\n              }\n            }));\n            webSocketContext.send(JSON.stringify({\n              action: \"team_status_update_status\",\n              team_id: id,\n              users: team.members,\n              msg: {\n                'id': currentUser.user_id + Date.now(),\n                'user_id': currentUser.user_id,\n                'user_name': currentUser.name,\n                'user_pic': currentUser.profile_pic,\n                'message_type': 'team_status_update_message',\n                'message': currentUser.name + \" has withdrawen the team join request\",\n                'date': d.toISOString()\n              }\n            }));\n            getData();\n          }\n        })\n      }\n\n    })\n  }\n\n  const handleViewMembersClick = (v) => () => {\n\n    if (showMembers) {\n\n      if (teamIndex !== {}) {\n        if (teamIndex === v) {\n          setShowMembers(false);\n          setTeamIndex({});\n        }\n        else {\n          setTeamIndex(v)\n        }\n      }\n      else {\n        setShowMembers(false);\n        setTeamIndex({});\n      }\n\n    }\n    else {\n      setShowMembers(true);\n      setTeamIndex(v);\n    }\n  }\n\n  const handleTeamSearch = (e, value) => {\n    // console.log(value);\n    setSortedTeams(value);\n    // teams.\n  }\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}>\n      {value === index && (\n        <div className={classes.root}>\n          <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={open}\n            autoHideDuration={autoHide}\n            onClose={handleClose}\n            key={vertical + horizontal}\n          >\n            <Alert onClose={handleClose} severity={type}>{message}</Alert>\n          </Snackbar>\n          <div className={classes.progress}>\n            <Fade\n              in={loading}\n              unmountOnExit>\n              <CircularProgress />\n            </Fade>\n          </div>\n          {sentRequests.length !== 0 && <Typography variant=\"body2\" color=\"textSecondary\">Sent Requests</Typography>}\n          {\n            sentRequests.map((v) => {\n              const searchedTeam = teams.find(t => t._id === v);\n              if (searchedTeam) {\n                return <Grid container component=\"main\" className={classes.grid}>\n                  <Grid item xs={12} md={6}>\n                    <Box className={classes.root0}>\n                      <Box className={classes.adminDetails}>\n                        <Box>\n                          <Avatar className={classes.avatar} alt={searchedTeam.team_name}>{searchedTeam.team_name[0]}</Avatar>\n                        </Box>\n                        <Box>\n                          <Box>\n                            <Typography variant=\"h5\">{searchedTeam.team_name}</Typography>\n                          </Box>\n                          <Box>\n                            <Typography color=\"textSecondary\" variant=\"body2\">{searchedTeam.description}</Typography>\n                            {showMembers && searchedTeam === teamIndex && <div>\n                              {\n                                searchedTeam.members.map((value, index) => {\n                                  return <TeamMemberListItem admin={false} event={props.event} id={searchedTeam} user_id={value}></TeamMemberListItem>\n                                })\n                              }\n                            </div>}\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <Button disabled={loading} onClick={handleViewMembersClick(searchedTeam)}>{(showMembers && searchedTeam === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                      <Button disabled={loading} onClick={handleWithdrawButton(searchedTeam._id, searchedTeam)}>Withdraw</Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              }\n              else {\n                return null\n              }\n            })\n          }\n          <Typography variant=\"body2\" color=\"textSecondary\">All Teams</Typography>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n\n            <Autocomplete\n              id=\"search\"\n              placeholder=\"Search..\"\n              options={teams}\n              fullWidth\n              variant=\"filled\"\n              className={classes.search}\n              getOptionLabel={(option) => option.team_name}\n              onChange={handleTeamSearch}\n\n              renderInput={(params) => <TextField {...params} placeholder=\"Search..\"\n                className={classes.inputInput} />}\n            />\n          </Box>\n\n          {!loading && teams.length === 0 && <Typography>No Teams Found Create one</Typography>}\n          {sortedTeams === null ? <div>\n            {\n              teams.map(v => {\n                if (!sentRequests.includes(v._id)) {\n                  return <Grid container component=\"main\" className={classes.grid}>\n                    <Grid item xs={12} md={6}>\n                      <Box className={classes.root0}>\n                        <Box className={classes.adminDetails}>\n                          <Box>\n                            <Avatar className={classes.avatar} alt={v.team_name}>{v.team_name[0]}</Avatar>\n                          </Box>\n                          <Box>\n                            <Box>\n                              <Typography variant=\"h5\">{v.team_name}</Typography>\n                            </Box>\n                            <Box>\n                              <Typography color=\"textSecondary\" variant=\"body2\">{v.description}</Typography>\n                              {showMembers && v === teamIndex && <div>\n                                {\n                                  v.members.map((value, index) => {\n                                    return <TeamMemberListItem admin={false} event={props.event} id={v} user_id={value}></TeamMemberListItem>\n                                  })\n                                }\n                              </div>}\n                            </Box>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                      <Box display=\"flex\" justifyContent=\"flex-end\">\n                        <Button disabled={loading} onClick={handleViewMembersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                        <Button disabled={loading} onClick={handleRequestButton(v._id, v)}>Request</Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                }\n                else {\n                  return null\n                }\n              })\n            }\n          </div> : <div>{!sentRequests.includes(sortedTeams._id) && <Grid container component=\"main\" className={classes.grid}>\n            <Grid item xs={12} md={6}>\n              <Box className={classes.root0}>\n                <Box className={classes.adminDetails}>\n                  <Box>\n                    <Avatar className={classes.avatar} alt={sortedTeams.team_name}>{sortedTeams.team_name[0]}</Avatar>\n                  </Box>\n                  <Box>\n                    <Box>\n                      <Typography variant=\"h5\">{sortedTeams.team_name}</Typography>\n                    </Box>\n                    <Box>\n                      <Typography color=\"textSecondary\" variant=\"body2\">{sortedTeams.description}</Typography>\n                      {showMembers && sortedTeams === teamIndex && <div>\n                        {\n                          sortedTeams.members.map((value, index) => {\n                            return <TeamMemberListItem admin={false} event={props.event} id={sortedTeams} user_id={value}></TeamMemberListItem>\n                          })\n                        }\n                      </div>}\n                    </Box>\n                  </Box>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Box display=\"flex\" justifyContent=\"flex-end\">\n                <Button disabled={loading} onClick={handleViewMembersClick(sortedTeams)}>{(showMembers && sortedTeams === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                <Button disabled={loading} onClick={handleRequestButton(sortedTeams._id, sortedTeams)}>Request</Button>\n              </Box>\n            </Grid>\n          </Grid>}</div>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\n// import ChatMessage from '../Components/ChatMessage';\nimport AuthContext from '../AuthContext';\nimport ChatTextField from './ChatTextField';\nimport { cleanup } from '@testing-library/react';\nimport WebSocketContext from '../WebSocketContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Avatar from '@material-ui/core/Avatar';\n// import { List } from '@material-ui/core';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Dialog from '@material-ui/core/Dialog';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import ReplyIcon from '@material-ui/icons/Reply';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport MessageBox1 from './MessageBox1';\nimport MessageBox2 from './MessageBox2';\nimport MessageBox3 from './MessageBox3';\nimport MessageBox4 from './MessageBox4';\nimport MessageDeleteDialog from './MessageDeleteDialog';\n\n// import socketIOClient from \"socket.io-client\";\n// const socket = socketIOClient(\"https://staging.ellipseapp.com\",{\n//     path: '/ws',\n//     // transports: ['websocket']\n// });\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root2: {\n        // backgroundColor: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        textDecorationColor: theme.palette.secondary.light,\n        width: '95%',\n        // minWidth: '20%',\n        overflow: 'auto',\n        marginLeft: theme.spacing(1)\n        // textOverflow: \"ellipsis\"\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        '&:hover': {\n            background: \"rgb(0, 189, 170,0.3)\",\n        },\n        // minWidth: theme.spacing(30)\n    },\n    root6: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n    },\n\n    topBar: {\n        // display: 'fixed'\n    },\n    root4: {\n        marginRight: theme.spacing(0)\n    },\n    root5: {\n        marginLeft: theme.spacing(0),\n        maxWidth: '65%',\n        overflow: 'auto',\n        //    textOverflow: \"ellipsis\"\n    },\n    // root7: {\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     // position: \"sticky\",\n    //     position: \"-webkit-sticky\",\n    //     top: 0,\n    // },\n    bottomBar: {\n        position: 'absolute',\n        // flexGrow: 1,\n        // zIndex: '5',\n        right: theme.spacing(4),\n        bottom: theme.spacing(4),\n        left: \"200px\",\n        padding: theme.spacing(0, 3),\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.spacing(5),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    message: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    message2: {\n        display: \"none\",\n        // justifyContent: \"flex-end\",\n    },\n    message3: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    inline: {\n        whiteSpace: 'pre-line',\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    }\n\n}));\n\nexport default function JustifyContent(props) {\n\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const open = props.open;\n    const [loading, setLoading] = React.useState(false);\n    const registration = props.registration;\n\n    const [reference, setReferenece] = React.useState(null);\n    // const [currentReference,setCurrenmtReference] = React.useState(null);\n    const [chatMessages, setChatMessages] = React.useState([]);\n    // const [showOptions, setShowOptiona] = React.useState(\"\");\n    const classes = useStyles();\n    var counterDate = null;\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { teamChatMessages } = React.useContext(WebSocketDataContext);\n    const { setTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const { deletedTeamChatMessages, setDeletedTeamChatMessages } = React.useContext(WebSocketDataContext);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [messageToBeDeleted, setMessageToBeDeleted] = React.useState({});\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"join_team_room\",\n                team_id: registration.team_id,\n                msg: {\n                    'user_id': currentUser.user_id,\n                }\n            }));\n        }\n    }, [currentUser, registration, webSocketContext])\n\n    React.useEffect(() => {\n        teamChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            //         // console.log(mes);\n            if (mes.team_id === registration.team_id) {\n                // console.log(cMes);\n                setChatMessages(chatMessages => [...chatMessages, cMes]);\n                setTeamChatMessages(teamChatMessages.filter(m => { return m !== mes }));\n            }\n        });\n        // eslint-disable-next-line\n    }, [teamChatMessages, registration])\n\n    React.useEffect(() => {\n        deletedTeamChatMessages.forEach(mes => {\n            const cMes = mes.msg;\n            if (mes.team_id === registration.team_id) {\n                setChatMessages(chatMessages.filter(m => { return JSON.stringify(m) !== JSON.stringify(cMes) }));\n                setDeletedTeamChatMessages(deletedTeamChatMessages.filter(m => { return m !== mes }));\n            }\n        })\n        // eslint-disable-next-line\n    }, [deletedTeamChatMessages])\n\n\n    React.useEffect(() => {\n        setLoading(true)\n        fetch(process.env.REACT_APP_API_URL + `/api/chat/load_team_chat_messages?id=${registration.team_id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            response.json().then(value => {\n                // console.log(value);\n                setChatMessages(value);\n                // webConnect();\n                setLoading(false)\n            })\n        })\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        return () => {\n            setChatMessages([]);\n            cleanup()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [event._id, token])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading])\n\n\n    React.useEffect(() => {\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n        // eslint-disable-next-line\n        return () => {\n            cleanup()\n        }\n    }, [chatMessages, reference])\n\n\n\n    const handleSendClick = (message) => {\n\n        const d = new Date();\n        // console.log(d.toISOString())\n        if (webSocketContext) {\n            webSocketContext.send(JSON.stringify({\n                action: \"send_team_message\",\n                team_id: registration.team_id,\n                msg: {\n                    'id': currentUser.user_id + Date.now(),\n                    'user_id': currentUser.user_id,\n                    'user_name': currentUser.name,\n                    'user_pic': currentUser.profile_pic,\n                    'message_type': 'normal_text_message',\n                    'message': message,\n                    'date': d.toISOString()\n                }\n            }));\n        }\n\n        if (reference != null) {\n            reference.scrollIntoView({ behavior: \"smooth\" })\n        }\n    }\n\n    const handleMessageDeleteButton = (mes) => () => {\n        // console.log(\"delete\")\n        setMessageToBeDeleted(mes);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleDeleteConfirmation = (mes) => () => {\n\n        webSocketContext.send(JSON.stringify({\n            action: \"delete_team_chat_message\",\n            team_id: registration.team_id,\n            msg: mes\n        }));\n        setChatMessages(chatMessages.filter(m => { return m !== mes }))\n        setOpenDeleteDialog(false);\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n\n                    <Box className={classes.topBar}>\n                        {\n                            chatMessages.map((value, index) => {\n                                const currentDate = new Date();\n                                const messageDate = new Date(value.date);\n                                if (messageDate.toDateString() !== counterDate) {\n                                    counterDate = messageDate.toDateString();\n                                    if (value.message_type === 'team_status_update_message') {\n                                        return (\n                                            <MessageBox3\n                                                handleMessageDeleteButton={handleMessageDeleteButton}\n                                                message={value}\n                                                currentDate={currentDate}\n                                                messageDate={messageDate}\n                                                index={index}></MessageBox3>\n                                        );\n                                    }\n                                    return (\n                                        <MessageBox1\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox1>\n                                    );\n                                }\n                                if (value.message_type === 'team_status_update_message') {\n                                    return (\n                                        <MessageBox4\n                                            handleMessageDeleteButton={handleMessageDeleteButton}\n                                            message={value}\n                                            currentDate={currentDate}\n                                            messageDate={messageDate}\n                                            index={index}></MessageBox4>\n                                    )\n                                }\n                                return (\n                                    <MessageBox2\n                                        handleMessageDeleteButton={handleMessageDeleteButton}\n                                        message={value}\n                                        currentDate={currentDate}\n                                        messageDate={messageDate}\n                                        index={index}></MessageBox2>\n                                );\n                            })\n                        }\n                        <div style={{ float: \"left\", clear: \"both\", paddingBottom: '70px', }}\n                            ref={(el) => { setReferenece(el) }}>\n                        </div>\n                    </Box>\n                    <div>\n                        <ChatTextField loading={loading} open={open} handleSend={handleSendClick}  ></ChatTextField>\n                    </div>\n                    <MessageDeleteDialog\n                        open={openDeleteDialog}\n                        message={messageToBeDeleted}\n                        setOpen={setOpenDeleteDialog}\n                        handleDeleteConfirmation={handleDeleteConfirmation}>\n                    </MessageDeleteDialog>\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\n// import { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import FastfoodIcon from '@material-ui/icons/Fastfood';\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\n// import HotelIcon from '@material-ui/icons/Hotel';\n// import RepeatIcon from '@material-ui/icons/Repeat';\n// import Paper from '@material-ui/core/Paper';\n// import Tabs from '@material-ui/core/Tabs';\n// import Tab from '@material-ui/core/Tab';\n\nimport SubmissionPanel from './EventSubmissionPanel';\nimport SubPanel1 from './EventsTeamSubPanel1';\nimport SubPanel2 from './EventsTeamSubPanel2';\nimport SubPanel3 from './EventsTeamSubPanel3';\nimport EventsTeamChatPanel from './EventsTeamChatPanel';\nimport { Typography } from '@material-ui/core';\nimport WebSocketContext from '../WebSocketContext';\nimport AuthContext from '../AuthContext';\nimport WebSocketDataContext from '../WebSocketDataContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        // backgroundColor: theme.palette.primary.light,\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(0),\n        alignContent: \"center\",\n        // position: 'fixed'\n\n    },\n    media: {\n        // height: 250,\n        // paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    buttonDiv: {\n        marginLeft: 'auto',\n    },\n    button: {\n        margin: theme.spacing(0.5),\n    },\n    large: {\n        width: theme.spacing(17),\n        height: theme.spacing(17),\n    },\n    tab: {\n        flexGrow: 1,\n        // maxWidth: 800,\n        background: theme.palette.secondary.main,\n        alignItems: 'center',\n    },\n    paper: {\n        padding: '6px 16px',\n    },\n    secondaryTail: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // position: '-webkit-sticky',\n        // position: 'sticky'\n        // position: 'fixed'\n        // marginBottom: theme.spacing(2),\n        // padding: theme.spacing(1)\n\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nfunction AboutEventPanel(props) {\n    const classes = useStyles();\n    const { children, value, url, index, ...other } = props;\n    const { currentUser } = React.useContext(AuthContext);\n    const [loading, setLoading] = React.useState(false);\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    // const [subIndexValue, setSubIndexValue] = React.useState(0);\n    const [teamedUp, setTeamedUp] = React.useState(false);\n    const [registration, setRegistration] = React.useState({});\n    const subIndexValue = props.subIndexValue;\n\n    const { webSocketContext } = React.useContext(WebSocketContext);\n\n    const { teamUpdateStatus } = React.useContext(WebSocketDataContext);\n    // const handleChange = (event, newValue) => {\n    //     setSubIndexValue(newValue);\n    // };\n\n    React.useEffect(() => {\n        getData()\n        // eslint-disable-next-line\n    }, [teamUpdateStatus])\n\n    React.useEffect(() => {\n        getData();\n        // eslint-disable-next-line\n    }, [event, token])\n\n\n    React.useEffect(() => {\n        if (webSocketContext) {\n            if (registration !== {}) {\n                // console.log(\"xxxxx\")\n                webSocketContext.send(JSON.stringify({\n                    action: \"join_team_update_status\",\n                    team_id: registration.team_id,\n                    msg: {\n                        'user_id': currentUser.user_id,\n                    }\n                }));\n            }\n        }\n    }, [registration, currentUser, webSocketContext])\n\n\n    const getData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_user_registration?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        setRegistration(value[0]);\n                        setTeamedUp(value[0].teamed_up);\n                        setLoading(false);\n                    })\n                }\n                else {\n\n                }\n\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    {/* <Paper className={classes.root2}>\n                        <Tabs\n                            value={subIndexValue}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"Submissions\" />\n                            <Tab label=\"Your Team\" />\n                            <Tab label=\"Team Chat\"/>\n                            <Tab label=\"Create Team\" />\n                            <Tab label=\"Join Team\" />\n                        </Tabs>\n                    </Paper> */}\n                    {teamedUp && !loading && <SubmissionPanel getData={getData} individual={false} value={subIndexValue} registration={registration} index={0} event={props.event}></SubmissionPanel>}\n                    {teamedUp && !loading && <SubPanel1 getData={getData} value={subIndexValue} registration={registration} index={1} event={props.event}></SubPanel1>}\n                    {teamedUp && !loading && subIndexValue === 2 && <EventsTeamChatPanel open={props.open} value={subIndexValue} registration={registration} index={2} event={props.event}></EventsTeamChatPanel>}\n                    {!teamedUp && subIndexValue === 0 && <Typography>Join team or create a team</Typography>}\n                    {/* {!teamedUp && subIndexValue === 1 && <Typography>Join team or create a team</Typography>} */}\n                    {!teamedUp && subIndexValue === 2 && <Typography>Join team or create a team</Typography>}\n                    {!teamedUp && <SubPanel2 value={subIndexValue} index={1} event={props.event} getData={getData}></SubPanel2>}\n                    {/* {teamedUp && subIndexValue === 3 && <Typography>Team already created</Typography>} */}\n                    {!teamedUp && !loading && <SubPanel3 value={subIndexValue} index={1} event={props.event}></SubPanel3>}\n                    {teamedUp && subIndexValue === 4 && <Typography>Team created or joined, delete to join other teams</Typography>}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AboutEventPanel;\n","import React from 'react';\nimport { Button, Typography, Box, } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n// import PeopleIcon from '@material-ui/icons/People';\nimport Grid from '@material-ui/core/Grid';\n// import WebSocketContext from '../WebSocketContext';\n// import AuthContext from '../AuthContext';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(0),\n    },\n\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(2),\n        maxWidth: \"260px\"\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        // marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n\n\n    },\n    root1: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: \"rgb(0, 189, 170,0.2)\",\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    avatar2: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n        marginRight: theme.spacing(1)\n    },\n    grid: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        maxWidth: '99%'\n\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n}));\n\nfunction EventDetailsTeamPanel(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n    const { children, value, url, index, ...other } = props;\n    // const user = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const [teams, setTeams] = React.useState([]);\n    // const [sentRequests, setSentRequests] = React.useState([]);\n    const [showMembers, setShowMembers] = React.useState(false);\n    const [teamIndex, setTeamIndex] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // const { webSocketContext } = React.useContext(WebSocketContext);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        getData();\n        // eslint-disable-next-line\n    }, [])\n\n    function handleClose() {\n        if (message === \"Successful.Stay tunned with notifications and announcements\") {\n            props.fetchAll();\n        }\n        setState({ ...state, open: false });\n    }\n\n    const getData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_teams?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    setTeams(value);\n                    setLoading(false);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    const handleViewMembersClick = (v) => () => {\n\n        if (showMembers) {\n            if (teamIndex !== {}) {\n                if (teamIndex === v) {\n                    setShowMembers(false);\n                    setTeamIndex({});\n                }\n                else {\n                    setTeamIndex(v)\n                }\n            }\n            else {\n                setShowMembers(false);\n                setTeamIndex({});\n            }\n        }\n        else {\n            setShowMembers(true);\n            setTeamIndex(v);\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={autoHide}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    >\n                        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    <Typography variant=\"body2\" color=\"textSecondary\">All Teams</Typography>\n                    {!loading && teams.length === 0 && <Typography>No Teams Found</Typography>}\n                    <div>\n                        {\n                            teams.map(v => {\n                                return <Grid container component=\"main\" className={classes.grid}>\n                                    <Grid item xs={12} md={6}>\n                                        <Box className={classes.root0}>\n                                            <Box className={classes.adminDetails}>\n                                                <Box>\n                                                    <Avatar className={classes.avatar} alt={v.team_name}>{v.team_name[0]}</Avatar>\n                                                </Box>\n                                                <Box>\n                                                    <Box>\n                                                        <Typography variant=\"h5\">{v.team_name}</Typography>\n                                                    </Box>\n                                                    <Box>\n                                                        <Typography color=\"textSecondary\" variant=\"body2\">{v.description}</Typography>\n                                                        {showMembers && v === teamIndex && <div>\n                                                            {\n                                                                v.members.map((value, index) => {\n                                                                    return <TeamMemberListItem admin={false} event={props.event} id={v} user_id={value}></TeamMemberListItem>\n                                                                })\n                                                            }\n                                                        </div>}\n                                                    </Box>\n                                                </Box>\n                                            </Box>\n                                        </Box>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Box display=\"flex\" justifyContent=\"flex-end\">\n                                            <Button disabled={loading} onClick={handleViewMembersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide Members\" : \"View Members\"}</Button>\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n\n                            })\n                        }\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default EventDetailsTeamPanel;","import React from 'react';\nimport { makeStyles} from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    \n    \n}));\n\n\n\nexport default function CircularLoading(props) {\n    const classes = useStyles();\n\n    return (\n\n            <div className={classes.progress}>\n                <Fade\n                    in={props.loading}\n                    unmountOnExit>\n                    <CircularProgress />\n                </Fade>\n            </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Typography } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Linkify from 'react-linkify';\n\nimport CircularLoading from './CircularLoading';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n        },\n        // color: theme.palette.grey[500],\n    },\n    root: {\n\n    },\n    bottomTags: {\n        position: 'absolute',\n        left: theme.spacing(1),\n        bottom: theme.spacing(1),\n    },\n    dialog: {\n        // height: '800px',\n        minHeight: '90vh',\n        maxHeight: '90vh',\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.secondary.main,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    bottomBar: {\n        display: 'flex',\n        width: '90%',\n        backgroundColor: theme.palette.secondary.main\n    },\n    field: {\n        width: '100%'\n    },\n    action: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // minHeight: '50px'\n    },\n    dialogContent: {\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1)\n        },\n\n    },\n    mobileHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    },\n    desktopHead: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none'\n        },\n    }\n}));\n\n\n\nexport default function ScrollDialog(props) {\n\n    // const token = localStorage.getItem('token');\n    const [loading,setLoading] = React.useState(false);\n    const classes = useStyles();\n    const theme = useTheme();\n    const [submission, setSubmission] = React.useState(null);\n    const [keys, setKeys] = React.useState([]);\n    // const reg = props.reg;\n    const event = props.event;\n    const [currentRoundFields, setCurrentRoundFields] = React.useState([]);\n\n    const handleClose = () => {\n        // props.reset();\n        props.setOpen(false);\n        setSubmission(null);\n        setKeys([]);\n    };\n\n    React.useEffect(() => {\n        event.rounds.forEach(round => {\n            if (round.title === props.submission.title) {\n                // console.log(round.fields);\n                setCurrentRoundFields(round.fields);\n            }\n        });\n        if(props.submission !== null){\n            if (props.submission.submission_form !== null) {\n                // getData();\n                setKeys(Object.keys(props.submission.submission_form));\n                setSubmission(props.submission.submission_form);\n                setLoading(false);\n            }\n        }\n        // eslint-disable-next-line\n    }, [props,event])\n\n    // const getData = () => {\n    //     setLoading(true);\n    //     try {\n    //         fetch(process.env.REACT_APP_API_URL + `/api/event/get_submission?id=${props.submission.submission_id}`, {\n    //             headers: {\n    //                 'Authorization': `Bearer ${token}`,\n    //                 'Content-Type': 'application/json',\n    //                 'Accept': 'application/json'\n    //             },\n    //             method: 'GET',\n    //         }).then(response => {\n    //             response.json().then(value => {\n    //                 // console.log(value);\n    //                 setKeys(Object.keys(value.submission));\n    //                 setSubmission(value);\n    //                 setLoading(false);\n    //             })\n    //         })\n    //     }\n    //     catch (e) {\n    //         console.log(e);\n    //     }\n    // }\n\n\n    return (\n        <div>\n        \n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                scroll=\"paper\"\n                aria-labelledby=\"submission\"\n                fullWidth={true}\n                maxWidth=\"md\"\n                PaperProps={{\n                    style: {\n                        backgroundColor: theme.palette.secondary.main,\n                        boxShadow: 'none',\n                    },\n                }}\n                classes={{ paper: classes.dialog }}\n            >\n                <DialogTitle id=\"scroll-dialog-title\">{props.name}<div className={classes.icons}>\n                    <IconButton aria-label=\"share\" >\n                        <ShareIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div></DialogTitle>\n               \n                <DialogContent dividers={true}>\n                <CircularLoading loading={loading}></CircularLoading>\n                    {submission !== null && keys.length !== 0 && <DialogContentText\n                        id=\"description\"\n                        tabIndex={-1}\n                    >\n                        {\n                            keys.map((value, index) => {\n                                if (currentRoundFields[index].field === \"file_upload\") {\n                                    return <React.Fragment>\n                                        <Typography>{value}</Typography>\n                                        <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${submission[value]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                                    </React.Fragment>\n                                }\n                                return <React.Fragment>\n                                    <Typography>{value}</Typography>\n                                    <Typography variant=\"h4\" color=\"primary\">\n                                    <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\n                                    <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                        {decoratedText}\n                                    </a>\n                                )}\n                            >{submission[value]}\n                            </Linkify></Typography>\n                                </React.Fragment>\n                            })\n                        }\n                    </DialogContentText>}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                    {/* <Button onClick={handleClose} color=\"primary\">\n                        Subscribe\n                    </Button> */}\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, IconButton } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SubmissionShareDialog(props) {\n    // const classes = useStyles();\n    const theme = useTheme();\n    const [title, setTitle] = React.useState(null);\n    // const event = props.event;\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 300\n    });\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        if(props.reg){\n            setTitle(props.reg.share_link)\n        }\n    }, [props])\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    const handleClose = async (event, reason) => {\n        setState({ ...state, open: false });\n    };\n\n\n\n\n    const copyToClipBoard = async copyMe => {\n        try {\n            await navigator.clipboard.writeText(copyMe);\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: 'Copied to clipboard',\n                type: \"success\",\n                autoHide: 3000\n            });\n        } catch (err) {\n            setState({\n                open: true,\n                vertical: 'top',\n                horizontal: 'center',\n                message: err.message,\n                type: \"error\",\n                autoHide: 4000\n            })\n        }\n    };\n\n    const handleDialogClose = () => {\n        props.setOpen(false);\n    }\n\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={open}\n                autoHideDuration={autoHide}\n                onClose={handleClose}\n                key={vertical + horizontal}\n            >\n                <Alert onClose={handleClose} severity={type}>{message}</Alert>\n            </Snackbar>\n            <Dialog open={props.open} fullWidth={true} PaperProps={{\n                style: {\n                    backgroundColor: theme.palette.secondary.main,\n                    boxShadow: 'none',\n                },\n            }} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\">\n                {/* <DialogTitle id=\"form-dialog-title\">{event.name}</DialogTitle> */}\n                <DialogContent>\n                    <Grid container spacing={2} >\n                        <Grid item xs={11}>\n                            <TextField\n                                disabled\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Share Link\"\n                                name=\"title\"\n                                fullWidth\n                                value={title}\n                                required\n                                onChange={handleTitleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={() => copyToClipBoard(title)}><FileCopyIcon ></FileCopyIcon></IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDialogClose} color=\"primary\">\n                        Dismiss\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, Box, } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport TeamMemberListItem from './TeamMemberListItem';\nimport EventSubmissionDialog from './EventSubmissionDialog';\nimport SubmissionShareDialog from './SubmissionShareDialog';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        backgroundColor: theme.palette.secondary.main,\n        marginBottom: theme.spacing(2),\n    },\n    adminDetails: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        // marginTop: theme.spacing(2)\n    },\n    root0: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n    },\n    root1: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: \"rgb(0, 189, 170,0.2)\",\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginRight: theme.spacing(1)\n    },\n    grid: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        maxWidth: '99%'\n\n    },\n    roundButton: {\n        borderRadius: theme.spacing(3),\n        margin: theme.spacing(1)\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n}));\n\nfunction EventAdminSubmissionPanel(props) {\n    const classes = useStyles();\n    const event = props.event;\n    const token = localStorage.getItem('token');\n    const [registrations, setRegistrations] = React.useState([]);\n    const [teams, setTeams] = React.useState([]);\n    const [showMembers, setShowMembers] = React.useState(false);\n    const [teamIndex, setTeamIndex] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [viewSubmissionDialog, setViewSubmissionDialog] = React.useState(false);\n    const [selectedSubmission, setSelectedSubmission] = React.useState(null);\n    const [selectedTeam, setSelectedTeam] = React.useState(null);\n    const [shareDialogOpen,setShareDialogOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        if (event.isTeamed) {\n            getTeamData();\n        }\n        else {\n            getIndividualsData();\n        }\n        // eslint-disable-next-line\n    }, [event])\n\n    const getIndividualsData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/registeredEvents?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setRegistrations(value);\n                    setLoading(false);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const getTeamData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_teams?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n                    setTeams(value);\n                    setLoading(false);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const handleViewMembersClick = (v) => () => {\n\n        if (showMembers) {\n            if (teamIndex !== {}) {\n                if (teamIndex === v) {\n                    setShowMembers(false);\n                    setTeamIndex({});\n                }\n                else {\n                    setTeamIndex(v);\n                }\n            }\n            else {\n                setShowMembers(false);\n                setTeamIndex({});\n            }\n        }\n        else {\n            setShowMembers(true);\n            setTeamIndex(v);\n        }\n    }\n\n    const handleRoundClickButton = (sub, t) => () => {\n        setSelectedSubmission(sub);\n        setSelectedTeam(t);\n        setViewSubmissionDialog(true);\n    }\n\n    const handleAccessButton = (is_teamed, user_id, title,team_id) => () => {\n        setLoading(true);\n        var data = new FormData()\n        var payload ;\n        if(is_teamed){\n            payload = {\n                is_teamed: is_teamed,\n                event_id: event._id,\n                user_id: user_id,\n                round_title: title,\n                team_id: team_id\n            }\n        }\n        else{\n            payload = {\n                is_teamed: is_teamed,\n                event_id: event._id,\n                user_id: user_id,\n                round_title: title\n            }\n        }\n        \n        data = JSON.stringify(payload);\n        // console.log(data);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/give_access_round`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        }).then(res => {\n            if (res.status === 200) {\n                res.json().then(value => {\n                    setLoading(false);\n                    if (event.isTeamed) {\n                        getTeamData();\n                    }\n                    else {\n                        getIndividualsData();\n                    }\n\n                })\n\n            }\n        })\n    }\n\n    const handleShareButtonClick = (v) => () => {\n        setSelectedTeam(v);\n        setShareDialogOpen(true)\n    }\n\n    return (\n        <div>\n            <div className={classes.progress}>\n                <Fade\n                    in={loading}\n                    unmountOnExit>\n                    <CircularProgress />\n                </Fade>\n            </div>\n            <Typography>All Submissions</Typography>\n            {\n                teams.map(v => {\n                    return <Grid container component=\"main\" className={classes.grid} >\n                        <Grid item xs={12} md={6}>\n                            <Box className={classes.root0}>\n                                <Box className={classes.adminDetails}>\n                                    <Box>\n                                        <Avatar className={classes.avatar} alt={v.team_name}>{v.team_name[0]}</Avatar>\n                                    </Box>\n                                    <Box>\n                                        <Box>\n                                            <Typography variant=\"h5\">{v.team_name}</Typography>\n                                        </Box>\n                                        <Box>\n                                            <Typography color=\"textSecondary\" variant=\"body2\">{v.description}</Typography>\n                                            {\n                                                showMembers && v === teamIndex && <div>\n                                                    <Typography color=\"textSecondary\" variant=\"body2\">Submissions</Typography>\n                                                    {v.submissions.map((value, index) => {\n                                                        return <React.Fragment>\n                                                            <Button onClick={handleRoundClickButton(value, v)} variant=\"outlined\" className={classes.roundButton}>\n                                                                {value.title}\n                                                            </Button>\n                                                            {!value.submission_access && <Button onClick={handleAccessButton(true, v.user_id, value.title,v._id)}>Give Access</Button>}\n                                                            <br></br>\n                                                        </React.Fragment>\n                                                    })}\n                                                </div>\n                                            }\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                            <Button disabled={loading} onClick={handleViewMembersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide\" : \"View\"}</Button>\n                                <Button disabled={loading} onClick={handleShareButtonClick(v)}>Share</Button>\n                            </Box>\n                            <Box>\n                                {showMembers && v === teamIndex && <div>\n                                    <Typography color=\"textSecondary\" variant=\"body2\">Members</Typography>\n                                    {\n                                        v.members.map((value, index) => {\n                                            return <TeamMemberListItem admin={false} event={props.event} id={v} user_id={value}></TeamMemberListItem>\n                                        })\n                                    }\n                                </div>}\n                            </Box>\n                        </Grid>\n                    </Grid>\n                })\n            }\n            {\n                registrations.map((v, index) => {\n                    return <Grid container component=\"main\" className={classes.grid} >\n                        <Grid item xs={12} md={6}>\n                            <Box className={classes.root0}>\n                                <Box className={classes.adminDetails}>\n                                    <Box>\n                                        <Avatar className={classes.avatar} alt={v.data.Name}>{v.data.Name[0]}</Avatar>\n                                    </Box>\n                                    <Box>\n                                        <Box>\n                                            <Typography variant=\"h5\">{v.data.Name}</Typography>\n                                        </Box>\n                                        <Box>\n                                            <Typography color=\"textSecondary\" variant=\"body2\"> </Typography>\n                                            {\n                                                showMembers && v === teamIndex && <div>\n                                                    <Typography color=\"textSecondary\" variant=\"body2\">Submissions</Typography>\n                                                    {v.submissions.map((value, index) => {\n                                                    \n                                                        return <React.Fragment>\n                                                            <Button onClick={handleRoundClickButton(value, v)} variant=\"outlined\" className={classes.roundButton}>\n                                                                {value.title}\n                                                            </Button>\n                                                            {!value.submission_access && <Button onClick={handleAccessButton(false, v.user_id, value.title)}>Give Access</Button>}\n                                                            <br></br>\n                                                        </React.Fragment>\n                                                    })}\n                                                </div>\n                                            }\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                <Button disabled={loading} onClick={handleViewMembersClick(v)}>{(showMembers && v === teamIndex) ? \"Hide\" : \"View\"}</Button>\n                                <Button disabled={loading} onClick={handleShareButtonClick(v)}>Share</Button>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                })\n            }\n            {viewSubmissionDialog && event.isTeamed && <EventSubmissionDialog\n                event={event}\n                reg={selectedTeam}\n                name={selectedTeam && selectedTeam.team_name}\n                submission={selectedSubmission}\n                open={viewSubmissionDialog}\n                setOpen={setViewSubmissionDialog}>\n\n            </EventSubmissionDialog>}\n            {viewSubmissionDialog && !event.isTeamed && <EventSubmissionDialog\n                event={event} reg={selectedTeam}\n                name={selectedTeam && selectedTeam.data.Name}\n                submission={selectedSubmission}\n                open={viewSubmissionDialog}\n                setOpen={setViewSubmissionDialog}>\n\n            </EventSubmissionDialog>}\n            {\n                <SubmissionShareDialog open={shareDialogOpen} setOpen={setShareDialogOpen} reg={selectedTeam}></SubmissionShareDialog>\n            }\n        </div>\n    );\n}\nexport default EventAdminSubmissionPanel;","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { Typography } from '@material-ui/core';\n\nimport AuthContext from '../AuthContext';\n// import WebSocketContext from '../WebSocketContext';\n\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     alignItems: \"center\",\n//     backgroundColor: theme.palette.secondary.main,\n//     marginBottom: theme.spacing(2),\n\n//   },\n\n// }));\n\n\n\n\nfunction ModeratorListItem(props) {\n    const token = localStorage.getItem('token');\n    const { currentUser } = React.useContext(AuthContext);\n    //   const classes = useStyles();\n    const event = props.event;\n    const [memberDetails, setMemberDetails] = React.useState({});\n\n    React.useEffect(() => {\n        fetchAll()\n        // eslint-disable-next-line\n    }, [props])\n\n    const fetchAll = () => {\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_team_member_details?id=${props.user_id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // console.log(value);\n\n                    setMemberDetails(value);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    const handleRemoveButton = () => {\n        if (props.type === \"moderator\") {\n            // const d = new Date();\n            var data = new FormData();\n            data = JSON.stringify({\n                event_id: event._id,\n                moderator_id: props.user_id\n            });\n            // console.log(data);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/remove_moderator`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data\n            }).then((response) => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        props.setEvent(value.event);\n\n                    })\n                }\n            })\n        }\n        else {\n            // const d = new Date();\n            var data2 = new FormData();\n            data2 = JSON.stringify({\n                event_id: event._id,\n                blocked_user_id: props.user_id\n            });\n            // console.log(data);\n            fetch(process.env.REACT_APP_API_URL + `/api/event/unblock_chat_for_user`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'POST',\n                body: data2\n            }).then((response) => {\n                if (response.status === 200) {\n                    response.json().then(value => {\n                        props.setEvent(value.event);\n\n                    })\n                }\n            })\n        }\n\n    }\n\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar>\n                    <Avatar alt={memberDetails.name} src={memberDetails.user_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${memberDetails.user_pic}` : \"abc.jpg\"} />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n                primary={props.id === props.user_id ? memberDetails.name + \" (Team Leader)\" : memberDetails.name}\n                secondary={memberDetails.college}\n            />\n            {currentUser.user_id === event.user_id && <IconButton onClick={handleRemoveButton} edge=\"end\" aria-label=\"delete\">\n                <RemoveCircleIcon></RemoveCircleIcon> <Typography>{props.type === \"moderator\" ? \"Remove\" : \"UnBlock\"}</Typography>\n            </IconButton>}\n        </ListItem>\n    );\n}\n\nexport default ModeratorListItem;\n\n","import React from 'react';\nimport { Button, Typography, TextField, Divider, } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import PeopleIcon from '@material-ui/icons/People';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n// import WebSocketContext from '../WebSocketContext';\n// import AuthContext from '../AuthContext';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport ModeratorListItem from '../Components/ModeratorListItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n// import AuthContext from '../AuthContext';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(0),\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n}));\n\nfunction AdminSettingsPanel(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        message: 'success',\n        type: 'error',\n        autoHide: 6000,\n    });\n    const { children, value, url, index, ...other } = props;\n    const token = localStorage.getItem('token');\n    const event = props.event;\n    const [loading, setLoading] = React.useState(false);\n    // const [moderators, setModerators] = React.useState([]);\n    const [allUsers, setAllUsers] = React.useState([]);\n    const [selectedUser,setSelectedUser] = React.useState(null);\n    const [selecteedBlockUser,setSelectedBlockUser] = React.useState(null);\n    const [registeredUsers,setRegisteredUsers] = React.useState([]);\n\n    // const { currentUser } = React.useContext(AuthContext);\n\n    // const { webSocketContext } = React.useContext(WebSocketContext);\n    const { vertical, horizontal, open, message, type, autoHide } = state;\n\n    React.useEffect(() => {\n        getData();\n        // eslint-disable-next-line\n    }, [])\n\n    function handleClose() {\n\n        setState({ ...state, open: false });\n    }\n\n    const getData = () => {\n        setLoading(true);\n        try {\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_all_users`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // setTeams(value);\n                    // console.log(value);\n                    setAllUsers(value);\n                    setLoading(false);\n                })\n            })\n            fetch(process.env.REACT_APP_API_URL + `/api/event/get_reg_users_for_blocking?id=${event._id}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                method: 'GET',\n            }).then(response => {\n                response.json().then(value => {\n                    // setTeams(value);\n                    // console.log(value);\n                    // setAllUsers(value);\n                    setRegisteredUsers(value);\n                    setLoading(false);\n                })\n            })\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    const handleAddModeratorChange = (event,value) => {\n        // console.log(value)\n        setSelectedUser(value);\n        \n    }\n\n    const handleAddButton = () => {\n        setLoading(true);\n        if(selectedUser === null || selectedUser === undefined){\n\n        }\n        else{\n            try{\n                var data = new FormData();\n                const payload = {\n                    event_id: event._id,\n                    moderator_id: selectedUser.user_id\n                }\n                data = JSON.stringify(payload)\n                fetch(process.env.REACT_APP_API_URL+\"/api/event/add_moderator\",{\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    setLoading(false);\n                    if(response.status === 200){\n                        response.json().then(value => {\n                            setSelectedUser(null);\n                            props.setEvent(value.event)\n                        })\n                    }\n                })\n            }\n            catch (e){\n                console.log(e)\n            }\n        }\n    }\n\n    const handleBlockUserChange = (e,value) => {\n        setSelectedBlockUser(value);\n    }\n\n    const handleBlockUser = () => {\n        setLoading(true);\n        if(selecteedBlockUser=== null || selecteedBlockUser === undefined){\n\n        }\n        else{\n            try{\n                var data = new FormData();\n                const payload = {\n                    event_id: event._id,\n                    blocked_user_id: selecteedBlockUser.user_id\n                }\n                data = JSON.stringify(payload)\n                fetch(process.env.REACT_APP_API_URL+\"/api/event/block_chat_for_user\",{\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    method: 'POST',\n                    body: data\n                }).then(response => {\n                    setLoading(false);\n                    if(response.status === 200){\n                        response.json().then(value => {\n                            setSelectedUser(null);\n                            props.setEvent(value.event)\n                        })\n                    }\n                    \n                })\n            }\n            catch (e){\n                console.log(e)\n            }\n        }\n    }\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            {...other}>\n            {value === index && (\n                <div className={classes.root}>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        autoHideDuration={autoHide}\n                        onClose={handleClose}\n                        key={vertical + horizontal}\n                    >\n                        <Alert onClose={handleClose} severity={type}>{message}</Alert>\n                    </Snackbar>\n                    <div className={classes.progress}>\n                        <Fade\n                            in={loading}\n                            unmountOnExit>\n                            <CircularProgress />\n                        </Fade>\n                    </div>\n                    \n                    <div>\n                        <Typography>Add Moderator</Typography>\n                        <Autocomplete\n                            fullWidth\n                            id=\"combo-box-demo\"\n                              options={allUsers}\n                            //   value={selectedUser.name+\",\"+selectedUser.username }\n                              getOptionLabel={(option) => option.name+\",\"+option.username}\n                              onChange={handleAddModeratorChange}\n                              autoComplete=\"off\"\n                            renderInput={(params) => <TextField fullWidth autoComplete=\"off\" label=\"User Name\" margin=\"dense\" {...params} placeholder=\"Enter User Name\" />}\n                        />\n                        <Button variant=\"contained\" onClick={handleAddButton} disabled={loading} style={{margin:\"10px\",borderRadius:\"15px\"}}>Add</Button>\n                    </div>\n                    <Typography style={{marginTop: \"20px\"}}>Moderators</Typography>\n                    <div>\n                    {\n                        event.moderators.map((m_id,index)=>{\n                            return <ModeratorListItem event = {props.event} type=\"moderator\" setEvent={props.setEvent} user_id={m_id}></ModeratorListItem>\n                        })\n                    }\n                    </div>\n                    <Divider style={{margin:\"30px 10px\",height:\"5px\"}}></Divider>\n                    <div>\n                        <Typography>Block User from Chat</Typography>\n                        <Autocomplete\n                            fullWidth\n                            id=\"combo-box-demo\"\n                              options={registeredUsers}\n                            //   value={selectedUser.name+\",\"+selectedUser.username }\n                              getOptionLabel={(option) => option.name+\",\"+option.username}\n                              onChange={handleBlockUserChange}\n                              autoComplete=\"off\"\n                            renderInput={(params) => <TextField fullWidth autoComplete=\"off\" label=\"User Name\" margin=\"dense\" {...params} placeholder=\"Enter User Name\" />}\n                        />\n                        <Button variant=\"contained\" onClick={handleBlockUser} disabled={loading} style={{margin:\"10px\",borderRadius:\"15px\"}}>Block</Button>\n                    </div>\n                    <Typography style={{marginTop: \"20px\"}}>Blocked Users</Typography>\n                    <div>\n                    {\n                        event.chat_blocked_users.map((m_id,index)=>{\n                            return <ModeratorListItem event = {props.event} type=\"blocked_user\" setEvent={props.setEvent} user_id={m_id}></ModeratorListItem>\n                        })\n                    }\n                    </div>\n                    <Typography style={{margin:\"10px 0px\"}}>Any Queries contact us at support@ellipseapp.com</Typography>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AdminSettingsPanel;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\n// import Box from '@material-ui/core/Box';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport AuthContext from '../AuthContext';\nimport AnnouncementPanel from '../Components/EventsAnnouncementsPanel';\nimport AnnouncementEditPanel from '../Components/AnnouncementsEditPanel';\nimport AboutPanel from '../Components/AboutEventPanel';\nimport TimeLinePanel from '../Components/EventTimeLinePanel';\nimport DashboardPanel from '../Components/DashboardPanel';\nimport ChatPanel from '../Components/EventDetailsChatPanel';\nimport EventPost from './EventEdit';\nimport CertificateDashboard from '../Components/AdminCertificateDashboard';\nimport EventSubmissionPanel from '../Components/EventSubmissionPanel';\nimport EventsTeamPanel from '../Components/EventsTeamPanel';\nimport EventDetailsTeamPanel from '../Components/EventDetailsTeamPanel';\nimport EventAdminSubmissionPanel from '../Components/EventAdminSubmissionPanel';\nimport EventShareDialog from '../Components/EventShareDialog';\nimport AdminSettingsPanel from '../Components/AdminSettingsPanel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n// import { setLogLevel } from 'firebase';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n\n    },\n    root2: {\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: theme.palette.primary.light,\n        // marginBottom: theme.spacing(2),\n        padding: theme.spacing(1)\n\n    },\n    appBar: {\n        position: 'sticky',\n        top: 64,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        position: 'sticky',\n        top: 64,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        position: 'sticky',\n\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        backgroundColor: theme.palette.secondary.main,\n        // position:'sticky',\n        top: 64,\n        [theme.breakpoints.down('sm')]: {\n            top: 104\n        },\n\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: drawerWidth,\n    },\n    icons: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(0.5),\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none'\n        // },\n        // color: theme.palette.grey[500],\n    },\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    localStorage.removeItem('eventid')\n    const token = localStorage.getItem('token');\n    const id = props.match.params.eventId;\n    const t = localStorage.getItem('theme');\n    const [loading, setLoading] = React.useState(false);\n\n    const [drawerOpen, setDrawerOpen] = React.useState(true);\n    const [event, setEvent] = React.useState({});\n    const [adminAccess, setAdminAccess] = React.useState(false);\n    const [moderatorAccess, setModeratorAcces] = React.useState(false);\n    const [chatAcess, setChatAcess] = React.useState(false);\n    const [teamAccess, setTeamAccess] = React.useState(false);\n    const { currentUser } = React.useContext(AuthContext);\n    const [subIndexValue, setSubIndexValue] = React.useState(0);\n    const [selected, setSelected] = React.useState({\n        infoSelected: true,\n        dashBoardSelected: false,\n        timilineSelected: false,\n        announcementSelected: false,\n        settingsSelected: false,\n        editEventSelected: false,\n        chatSelected: false,\n        certificateSelected: false,\n        submissionSelected: false,\n        participationSelected: false,\n        teamsSelected: false,\n    });\n\n    const [shareDialogOpen, setShareDialogOpen] = React.useState(false);\n\n\n\n\n    React.useEffect(() => {\n        setLoading(true);\n        fetch(process.env.REACT_APP_API_URL + `/api/event?id=${id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(val => {\n                    setEvent(val.event);\n                    // console.log(val.event.isTeamed)\n                    if (val.event.isTeamed && val.event.registered) {\n                        setTeamAccess(true);\n                    }\n                    if (val.event.registered || val.event.reg_mode !== \"form\") {\n                        setChatAcess(true);\n\n                    } else if (val.event.user_id === currentUser.user_id) {\n                        setChatAcess(true);\n                        setTeamAccess(false);\n                    }\n                    else {\n                        setChatAcess(false)\n                    }\n                    if (val.event.moderators.includes(currentUser.user_id)) {\n                        setModeratorAcces(true);\n                        setChatAcess(true);\n                    }\n                    setLoading(false);\n\n                })\n            }\n            else {\n\n            }\n\n        })\n        // eslint-disable-next-line\n    }, [token, id, currentUser])\n\n    React.useEffect(() => {\n        if (event.user_id !== undefined && currentUser.user_id !== undefined) {\n            if (event.user_id === currentUser.user_id) {\n                // console.log(event);\n                // console.log(currentUser)\n                setAdminAccess(true);\n            }\n        }\n\n    }, [currentUser, event])\n\n\n\n    const handleDrawerOpen = () => {\n        setDrawerOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setDrawerOpen(false);\n    };\n\n    function handleClose() {\n        props.history.goBack()\n\n    }\n    function handleShareClick() {\n        setShareDialogOpen(true);\n    }\n\n    function handleShareClose() {\n        setShareDialogOpen(false);\n    }\n\n    const handleAnyClick = (selectedOption) => () => {\n        const defaultValues = {\n            infoSelected: false,\n            dashBoardSelected: false,\n            timilineSelected: false,\n            announcementSelected: false,\n            settingsSelected: false,\n            editEventSelected: false,\n            chatSelected: false,\n            certificateSelected: false,\n            submissionSelected: false,\n            participationSelected: false,\n            teamsSelected: false\n        }\n        defaultValues[selectedOption] = true;\n        setSelected(defaultValues);\n    }\n\n\n\n\n    const {\n        infoSelected,\n        dashBoardSelected,\n        timilineSelected,\n        announcementSelected,\n        settingsSelected,\n        editEventSelected,\n        chatSelected,\n        certificateSelected,\n        submissionSelected,\n        participationSelected, teamsSelected } = selected;\n\n    function handleRegClick() {\n        props.history.push('/event/register/' + event._id);\n        // props.handleReg(event._id);\n\n    }\n\n    const handleSubIndexChange = (event, newValue) => {\n        setSubIndexValue(newValue);\n    };\n\n    return (\n        <div>\n\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                color=\"secondary\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: drawerOpen,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography>{event.name}</Typography>\n                    <div className={classes.icons}>\n                        <IconButton aria-label=\"share\" onClick={handleShareClick}>\n                            <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                            <CloseIcon fontSize=\"large\" />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n                {event.isTeamed &&\n                    teamAccess &&\n                    participationSelected && <Paper className={classes.root2}>\n                        <Tabs\n                            value={subIndexValue}\n                            onChange={handleSubIndexChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"on\"\n                        >\n                            <Tab label=\"Submissions\" />\n                            <Tab label=\"Your Team\" />\n                            <Tab label=\"Team Chat\" />\n                        </Tabs>\n                    </Paper>}\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={drawerOpen}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem button onClick={handleAnyClick(\"infoSelected\")} selected={infoSelected}>\n                        <ListItemIcon >\n                            <InfoIcon color=\"primary\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"About\" />\n                    </ListItem>\n                    <ListItem button onClick={handleAnyClick(\"timilineSelected\")} selected={timilineSelected}>\n                        <ListItemIcon>\n                            <TimelineIcon color=\"primary\"></TimelineIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Schedule\" />\n                    </ListItem>\n                    <ListItem button onClick={handleAnyClick(\"announcementSelected\")} selected={announcementSelected}>\n                        <ListItemIcon>\n                            <AnnouncementIcon color=\"primary\"></AnnouncementIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Announcements\" />\n                    </ListItem>\n                    <ListItem button onClick={handleAnyClick(\"chatSelected\")} selected={chatSelected}>\n                        <ListItemIcon>\n                            <TelegramIcon color=\"primary\"></TelegramIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Chat\" />\n                    </ListItem>\n                    {!adminAccess && <ListItem button onClick={handleAnyClick(\"participationSelected\")} selected={participationSelected}>\n                        <ListItemIcon>\n                            <GroupWorkIcon color=\"primary\"></GroupWorkIcon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Participation\" />\n                    </ListItem>}\n                </List>\n                <Divider />\n                {\n                    adminAccess && <List>\n                        <ListItem button onClick={handleAnyClick(\"dashBoardSelected\")} selected={dashBoardSelected}>\n                            <ListItemIcon >\n                                <DashboardIcon color=\"primary\" />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dashboard\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"submissionSelected\")} selected={submissionSelected}>\n                            <ListItemIcon>\n                                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Submissions\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"teamsSelected\")} selected={teamsSelected}>\n                            <ListItemIcon>\n                                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Teams\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"editEventSelected\")} selected={editEventSelected}>\n                            <ListItemIcon>\n                                <EditIcon color=\"primary\"></EditIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Edit Event\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"certificateSelected\")} selected={certificateSelected}>\n                            <ListItemIcon>\n                                <CardMembershipIcon color=\"primary\"></CardMembershipIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Certificates\" />\n                        </ListItem>\n                        <ListItem button onClick={handleAnyClick(\"settingsSelected\")} selected={settingsSelected}>\n                            <ListItemIcon>\n                                <SettingsIcon color=\"primary\"></SettingsIcon>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Settings\" />\n                        </ListItem>\n                    </List>\n                }\n                {\n                    moderatorAccess && <List>\n                        <ListItem button onClick={handleAnyClick(\"dashBoardSelected\")} selected={dashBoardSelected}>\n                            <ListItemIcon >\n                                <DashboardIcon color=\"primary\" />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dashboard\" />\n                        </ListItem>\n                    </List>\n                }\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: drawerOpen,\n                })}\n            >\n                <div className={classes.progress}>\n                    <Fade\n                        in={loading}\n                        unmountOnExit>\n                        <CircularProgress />\n                    </Fade>\n                </div>\n                {/* <div className={classes.drawerHeader} /> */}\n                {/* <Typography className={classes.eventName} align='center' variant=\"h4\" style={{ paddingBottom: \"20px\", paddingTop: \"10px\" }}>{event.name}</Typography> */}\n                {\n                    infoSelected && !loading && event != null && <AboutPanel event={event}></AboutPanel>\n                }\n                {\n                    editEventSelected && event != null && <EventPost event={event} ></EventPost>\n                }\n                {\n                    timilineSelected && event != null && <TimeLinePanel event={event}></TimeLinePanel>\n                }\n                {\n                    dashBoardSelected && event != null && <DashboardPanel event={event}></DashboardPanel>\n                }\n                {\n                    chatSelected && event != null && chatAcess && <div className={classes.chat} ><ChatPanel user={currentUser} open={drawerOpen} event={event}></ChatPanel></div>\n                }\n                {\n                    adminAccess && announcementSelected && event != null && <AnnouncementEditPanel event={event}></AnnouncementEditPanel>\n                }\n                {\n                    !adminAccess && announcementSelected && event != null && <AnnouncementPanel event={event}></AnnouncementPanel>\n                }\n                {\n                    event.isTeamed &&\n                    teamAccess &&\n                    participationSelected && !adminAccess &&\n                    <EventsTeamPanel subIndexValue={subIndexValue} value={4} index={4} open={drawerOpen} event={event}></EventsTeamPanel>\n                }\n                {\n                    !event.isTeamed && participationSelected && !adminAccess && <EventSubmissionPanel individual={true} event={event}></EventSubmissionPanel>\n                }\n                {\n                    adminAccess && certificateSelected && event != null && <CertificateDashboard event={event}></CertificateDashboard>\n                }\n                {\n                    infoSelected && event.reg_mode === \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleRegClick}>\n                        {event.registered ? \"Registered\" : \"Register\"}\n                    </Button>\n                }\n                {\n                    infoSelected && event.reg_mode !== \"form\" && <Button disabled={event.registered || adminAccess} size=\"small\" color=\"primary\" variant=\"contained\" className={classes.button}>\n                        {t === 'light' ? <a href={event.reg_link} style={{ textDecoration: 'none', color: '#ffffff' }} target=\"blank\">Register</a> :\n                            <a href={event.reg_link} style={{ textDecoration: 'none', color: '#000000' }} target=\"blank\">Register</a>}\n                    </Button>\n                }\n                {\n                    adminAccess && settingsSelected && <AdminSettingsPanel event={event} setEvent={setEvent}></AdminSettingsPanel>\n                }\n                {\n                    adminAccess && teamsSelected && <EventDetailsTeamPanel event={event}></EventDetailsTeamPanel>\n                }\n                {\n                    adminAccess && submissionSelected && <EventAdminSubmissionPanel event={event}></EventAdminSubmissionPanel>\n                }\n            </main>\n            <EventShareDialog\n                event={event}\n                open={shareDialogOpen}\n                handleClose={handleShareClose}></EventShareDialog>\n        </div>\n    );\n}","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n    progress: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}))\n\nconst LoadingIndicator = (props) => {\n    const classes = useStyles();\n\n    return <div className={classes.progress}>\n        <Fade\n            in={props.loading}\n            unmountOnExit>\n            <CircularProgress />\n        </Fade>\n    </div>\n}\n\nexport default LoadingIndicator","import React from 'react';\nimport Linkify from 'react-linkify';\n\n//materialui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\n//other componennt imports\nimport ImageDialog from '../Components/ImageDialog';\nimport LoadingIndicator from '../Components/LoadingIndicator';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        color: theme.palette.primary.dark\n    },\n    body: {\n        margin: theme.spacing(3)\n    },\n    appbar: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root2: {\n        margin: theme.spacing(2),\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: theme.spacing(2)\n    },\n    root3: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    root4: {\n        backgroundColor: theme.palette.secondary.main\n    },\n    root5: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    root6: {\n        paddingLeft: theme.spacing(2)\n    }\n}));\n\nexport default function ViewSubmissionPage(props) {\n    const classes = useStyles();\n    const id = props.match.params.sub_id;\n\n    const [event, setEvent] = React.useState({});\n    const [users, setUsers] = React.useState({});\n    const [userFound, setUserFound] = React.useState(true);\n    const [imageDialogOpen, setImageDialogOpen] = React.useState(false);\n    const [isTeamed, setIsTeamed] = React.useState(false);\n    const [submission, setSubmission] = React.useState(null);\n    const [roundInfo, setRoundInfo] = React.useState(null);\n    const [reg, setReg] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        setLoading(true);\n        fetch(process.env.REACT_APP_API_URL + `/api/event/get_submission?id=${id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(value => {\n                    if (value.event.isTeamed) {\n                        setIsTeamed(true);\n                    }\n                    setUsers(value.users);\n                    setEvent(value.event);\n                    setReg(value.submission);\n                    setSubmission(value.submission.submissions);\n                    setRoundInfo(value.rounds_info);\n                    setLoading(false);\n                })\n            }\n            else {\n                setUserFound(false);\n                setLoading(false);\n            }\n        })\n    }, [id])\n\n    function handleSigninClick() {\n        props.history.push(\"/\")\n    }\n    function handleSignupClick() {\n        props.history.push('/signup');\n    }\n\n    const handleImageDialogClose = () => {\n        setImageDialogOpen(false);\n    }\n    const handleImageDialogOpen = () => {\n        setImageDialogOpen(true);\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\" className={classes.appbar}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ellipse\n                    </Typography>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSigninClick}>Login</Button>\n                    <Button size=\"large\" color=\"primary\" onClick={handleSignupClick}>Signup</Button>\n                </Toolbar>\n            </AppBar>\n            <LoadingIndicator loading={loading}></LoadingIndicator>\n            {!loading && userFound && <div>\n                <Box >\n                    <Box className={classes.root5}>\n                        <Typography variant=\"h5\" style={{ marginBottom: \"7px\" }}>{event.name}</Typography>\n                    </Box>\n                    <Box className={classes.root5}>\n                        <img\n                            onClick={handleImageDialogOpen}\n                            style={{ width: '240px', height: '180px' }}\n                            alt=\"event poster\"\n                            src={process.env.REACT_APP_API_URL + `/api/image?id=${event.poster_url}`}>\n                        </img>\n                    </Box>\n                </Box>\n                {isTeamed && <Box className={classes.root6}>\n                    <Typography>Team Name: {reg.team_name}</Typography>\n                </Box>}\n                <Box className={classes.root6}>\n                    <Typography>Members</Typography>\n                </Box>\n\n                {users.length > 0 && users.map((value, index) => {\n                    return <ListItem>\n                        <ListItemAvatar>\n                            <Avatar>\n                                <Avatar alt={value.name} src={value.profile_pic ? process.env.REACT_APP_API_URL + `/api/image?id=${value.profile_pic}` : \"abc.jpg\"} />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={value.name}\n                            secondary={value.college_name}\n                        />\n\n                    </ListItem>\n                })\n                }\n                {\n                    userFound && roundInfo && submission && submission !== null && <Box className={classes.root2}>\n                        <Typography variant=\"h5\" style={{ marginBottom: \"5px\" }}>Submissions</Typography>\n                        {\n                            submission.map(value => {\n                                if (value.submission_form) {\n                                    const ks = Object.keys(value.submission_form);\n                                    return <React.Fragment>\n                                        <Typography>{value.title}</Typography>\n                                        {\n                                            ks.map((val, index) => {\n                                                if (roundInfo[0].fields[index].field === \"file_upload\") {\n                                                    return <React.Fragment>\n                                                        <Typography>{val}</Typography>\n                                                        <IconButton download target=\"_blank\" href={process.env.REACT_APP_API_URL + `/api/event/registration/get_file?id=${value[val]}`} size=\"small\" color=\"primary\"><GetAppIcon></GetAppIcon></IconButton>\n                                                    </React.Fragment>\n                                                }\n                                                return <React.Fragment>\n                                                    <Typography>{val}</Typography>\n                                                    <Typography variant=\"h4\" color=\"primary\">\n                                                        <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\n                                                            <a target=\"blank\" style={{ color: 'red', fontWeight: 'bold' }} href={decoratedHref} key={key}>\n                                                                {decoratedText}\n                                                            </a>\n                                                        )}\n                                                        >{value.submission_form[val]}\n                                                        </Linkify>\n                                                    </Typography>\n                                                </React.Fragment>\n                                            })\n                                        }\n                                    </React.Fragment>\n                                }\n                                else {\n                                    return <React.Fragment>\n                                        <Typography>{value.title}</Typography>\n                                        <Typography color=\"textSecondary\">Team has no submissions</Typography>\n                                    </React.Fragment>\n                                }\n\n                            })\n                        }\n                    </Box>\n                }\n            </div>}\n            {!userFound && <Box m={1} p={1} className={classes.root3}>\n                <Box m={1} p={3} className={classes.root4}>\n                    <CancelIcon fontSize=\"large\"></CancelIcon>\n                    <Typography variant=\"h4\"> NOT FOUND</Typography>\n                </Box>\n            </Box>}\n            <ImageDialog\n                event={event}\n                open={imageDialogOpen}\n                handleClose={handleImageDialogClose}>\n            </ImageDialog>\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './Pages/signin';\nimport SignUp from './Pages/signup';\nimport ForgotPassword from './Pages/ForgotPassword';\nimport { AuthProvider } from \"./Auth\";\nimport OTPVer from './Pages/otpverification';\nimport UserInfo from './Pages/UserInfo';\nimport Layout from './Pages/Layout';\nimport CalenderPanel from './Pages/CalenderPanel';\nimport EventsTabPanel from './Pages/EventsTabpanel';\nimport ProfileTabPanel from './Pages/ProfileTabpanel';\nimport EventPostForm from './Pages/EventPostForm';\nimport ChatPage from './Pages/ChatPage';\n// import EventDetails from './Pages/EventDetails';\nimport EventRegisterForm from './Pages/EventRegistrationform';\nimport ExplorePanel from './Pages/ExplorePanel';\nimport UnregisteredPage from './Pages/UnregisteredPage';\nimport NetworkDetector from './NetworkDetector';\nimport VerifyCertificate from './Pages/VerifyCertificate';\nimport NewHomePage from './Pages/NewHomePage';\nimport EventDetails from './Pages/EventDetaislFullPage';\nimport ViewSubmissionPage from './Pages/ViewSubmission';\n// import { loadReCaptcha } from 'react-recaptcha-google'\n\nfunction App() {\n  // React.useEffect(()=>{\n  //       // loadReCaptcha();\n  //       window.grecaptcha.ready(function() {\n  //         window.grecaptcha.execute('6LcEVOoZAAAAAOjNV_wZFJ7YQMBs4IwKyH-LdU2P', {action: 'submit'}).then(es =>  {\n  //             // Add your logic to submit to your backend server here.\n  //             console.log(es);\n  //         });\n  //       });\n  // })\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={NewHomePage} />\n            <Route exact path=\"/signin\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route exact path=\"/userinfo\" component={UserInfo}></Route>\n            <Route exact path=\"/otpverification\" component={OTPVer}></Route>\n            <Route exact path=\"/un/event/:eventId\" component={UnregisteredPage}></Route>\n            <Route exact path=\"/submission/:sub_id\" component={ViewSubmissionPage}></Route>\n            {/* <Route exact path=\"/event/:eventId\" component={EventDetails} /> */}\n            {/* <Route exact path=\"/resetforgotpassword\" component ={ForgotPassword2}></Route> */}\n            \n            <Route exact path=\"/verify_certificate/:id\" component={VerifyCertificate}></Route>\n            <Layout>\n              <Route path=\"/home\" component={EventsTabPanel}></Route>\n              <Route exact path=\"/events\" component={CalenderPanel}></Route>\n              <Route exact path=\"/post\" component={EventPostForm}></Route>\n              <Route exact path=\"/profile\" component={ProfileTabPanel}></Route>\n              <Route exact path=\"/chat\" component={ChatPage}></Route>\n\n              <Route exact path=\"/event/register/:eventId\" component={EventRegisterForm} />\n              <Route exact path=\"/yourevents\" component={ExplorePanel}></Route>\n              <Route exact path=\"/event/:eventId\" component={EventDetails} />\n              \n            </Layout>\n          </Switch>\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\nexport default NetworkDetector(App);\n","\n\nimport React, { Component } from 'react';\n\nexport default function network(ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      if (condition === 'online') {\n        const webPing = setInterval(\n          () => {\n            fetch('//google.com', {\n              mode: 'no-cors',\n              })\n            .then(() => {\n              this.setState({ isDisconnected: false }, () => {\n                return clearInterval(webPing)\n              });\n            }).catch(() => this.setState({ isDisconnected: true }) )\n          }, 2000);\n        return;\n      }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div>\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n      type: \"dark\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#000000'\n      },\n      secondary: {\n        main: '#1C1C1E',\n      },\n      background:{\n        default: \"#000000\"\n      }\n    },\n    \n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n      type: \"light\",\n      primary: {\n        main: '#00bdaa',\n        dark: '#00bdaa',\n        light: '#ffffff'\n      },\n      secondary: {\n        main: '#e5e5e5'\n      },\n      background:{\n        default: \"#ffffff\"\n      }\n    },\n    \n    \n});\n\nexport {lightTheme,darkTheme};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport {lightTheme,darkTheme} from './Components/theme'\nimport { CssBaseline } from '@material-ui/core';\nconst t = localStorage.getItem('theme');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={t === 'light' ? lightTheme: darkTheme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}