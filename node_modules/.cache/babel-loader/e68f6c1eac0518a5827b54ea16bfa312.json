{"ast":null,"code":"var _jsxFileName = \"/Users/lalithreddy/React Apps/ellipsereactapp/src/Pages/signup.js\";\nimport React, { useCallback } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Header from \"../Components/header\"; // import FirebaseApp from \"../firebaseConfig\"\n\nimport firebaseApp from \"../firebaseConfig\"; // import TextField from '@material-ui/core/TextField';\n\nimport firebase from \"firebase/app\";\nvar db = firebase.firestore();\n\nconst Signup = function () {\n  async function handleSignUp(event) {\n    event.preventDefault();\n    const {\n      fullname,\n      email,\n      gender,\n      college,\n      designation,\n      password\n    } = event.target.elements;\n\n    try {\n      await firebaseApp.auth().createUserWithEmailAndPassword(email.value, password.value).then(function (user) {\n        console.log(user.user.uid);\n      });\n      console.log(\"success\");\n      db.collection(\"\");\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SignupDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"fullname\",\n    type: \"text\",\n    placeholder: \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"gender\",\n    placeholder: \"You are\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"college\",\n    placeholder: \"Your College\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"designation\",\n    placeholder: \"Your designation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"))));\n};\n\nexport default withRouter(Signup);\n{\n  /* <TextField \n             variant=\"standard\" \n             // color=\"secondary\" \n             label=\"Full Name\" \n             size=\"medium\"\n             inputProps={{color:\"red\"}}\n             ></TextField> */\n}","map":{"version":3,"sources":["/Users/lalithreddy/React Apps/ellipsereactapp/src/Pages/signup.js"],"names":["React","useCallback","withRouter","Header","firebaseApp","firebase","db","firestore","Signup","handleSignUp","event","preventDefault","fullname","email","gender","college","designation","password","target","elements","auth","createUserWithEmailAndPassword","value","then","user","console","log","uid","collection","error","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,IAAIC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAT;;AAEA,MAAMC,MAAM,GAAG,YAAU;AACrB,iBAAeC,YAAf,CAA4BC,KAA5B,EAAkC;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAWC,MAAAA,KAAX;AAAiBC,MAAAA,MAAjB;AAAwBC,MAAAA,OAAxB;AAAgCC,MAAAA,WAAhC;AAA4CC,MAAAA;AAA5C,QAAyDP,KAAK,CAACQ,MAAN,CAAaC,QAA5E;;AACA,QAAI;AACA,YAAMf,WAAW,CACdgB,IADG,GAEHC,8BAFG,CAE4BR,KAAK,CAACS,KAFlC,EAEyCL,QAAQ,CAACK,KAFlD,EAEyDC,IAFzD,CAE8D,UAASC,IAAT,EAAc;AAC5EC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAL,CAAUG,GAAtB;AACH,OAJG,CAAN;AAKEF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACFpB,MAAAA,EAAE,CAACsB,UAAH,CAAc,EAAd;AACD,KARH,CAQI,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACN;;AACD,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,eAEJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,IAAA,QAAQ,EAAEpB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,WAAW,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAoB,IAAA,WAAW,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAIA;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAqB,IAAA,WAAW,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,eAKA;AAAO,IAAA,IAAI,EAAG,aAAd;AAA4B,IAAA,WAAW,EAAC,kBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,eAMA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAOA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPA,CAFJ,CAFI,CAAR;AAeH,CA/BD;;AAiCA,eAAeP,UAAU,CAACM,MAAD,CAAzB;AAGA;AAAC;;;;;;;AAM4B","sourcesContent":["import React, { useCallback } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Header from \"../Components/header\"\n// import FirebaseApp from \"../firebaseConfig\"\nimport firebaseApp from \"../firebaseConfig\";\n// import TextField from '@material-ui/core/TextField';\nimport firebase from \"firebase/app\";\nvar db = firebase.firestore();\n\nconst Signup = function(){\n    async function handleSignUp(event){\n        event.preventDefault();\n        const { fullname,email,gender,college,designation,password } = event.target.elements;\n        try {\n            await firebaseApp\n              .auth()\n              .createUserWithEmailAndPassword(email.value, password.value).then(function(user){\n                  console.log(user.user.uid);\n              })\n              console.log(\"success\")\n            db.collection(\"\")\n          } catch (error) {\n            alert(error);\n          }\n    }\n    return (<div>\n        <Header></Header>\n        <div className=\"SignupDiv\">\n            <h1>Sign Up</h1>\n            <form onSubmit={handleSignUp}>\n            <input name=\"fullname\" type=\"text\" placeholder=\"Full Name\"></input>\n            <input name=\"email\" type=\"email\" placeholder=\"Email\"></input>\n            <input name=\"gender\"placeholder=\"You are\"></input>\n            <input name=\"college\"placeholder=\"Your College\"></input>\n            <input name = \"designation\" placeholder=\"Your designation\"></input>\n            <input name=\"password\" type=\"password\" placeholder=\"Password\"></input>\n            <button type=\"submit\" >Sign Up</button>\n            </form>\n        </div>\n    </div>);\n}\n\nexport default withRouter(Signup);\n\n\n{/* <TextField \n            variant=\"standard\" \n            // color=\"secondary\" \n            label=\"Full Name\" \n            size=\"medium\"\n            inputProps={{color:\"red\"}}\n            ></TextField> */}"]},"metadata":{},"sourceType":"module"}